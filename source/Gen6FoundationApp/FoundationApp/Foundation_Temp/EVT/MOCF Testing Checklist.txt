					MOCF Testing Checklist
					     Version 1



This checklist is for new porduct development of Gen6 firmware.  It's goal is to help reduce any side affects of 
changes to firmware that could break MOCF handling.  Thus, it will focus on inter module dependancies.  It will 
not cover "obvious" testing one should do.  For example, if you change code that stores a particular object or
how it parses it for storing, this checklist will not cover testing to ensure that object is stored correctly.



MOCF is dependent on the following modules:

	- All modules in the mocf folder.
	- NonMenuCommandsFlash:  all commands to download MOCF currently call a function in this module
	- FileHandler:  this is a support module used to store files & process incoming MOCFs.
	- OS_Start.c:  Post processes Working Config files that may have been created by ProcessSystemUpdateMocf()
	- StartupFlashDisk:  MOCF modules use this for storing files
	- Gen6ObjectHandler will include headers from many parts of the system since it is responsible for storing all
	  objects (it needs information such as file names, and maximum object lengths).

MOCF shares code with desktop applications:
	- All "parser" modules are shared with the MocfApplications project located in
	  MKS_IT/Tools/MOCF_Applications/mocf_app.pj



If you change handling of WorkingConfig files (in OS_Start.c) or change ReaderConfig handling of dual WorkingConfigs:
	- Create a System Update MOCF with FACTON1 Menu Setting and download it using the tool.  Reboot
	  the device.  It should have a unique startup beep.  That shows the Menu Setting that was stored was processed
	  appropriately.

If you change ProcessMocf():
	- Make sure applications that download MOCFs are not affected (download an MOCF).

If you change any file system filenames:
	- Make sure both an MOCF download and a System Update File download place the objects in the
	  correct location.

If you change any of the Gen6 specific parser classes:
	- You must rebuild all applications in MKS_IT/Tools/MOCF_Applications/mocf_app.pj and run all 
	  batch file tests located there.  Don't forget to build and test Linux applications.
	- You must ensure we still meet the the Gen6 MOCF Objects document.  If you intentionally strayed form this, you
	  must make changes to the document (on a dev path) and submit it to the team for approval.
	- These files are also used in OSPV, so you must check all MOCF file related tasks (Application download, MOCF download).

If you change the MOCF parser class:
	- You must ensure we still meet the MOCF spec.  If you intentionally strayed from this, you must submit changes to the entire
	  scanning team (Skaneateles Falls and Blackwood locations) for approval.
	- The remainder of the testing is the same as changing Gen6 specific parser classes above.
