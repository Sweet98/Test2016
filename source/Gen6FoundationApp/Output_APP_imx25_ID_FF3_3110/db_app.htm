<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [Output_APP_imx25_ID_FF3_3110\db_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image Output_APP_imx25_ID_FF3_3110\db_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 400]: Last Updated: Wed Dec 23 17:18:24 2015
<BR><P>
<H3>Maximum Stack Usage =      47392 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ocrfi_iterative_find_and_decode &rArr; ocrfi_process &rArr; ocrfi_find &rArr; SymLoc000A0D9D &rArr; SymLoc000960C3 &rArr; SymLoc0009E332 &rArr; SymLoc000D52C5
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[353171c]">Vector_Init_Block</a>
 <LI><a href="#[35316e0]">MT_GetContext</a>
 <LI><a href="#[3531a28]">MT_DriverThreadExit</a>
 <LI><a href="#[35316a4]">WaitForIRQ</a>
 <LI><a href="#[3531668]">EnableIRQ</a>
 <LI><a href="#[353162c]">DisableIRQ</a>
 <LI><a href="#[35315f0]">IRQ_Disabled</a>
 <LI><a href="#[35315b4]">Get_SP</a>
 <LI><a href="#[3531578]">ForceDataAbort</a>
 <LI><a href="#[353153c]">ForceIllegalInstructiion</a>
 <LI><a href="#[3531500]">ForcePrefetchAbort</a>
 <LI><a href="#[352eff8]">Fast_memcpy</a>
 <LI><a href="#[352ea58]">MMU_CleanAndInvalidateBothCaches</a>
 <LI><a href="#[352ea1c]">MMU_CleanAndInvalidate</a>
 <LI><a href="#[352e9e0]">MMU_IsEnabled</a>
 <LI><a href="#[352e9a4]">RelocateAndRun</a>
 <LI><a href="#[227a6d0]">MMU_init</a>
 <LI><a href="#[352e7c4]">MMU_reset</a>
 <LI><a href="#[352e788]">Move_Vector_Table_To_Zero</a>
 <LI><a href="#[227a8ec]">Reset_Handler</a>
 <LI><a href="#[227a70c]">Init_Uart1</a>
 <LI><a href="#[2277d18]">SetBaudRateRegisters</a>
 <LI><a href="#[2277d54]">GetBaudRateRegisters</a>
 <LI><a href="#[3531884]">Undefined_Handler</a>
 <LI><a href="#[3531848]">SWI_Handler</a>
 <LI><a href="#[353180c]">Prefetch_Handler</a>
 <LI><a href="#[35317d0]">Abort_Handler</a>
 <LI><a href="#[3531794]">IRQ_Handler</a>
 <LI><a href="#[3531758]">FIQ_Handler</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d3c]">__switch$$</a>
 <LI><a href="#[375d34c]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753e3c]">__switch$$</a>
 <LI><a href="#[388327c]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e99100]">__switch$$</a>
 <LI><a href="#[3e990c4]">__switch$$</a>
 <LI><a href="#[3e99088]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4147e70]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[414100c]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[433a7e0]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[440b7d4]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[45fde38]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4c71a0c]">__switch$$</a>
 <LI><a href="#[4c719d0]">__switch$$</a>
 <LI><a href="#[4c71994]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2c0]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a20c]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a158]">__switch$$</a>
 <LI><a href="#[4c6a11c]">__switch$$</a>
 <LI><a href="#[4c6a0e0]">__switch$$</a>
 <LI><a href="#[4c6a0a4]">__switch$$</a>
 <LI><a href="#[4c6a068]">__switch$$</a>
 <LI><a href="#[4c6a02c]">__switch$$</a>
 <LI><a href="#[4c69ff0]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[5011f18]">__switch$$</a>
 <LI><a href="#[5011edc]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e5ffc0]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[52ffe6c]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[54e32e4]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765214]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620a0]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f38]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[5969c84]">__switch$$</a>
 <LI><a href="#[5969c48]">__switch$$</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5cef9d4]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d28]">__switch$$</a>
 <LI><a href="#[5b89404]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86164]">__switch$$</a>
 <LI><a href="#[5b86128]">__switch$$</a>
 <LI><a href="#[5b86038]">__switch$$</a>
 <LI><a href="#[5b85fc0]">__switch$$</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b27380]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26ad4]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3531d34]">MT_Delay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35319ec]">_Z15EnterPowerState7power_t</a><BR>
 <LI><a href="#[36b8ebc]">_ZN8CTrigger22OnChangedConfigurationEv</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274a3c]">MT_WaitMutex</a><BR>
 <LI><a href="#[3530ee8]">_Z20EnterCriticalSectionPP15MutexStruct_tag</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274a3c]">MT_WaitMutex</a><BR>
 <LI><a href="#[3530eac]">_Z23TryEnterCriticalSectionPP15MutexStruct_tag</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274a3c]">MT_WaitMutex</a><BR>
 <LI><a href="#[3531c80]">MT_WaitEvent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35319ec]">_Z15EnterPowerState7power_t</a><BR>
 <LI><a href="#[4e65678]">_Z5zfreePv</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274064]">free</a><BR>
 <LI><a href="#[4e65600]">_Z21DeleteBufferInfoEntryP14ScanBufferInfo</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274064]">free</a><BR>
 <LI><a href="#[2274b2c]">_Z14__Heap1a_AllocP17Heap1a_Descriptorj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274a3c]">MT_WaitMutex</a><BR>
 <LI><a href="#[5dd17b8]">_ZdlPv</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274064]">free</a><BR>
 <LI><a href="#[4c4c598]">_ZN14CBufferManager12GetNewBufferEj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274a3c]">MT_WaitMutex</a><BR>
 <LI><a href="#[4c4a630]">_ZN15CBarcodeManager16GetFreshInstanceEv</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274a3c]">MT_WaitMutex</a><BR>
 <LI><a href="#[535f248]">_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[535f248]">_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb</a><BR>
 <LI><a href="#[3e9a834]">_Z27StoreConfigToFlashIfChangedPKcPhi</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274064]">free</a><BR>
 <LI><a href="#[508fb20]">fsm_checknamewc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[508fb20]">fsm_checknamewc</a><BR>
 <LI><a href="#[2274af0]">_Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2274a3c]">MT_WaitMutex</a><BR>
 <LI><a href="#[387c814]">_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[387c814]">_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai</a><BR>
 <LI><a href="#[508fb5c]">fsm_checkname</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[508fb5c]">fsm_checkname</a><BR>
 <LI><a href="#[45f6674]">_ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45f6674]">_ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi</a><BR>
 <LI><a href="#[596d5f0]">SyMbOl04829463</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[596d5f0]">SyMbOl04829463</a><BR>
 <LI><a href="#[596bc64]">SyMbOl04582811</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[596bc64]">SyMbOl04582811</a><BR>
 <LI><a href="#[596bbec]">SyMbOl04611340</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[596bbec]">SyMbOl04611340</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[227a8ec]">Reset_Handler</a>
 <LI><a href="#[3531884]">Undefined_Handler</a>
 <LI><a href="#[3531848]">SWI_Handler</a>
 <LI><a href="#[353180c]">Prefetch_Handler</a>
 <LI><a href="#[35317d0]">Abort_Handler</a>
 <LI><a href="#[3531794]">IRQ_Handler</a>
 <LI><a href="#[3531758]">FIQ_Handler</a>
 <LI><a href="#[226eb8c]">_Z7NullIsrPv</a>
 <LI><a href="#[226e40c]">_Z10OsTimerIrqPv</a>
 <LI><a href="#[3531a28]">MT_DriverThreadExit</a>
 <LI><a href="#[36b9d80]">_Z18UseCachedMemoryBYDb</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2db4]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d78]">__switch$$</a>
 <LI><a href="#[36b2d3c]">__switch$$</a>
 <LI><a href="#[36b2d3c]">__switch$$</a>
 <LI><a href="#[36b2d3c]">__switch$$</a>
 <LI><a href="#[36b2d3c]">__switch$$</a>
 <LI><a href="#[36b2d3c]">__switch$$</a>
 <LI><a href="#[375d3c4]">_Z16PWM2_Service_IRQPv</a>
 <LI><a href="#[375d400]">_Z16PWM1_Service_IRQPv</a>
 <LI><a href="#[375d34c]">__switch$$</a>
 <LI><a href="#[375d34c]">__switch$$</a>
 <LI><a href="#[375d34c]">__switch$$</a>
 <LI><a href="#[375d34c]">__switch$$</a>
 <LI><a href="#[375d34c]">__switch$$</a>
 <LI><a href="#[375ae08]">_Z13ServiceBeeperv</a>
 <LI><a href="#[3753e3c]">__switch$$</a>
 <LI><a href="#[3753e3c]">__switch$$</a>
 <LI><a href="#[3753e3c]">__switch$$</a>
 <LI><a href="#[3753e3c]">__switch$$</a>
 <LI><a href="#[3753e3c]">__switch$$</a>
 <LI><a href="#[3753e3c]">__switch$$</a>
 <LI><a href="#[3753e78]">_Z13ProcessResultiP13DecoderResult</a>
 <LI><a href="#[3753f2c]">_Z14SD_CB_Progressi</a>
 <LI><a href="#[3753e00]">_Z7MsTimerv</a>
 <LI><a href="#[3753f68]">_Z12SD_CB_Statusii</a>
 <LI><a href="#[3753ef0]">_Z18SD_CB_ResultNotifyi</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[3753eb4]">__switch$$</a>
 <LI><a href="#[388327c]">__switch$$</a>
 <LI><a href="#[388327c]">__switch$$</a>
 <LI><a href="#[388327c]">__switch$$</a>
 <LI><a href="#[388327c]">__switch$$</a>
 <LI><a href="#[388327c]">__switch$$</a>
 <LI><a href="#[388327c]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[389a6c8]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20d34]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3a20cf8]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1faf4]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fab8]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1fa7c]">__switch$$</a>
 <LI><a href="#[3f1d5ec]">_Z16ReportConfigFilev</a>
 <LI><a href="#[3f1d5b0]">_Z16PluginDeleteFilev</a>
 <LI><a href="#[3f1d6a0]">_Z14PluginReadFilev</a>
 <LI><a href="#[3f1d628]">_Z16PluginRenameFilev</a>
 <LI><a href="#[3f1d538]">_Z14PluginCopyFilev</a>
 <LI><a href="#[3f1d664]">_Z15PluginDeleteAllv</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cfc]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0cc0]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3ea0c84]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e9c2ec]">__switch$$</a>
 <LI><a href="#[3e99100]">__switch$$</a>
 <LI><a href="#[3e99100]">__switch$$</a>
 <LI><a href="#[3e99100]">__switch$$</a>
 <LI><a href="#[3e99100]">__switch$$</a>
 <LI><a href="#[3e99100]">__switch$$</a>
 <LI><a href="#[3e99100]">__switch$$</a>
 <LI><a href="#[3e990c4]">__switch$$</a>
 <LI><a href="#[3e990c4]">__switch$$</a>
 <LI><a href="#[3e990c4]">__switch$$</a>
 <LI><a href="#[3e990c4]">__switch$$</a>
 <LI><a href="#[3e99088]">__switch$$</a>
 <LI><a href="#[3e99088]">__switch$$</a>
 <LI><a href="#[3e99088]">__switch$$</a>
 <LI><a href="#[3e99088]">__switch$$</a>
 <LI><a href="#[4069aa4]">_Z10I2CServicePv</a>
 <LI><a href="#[4066e1c]">_Z13RTC_Alarm_IRQPv</a>
 <LI><a href="#[4064af4]">_Z18Timer3_Service_IRQPv</a>
 <LI><a href="#[4060648]">_Z16WriteRegisterBYDv</a>
 <LI><a href="#[4062010]">_Z16Do2ndThreadVsyncPv</a>
 <LI><a href="#[4061f98]">_Z16FastLinearThreadPv</a>
 <LI><a href="#[4061f20]">_Z14ShutDownThreadPv</a>
 <LI><a href="#[406204c]">_Z15VsyncServiceBYDPv</a>
 <LI><a href="#[4061fd4]">_Z18Do2ndThreadLineSvcPv</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4061ee4]">__switch$$</a>
 <LI><a href="#[4147e70]">__switch$$</a>
 <LI><a href="#[4147e70]">__switch$$</a>
 <LI><a href="#[4147e70]">__switch$$</a>
 <LI><a href="#[4147e70]">__switch$$</a>
 <LI><a href="#[4147e70]">__switch$$</a>
 <LI><a href="#[4148104]">_Z12turnon_flash20ScanAimerIllumMode_tb</a>
 <LI><a href="#[41480c8]">_Z13turnoff_flash20ScanAimerIllumMode_tb</a>
 <LI><a href="#[414808c]">_Z12turnon_aimer20ScanAimerIllumMode_t</a>
 <LI><a href="#[4148050]">_Z13turnoff_aimer20ScanAimerIllumMode_t</a>
 <LI><a href="#[4147fd8]">_Z24enterHi2dHighCurrentModev</a>
 <LI><a href="#[4148014]">_Z23enterHi2dLowCurrentModev</a>
 <LI><a href="#[4147f9c]">_Z21enterHi2dCurrentLevelj</a>
 <LI><a href="#[4147e34]">_Z17GPIO3_Service_IRQPv</a>
 <LI><a href="#[4147eac]">_Z18Ill_Ctl_Sys_ThreadPv</a>
 <LI><a href="#[414439c]">_ZN10CHWTrigger10DoDebounceEv</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[41410c0]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141084]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[4141048]">__switch$$</a>
 <LI><a href="#[414100c]">__switch$$</a>
 <LI><a href="#[414100c]">__switch$$</a>
 <LI><a href="#[414100c]">__switch$$</a>
 <LI><a href="#[414100c]">__switch$$</a>
 <LI><a href="#[414100c]">__switch$$</a>
 <LI><a href="#[414100c]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140fd0]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[4140f94]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[413cb24]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41fd9ec]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9fcc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9edc]">__switch$$</a>
 <LI><a href="#[41f9e64]">_Z8SubDatumPhill</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f7704]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[41f76c8]">__switch$$</a>
 <LI><a href="#[433a7e0]">__switch$$</a>
 <LI><a href="#[433a7e0]">__switch$$</a>
 <LI><a href="#[433a7e0]">__switch$$</a>
 <LI><a href="#[433a7e0]">__switch$$</a>
 <LI><a href="#[433a7e0]">__switch$$</a>
 <LI><a href="#[433a7e0]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[43354e8]">__switch$$</a>
 <LI><a href="#[440b7d4]">__switch$$</a>
 <LI><a href="#[440b7d4]">__switch$$</a>
 <LI><a href="#[440b7d4]">__switch$$</a>
 <LI><a href="#[440b7d4]">__switch$$</a>
 <LI><a href="#[440b7d4]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534884]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[4534848]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[453480c]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[45347d0]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[453273c]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[4532700]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452e290]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[452d5ac]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[4527d8c]">__switch$$</a>
 <LI><a href="#[45fde38]">__switch$$</a>
 <LI><a href="#[45fde38]">__switch$$</a>
 <LI><a href="#[45fde38]">__switch$$</a>
 <LI><a href="#[45fde38]">__switch$$</a>
 <LI><a href="#[45fde38]">__switch$$</a>
 <LI><a href="#[45fde38]">__switch$$</a>
 <LI><a href="#[45fa1c0]">_ZN4CKeyC1Ev</a>
 <LI><a href="#[477bb6c]">_ZN12CPortDetailsC1Ev</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[493611c]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360e0]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[49360a4]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[4936068]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[493602c]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4b442fc]">__switch$$</a>
 <LI><a href="#[4c71a0c]">__switch$$</a>
 <LI><a href="#[4c71a0c]">__switch$$</a>
 <LI><a href="#[4c71a0c]">__switch$$</a>
 <LI><a href="#[4c71a0c]">__switch$$</a>
 <LI><a href="#[4c71a0c]">__switch$$</a>
 <LI><a href="#[4c71a0c]">__switch$$</a>
 <LI><a href="#[4c719d0]">__switch$$</a>
 <LI><a href="#[4c719d0]">__switch$$</a>
 <LI><a href="#[4c719d0]">__switch$$</a>
 <LI><a href="#[4c719d0]">__switch$$</a>
 <LI><a href="#[4c719d0]">__switch$$</a>
 <LI><a href="#[4c71994]">__switch$$</a>
 <LI><a href="#[4c71994]">__switch$$</a>
 <LI><a href="#[4c71994]">__switch$$</a>
 <LI><a href="#[4c71994]">__switch$$</a>
 <LI><a href="#[4c71994]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4dc]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a4a0]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a464]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a428]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3ec]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a3b0]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a374]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a338]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2fc]">__switch$$</a>
 <LI><a href="#[4c6a2c0]">__switch$$</a>
 <LI><a href="#[4c6a2c0]">__switch$$</a>
 <LI><a href="#[4c6a2c0]">__switch$$</a>
 <LI><a href="#[4c6a2c0]">__switch$$</a>
 <LI><a href="#[4c6a2c0]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a284]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a248]">__switch$$</a>
 <LI><a href="#[4c6a20c]">__switch$$</a>
 <LI><a href="#[4c6a20c]">__switch$$</a>
 <LI><a href="#[4c6a20c]">__switch$$</a>
 <LI><a href="#[4c6a20c]">__switch$$</a>
 <LI><a href="#[4c6a20c]">__switch$$</a>
 <LI><a href="#[4c6a20c]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a1d0]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a194]">__switch$$</a>
 <LI><a href="#[4c6a158]">__switch$$</a>
 <LI><a href="#[4c6a158]">__switch$$</a>
 <LI><a href="#[4c6a158]">__switch$$</a>
 <LI><a href="#[4c6a158]">__switch$$</a>
 <LI><a href="#[4c6a158]">__switch$$</a>
 <LI><a href="#[4c6a158]">__switch$$</a>
 <LI><a href="#[4c6a11c]">__switch$$</a>
 <LI><a href="#[4c6a11c]">__switch$$</a>
 <LI><a href="#[4c6a11c]">__switch$$</a>
 <LI><a href="#[4c6a11c]">__switch$$</a>
 <LI><a href="#[4c6a11c]">__switch$$</a>
 <LI><a href="#[4c6a11c]">__switch$$</a>
 <LI><a href="#[4c6a0e0]">__switch$$</a>
 <LI><a href="#[4c6a0e0]">__switch$$</a>
 <LI><a href="#[4c6a0e0]">__switch$$</a>
 <LI><a href="#[4c6a0e0]">__switch$$</a>
 <LI><a href="#[4c6a0e0]">__switch$$</a>
 <LI><a href="#[4c6a0e0]">__switch$$</a>
 <LI><a href="#[4c6a0a4]">__switch$$</a>
 <LI><a href="#[4c6a0a4]">__switch$$</a>
 <LI><a href="#[4c6a0a4]">__switch$$</a>
 <LI><a href="#[4c6a0a4]">__switch$$</a>
 <LI><a href="#[4c6a0a4]">__switch$$</a>
 <LI><a href="#[4c6a0a4]">__switch$$</a>
 <LI><a href="#[4c6a068]">__switch$$</a>
 <LI><a href="#[4c6a068]">__switch$$</a>
 <LI><a href="#[4c6a068]">__switch$$</a>
 <LI><a href="#[4c6a068]">__switch$$</a>
 <LI><a href="#[4c6a068]">__switch$$</a>
 <LI><a href="#[4c6a068]">__switch$$</a>
 <LI><a href="#[4c6a02c]">__switch$$</a>
 <LI><a href="#[4c6a02c]">__switch$$</a>
 <LI><a href="#[4c6a02c]">__switch$$</a>
 <LI><a href="#[4c6a02c]">__switch$$</a>
 <LI><a href="#[4c6a02c]">__switch$$</a>
 <LI><a href="#[4c6a02c]">__switch$$</a>
 <LI><a href="#[4c69ff0]">__switch$$</a>
 <LI><a href="#[4c69ff0]">__switch$$</a>
 <LI><a href="#[4c69ff0]">__switch$$</a>
 <LI><a href="#[4c69ff0]">__switch$$</a>
 <LI><a href="#[4c69ff0]">__switch$$</a>
 <LI><a href="#[4c69ff0]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[4ed3d68]">__switch$$</a>
 <LI><a href="#[5011f18]">__switch$$</a>
 <LI><a href="#[5011f18]">__switch$$</a>
 <LI><a href="#[5011f18]">__switch$$</a>
 <LI><a href="#[5011f18]">__switch$$</a>
 <LI><a href="#[5011f18]">__switch$$</a>
 <LI><a href="#[5011f18]">__switch$$</a>
 <LI><a href="#[5011edc]">__switch$$</a>
 <LI><a href="#[5011edc]">__switch$$</a>
 <LI><a href="#[5011edc]">__switch$$</a>
 <LI><a href="#[5011edc]">__switch$$</a>
 <LI><a href="#[5011edc]">__switch$$</a>
 <LI><a href="#[500a5ec]">_Z10dummy_zerom</a>
 <LI><a href="#[406024c]">_Z23ImagerIdlePowerLevelBYDv</a>
 <LI><a href="#[4060300]">_Z11ReadIIC_BYDhPtj</a>
 <LI><a href="#[406033c]">_Z12WriteIIC_BYDhPKtj</a>
 <LI><a href="#[40602c4]">_Z27IsPsocInterfaceSupportedBYDv</a>
 <LI><a href="#[4060198]">_Z16ImagerPowerUpBYDv</a>
 <LI><a href="#[406015c]">_Z18ImagerPowerDownBYDv</a>
 <LI><a href="#[4060120]">_Z19WaitMillisecondsBYDm</a>
 <LI><a href="#[4060210]">_Z18ImagerIsPoweredBYDv</a>
 <LI><a href="#[40604e0]">_Z43GetRegisterSettingsForHHPExposureControlBYDPPK18BYDRegisterEntry_t</a>
 <LI><a href="#[4149a18]">_Z10AimIsOnBYDv</a>
 <LI><a href="#[4149928]">_Z12IllumIsOnBYDv</a>
 <LI><a href="#[4060030]">_Z15WaitForVsyncBYDv</a>
 <LI><a href="#[406006c]">_Z31RequestSynchronizedPowerDownBYDhPKtj</a>
 <LI><a href="#[40604a4]">_Z15GetScanWidthBYDv</a>
 <LI><a href="#[4060468]">_Z16GetScanHeightBYDv</a>
 <LI><a href="#[406042c]">_Z28AllocatePhysicalScanSpaceBYDv</a>
 <LI><a href="#[40603f0]">_Z24FreePhysicalScanSpaceBYDm</a>
 <LI><a href="#[40603b4]">_Z36BindPhysicalMemoryToVirtualMemoryBYDmPv</a>
 <LI><a href="#[4060378]">_Z40UnbindPhysicalMemoryFromVirtualMemoryBYDmPv</a>
 <LI><a href="#[41498ec]">_Z10IllumOnBYDv</a>
 <LI><a href="#[4149874]">_Z14IllumConfigBYDm</a>
 <LI><a href="#[41498b0]">_Z11IllumOffBYDv</a>
 <LI><a href="#[41497fc]">_Z16IllumOffTimerBYDv</a>
 <LI><a href="#[41499dc]">_Z8AimOnBYDv</a>
 <LI><a href="#[4149964]">_Z12AimConfigBYDm</a>
 <LI><a href="#[41499a0]">_Z9AimOffBYDv</a>
 <LI><a href="#[41494b4]">_Z24EnableVsyncProcessingBYDv</a>
 <LI><a href="#[4149478]">_Z25DisableVsyncProcessingBYDv</a>
 <LI><a href="#[414952c]">_Z32EnableImageLineDataProcessingBYDv</a>
 <LI><a href="#[41494f0]">_Z33DisableImageLineDataProcessingBYDv</a>
 <LI><a href="#[40600e4]">_Z14InitCaptureBYDmm</a>
 <LI><a href="#[40600a8]">_Z18LoadCaptureInfoBYDv</a>
 <LI><a href="#[4149748]">_Z28RegisterVsyncNotificationBYDPFvvE</a>
 <LI><a href="#[4149658]">_Z28InitializeVsyncProcessingBYDv</a>
 <LI><a href="#[41495e0]">_Z36RegisterImageLineDataNotificationBYDPFvvE</a>
 <LI><a href="#[41495a4]">_Z36InitializeImageLineDataProcessingBYDv</a>
 <LI><a href="#[414961c]">_Z30DeinitializeVsyncProcessingBYDv</a>
 <LI><a href="#[4149568]">_Z38DeinitializeImageLineDataProcessingBYDv</a>
 <LI><a href="#[4060288]">_Z41GetFrequencyPerFrameOfLineDataCallbackBYDv</a>
 <LI><a href="#[414943c]">_Z23GetNumberOfValidRowsBYDv</a>
 <LI><a href="#[40601d4]">_Z24ResetTransferHardwareBYDv</a>
 <LI><a href="#[4149838]">_Z21LightsLowPowerModeBYDv</a>
 <LI><a href="#[500a574]">_Z9dummy_onev</a>
 <LI><a href="#[4149400]">_Z22GetImagerPropertiesBYDPKmPmm</a>
 <LI><a href="#[414970c]">_Z35RegisterSofPsocWriteNotificationBYDPFvvE</a>
 <LI><a href="#[500c20c]">_Z25AutoAimControlLowPowerBYDm</a>
 <LI><a href="#[500c248]">_Z26AutoAimControlHighPowerBYDm</a>
 <LI><a href="#[41493c4]">_Z27SetImagerModeToGrayscaleBYDv</a>
 <LI><a href="#[4149388]">_Z29UnSetImagerModeToGrayscaleBYDv</a>
 <LI><a href="#[4e675a4]">_ZN22HardwareLayerInterface10dummy_zeroEv</a>
 <LI><a href="#[4e6554c]">_Z33ScanDriverImageLineDataISTroutinev</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e64598]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e6455c]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e64520]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644e4]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e644a8]">__switch$$</a>
 <LI><a href="#[4e5ffc0]">__switch$$</a>
 <LI><a href="#[4e5ffc0]">__switch$$</a>
 <LI><a href="#[4e5ffc0]">__switch$$</a>
 <LI><a href="#[4e5ffc0]">__switch$$</a>
 <LI><a href="#[4e5ffc0]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff84]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff48]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5ff0c]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[4e5cb04]">__switch$$</a>
 <LI><a href="#[5096fd8]">fs_phy_nor_num_m25pxx</a>
 <LI><a href="#[5097014]">fs_mount_flashdrive</a>
 <LI><a href="#[508bd40]">_Z8StoreFatP13FS_VOLUMEINFO</a>
 <LI><a href="#[508bd04]">_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl</a>
 <LI><a href="#[508bcc8]">_Z9GetSectorPK13FS_VOLUMEINFOlPvll</a>
 <LI><a href="#[508bc8c]">_Z6FormatP13FS_VOLUMEINFO</a>
 <LI><a href="#[508ae7c]">_Z9ReadFlashPvlll</a>
 <LI><a href="#[508af30]">_Z10EraseFlashl</a>
 <LI><a href="#[508aef4]">_Z10WriteFlashPvllll</a>
 <LI><a href="#[508aeb8]">_Z11VerifyFlashPvllll</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[51d607c]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[53073d8]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[530739c]">__switch$$</a>
 <LI><a href="#[53071f8]">_Z13ChangePostnetv</a>
 <LI><a href="#[53071bc]">_Z16ChangePlanetCodev</a>
 <LI><a href="#[5307180]">_Z17ChangeBritishPostv</a>
 <LI><a href="#[5307144]">_Z15ChangeJapanPostv</a>
 <LI><a href="#[5307108]">_Z18ChangeCanadianPostv</a>
 <LI><a href="#[53070cc]">_Z9ChangeKixv</a>
 <LI><a href="#[5307234]">_Z13ChangeAusPostv</a>
 <LI><a href="#[5307054]">_Z9ChangeUPUv</a>
 <LI><a href="#[5307090]">_Z10ChangeUSPSv</a>
 <LI><a href="#[5307018]">_Z12ChangePostalv</a>
 <LI><a href="#[5306fdc]">_Z16ParseOCRTemplatev</a>
 <LI><a href="#[3e9cd00]">_Z17TerminateSeqBlockv</a>
 <LI><a href="#[3e9ccc4]">_Z26TerminateNonPreferredBlockv</a>
 <LI><a href="#[3e9cc88]">_Z27TerminateCodePreferredBlockv</a>
 <LI><a href="#[3885a18]">_Z21ResetDecoderWorkspacev</a>
 <LI><a href="#[374f774]">_Z20ChangeDecoderSettingv</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[53056c8]">__switch$$</a>
 <LI><a href="#[5303274]">_Z22StuffRxBuffFromTheMenuv</a>
 <LI><a href="#[53035f8]">_Z17ShowInvalidFramesv</a>
 <LI><a href="#[53032ec]">_Z7DbgEchov</a>
 <LI><a href="#[53032b0]">_Z17SetFlashDebugModev</a>
 <LI><a href="#[388417c]">_Z19ReportStartupTimingv</a>
 <LI><a href="#[5302d4c]">_Z6DBG2IFv</a>
 <LI><a href="#[5303580]">_Z18FlashDiskDirectoryv</a>
 <LI><a href="#[5303238]">_Z19FlashDiskDeleteFilev</a>
 <LI><a href="#[53031fc]">_Z17FlashDiskReadFilev</a>
 <LI><a href="#[53031c0]">_Z19FlashDiskRenameFilev</a>
 <LI><a href="#[5303634]">_Z17FlashDiskCopyFilev</a>
 <LI><a href="#[5303148]">_Z24FlashDiskInformationDumpv</a>
 <LI><a href="#[5303184]">_Z21FlashDiskFormatVolumev</a>
 <LI><a href="#[5303364]">_Z10MallocTestv</a>
 <LI><a href="#[530310c]">_Z14ShowStackUsagev</a>
 <LI><a href="#[53030d0]">_Z23DumpMemoryConfigurationv</a>
 <LI><a href="#[2276710]">_Z17ShowFreeHeapSpacev</a>
 <LI><a href="#[22766d4]">_Z29ShowFreeHeapSpaceShortVersionv</a>
 <LI><a href="#[2276698]">_Z22ShowUntouchedHeapSpacev</a>
 <LI><a href="#[5303094]">_Z15DumpMemoryBlockv</a>
 <LI><a href="#[5303058]">_Z11DumpOneBytev</a>
 <LI><a href="#[5303670]">_Z12DumpTwoBytesv</a>
 <LI><a href="#[530301c]">_Z13DumpFourBytesv</a>
 <LI><a href="#[5302fa4]">_Z10SetOneBytev</a>
 <LI><a href="#[5302f68]">_Z11SetTwoBytesv</a>
 <LI><a href="#[5302f2c]">_Z12SetFourBytesv</a>
 <LI><a href="#[5302eb4]">_Z15DiagnosticResetv</a>
 <LI><a href="#[5302e78]">_Z12DelayedResetv</a>
 <LI><a href="#[53035bc]">_Z18DiagnosticChecksumv</a>
 <LI><a href="#[5302e3c]">_Z13DiagnosticCRCv</a>
 <LI><a href="#[53034cc]">_Z22DiagnosticOutputStringv</a>
 <LI><a href="#[5302dc4]">_Z10DbgTriggerv</a>
 <LI><a href="#[5302ef0]">_Z12Readspiflashv</a>
 <LI><a href="#[53033dc]">_Z19Doprint_thread_infov</a>
 <LI><a href="#[5302e00]">_Z16DumpI2CRegistersv</a>
 <LI><a href="#[3758c0c]">_Z13DumpUsageInfov</a>
 <LI><a href="#[3758bd0]">_Z14ResetUsageInfov</a>
 <LI><a href="#[5302d88]">_Z16DBGIsUnitInStandv</a>
 <LI><a href="#[5300c7c]">_Z20ConnectFLOtoExternalv</a>
 <LI><a href="#[5300b14]">_Z23WriteEngineFirmwareFilev</a>
 <LI><a href="#[5300ad8]">_Z26WriteDefaultEngineFirmwarev</a>
 <LI><a href="#[5300a9c]">_Z26ShowEngineFirmwareChecksumv</a>
 <LI><a href="#[5300a24]">_Z29ShowEngineFirmwareSettingListv</a>
 <LI><a href="#[5300c04]">_Z41ProcessEngineFirmwareDiagnosticModeChangev</a>
 <LI><a href="#[5300970]">_Z36GetEngineFirmwareRevisionInformationv</a>
 <LI><a href="#[53009e8]">_Z16EngineReadMemoryv</a>
 <LI><a href="#[5300cf4]">_Z18EngineWriteRamToEEv</a>
 <LI><a href="#[53008f8]">_Z31ChangeIlluminationAlwaysOnStatev</a>
 <LI><a href="#[5300934]">_Z28IsImagingBlockedByAllignmentv</a>
 <LI><a href="#[41fea54]">_Z9ImageSnapv</a>
 <LI><a href="#[41fe8b0]">_Z9ImageShipv</a>
 <LI><a href="#[41f90cc]">_Z13AutoCropImagev</a>
 <LI><a href="#[41fe928]">_Z12RawImageShipv</a>
 <LI><a href="#[41f6ad4]">_Z10DumpImgBoxv</a>
 <LI><a href="#[41fe748]">_Z17RowNoiseReductionv</a>
 <LI><a href="#[41fe838]">_Z13TakeTwoImagesv</a>
 <LI><a href="#[41fe7fc]">_Z9ImageTestv</a>
 <LI><a href="#[41fe784]">_Z18ImageRegisterWritev</a>
 <LI><a href="#[41fe7c0]">_Z17ImageRegisterReadv</a>
 <LI><a href="#[5300880]">_Z14deferred_resetv</a>
 <LI><a href="#[5300b8c]">_Z25UpdateImageShipParametersv</a>
 <LI><a href="#[5300bc8]">_Z15CheckIMGVGAModev</a>
 <LI><a href="#[5301b04]">_Z18GPIO3_Service_IRQ1Pv</a>
 <LI><a href="#[5301b04]">_Z18GPIO3_Service_IRQ1Pv</a>
 <LI><a href="#[52ffe6c]">__switch$$</a>
 <LI><a href="#[52ffe6c]">__switch$$</a>
 <LI><a href="#[52ffe6c]">__switch$$</a>
 <LI><a href="#[52ffe6c]">__switch$$</a>
 <LI><a href="#[52ffe6c]">__switch$$</a>
 <LI><a href="#[375aa0c]">_Z27ExecuteGoodReadBeepSequencev</a>
 <LI><a href="#[375a9d0]">_Z25ExecuteNoReadBeepSequencev</a>
 <LI><a href="#[375a994]">_Z12GoodMenuBeepv</a>
 <LI><a href="#[375a958]">_Z13ErrorMenuBeepv</a>
 <LI><a href="#[52ff9bc]">_Z10ForceAimOnv</a>
 <LI><a href="#[52ffae8]">_Z11ForceAimOffv</a>
 <LI><a href="#[52ff944]">_Z11ForceLedOffv</a>
 <LI><a href="#[52ff908]">_Z17ForceAllLightsOffv</a>
 <LI><a href="#[52ff8cc]">_Z13ForceImagerOnv</a>
 <LI><a href="#[52ff890]">_Z14ForceImagerOffv</a>
 <LI><a href="#[52fe7b0]">_Z20CheckTableSelSettingv</a>
 <LI><a href="#[36ba050]">_Z15ExpandBaudRatesv</a>
 <LI><a href="#[52fe6c0]">_Z20UpdateCableInterfacev</a>
 <LI><a href="#[52fe6fc]">_Z11CheckTermidv</a>
 <LI><a href="#[52fe738]">_Z13Update232Lockv</a>
 <LI><a href="#[52fe24c]">_Z13CheckDEstatusv</a>
 <LI><a href="#[52fe288]">_Z15Enter232Standbyv</a>
 <LI><a href="#[52fe468]">_Z19ChangeUSBCableTablev</a>
 <LI><a href="#[52fe4a4]">_Z17CheckUSBCableModev</a>
 <LI><a href="#[52fe3f0]">_Z21ChangeRS232CableTablev</a>
 <LI><a href="#[52fe42c]">_Z19CheckRS232CableModev</a>
 <LI><a href="#[52fe300]">_Z19ChangeKBWCableTablev</a>
 <LI><a href="#[52fe33c]">_Z17CheckKBWCableModev</a>
 <LI><a href="#[52fe378]">_Z21ChangeRS485CableTablev</a>
 <LI><a href="#[52fe3b4]">_Z19CheckRS485CableModev</a>
 <LI><a href="#[52fe1d4]">_Z22SetRetailScannerEnablev</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[53618f4]">__switch$$</a>
 <LI><a href="#[3e99e98]">_Z35DeleteDefaultConfigurationFromFlashv</a>
 <LI><a href="#[535db50]">_Z47ProcessProductConfigurationQueryPrivilegeChangev</a>
 <LI><a href="#[535db14]">_Z48ProcessProductConfigurationUpdatePrivilegeChangev</a>
 <LI><a href="#[535dad8]">_Z33NextCommandAppliedToDefaltSettingv</a>
 <LI><a href="#[535db8c]">_Z33SetCustomDefaultProgrammingModeOnv</a>
 <LI><a href="#[535da9c]">_Z34SetCustomDefaultProgrammingModeOffv</a>
 <LI><a href="#[535dc04]">_Z12DisplayPinfov</a>
 <LI><a href="#[535c5c0]">_Z12UpdateSDRTIMv</a>
 <LI><a href="#[54e32e4]">__switch$$</a>
 <LI><a href="#[54e32e4]">__switch$$</a>
 <LI><a href="#[54e32e4]">__switch$$</a>
 <LI><a href="#[54e32e4]">__switch$$</a>
 <LI><a href="#[54e32e4]">__switch$$</a>
 <LI><a href="#[54e32e4]">__switch$$</a>
 <LI><a href="#[54e22b8]">_Z23PlugAndPlaySetToDefaultv</a>
 <LI><a href="#[54e137c]">_Z16PlugAndPlayAddCRv</a>
 <LI><a href="#[54e1340]">_Z17PlugAndPlayAddTabv</a>
 <LI><a href="#[54e1304]">_Z16PlugAndPlayAddLFv</a>
 <LI><a href="#[54e12c8]">_Z18PlugAndPlayAddCRLFv</a>
 <LI><a href="#[54e128c]">_Z17PlugAndPlayUSB232v</a>
 <LI><a href="#[54e1250]">_Z17PlugAndPlayUSBKBWv</a>
 <LI><a href="#[54e1214]">_Z22PlugAndPlayImageRevertv</a>
 <LI><a href="#[54e11d8]">_Z29PlugAndPlayCRReplaceSemicolonv</a>
 <LI><a href="#[54e119c]">_Z25PlugAndPlayCRReplaceCommav</a>
 <LI><a href="#[54e1160]">_Z22PlugAndPlayBurningTestv</a>
 <LI><a href="#[54e0da0]">_Z28PlugAndPlayAddPrefixAsteriskv</a>
 <LI><a href="#[54e0d64]">_Z30PlugAndPlayAddSuffixAsteriskCRv</a>
 <LI><a href="#[54e0cec]">_Z22PlugAndPlayClearPrefixv</a>
 <LI><a href="#[54e0cb0]">_Z22PlugAndPlayClearSuffixv</a>
 <LI><a href="#[54e1124]">_Z22PlugAndPlayBaudRate300v</a>
 <LI><a href="#[54e10e8]">_Z22PlugAndPlayBaudRate600v</a>
 <LI><a href="#[54e10ac]">_Z23PlugAndPlayBaudRate1200v</a>
 <LI><a href="#[54e1070]">_Z23PlugAndPlayBaudRate2400v</a>
 <LI><a href="#[54e2330]">_Z23PlugAndPlayBaudRate4800v</a>
 <LI><a href="#[54e0ff8]">_Z24PlugAndPlayBaudRate19200v</a>
 <LI><a href="#[54e0fbc]">_Z24PlugAndPlayBaudRate38400v</a>
 <LI><a href="#[54e2204]">_Z24PlugAndPlayBaudRate57600v</a>
 <LI><a href="#[54e0f80]">_Z25PlugAndPlayBaudRate115200v</a>
 <LI><a href="#[54e0f44]">_Z24PlugAndPlayWordFormatN71v</a>
 <LI><a href="#[54e0f08]">_Z24PlugAndPlayWordFormatN72v</a>
 <LI><a href="#[54e21c8]">_Z24PlugAndPlayWordFormatE71v</a>
 <LI><a href="#[54e218c]">_Z24PlugAndPlayWordFormatE72v</a>
 <LI><a href="#[54e2150]">_Z24PlugAndPlayWordFormatE81v</a>
 <LI><a href="#[54e0e90]">_Z24PlugAndPlayWordFormatO71v</a>
 <LI><a href="#[54e0e54]">_Z24PlugAndPlayWordFormatO72v</a>
 <LI><a href="#[54e0e18]">_Z24PlugAndPlayWordFormatO81v</a>
 <LI><a href="#[54e0bfc]">_Z19PlugAndPlay232Groupv</a>
 <LI><a href="#[54e0bc0]">_Z19PlugAndPlayUSBGroupv</a>
 <LI><a href="#[54e0c74]">_Z23PlugAndPlayC39CheckNonev</a>
 <LI><a href="#[54e209c]">_Z30PlugAndPlayC39CheckRequestXmitv</a>
 <LI><a href="#[54e1958]">_Z29PlugAndPlayGetBufferedMessagev</a>
 <LI><a href="#[54e1bec]">_Z11SetSuffixCRv</a>
 <LI><a href="#[54e1c28]">_Z15SetPrefixCodeIDv</a>
 <LI><a href="#[54e164c]">_Z16SendRevisionInfov</a>
 <LI><a href="#[54e1610]">_Z22SendSettingForAllCablev</a>
 <LI><a href="#[54e1598]">_Z16SendBootRevisionv</a>
 <LI><a href="#[54e1700]">_Z23SendDecoderAllRevisionsv</a>
 <LI><a href="#[54e16c4]">_Z19SendDecoderRevisionv</a>
 <LI><a href="#[54e1688]">_Z22SendScanDriverRevisionv</a>
 <LI><a href="#[54e182c]">_Z19PlugAndPlayHHSnappyv</a>
 <LI><a href="#[54e17f0]">_Z17PlugAndPlayHHFullv</a>
 <LI><a href="#[54e1778]">_Z17PlugAndPlayHHCellv</a>
 <LI><a href="#[54e17b4]">_Z26PlugAndPlayHi2dPresentaionv</a>
 <LI><a href="#[54e173c]">_Z30PlugAndPlayHi2dPresentaionCellv</a>
 <LI><a href="#[54e18e0]">_Z21PlugAndPlayVisualMenuv</a>
 <LI><a href="#[54e18a4]">_Z22PlugAndPlayVisualMenu2v</a>
 <LI><a href="#[54e1868]">_Z22PlugAndPlayVisualMenu3v</a>
 <LI><a href="#[54e15d4]">_Z17SendHardwareTokenv</a>
 <LI><a href="#[36af9ac]">_Z22SendDataFormatCommandsv</a>
 <LI><a href="#[54e155c]">_Z19SendPrefixBlockSizev</a>
 <LI><a href="#[54e1520]">_Z19SendSuffixBlockSizev</a>
 <LI><a href="#[54e227c]">_Z23SendDataFormatBlockSizev</a>
 <LI><a href="#[36b9bdc]">_Z22PlugAndPlayFactoryTestv</a>
 <LI><a href="#[54e1b74]">_Z14PlugAndPlay232v</a>
 <LI><a href="#[54e1a84]">_Z16PlugAndPlayIBMATv</a>
 <LI><a href="#[54e1a48]">_Z17PlugAndPlayIBMPS2v</a>
 <LI><a href="#[54e19d0]">_Z23PlugAndPlayLapTopDirectv</a>
 <LI><a href="#[54e23e4]">_Z21PlugAndPlayCloneSlavev</a>
 <LI><a href="#[54e1a0c]">_Z21PlugAndPlayEriaIBMPS2v</a>
 <LI><a href="#[54e1afc]">_Z19PlugAndPlayUsbKbdPcv</a>
 <LI><a href="#[54e1ac0]">_Z20PlugAndPlayUsbKbdMacv</a>
 <LI><a href="#[54e1e80]">_Z17PAP_BeeprLevelMaxv</a>
 <LI><a href="#[54e1f70]">_Z24PlugAndPlayOCIA_NCRShortv</a>
 <LI><a href="#[54e1f34]">_Z23PlugAndPlayOCIA_NCRLongv</a>
 <LI><a href="#[54e1ef8]">_Z23PlugAndPlayOCIA_Nixdorfv</a>
 <LI><a href="#[54e1e08]">_Z25PlugAndPlayIBM_4683Port5Bv</a>
 <LI><a href="#[54e1dcc]">_Z32PlugAndPlayIBM_4683Port9B_HHBCR1v</a>
 <LI><a href="#[54e1d90]">_Z32PlugAndPlayIBM_4683Port9B_HHBCR2v</a>
 <LI><a href="#[54e1d54]">_Z25PlugAndPlayIBM_4683Port17v</a>
 <LI><a href="#[54e1ebc]">_Z28PlugAndPlay_Symbol_3300_HHLCv</a>
 <LI><a href="#[54e1ca0]">_Z17PlugAndPlayUsbPosv</a>
 <LI><a href="#[54e1d18]">_Z36PlugAndPlayIBM_USB_SURE_POS_HandHeldv</a>
 <LI><a href="#[54e1cdc]">_Z36PlugAndPlayIBM_USB_SURE_POS_TableTopv</a>
 <LI><a href="#[54e1994]">_Z15PlugAndPlayOPOSv</a>
 <LI><a href="#[54e14e4]">_Z15PlugAndPlayRubyv</a>
 <LI><a href="#[54e14a8]">_Z19PlugAndPlayGilbarcov</a>
 <LI><a href="#[54e146c]">_Z24PlugAndPlayBioptiAuxPortv</a>
 <LI><a href="#[54e1430]">_Z19PlugAndPlayMagellanv</a>
 <LI><a href="#[54e13f4]">_Z14PlugAndPlayNCRv</a>
 <LI><a href="#[54e13b8]">_Z17PlugAndPlayWinNixv</a>
 <LI><a href="#[54e24d4]">_Z17PlugAndPlayBeatlev</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7f20]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[54d7ee4]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[5546ad0]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570cc5c]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[570ad30]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[57653b8]">__switch$$</a>
 <LI><a href="#[5765340]">_Z14ResultCallbackiP13DecoderResult</a>
 <LI><a href="#[5765304]">_Z14StatusCallbackii</a>
 <LI><a href="#[57652c8]">_Z16ProgressCallbacki</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[576528c]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765250]">__switch$$</a>
 <LI><a href="#[5765214]">__switch$$</a>
 <LI><a href="#[5765214]">__switch$$</a>
 <LI><a href="#[5765214]">__switch$$</a>
 <LI><a href="#[5765214]">__switch$$</a>
 <LI><a href="#[5765214]">__switch$$</a>
 <LI><a href="#[5765214]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762190]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762154]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[5762118]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620dc]">__switch$$</a>
 <LI><a href="#[57620a0]">__switch$$</a>
 <LI><a href="#[57620a0]">__switch$$</a>
 <LI><a href="#[57620a0]">__switch$$</a>
 <LI><a href="#[57620a0]">__switch$$</a>
 <LI><a href="#[57620a0]">__switch$$</a>
 <LI><a href="#[57620a0]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762064]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5762028]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fec]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761fb0]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f74]">__switch$$</a>
 <LI><a href="#[5761f38]">__switch$$</a>
 <LI><a href="#[5761f38]">__switch$$</a>
 <LI><a href="#[5761f38]">__switch$$</a>
 <LI><a href="#[5761f38]">__switch$$</a>
 <LI><a href="#[5761f38]">__switch$$</a>
 <LI><a href="#[5761f38]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5761efc]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760b10]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760ad4]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[5760a98]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e98c]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575e860]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d348]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d30c]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d2d0]">__switch$$</a>
 <LI><a href="#[575d21c]">SymLoc000004bcLc40x28</a>
 <LI><a href="#[575d258]">SymLoc000004e4Lc40x28</a>
 <LI><a href="#[575d294]">SymLoc0000050cLc40x34</a>
 <LI><a href="#[575d384]">SymLoc00000540Lc40x424</a>
 <LI><a href="#[575d3c0]">SymLoc000A25AC</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[575d168]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58dde24]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58ddde8]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58dddac]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddc08]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58ddb90]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd9b0]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dd974]">__switch$$</a>
 <LI><a href="#[58dc060]">zcalloc</a>
 <LI><a href="#[58dc024]">zcfree</a>
 <LI><a href="#[58dc060]">zcalloc</a>
 <LI><a href="#[58dc024]">zcfree</a>
 <LI><a href="#[58dc0d8]">adler32</a>
 <LI><a href="#[58d98c4]">init_destination</a>
 <LI><a href="#[58d9888]">empty_output_buffer</a>
 <LI><a href="#[58d984c]">term_destination</a>
 <LI><a href="#[58d8fdc]">error_exit</a>
 <LI><a href="#[58d8f64]">emit_message</a>
 <LI><a href="#[58d8fa0]">output_message</a>
 <LI><a href="#[58d8f28]">format_message</a>
 <LI><a href="#[58d8eec]">reset_error_mgr</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d8a00]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d7920]">__switch$$</a>
 <LI><a href="#[58d71dc]">SymLoc000EA599</a>
 <LI><a href="#[58d7128]">SymLoc0010E734</a>
 <LI><a href="#[58d4cd4]">write_file_header</a>
 <LI><a href="#[58d4c98]">write_frame_header</a>
 <LI><a href="#[58d4c5c]">write_scan_header</a>
 <LI><a href="#[58d4c20]">write_file_trailer</a>
 <LI><a href="#[58d4be4]">write_tables_only</a>
 <LI><a href="#[58d4d4c]">write_marker_header</a>
 <LI><a href="#[58d4d10]">write_marker_byte</a>
 <LI><a href="#[58d4284]">alloc_small</a>
 <LI><a href="#[58d4248]">alloc_large</a>
 <LI><a href="#[58d420c]">alloc_sarray</a>
 <LI><a href="#[58d41d0]">alloc_barray</a>
 <LI><a href="#[58d4194]">request_virt_sarray</a>
 <LI><a href="#[58d4158]">request_virt_barray</a>
 <LI><a href="#[58d411c]">realize_virt_arrays</a>
 <LI><a href="#[58d4068]">access_virt_sarray</a>
 <LI><a href="#[58d402c]">access_virt_barray</a>
 <LI><a href="#[58d3ff0]">free_pool</a>
 <LI><a href="#[58d3fb4]">self_destruct</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d1548]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d150c]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[58d14d0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[596c7e0]">__switch$$</a>
 <LI><a href="#[5969db0]">SymLoc0004EECF</a>
 <LI><a href="#[5969c84]">__switch$$</a>
 <LI><a href="#[5969c84]">__switch$$</a>
 <LI><a href="#[5969c84]">__switch$$</a>
 <LI><a href="#[5969c84]">__switch$$</a>
 <LI><a href="#[5969c84]">__switch$$</a>
 <LI><a href="#[5969c84]">__switch$$</a>
 <LI><a href="#[5969c48]">__switch$$</a>
 <LI><a href="#[5969c48]">__switch$$</a>
 <LI><a href="#[5969c48]">__switch$$</a>
 <LI><a href="#[5969c48]">__switch$$</a>
 <LI><a href="#[5969c48]">__switch$$</a>
 <LI><a href="#[5969c48]">__switch$$</a>
 <LI><a href="#[596966c]">SymLoc00044874</a>
 <LI><a href="#[59695f4]">SymLoc0004EECF</a>
 <LI><a href="#[59696e4]">SymLoc00048C37</a>
 <LI><a href="#[59695f4]">SymLoc0004EECF</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5968d84]">__switch$$</a>
 <LI><a href="#[5968b2c]">SymLoc00171558</a>
 <LI><a href="#[5968b68]">SymLoc000C404B</a>
 <LI><a href="#[5968514]">AAAAAAAAD</a>
 <LI><a href="#[5968550]">AAAAAAAAE</a>
 <LI><a href="#[59685c8]">AAAAAAAAH</a>
 <LI><a href="#[596858c]">AAAAAAAAG</a>
 <LI><a href="#[5968604]">AAAAAAAAI</a>
 <LI><a href="#[5968640]">AAAAAAAAJ</a>
 <LI><a href="#[5966b4c]">compress_first_pass</a>
 <LI><a href="#[5966b10]">compress_data</a>
 <LI><a href="#[5966b88]">compress_output</a>
 <LI><a href="#[5966ad4]">start_pass_coef</a>
 <LI><a href="#[5966570]">null_method</a>
 <LI><a href="#[59666d8]">rgb_ycc_start</a>
 <LI><a href="#[59665ac]">null_convert</a>
 <LI><a href="#[59665e8]">grayscale_convert</a>
 <LI><a href="#[5966660]">rgb_gray_convert</a>
 <LI><a href="#[596669c]">rgb_ycc_convert</a>
 <LI><a href="#[5966624]">cmyk_ycck_convert</a>
 <LI><a href="#[5966174]">start_pass_fdctmgr</a>
 <LI><a href="#[5966138]">forward_DCT</a>
 <LI><a href="#[5965ee0]">jpeg_fdct_islow</a>
 <LI><a href="#[5965f1c]">jpeg_fdct_ifast</a>
 <LI><a href="#[5965b98]">encode_mcu_huff</a>
 <LI><a href="#[5965b20]">encode_mcu_gather</a>
 <LI><a href="#[5965c10]">finish_pass_huff</a>
 <LI><a href="#[5965b5c]">finish_pass_gather</a>
 <LI><a href="#[5965ae4]">start_pass_huff</a>
 <LI><a href="#[5965508]">process_data_simple_main</a>
 <LI><a href="#[59654cc]">start_pass_main</a>
 <LI><a href="#[5965058]">prepare_for_pass</a>
 <LI><a href="#[596501c]">pass_startup</a>
 <LI><a href="#[5964fe0]">finish_pass_master</a>
 <LI><a href="#[5964a7c]">encode_mcu_AC_first</a>
 <LI><a href="#[5964a40]">encode_mcu_DC_first</a>
 <LI><a href="#[5964ab8]">encode_mcu_DC_refine</a>
 <LI><a href="#[5964af4]">encode_mcu_AC_refine</a>
 <LI><a href="#[5964ba8]">finish_pass_phuff</a>
 <LI><a href="#[5964b6c]">finish_pass_gather_phuff</a>
 <LI><a href="#[5964a04]">start_pass_phuff</a>
 <LI><a href="#[5964590]">start_pass_prep</a>
 <LI><a href="#[5964518]">pre_process_context</a>
 <LI><a href="#[5964554]">pre_process_data</a>
 <LI><a href="#[59640e0]">start_pass_downsample</a>
 <LI><a href="#[59640a4]">sep_downsample</a>
 <LI><a href="#[5963f3c]">fullsize_smooth_downsample</a>
 <LI><a href="#[596402c]">fullsize_downsample</a>
 <LI><a href="#[5963ff0]">h2v1_downsample</a>
 <LI><a href="#[5963fb4]">h2v2_downsample</a>
 <LI><a href="#[5963f78]">h2v2_smooth_downsample</a>
 <LI><a href="#[5964068]">int_downsample</a>
 <LI><a href="#[5963000]">SDisland_loop</a>
 <LI><a href="#[5962f4c]">SDisland_reorder</a>
 <LI><a href="#[5962f10]">SDmax_isolation</a>
 <LI><a href="#[5962ed4]">SDdespeckle_isolation</a>
 <LI><a href="#[5962e98]">SDconnection_vs_isolation</a>
 <LI><a href="#[596b688]">SyMbOl04803344</a>
 <LI><a href="#[596b6c4]">SyMbOl04782647</a>
 <LI><a href="#[58d0198]">SyMbOl04763019</a>
 <LI><a href="#[596c114]">SyMbOl04795839</a>
 <LI><a href="#[5a2e29c]">AAAAAAAU</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2db94]">__switch$$</a>
 <LI><a href="#[5a2d93c]">SyMbOl08452120</a>
 <LI><a href="#[5a2d9b4]">SyMbOl05087273</a>
 <LI><a href="#[5a2d9f0]">SDcodeword_hash</a>
 <LI><a href="#[5a2da2c]">AAAAAAO</a>
 <LI><a href="#[5a2d84c]">SymLocH00029DA0</a>
 <LI><a href="#[5a2d810]">SymLocH00043E24</a>
 <LI><a href="#[5a2d888]">SymLoc000BDEF8</a>
 <LI><a href="#[5a2d900]">SymLoc0009201E</a>
 <LI><a href="#[5a2d8c4]">SymLoc000A73DB</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db58]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2db1c]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5a2c7e4]">__switch$$</a>
 <LI><a href="#[5cef6c8]">MLD_DiagonalDistanceWithBarGrowthEstimate</a>
 <LI><a href="#[5cef704]">AAAAAAAAAAY</a>
 <LI><a href="#[5cefa4c]">AAAAAAAC</a>
 <LI><a href="#[5cefa88]">SDstochastic_reverification</a>
 <LI><a href="#[5cefac4]">SDsystolic_pixel_pump</a>
 <LI><a href="#[5cefb00]">SDtotal_unimodularity</a>
 <LI><a href="#[5cef9d4]">__switch$$</a>
 <LI><a href="#[5cef9d4]">__switch$$</a>
 <LI><a href="#[5cef9d4]">__switch$$</a>
 <LI><a href="#[5cef9d4]">__switch$$</a>
 <LI><a href="#[5cef9d4]">__switch$$</a>
 <LI><a href="#[5cefb3c]">SymLoc000873D2</a>
 <LI><a href="#[5cef380]">SyMbOl00364383</a>
 <LI><a href="#[5cef3bc]">SyMbOl00401061</a>
 <LI><a href="#[5b8abb0]">SyMbOl09981249</a>
 <LI><a href="#[5cef6c8]">MLD_DiagonalDistanceWithBarGrowthEstimate</a>
 <LI><a href="#[58d051c]">AAAAAAAAAAR</a>
 <LI><a href="#[5b8ab38]">AAAAAAAG</a>
 <LI><a href="#[5b8ab74]">SymLoc000CF7FB</a>
 <LI><a href="#[5b8abec]">SyMbOl00709308</a>
 <LI><a href="#[5b8ac28]">SyMbOl00769538</a>
 <LI><a href="#[5b8ac64]">SymLoc000873D2</a>
 <LI><a href="#[5b8a598]">SyMbOl13257494</a>
 <LI><a href="#[5b8a5d4]">SyMbOl13298330</a>
 <LI><a href="#[5b8a610]">SyMbOl13325292</a>
 <LI><a href="#[5b8a28c]">SyMbOl09981249</a>
 <LI><a href="#[5b8a1d8]">SyMbOl01087564</a>
 <LI><a href="#[5b8a214]">SyMbOl01130080</a>
 <LI><a href="#[5b8a250]">SymLoc000DBAC8</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89da0]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d64]">__switch$$</a>
 <LI><a href="#[5b89d28]">__switch$$</a>
 <LI><a href="#[5b89d28]">__switch$$</a>
 <LI><a href="#[5b89d28]">__switch$$</a>
 <LI><a href="#[5b89d28]">__switch$$</a>
 <LI><a href="#[5b89d28]">__switch$$</a>
 <LI><a href="#[5b89d28]">__switch$$</a>
 <LI><a href="#[5b89404]">__switch$$</a>
 <LI><a href="#[5b89404]">__switch$$</a>
 <LI><a href="#[5b89404]">__switch$$</a>
 <LI><a href="#[5b89404]">__switch$$</a>
 <LI><a href="#[5b89404]">__switch$$</a>
 <LI><a href="#[5b89404]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b893c8]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b88db0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[5b87cd0]">__switch$$</a>
 <LI><a href="#[596b6c4]">SyMbOl04782647</a>
 <LI><a href="#[596b688]">SyMbOl04803344</a>
 <LI><a href="#[58d0198]">SyMbOl04763019</a>
 <LI><a href="#[596c114]">SyMbOl04795839</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a88]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86a10]">__switch$$</a>
 <LI><a href="#[5b86a4c]">SyMbOl81134523V</a>
 <LI><a href="#[5b86ac4]">SyMbOl81134523W</a>
 <LI><a href="#[5b86b00]">SyMbOl81134523X</a>
 <LI><a href="#[5b86b3c]">SyMbOl81134523Y</a>
 <LI><a href="#[5b86164]">__switch$$</a>
 <LI><a href="#[5b86164]">__switch$$</a>
 <LI><a href="#[5b86164]">__switch$$</a>
 <LI><a href="#[5b86164]">__switch$$</a>
 <LI><a href="#[5b86164]">__switch$$</a>
 <LI><a href="#[5b86164]">__switch$$</a>
 <LI><a href="#[5b86128]">__switch$$</a>
 <LI><a href="#[5b86128]">__switch$$</a>
 <LI><a href="#[5b86128]">__switch$$</a>
 <LI><a href="#[5b86128]">__switch$$</a>
 <LI><a href="#[5b86128]">__switch$$</a>
 <LI><a href="#[5b86128]">__switch$$</a>
 <LI><a href="#[5b86038]">__switch$$</a>
 <LI><a href="#[5b86038]">__switch$$</a>
 <LI><a href="#[5b86038]">__switch$$</a>
 <LI><a href="#[5b86038]">__switch$$</a>
 <LI><a href="#[5b86038]">__switch$$</a>
 <LI><a href="#[5b86038]">__switch$$</a>
 <LI><a href="#[5b85fc0]">__switch$$</a>
 <LI><a href="#[5b85fc0]">__switch$$</a>
 <LI><a href="#[5b85fc0]">__switch$$</a>
 <LI><a href="#[5b85fc0]">__switch$$</a>
 <LI><a href="#[5b85fc0]">__switch$$</a>
 <LI><a href="#[5b85fc0]">__switch$$</a>
 <LI><a href="#[5b85ffc]">SyMbOl81134522B</a>
 <LI><a href="#[5b86074]">SyMbOl81134522C</a>
 <LI><a href="#[5b860b0]">SyMbOl81134522D</a>
 <LI><a href="#[5b860ec]">SyMbOl81134522E</a>
 <LI><a href="#[5b859e4]">SyMbOl81134523A</a>
 <LI><a href="#[5b85a20]">SyMbOl81134523B</a>
 <LI><a href="#[5b85a5c]">SyMbOl81134523C</a>
 <LI><a href="#[5b85a98]">SyMbOl81134523D</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d44c]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d3d4]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d35c]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d320]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d2e4]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d26c]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d230]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d17c]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d104]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2d014]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd80]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5b2cd44]">__switch$$</a>
 <LI><a href="#[5cef6c8]">MLD_DiagonalDistanceWithBarGrowthEstimate</a>
 <LI><a href="#[5cef704]">AAAAAAAAAAY</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc54]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cc18]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2cba0]">__switch$$</a>
 <LI><a href="#[5b2d0c8]">SymLoc0007C063</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2ca38]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2c9fc]">__switch$$</a>
 <LI><a href="#[5b2cf60]">return_value_hold</a>
 <LI><a href="#[5b2c858]">SyMbOl81134525p</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b2c984]">__switch$$</a>
 <LI><a href="#[5b2cdf8]">AAAAAAAAW</a>
 <LI><a href="#[5b2ce34]">SyMbOl10863418</a>
 <LI><a href="#[5b2ce70]">AAAAAAAAS</a>
 <LI><a href="#[5b2ceac]">SyMbOl10928819</a>
 <LI><a href="#[5b2cee8]">uc_validate_search_array</a>
 <LI><a href="#[5b2bfe8]">SymLoc0008BE2D</a>
 <LI><a href="#[5b2bd18]">SyMbOl09981249</a>
 <LI><a href="#[5b2bcdc]">SymLoc0008B606</a>
 <LI><a href="#[5b2bd54]">SymLoc000CC481</a>
 <LI><a href="#[5b2bafc]">SyMbOl09981249</a>
 <LI><a href="#[5b2bac0]">SymLoc00070E3A</a>
 <LI><a href="#[5b2b994]">SymLoc000C3505</a>
 <LI><a href="#[5b2b610]">SyMbOl09981249</a>
 <LI><a href="#[5b2b5d4]">SymLoc0009F2CE</a>
 <LI><a href="#[5b2b64c]">SymLoc000E4B83</a>
 <LI><a href="#[5b2b688]">SymLoc000E10F2</a>
 <LI><a href="#[58d0198]">SyMbOl04763019</a>
 <LI><a href="#[5b2ae54]">SyMbOl09981249</a>
 <LI><a href="#[5b2ae18]">SymLoc00074153</a>
 <LI><a href="#[5b2ae90]">SymLoc000F133A</a>
 <LI><a href="#[5b2aecc]">SymLoc000F7595</a>
 <LI><a href="#[5b2af08]">SymLoc000BDBA6</a>
 <LI><a href="#[5b2a9e0]">SyMbOl09981249</a>
 <LI><a href="#[5b2a9a4]">SymLoc000B6830</a>
 <LI><a href="#[5b2aa1c]">SymLoc000B26F5</a>
 <LI><a href="#[5b2a620]">SymLoc0007D831</a>
 <LI><a href="#[5b2a65c]">SymLoc000EBC76</a>
 <LI><a href="#[5b2a698]">SymLoc000C0051</a>
 <LI><a href="#[5b2a080]">SyMbOl09981249</a>
 <LI><a href="#[5b2a044]">SymLoc0007B909</a>
 <LI><a href="#[5b2a0bc]">SymLoc000E70F3</a>
 <LI><a href="#[5b29504]">SymLoc0007E634</a>
 <LI><a href="#[5b294c8]">SymLoc000F4979</a>
 <LI><a href="#[5b29450]">SymLoc000A2985</a>
 <LI><a href="#[5b2948c]">SymLoc000CC5F2</a>
 <LI><a href="#[5b29540]">SymLoc000D86E9</a>
 <LI><a href="#[5b2957c]">SymLoc000EF2E8</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[5b290cc]">__switch$$</a>
 <LI><a href="#[596b6c4]">SyMbOl04782647</a>
 <LI><a href="#[596b688]">SyMbOl04803344</a>
 <LI><a href="#[58d0198]">SyMbOl04763019</a>
 <LI><a href="#[596c114]">SyMbOl04795839</a>
 <LI><a href="#[5b27380]">__switch$$</a>
 <LI><a href="#[5b27380]">__switch$$</a>
 <LI><a href="#[5b27380]">__switch$$</a>
 <LI><a href="#[5b27380]">__switch$$</a>
 <LI><a href="#[5b27380]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26b10]">__switch$$</a>
 <LI><a href="#[5b26ad4]">__switch$$</a>
 <LI><a href="#[5b26ad4]">__switch$$</a>
 <LI><a href="#[5b26ad4]">__switch$$</a>
 <LI><a href="#[5b26ad4]">__switch$$</a>
 <LI><a href="#[5b26ad4]">__switch$$</a>
 <LI><a href="#[5b26ad4]">__switch$$</a>
 <LI><a href="#[5b26084]">SyMbOl81134524x</a>
 <LI><a href="#[5b26228]">SyMbOl81134524J</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25328]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b25058]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b235dc]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5b223d0]">__switch$$</a>
 <LI><a href="#[5e00404]">_get_lc_ctype</a>
 <LI><a href="#[5e02f9c]">_snputc</a>
 <LI><a href="#[5e02f9c]">_snputc</a>
 <LI><a href="#[5e02f9c]">_snputc</a>
 <LI><a href="#[5e0146c]">fputc</a>
 <LI><a href="#[5e0308c]">_sputc</a>
 <LI><a href="#[5e02f9c]">_snputc</a>
 <LI><a href="#[5e02c18]">_snputwc</a>
 <LI><a href="#[5e01a48]">_sgetc</a>
 <LI><a href="#[5e01a0c]">_sbackspace</a>
 <LI><a href="#[5e031f4]">_printf_input_char</a>
 <LI><a href="#[5e02d44]">_printf_input_wchar</a>
 <LI><a href="#[5e01bec]">_scanf_char_input</a>
 <LI><a href="#[5dfb97c]">isspace</a>
 <LI><a href="#[5df732c]">__I$use$semihosting</a>
 <LI><a href="#[5e63de8]">_Z27__default_terminate_handlerv</a>
 <LI><a href="#[353171c]">Vector_Init_Block</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493f014]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[493efd8]">__switch$$</a>
 <LI><a href="#[5dfe514]">_Z21__default_new_handlerv</a>
 <LI><a href="#[5dd1a88]">_ZdaPv</a>
 <LI><a href="#[5dd1074]">_Z12tbc_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE</a>
 <LI><a href="#[5dd1038]">_Z17tbc_post_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE</a>
 <LI><a href="#[440fe9c]">_ZN21CSerialSimpleNoThread13SimpleRxTxISREv</a>
 <LI><a href="#[440e9fc]">_ZN15CThreadedDriver12DriverThreadEv</a>
 <LI><a href="#[4407454]">_ZN13CSerialDriver17ReceiveXonXoffISREv</a>
 <LI><a href="#[44072ec]">_ZN11CSerialBase13SimpleSendISREv</a>
 <LI><a href="#[4407418]">_ZN13CSerialDriver17ReceiveAckNackISREv</a>
 <LI><a href="#[44073dc]">_ZN13CSerialDriver13SendAckNakISREv</a>
 <LI><a href="#[4407238]">_ZN11CSerialBase16SimpleReceiveISREv</a>
 <LI><a href="#[4404718]">_ZN11CSerialBase13SimpleRxTxISREv</a>
 <LI><a href="#[4528a34]">_ZN11CSerial468313SimpleRxTxISREv</a>
 <LI><a href="#[488579c]">_ZN13CBitBangerISR17DecodeNextCommandEv</a>
 <LI><a href="#[4885760]">_ZN13CBitBangerISR12DoIllegalCmdEP12CPortDetails</a>
 <LI><a href="#[4885724]">_ZN13CBitBangerISR12DoEndCommandEP12CPortDetails</a>
 <LI><a href="#[48856e8]">_ZN13CBitBangerISR7DoDelayEP12CPortDetails</a>
 <LI><a href="#[4885094]">_ZN13CBitBangerISR6DoJumpEP12CPortDetails</a>
 <LI><a href="#[48856ac]">_ZN13CBitBangerISR10DoSetAbortEP12CPortDetails</a>
 <LI><a href="#[4885670]">_ZN13CBitBangerISR9DoSetPortEP12CPortDetails</a>
 <LI><a href="#[4885634]">_ZN13CBitBangerISR9DoClrPortEP12CPortDetails</a>
 <LI><a href="#[48855bc]">_ZN13CBitBangerISR18DoPreparePortCheckEP12CPortDetails</a>
 <LI><a href="#[4885580]">_ZN13CBitBangerISR23DoCheckPortHighDurationEP12CPortDetails</a>
 <LI><a href="#[4885544]">_ZN13CBitBangerISR22DoCheckPortLowDurationEP12CPortDetails</a>
 <LI><a href="#[4885508]">_ZN13CBitBangerISR15DoCheckPortHighEP12CPortDetails</a>
 <LI><a href="#[48854cc]">_ZN13CBitBangerISR14DoCheckPortLowEP12CPortDetails</a>
 <LI><a href="#[4885490]">_ZN13CBitBangerISR21DoPreparePortWaitHighEP12CPortDetails</a>
 <LI><a href="#[4885454]">_ZN13CBitBangerISR20DoPreparePortWaitLowEP12CPortDetails</a>
 <LI><a href="#[4885418]">_ZN13CBitBangerISR19DoWaitUntilPortHighEP12CPortDetails</a>
 <LI><a href="#[48853dc]">_ZN13CBitBangerISR18DoWaitUntilPortLowEP12CPortDetails</a>
 <LI><a href="#[48853a0]">_ZN13CBitBangerISR23DoPreparePortRisingEdgeEP12CPortDetails</a>
 <LI><a href="#[4885364]">_ZN13CBitBangerISR20DoPrepareFallingEdgeEP12CPortDetails</a>
 <LI><a href="#[4885328]">_ZN13CBitBangerISR19DoPrepareForSilenceEP12CPortDetails</a>
 <LI><a href="#[48852ec]">_ZN13CBitBangerISR17DoCheckForSilenceEP12CPortDetails</a>
 <LI><a href="#[48852b0]">_ZN13CBitBangerISR13DoPrepareReadEP12CPortDetails</a>
 <LI><a href="#[4885274]">_ZN13CBitBangerISR19DoReadHighShiftLeftEP12CPortDetails</a>
 <LI><a href="#[4885238]">_ZN13CBitBangerISR20DoReadHighShiftRightEP12CPortDetails</a>
 <LI><a href="#[48851fc]">_ZN13CBitBangerISR18DoReadLowShiftLeftEP12CPortDetails</a>
 <LI><a href="#[48851c0]">_ZN13CBitBangerISR19DoReadLowShiftRightEP12CPortDetails</a>
 <LI><a href="#[4885184]">_ZN13CBitBangerISR15DoWhilePortHighEP12CPortDetails</a>
 <LI><a href="#[4885148]">_ZN13CBitBangerISR14DoWhilePortLowEP12CPortDetails</a>
 <LI><a href="#[48855f8]">_ZN13CBitBangerISR12DoTogglePortEP12CPortDetails</a>
 <LI><a href="#[488510c]">_ZN13CBitBangerISR16DoUserDefCommandEP12CPortDetails</a>
 <LI><a href="#[4885760]">_ZN13CBitBangerISR12DoIllegalCmdEP12CPortDetails</a>
 <LI><a href="#[4885760]">_ZN13CBitBangerISR12DoIllegalCmdEP12CPortDetails</a>
 <LI><a href="#[4885760]">_ZN13CBitBangerISR12DoIllegalCmdEP12CPortDetails</a>
 <LI><a href="#[493404c]">_ZN9CUsb2Chip13Usb_ExceptionEv</a>
 <LI><a href="#[4934010]">_ZN9CUsb2Chip18Susp_Resume_ThreadEv</a>
 <LI><a href="#[49fbb74]">_ZN17CUsb2HidPosHelper21EP0_PosInEmptyHandlerEv</a>
 <LI><a href="#[49fbca0]">_ZN17CUsb2HidPosHelper24FeatureInRedirectHandlerEv</a>
 <LI><a href="#[49fbbb0]">_ZN17CUsb2HidPosHelper18EP0_Out1252HandlerEv</a>
 <LI><a href="#[49fbbec]">_ZN17CUsb2HidPosHelper21EP0_OutTriggerHandlerEv</a>
 <LI><a href="#[49fbbec]">_ZN17CUsb2HidPosHelper21EP0_OutTriggerHandlerEv</a>
 <LI><a href="#[49fbc64]">_ZN17CUsb2HidPosHelper25FeatureOutRedirectHandlerEv</a>
 <LI><a href="#[49f37f8]">_ZN15CUsb2HidSurePos18EP0_InEmptyHandlerEv</a>
 <LI><a href="#[49f37bc]">_ZN15CUsb2HidSurePos16OutReportHandlerEv</a>
 <LI><a href="#[49f3708]">_ZN15CUsb2HidSurePos24EP0_FlashInStatusHandlerEv</a>
 <LI><a href="#[49f36cc]">_ZN15CUsb2HidSurePos25EP0_FlashOutReportHandlerEv</a>
 <LI><a href="#[4b491f8]">_ZN11CUsb2HidKbd19EP0_InReportHandlerEv</a>
 <LI><a href="#[4b491bc]">_ZN11CUsb2HidKbd20EP0_OutReportHandlerEv</a>
 <LI><a href="#[4e60038]">_Z11SetScanModeP23ScanDriverOpenContext_tmPb</a>
 <LI><a href="#[4e5fffc]">_Z11SetIdleModeP23ScanDriverOpenContext_tmPb</a>
 <LI><a href="#[58dcd08]">deflate_stored</a>
 <LI><a href="#[58dcccc]">deflate_fast</a>
 <LI><a href="#[58dcccc]">deflate_fast</a>
 <LI><a href="#[58dcccc]">deflate_fast</a>
 <LI><a href="#[58dcc90]">deflate_slow</a>
 <LI><a href="#[58dcc90]">deflate_slow</a>
 <LI><a href="#[58dcc90]">deflate_slow</a>
 <LI><a href="#[58dcc90]">deflate_slow</a>
 <LI><a href="#[58dcc90]">deflate_slow</a>
 <LI><a href="#[58dcc90]">deflate_slow</a>
 <LI><a href="#[596d5f0]">SyMbOl04829463</a>
 <LI><a href="#[596bc64]">SyMbOl04582811</a>
 <LI><a href="#[596bbec]">SyMbOl04611340</a>
 <LI><a href="#[5b8974c]">dm_get_fwd_bits_and_advance</a>
 <LI><a href="#[5b89710]">dm_get_rev_bits_and_advance</a>
 <LI><a href="#[5b88b94]">SyMbOl06082489</a>
 <LI><a href="#[5b88cfc]">AAAAAAAAAE</a>
 <LI><a href="#[488a800]">_ZN10CBitBangerD2Ev</a>
 <LI><a href="#[488a7c4]">_ZN10CBitBangerD0Ev</a>
 <LI><a href="#[4889b94]">_ZN13CBitBangerISR21ExecuteUserDefCommandEP12CPortDetails</a>
 <LI><a href="#[4889b58]">_ZN13CBitBangerISR5CloseEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[488a788]">_ZN10CBitBanger13BitBangInTermERj</a>
 <LI><a href="#[488a74c]">_ZN10CBitBanger13BitBangOutKbdEjj</a>
 <LI><a href="#[488a710]">_ZN10CBitBanger12BitBangInKbdERj</a>
 <LI><a href="#[488a6d4]">_ZN10CBitBanger18NotifyOutTermDelayEm</a>
 <LI><a href="#[4144360]">_ZN10CHWTrigger15IsTriggerPulledEv</a>
 <LI><a href="#[4144324]">_ZN10CHWTrigger14ReadReedSwitchEv</a>
 <LI><a href="#[41442e8]">_ZN10CHWTrigger14PrepareForStopEv</a>
 <LI><a href="#[41442ac]">_ZN10CHWTrigger16UnPrepareForStopEv</a>
 <LI><a href="#[4144270]">_ZN10CHWTrigger11IsHwTriggerEv</a>
 <LI><a href="#[4144234]">_ZN10CHWTrigger13SetUpHardwareEv</a>
 <LI><a href="#[41441f8]">_ZN10CHWTrigger21DebounceTriggerButtonEv</a>
 <LI><a href="#[45feedc]">_ZN10CWedgeBaseD2Ev</a>
 <LI><a href="#[46d4254]">_ZN10CWedgeBaseD0Ev</a>
 <LI><a href="#[45f67dc]">_ZN10CWedgeBase4OpenEsPKw</a>
 <LI><a href="#[45fef18]">_ZN10CWedgeBase5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4600034]">_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[46000ac]">_ZN10CWedgeBase14EnableKeyboardEv</a>
 <LI><a href="#[4600070]">_ZN10CWedgeBase15DisableKeyboardEv</a>
 <LI><a href="#[41fae54]">_ZN10HTAG_IMAGE36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[41fae18]">_ZN10HTAG_IMAGE39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[41faf08]">_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[41faecc]">_ZN10HTAG_IMAGE20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[41fae90]">_ZN10HTAG_IMAGE32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[4888dfc]">_ZN11CBitBangIBMD0Ev</a>
 <LI><a href="#[4889b94]">_ZN13CBitBangerISR21ExecuteUserDefCommandEP12CPortDetails</a>
 <LI><a href="#[4889b58]">_ZN13CBitBangerISR5CloseEv</a>
 <LI><a href="#[4888eec]">_ZN11CBitBangIBM14BitBangOutTermEjj</a>
 <LI><a href="#[4888eb0]">_ZN11CBitBangIBM13BitBangInTermERj</a>
 <LI><a href="#[4888e74]">_ZN11CBitBangIBM13BitBangOutKbdEjj</a>
 <LI><a href="#[4888e38]">_ZN11CBitBangIBM12BitBangInKbdERj</a>
 <LI><a href="#[488a6d4]">_ZN10CBitBanger18NotifyOutTermDelayEm</a>
 <LI><a href="#[4337e64]">_ZN11CDriverBaseD2Ev</a>
 <LI><a href="#[4337e28]">_ZN11CDriverBaseD0Ev</a>
 <LI><a href="#[4337db0]">_ZN11CDriverBase5WriteEP12CBarcodeData</a>
 <LI><a href="#[4337d74]">_ZN11CDriverBase5WriteEPKhj</a>
 <LI><a href="#[4337d38]">_ZN11CDriverBase5WriteEPKwj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[4337ae0]">_ZN11CDriverBase5CloseEv</a>
 <LI><a href="#[4337aa4]">_ZN11CDriverBase15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[432fa34]">_ZN11CNullDriverD0Ev</a>
 <LI><a href="#[432fae8]">_ZN11CNullDriver5WriteEP12CBarcodeData</a>
 <LI><a href="#[432faac]">_ZN11CNullDriver5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[432fb60]">_ZN11CNullDriver4ReadEPhj</a>
 <LI><a href="#[432fc50]">_ZN11CNullDriver11IsAnyRxDataEv</a>
 <LI><a href="#[432fbd8]">_ZN11CNullDriver4OpenEsPKw</a>
 <LI><a href="#[432fb24]">_ZN11CNullDriver5CloseEv</a>
 <LI><a href="#[432fc8c]">_ZN11CNullDriver15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[4c48a4c]">_ZN11CPoolHelperD1Ev</a>
 <LI><a href="#[4c489d4]">_ZN11CPoolHelperD0Ev</a>
 <LI><a href="#[4528c8c]">_ZN11CSerial4683D1Ev</a>
 <LI><a href="#[4528c14]">_ZN11CSerial4683D0Ev</a>
 <LI><a href="#[4528ae8]">_ZN11CSerial46835WriteEP12CBarcodeData</a>
 <LI><a href="#[4528aac]">_ZN11CSerial46835WriteEPKhj</a>
 <LI><a href="#[4528a70]">_ZN11CSerial46835WriteEPKwj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4528b9c]">_ZN11CSerial46834OpenEsPKw</a>
 <LI><a href="#[4528b60]">_ZN11CSerial46835CloseEv</a>
 <LI><a href="#[4528b24]">_ZN11CSerial468315DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[440ec18]">_ZN15CThreadedDriver12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[440eba0]">_ZN15CThreadedDriver12InitInstanceEv</a>
 <LI><a href="#[452f730]">_ZN11CSerial468310ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[4407148]">_ZN11CSerialBaseD1Ev</a>
 <LI><a href="#[4404790]">_ZN11CSerialBaseD0Ev</a>
 <LI><a href="#[440ed80]">_ZN15CThreadedDriver5WriteEP12CBarcodeData</a>
 <LI><a href="#[440e9c0]">_ZN15CThreadedDriver5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[44071fc]">_ZN11CSerialBase4OpenEsPKw</a>
 <LI><a href="#[44071c0]">_ZN11CSerialBase5CloseEv</a>
 <LI><a href="#[4407274]">_ZN11CSerialBase15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[4407328]">_ZN11CSerialBase13PreSendActionEv</a>
 <LI><a href="#[4407364]">_ZN11CSerialBase12StartSendingEv</a>
 <LI><a href="#[44072b0]">_ZN11CSerialBase14PostSendActionEv</a>
 <LI><a href="#[440eba0]">_ZN15CThreadedDriver12InitInstanceEv</a>
 <LI><a href="#[440eab0]">_ZN15CThreadedDriver10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[44046dc]">_ZN11CSerialBase10handleISRsEv</a>
 <LI><a href="#[4938a98]">_ZN11CUsb2CdcAcmD1Ev</a>
 <LI><a href="#[4938a20]">_ZN11CUsb2CdcAcmD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[4938804]">_ZN11CUsb2CdcAcm12IsTxCompleteEv</a>
 <LI><a href="#[4938750]">_ZN11CUsb2CdcAcm15IsRemTxCompleteEv</a>
 <LI><a href="#[49387c8]">_ZN11CUsb2CdcAcm13IsCtsInActiveEv</a>
 <LI><a href="#[49386d8]">_ZN11CUsb2CdcAcm13IsEnabled_CTSEv</a>
 <LI><a href="#[493869c]">_ZN11CUsb2CdcAcm14Ep0DataHandlerEv</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[49388f4]">_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData</a>
 <LI><a href="#[493878c]">_ZN11CUsb2CdcAcm9SendToRemEPKhi</a>
 <LI><a href="#[49388b8]">_ZN11CUsb2CdcAcm17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[493fe24]">_ZN9CUsb2Base23GetScannerDisableStatusEv</a>
 <LI><a href="#[4938624]">_ZN11CUsb2CdcAcm19GetSizeOfConfigDescEv</a>
 <LI><a href="#[4938660]">_ZN11CUsb2CdcAcm15GetMaxNumIfacesEv</a>
 <LI><a href="#[4938714]">_ZN11CUsb2CdcAcm12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[49385e8]">_ZN11CUsb2CdcAcm22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[493d73c]">_ZN9CUsb2Chip14ReceiveKbdDataEj</a>
 <LI><a href="#[493d5d4]">_ZN9CUsb2Enum9stall_ep0Ev</a>
 <LI><a href="#[493d598]">_ZN9CUsb2Enum9stall_epsEhh</a>
 <LI><a href="#[493d610]">_ZN9CUsb2Enum15control_handlerEv</a>
 <LI><a href="#[493887c]">_ZN11CUsb2CdcAcm14OnClassRequestEv</a>
 <LI><a href="#[4938840]">_ZN11CUsb2CdcAcm15OnVendorRequestEv</a>
 <LI><a href="#[49385ac]">_ZN11CUsb2CdcAcm27OnChangeBandwithSavingsModeEb</a>
 <LI><a href="#[4937238]">_ZN11CUsb2ComEmuD1Ev</a>
 <LI><a href="#[49371c0]">_ZN11CUsb2ComEmuD0Ev</a>
 <LI><a href="#[4882ed4]">_ZN15CDriverUsb2Base5WriteEP12CBarcodeData</a>
 <LI><a href="#[4882da8]">_ZN15CDriverUsb2Base5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4882fc4]">_ZN15CDriverUsb2Base4OpenEsPKw</a>
 <LI><a href="#[4882f88]">_ZN15CDriverUsb2Base5CloseEv</a>
 <LI><a href="#[4882f4c]">_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[4882e5c]">_ZN15CDriverUsb2Base12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[4882e98]">_ZN15CDriverUsb2Base12InitInstanceEv</a>
 <LI><a href="#[4882f10]">_ZN15CDriverUsb2Base10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[4882e20]">_ZN15CDriverUsb2Base17SetInterfaceErrorEi</a>
 <LI><a href="#[4882de4]">_ZN15CDriverUsb2Base36PrepareCableInterfaceforUSBPowerSaveEv</a>
 <LI><a href="#[4b4948c]">_ZN11CUsb2HidKbdD1Ev</a>
 <LI><a href="#[4b49414]">_ZN11CUsb2HidKbdD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[49fe964]">_ZN8CUsb2Hid15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[4b49144]">_ZN11CUsb2HidKbd14Ep0DataHandlerEv</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[4b4939c]">_ZN11CUsb2HidKbd9SendLabelEP12CBarcodeData</a>
 <LI><a href="#[49fe9a0]">_ZN8CUsb2Hid9SendToRemEPKhi</a>
 <LI><a href="#[4b49360]">_ZN11CUsb2HidKbd17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[49fe9dc]">_ZN8CUsb2Hid23GetScannerDisableStatusEv</a>
 <LI><a href="#[4b490cc]">_ZN11CUsb2HidKbd19GetSizeOfConfigDescEv</a>
 <LI><a href="#[4b49108]">_ZN11CUsb2HidKbd15GetMaxNumIfacesEv</a>
 <LI><a href="#[4b492ac]">_ZN11CUsb2HidKbd12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[49fbb38]">_ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[4b49234]">_ZN11CUsb2HidKbd14ReceiveKbdDataEj</a>
 <LI><a href="#[493d5d4]">_ZN9CUsb2Enum9stall_ep0Ev</a>
 <LI><a href="#[493d598]">_ZN9CUsb2Enum9stall_epsEhh</a>
 <LI><a href="#[493d610]">_ZN9CUsb2Enum15control_handlerEv</a>
 <LI><a href="#[49fea18]">_ZN8CUsb2Hid14OnClassRequestEv</a>
 <LI><a href="#[493d64c]">_ZN9CUsb2Enum15OnVendorRequestEv</a>
 <LI><a href="#[4b49180]">_ZN11CUsb2HidKbd13ReportHandlerEv</a>
 <LI><a href="#[4b493d8]">_ZN11CUsb2HidKbd13GetReportSizeEP15_device_request</a>
 <LI><a href="#[49f8730]">_ZN11CUsb2HidPosD1Ev</a>
 <LI><a href="#[49f86b8]">_ZN11CUsb2HidPosD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[49fe964]">_ZN8CUsb2Hid15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[49f8550]">_ZN11CUsb2HidPos14Ep0DataHandlerEv</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[49f8640]">_ZN11CUsb2HidPos9SendLabelEP12CBarcodeData</a>
 <LI><a href="#[49fe9a0]">_ZN8CUsb2Hid9SendToRemEPKhi</a>
 <LI><a href="#[49f8604]">_ZN11CUsb2HidPos17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[49fe9dc]">_ZN8CUsb2Hid23GetScannerDisableStatusEv</a>
 <LI><a href="#[49f84d8]">_ZN11CUsb2HidPos19GetSizeOfConfigDescEv</a>
 <LI><a href="#[49f8514]">_ZN11CUsb2HidPos15GetMaxNumIfacesEv</a>
 <LI><a href="#[49f85c8]">_ZN11CUsb2HidPos12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[49fbb38]">_ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[493d73c]">_ZN9CUsb2Chip14ReceiveKbdDataEj</a>
 <LI><a href="#[493d5d4]">_ZN9CUsb2Enum9stall_ep0Ev</a>
 <LI><a href="#[493d598]">_ZN9CUsb2Enum9stall_epsEhh</a>
 <LI><a href="#[493d610]">_ZN9CUsb2Enum15control_handlerEv</a>
 <LI><a href="#[49fea18]">_ZN8CUsb2Hid14OnClassRequestEv</a>
 <LI><a href="#[493d64c]">_ZN9CUsb2Enum15OnVendorRequestEv</a>
 <LI><a href="#[49f858c]">_ZN11CUsb2HidPos13ReportHandlerEv</a>
 <LI><a href="#[49f867c]">_ZN11CUsb2HidPos13GetReportSizeEP15_device_request</a>
 <LI><a href="#[46016b4]">_ZN12CWedgeThread4OpenEsPKw</a>
 <LI><a href="#[45fffbc]">_ZN12CWedgeThread5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4600034]">_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[46000ac]">_ZN10CWedgeBase14EnableKeyboardEv</a>
 <LI><a href="#[4600070]">_ZN10CWedgeBase15DisableKeyboardEv</a>
 <LI><a href="#[460181c]">_ZN11CWedgeLabel22Add_CloseLabelCommandsEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[55e31e4]">_ZN11MatrixHComm15ZeroElapsedTimeEv</a>
 <LI><a href="#[55e31a8]">_ZN11MatrixHComm11ElapsedTimeEv</a>
 <LI><a href="#[55e2f8c]">_ZN11MatrixHComm15FlushReadBufferEi</a>
 <LI><a href="#[55e316c]">_ZN11MatrixHComm15FlushReadBufferEv</a>
 <LI><a href="#[55e30f4]">_ZN11MatrixHComm4ReadEP7HSTRINGjj</a>
 <LI><a href="#[55e2fc8]">_ZN11MatrixHComm4ReadEPcPjjj</a>
 <LI><a href="#[55e30b8]">_ZN11MatrixHComm5WriteEP7HSTRINGiib</a>
 <LI><a href="#[55e2f14]">_ZN11MatrixHComm5WriteEP7HSTRING</a>
 <LI><a href="#[55e2f50]">_ZN11MatrixHComm5WriteEPci</a>
 <LI><a href="#[55e3004]">_ZN11MatrixHComm14IsPortAssignedEv</a>
 <LI><a href="#[55e3130]">_ZN11MatrixHComm16FlushWriteBufferEv</a>
 <LI><a href="#[55e307c]">_ZN11MatrixHComm18BytesInWriteBufferEv</a>
 <LI><a href="#[55e3040]">_ZN11MatrixHComm10HCommSleepEj</a>
 <LI><a href="#[4531710]">_ZN12CBarcodeDataD1Ev</a>
 <LI><a href="#[4c4c7b4]">_ZN12CBarcodeDataD0Ev</a>
 <LI><a href="#[4c4bda0]">_ZN12CBarcodeFifoD1Ev</a>
 <LI><a href="#[4c4bd28]">_ZN12CBarcodeFifoD0Ev</a>
 <LI><a href="#[4c4bcec]">_ZN12CBarcodeFifo5PurgeEv</a>
 <LI><a href="#[46d26e8]">_ZN12CWedgeDriverD1Ev</a>
 <LI><a href="#[46d2670]">_ZN12CWedgeDriverD0Ev</a>
 <LI><a href="#[440ed80]">_ZN15CThreadedDriver5WriteEP12CBarcodeData</a>
 <LI><a href="#[440e9c0]">_ZN15CThreadedDriver5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[46d2634]">_ZN12CWedgeDriver4OpenEsPKw</a>
 <LI><a href="#[46d25f8]">_ZN12CWedgeDriver5CloseEv</a>
 <LI><a href="#[46d25bc]">_ZN12CWedgeDriver15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[440ec18]">_ZN15CThreadedDriver12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[440eba0]">_ZN15CThreadedDriver12InitInstanceEv</a>
 <LI><a href="#[46d2580]">_ZN12CWedgeDriver10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[46016f0]">_ZN12CWedgeEngineD1Ev</a>
 <LI><a href="#[4600160]">_ZN12CWedgeEngineD0Ev</a>
 <LI><a href="#[46016b4]">_ZN12CWedgeThread4OpenEsPKw</a>
 <LI><a href="#[46017a4]">_ZN12CWedgeEngine5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[46017e0]">_ZN12CWedgeEngine10BitBangOutEjj</a>
 <LI><a href="#[4601768]">_ZN12CWedgeEngine9BitBangInERj</a>
 <LI><a href="#[4600124]">_ZN12CWedgeEngine21OpenKeyboardEmulationEv</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4600034]">_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[46000ac]">_ZN10CWedgeBase14EnableKeyboardEv</a>
 <LI><a href="#[4600070]">_ZN10CWedgeBase15DisableKeyboardEv</a>
 <LI><a href="#[460181c]">_ZN11CWedgeLabel22Add_CloseLabelCommandsEv</a>
 <LI><a href="#[46000e8]">_ZN12CWedgeEngine22CheckKeyboardEmulationEv</a>
 <LI><a href="#[45f67dc]">_ZN10CWedgeBase4OpenEsPKw</a>
 <LI><a href="#[45fef18]">_ZN10CWedgeBase5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4600034]">_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[46000ac]">_ZN10CWedgeBase14EnableKeyboardEv</a>
 <LI><a href="#[4600070]">_ZN10CWedgeBase15DisableKeyboardEv</a>
 <LI><a href="#[45fff80]">_ZN12CWedgeThreadD2Ev</a>
 <LI><a href="#[45fef54]">_ZN12CWedgeThreadD0Ev</a>
 <LI><a href="#[46016b4]">_ZN12CWedgeThread4OpenEsPKw</a>
 <LI><a href="#[45fffbc]">_ZN12CWedgeThread5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4600034]">_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[46000ac]">_ZN10CWedgeBase14EnableKeyboardEv</a>
 <LI><a href="#[4600070]">_ZN10CWedgeBase15DisableKeyboardEv</a>
 <LI><a href="#[3f2574c]">_ZN12TiXmlCommentD0Ev</a>
 <LI><a href="#[3f25bc0]">_ZNK12TiXmlComment5PrintEP7FS_FILEi</a>
 <LI><a href="#[3f24e28]">_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</a>
 <LI><a href="#[3f24fcc]">_ZNK9TiXmlNode10ToDocumentEv</a>
 <LI><a href="#[3f24edc]">_ZNK9TiXmlNode9ToElementEv</a>
 <LI><a href="#[3f252d8]">_ZN9TiXmlNode6ToTextEv</a>
 <LI><a href="#[3f25314]">_ZN9TiXmlNode13ToDeclarationEv</a>
 <LI><a href="#[3f25bfc]">_ZNK12TiXmlComment5CloneEv</a>
 <LI><a href="#[3f25b84]">_ZNK12TiXmlComment6AcceptEP12TiXmlVisitor</a>
 <LI><a href="#[3a1ca68]">_ZN12TiXmlElementD1Ev</a>
 <LI><a href="#[3f25cec]">_ZN12TiXmlElementD0Ev</a>
 <LI><a href="#[3f25c74]">_ZNK12TiXmlElement5PrintEP7FS_FILEi</a>
 <LI><a href="#[3f24dec]">_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</a>
 <LI><a href="#[3f24fcc]">_ZNK9TiXmlNode10ToDocumentEv</a>
 <LI><a href="#[3f250bc]">_ZNK12TiXmlElement9ToElementEv</a>
 <LI><a href="#[3f252d8]">_ZN9TiXmlNode6ToTextEv</a>
 <LI><a href="#[3f25314]">_ZN9TiXmlNode13ToDeclarationEv</a>
 <LI><a href="#[3f25cb0]">_ZNK12TiXmlElement5CloneEv</a>
 <LI><a href="#[3f25c38]">_ZNK12TiXmlElement6AcceptEP12TiXmlVisitor</a>
 <LI><a href="#[3f25530]">_ZN12TiXmlUnknownD0Ev</a>
 <LI><a href="#[3f25968]">_ZNK12TiXmlUnknown5PrintEP7FS_FILEi</a>
 <LI><a href="#[3f24db0]">_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</a>
 <LI><a href="#[3f24fcc]">_ZNK9TiXmlNode10ToDocumentEv</a>
 <LI><a href="#[3f24edc]">_ZNK9TiXmlNode9ToElementEv</a>
 <LI><a href="#[3f252d8]">_ZN9TiXmlNode6ToTextEv</a>
 <LI><a href="#[3f25314]">_ZN9TiXmlNode13ToDeclarationEv</a>
 <LI><a href="#[3f259a4]">_ZNK12TiXmlUnknown5CloneEv</a>
 <LI><a href="#[3f2592c]">_ZNK12TiXmlUnknown6AcceptEP12TiXmlVisitor</a>
 <LI><a href="#[4889ae0]">_ZN13CBitBangerISRD1Ev</a>
 <LI><a href="#[48857d8]">_ZN13CBitBangerISRD0Ev</a>
 <LI><a href="#[4889b94]">_ZN13CBitBangerISR21ExecuteUserDefCommandEP12CPortDetails</a>
 <LI><a href="#[4889b58]">_ZN13CBitBangerISR5CloseEv</a>
 <LI><a href="#[4b44dc4]">_ZN13CDriverUsbRemD0Ev</a>
 <LI><a href="#[440ed80]">_ZN15CThreadedDriver5WriteEP12CBarcodeData</a>
 <LI><a href="#[440e9c0]">_ZN15CThreadedDriver5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4b44ef0]">_ZN13CDriverUsbRem4OpenEsPKw</a>
 <LI><a href="#[4b44eb4]">_ZN13CDriverUsbRem5CloseEv</a>
 <LI><a href="#[4b44e78]">_ZN13CDriverUsbRem15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[4b44e00]">_ZN13CDriverUsbRem17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[4b44e3c]">_ZN13CDriverUsbRem12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[440eba0]">_ZN15CThreadedDriver12InitInstanceEv</a>
 <LI><a href="#[440eab0]">_ZN15CThreadedDriver10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[36b5028]">_ZN13CRemRouterLob15RouteBarcodeLobEP12CBarcodeDataPKwi</a>
 <LI><a href="#[36b4f38]">_ZN13CRemRouterLob23GetBarcodeLobHeaderSizeEv</a>
 <LI><a href="#[36b4fec]">_ZN13CRemRouterLob13RouteImageLobEiPK7HSTRINGS2_</a>
 <LI><a href="#[4407724]">_ZN13CSerialDriverD1Ev</a>
 <LI><a href="#[44076ac]">_ZN13CSerialDriverD0Ev</a>
 <LI><a href="#[440ed80]">_ZN15CThreadedDriver5WriteEP12CBarcodeData</a>
 <LI><a href="#[440e9c0]">_ZN15CThreadedDriver5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4407634]">_ZN13CSerialDriver4OpenEsPKw</a>
 <LI><a href="#[44075f8]">_ZN13CSerialDriver5CloseEv</a>
 <LI><a href="#[4407274]">_ZN11CSerialBase15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[4407328]">_ZN11CSerialBase13PreSendActionEv</a>
 <LI><a href="#[4407490]">_ZN13CSerialDriver12StartSendingEv</a>
 <LI><a href="#[44072b0]">_ZN11CSerialBase14PostSendActionEv</a>
 <LI><a href="#[440eba0]">_ZN15CThreadedDriver12InitInstanceEv</a>
 <LI><a href="#[440eab0]">_ZN15CThreadedDriver10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[44073a0]">_ZN13CSerialDriver10handleISRsEv</a>
 <LI><a href="#[530a894]">_ZN16HCOMMAND_HANDLER12WakeupDeviceEv</a>
 <LI><a href="#[500b690]">_ZN13Pixel_samplerI25Auto_exposure_accumulatorE5resetEjj</a>
 <LI><a href="#[500b708]">_ZN13Pixel_samplerI25Auto_exposure_accumulatorE14uniform_sampleEj</a>
 <LI><a href="#[500b744]">_ZN13Pixel_samplerI25Auto_exposure_accumulatorE13center_sampleEj</a>
 <LI><a href="#[500b6cc]">_ZN13Pixel_samplerI25Auto_exposure_accumulatorE20center_weight_sampleEj</a>
 <LI><a href="#[500b5a0]">_ZN13Pixel_samplerI29Context_sensitive_accumulatorE5resetEjj</a>
 <LI><a href="#[500b618]">_ZN13Pixel_samplerI29Context_sensitive_accumulatorE14uniform_sampleEj</a>
 <LI><a href="#[500b654]">_ZN13Pixel_samplerI29Context_sensitive_accumulatorE13center_sampleEj</a>
 <LI><a href="#[500b5dc]">_ZN13Pixel_samplerI29Context_sensitive_accumulatorE20center_weight_sampleEj</a>
 <LI><a href="#[3f21228]">_ZN13TiXmlDocumentD0Ev</a>
 <LI><a href="#[3f2583c]">_ZNK13TiXmlDocument5PrintEP7FS_FILEi</a>
 <LI><a href="#[3f212a0]">_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</a>
 <LI><a href="#[3f210c0]">_ZNK13TiXmlDocument10ToDocumentEv</a>
 <LI><a href="#[3f24edc]">_ZNK9TiXmlNode9ToElementEv</a>
 <LI><a href="#[3f252d8]">_ZN9TiXmlNode6ToTextEv</a>
 <LI><a href="#[3f25314]">_ZN9TiXmlNode13ToDeclarationEv</a>
 <LI><a href="#[3f257c4]">_ZNK13TiXmlDocument5CloneEv</a>
 <LI><a href="#[3f25800]">_ZNK13TiXmlDocument6AcceptEP12TiXmlVisitor</a>
 <LI><a href="#[5309034]">_ZN14CAesEncryption6SetKeyEPKhi</a>
 <LI><a href="#[5308ff8]">_ZN14CAesEncryption7EncryptEPKhjPhj</a>
 <LI><a href="#[5308fbc]">_ZN14CAesEncryption7DecryptEPKhjPhj</a>
 <LI><a href="#[5308f80]">_ZN12CBlockCipher17GetBlockSizeBytesEv</a>
 <LI><a href="#[5308ecc]">_ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj</a>
 <LI><a href="#[5308f08]">_ZN12CBlockCipher10EcbEncryptEPKhjPhj</a>
 <LI><a href="#[5308f44]">_ZN12CBlockCipher10EcbDecryptEPKhjPhj</a>
 <LI><a href="#[4c48b00]">_ZN14CBufferManagerD1Ev</a>
 <LI><a href="#[4c48a88]">_ZN14CBufferManagerD0Ev</a>
 <LI><a href="#[4b4cd44]">_ZN14CDriverUsb2KbdD1Ev</a>
 <LI><a href="#[4b4cccc]">_ZN14CDriverUsb2KbdD0Ev</a>
 <LI><a href="#[4882ed4]">_ZN15CDriverUsb2Base5WriteEP12CBarcodeData</a>
 <LI><a href="#[4882da8]">_ZN15CDriverUsb2Base5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4b4cc90]">_ZN14CDriverUsb2Kbd4OpenEsPKw</a>
 <LI><a href="#[4b4cc54]">_ZN14CDriverUsb2Kbd5CloseEv</a>
 <LI><a href="#[4b4cc18]">_ZN14CDriverUsb2Kbd15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[4b4cba0]">_ZN14CDriverUsb2Kbd12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[4882e98]">_ZN15CDriverUsb2Base12InitInstanceEv</a>
 <LI><a href="#[4b4cbdc]">_ZN14CDriverUsb2Kbd10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[4882e20]">_ZN15CDriverUsb2Base17SetInterfaceErrorEi</a>
 <LI><a href="#[4b4cb64]">_ZN14CDriverUsb2Kbd36PrepareCableInterfaceforUSBPowerSaveEv</a>
 <LI><a href="#[49fa5e4]">_ZN14CDriverUsb2PosD1Ev</a>
 <LI><a href="#[49fa56c]">_ZN14CDriverUsb2PosD0Ev</a>
 <LI><a href="#[4882ed4]">_ZN15CDriverUsb2Base5WriteEP12CBarcodeData</a>
 <LI><a href="#[4882da8]">_ZN15CDriverUsb2Base5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4882fc4]">_ZN15CDriverUsb2Base4OpenEsPKw</a>
 <LI><a href="#[4882f88]">_ZN15CDriverUsb2Base5CloseEv</a>
 <LI><a href="#[49fa530]">_ZN14CDriverUsb2Pos15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[4882e5c]">_ZN15CDriverUsb2Base12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[4882e98]">_ZN15CDriverUsb2Base12InitInstanceEv</a>
 <LI><a href="#[4882f10]">_ZN15CDriverUsb2Base10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[4882e20]">_ZN15CDriverUsb2Base17SetInterfaceErrorEi</a>
 <LI><a href="#[4882de4]">_ZN15CDriverUsb2Base36PrepareCableInterfaceforUSBPowerSaveEv</a>
 <LI><a href="#[4c47b88]">_ZN14CManagedBufferD1Ev</a>
 <LI><a href="#[4c47b10]">_ZN14CManagedBufferD0Ev</a>
 <LI><a href="#[36b4ec0]">_ZN14CRemRouterNull15RouteBarcodeLobEP12CBarcodeDataPKwi</a>
 <LI><a href="#[36b4f74]">_ZN10CRemRouter23GetBarcodeLobHeaderSizeEv</a>
 <LI><a href="#[36b4efc]">_ZN14CRemRouterNull13RouteImageLobEiPK7HSTRINGS2_</a>
 <LI><a href="#[387ab7c]">_ZN14CTransInfo7BitD0Ev</a>
 <LI><a href="#[387ea88]">_ZN14CTransInfoBase9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[387ea4c]">_ZN14CTransInfoBase9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[387ac30]">_ZN14CTransInfo7Bit11FromUnicodeEPKwPhRj</a>
 <LI><a href="#[387abf4]">_ZN14CTransInfo7Bit11FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387abb8]">_ZN14CTransInfo7Bit16TranslateInPlaceEPhj</a>
 <LI><a href="#[3877ef4]">_ZN14CTransInfo8BitD0Ev</a>
 <LI><a href="#[387ea88]">_ZN14CTransInfoBase9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[387ea4c]">_ZN14CTransInfoBase9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[3877fe4]">_ZN14CTransInfo8Bit11FromUnicodeEPKwPhRj</a>
 <LI><a href="#[3877fa8]">_ZN14CTransInfo8Bit11FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[387eb00]">_ZN14CTransInfoBaseD2Ev</a>
 <LI><a href="#[387eac4]">_ZN14CTransInfoBaseD0Ev</a>
 <LI><a href="#[387ea88]">_ZN14CTransInfoBase9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[387ea4c]">_ZN14CTransInfoBase9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[38a0adc]">_ZN14CTransInfoUTF8D0Ev</a>
 <LI><a href="#[38a0b54]">_ZN14CTransInfoUTF89ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[38a0b18]">_ZN14CTransInfoUTF89ToUnicodeEPKhPwRj</a>
 <LI><a href="#[38a0bcc]">_ZN14CTransInfoUTF811FromUnicodeEPKwPhRj</a>
 <LI><a href="#[38a0b90]">_ZN14CTransInfoUTF811FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[45feea0]">_ZN14CWedgeMultiKey4OpenEsPKw</a>
 <LI><a href="#[45fef18]">_ZN10CWedgeBase5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4600034]">_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[46000ac]">_ZN10CWedgeBase14EnableKeyboardEv</a>
 <LI><a href="#[4600070]">_ZN10CWedgeBase15DisableKeyboardEv</a>
 <LI><a href="#[4533150]">_ZN14DirectIoParserD1Ev</a>
 <LI><a href="#[45330d8]">_ZN14DirectIoParserD0Ev</a>
 <LI><a href="#[4532ac0]">_ZN14DirectIoParser17ParseMenuResponseEPh</a>
 <LI><a href="#[4532a84]">_ZN14DirectIoParser18TalkToReaderConfigEi</a>
 <LI><a href="#[4532a48]">_ZN14DirectIoParser18QueryScannerConfigEv</a>
 <LI><a href="#[4eda230]">_ZN14HHPL_PROCESSOR11BacklightOnEv</a>
 <LI><a href="#[4ed9ee8]">_ZN14HHPL_PROCESSOR12BacklightOffEv</a>
 <LI><a href="#[4ed9c54]">_ZN14HHPL_PROCESSOR15BatteryStrengthEv</a>
 <LI><a href="#[4ed93e4]">_ZN14HHPL_PROCESSOR4BeepEiii</a>
 <LI><a href="#[4ed9c18]">_ZN14HHPL_PROCESSOR15CharacterHeightEi</a>
 <LI><a href="#[4ed9d08]">_ZN14HHPL_PROCESSOR14CharacterWidthEii</a>
 <LI><a href="#[4ed9498]">_ZN14HHPL_PROCESSOR31CorruptDataFormatCharacterCountEPc</a>
 <LI><a href="#[4ed963c]">_ZN14HHPL_PROCESSOR23DataFormatCompareFailedEPc</a>
 <LI><a href="#[4ed954c]">_ZN14HHPL_PROCESSOR26DataFormatCursorOutOfRangeEPc</a>
 <LI><a href="#[4ed9bdc]">_ZN14HHPL_PROCESSOR15DataFormatDelayEi</a>
 <LI><a href="#[4ed9894]">_ZN14HHPL_PROCESSOR20DataFormatDelayErrorEPc</a>
 <LI><a href="#[4ed981c]">_ZN14HHPL_PROCESSOR20DataFormatFindFailedEPc</a>
 <LI><a href="#[4ed93a8]">_ZN14HHPL_PROCESSOR5DelayEi</a>
 <LI><a href="#[4ed9ab0]">_ZN14HHPL_PROCESSOR16DisplayCursorOffEv</a>
 <LI><a href="#[4ed97a4]">_ZN14HHPL_PROCESSOR20DisplayCursorOnBlinkEv</a>
 <LI><a href="#[4ed96b4]">_ZN14HHPL_PROCESSOR21DisplayCursorOnSteadyEv</a>
 <LI><a href="#[4ed9dbc]">_ZN14HHPL_PROCESSOR13DisplayHeightEv</a>
 <LI><a href="#[4ed9ba0]">_ZN14HHPL_PROCESSOR15DisplayLanguageEPc</a>
 <LI><a href="#[4ed9b64]">_ZN14HHPL_PROCESSOR15DisplayLanguageEPw</a>
 <LI><a href="#[4eda1f4]">_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPhPj</a>
 <LI><a href="#[4eda1b8]">_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj</a>
 <LI><a href="#[4ed9240]">_ZN14HHPL_PROCESSOR9DisplayOnEv</a>
 <LI><a href="#[4eda398]">_ZN14HHPL_PROCESSOR10DisplayOffEv</a>
 <LI><a href="#[4ed9eac]">_ZN14HHPL_PROCESSOR12DisplayWidthEv</a>
 <LI><a href="#[4ed9ccc]">_ZN14HHPL_PROCESSOR14DoBadIndicatorEv</a>
 <LI><a href="#[4ed9b28]">_ZN14HHPL_PROCESSOR15DoGoodIndicatorEv</a>
 <LI><a href="#[4ed9e70]">_ZN14HHPL_PROCESSOR12EraseDisplayEv</a>
 <LI><a href="#[4ed9204]">_ZN14HHPL_PROCESSOR9EraseLineEii</a>
 <LI><a href="#[4ed94d4]">_ZN14HHPL_PROCESSOR27ExecuteRunTimeScriptCommandEv</a>
 <LI><a href="#[4ed9984]">_ZN14HHPL_PROCESSOR17FlushKeyPadBufferEv</a>
 <LI><a href="#[4ed9330]">_ZN14HHPL_PROCESSOR7GetFontEv</a>
 <LI><a href="#[4eda17c]">_ZN14HHPL_PROCESSOR11GetFromHostEPc</a>
 <LI><a href="#[4eda140]">_ZN14HHPL_PROCESSOR11GetFromHostEPw</a>
 <LI><a href="#[4ed9aec]">_ZN14HHPL_PROCESSOR15GetSystemTimer0Ev</a>
 <LI><a href="#[4ed9a74]">_ZN14HHPL_PROCESSOR16IndicatorLightOnEiii</a>
 <LI><a href="#[4ed9c90]">_ZN14HHPL_PROCESSOR14InputCharacterEii</a>
 <LI><a href="#[4eda104]">_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPciS1_</a>
 <LI><a href="#[4eda0c8]">_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc</a>
 <LI><a href="#[4eda050]">_ZN14HHPL_PROCESSOR11InputStringEiP7HSTRINGiiPciS2_</a>
 <LI><a href="#[4eda014]">_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc</a>
 <LI><a href="#[4ed9fd8]">_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPcPi</a>
 <LI><a href="#[4eda08c]">_ZN14HHPL_PROCESSOR11InputStringEPNS_23INPUT_STRING_PARAMETERSE</a>
 <LI><a href="#[4ed9768]">_ZN14HHPL_PROCESSOR20IsScriptingAvailableEv</a>
 <LI><a href="#[4ed92f4]">_ZN14HHPL_PROCESSOR8KeyClickEi</a>
 <LI><a href="#[4ed936c]">_ZN14HHPL_PROCESSOR6KeyHitEi</a>
 <LI><a href="#[4ed9588]">_ZN14HHPL_PROCESSOR25LastSystemOperationStatusEv</a>
 <LI><a href="#[4ed9a38]">_ZN14HHPL_PROCESSOR16LoadSystemBitmapEiii</a>
 <LI><a href="#[4ed92b8]">_ZN14HHPL_PROCESSOR8LogErrorEPKc</a>
 <LI><a href="#[4ed9f9c]">_ZN14HHPL_PROCESSOR11MenuCommandEPcPii</a>
 <LI><a href="#[4ed9f60]">_ZN14HHPL_PROCESSOR11MenuCommandEPwPii</a>
 <LI><a href="#[4ed9948]">_ZN14HHPL_PROCESSOR17MoveDisplayCursorEii</a>
 <LI><a href="#[4ed9e34]">_ZN14HHPL_PROCESSOR12OutputStringEiiiP7HSTRING</a>
 <LI><a href="#[4ed9df8]">_ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING</a>
 <LI><a href="#[4ed9678]">_ZN14HHPL_PROCESSOR22PreserveCurrentDisplayEv</a>
 <LI><a href="#[4ed9420]">_ZN14HHPL_PROCESSOR48ProcessBackgroundOperationsDuringScriptExecutionEv</a>
 <LI><a href="#[4ed99fc]">_ZN14HHPL_PROCESSOR16ProcessErrorFlagEv</a>
 <LI><a href="#[4ed972c]">_ZN14HHPL_PROCESSOR20ProcessTerminateFlagEv</a>
 <LI><a href="#[4ed990c]">_ZN14HHPL_PROCESSOR18ProcessWarningFlagEv</a>
 <LI><a href="#[4ed9d80]">_ZN14HHPL_PROCESSOR13RadioStrengthEv</a>
 <LI><a href="#[4ed95c4]">_ZN14HHPL_PROCESSOR23RestorePreservedDisplayEv</a>
 <LI><a href="#[4ed91c8]">_ZN14HHPL_PROCESSOR9ScannerIDEPc</a>
 <LI><a href="#[4ed918c]">_ZN14HHPL_PROCESSOR9ScannerIDEPw</a>
 <LI><a href="#[4ed9d44]">_ZN14HHPL_PROCESSOR13ScrollDisplayEi</a>
 <LI><a href="#[4eda35c]">_ZN14HHPL_PROCESSOR10SelectFontEi</a>
 <LI><a href="#[4eda320]">_ZN14HHPL_PROCESSOR10SendToHostEPNS_23SEND_TO_HOST_PARAMETERSE</a>
 <LI><a href="#[4eda2e4]">_ZN14HHPL_PROCESSOR10TempEnableEii</a>
 <LI><a href="#[4eda2a8]">_ZN14HHPL_PROCESSOR10TerminalIDEv</a>
 <LI><a href="#[4ed96f0]">_ZN14HHPL_PROCESSOR20TerminateHHPLProgramEv</a>
 <LI><a href="#[4ed9f24]">_ZN14HHPL_PROCESSOR11TestRoutineEiiPPv</a>
 <LI><a href="#[4ed98d0]">_ZN14HHPL_PROCESSOR19ToggleAuxiliaryPortEv</a>
 <LI><a href="#[4eda26c]">_ZN14HHPL_PROCESSOR10TriggerHitEv</a>
 <LI><a href="#[4ed9150]">_ZN14HHPL_PROCESSOR9TxSuccessEv</a>
 <LI><a href="#[4ed9114]">_ZN14HHPL_PROCESSOR9WorkgroupEv</a>
 <LI><a href="#[4ed99c0]">_ZN14HHPL_PROCESSOR16ZeroSystemTimer0Ev</a>
 <LI><a href="#[4eda230]">_ZN14HHPL_PROCESSOR11BacklightOnEv</a>
 <LI><a href="#[4ed9ee8]">_ZN14HHPL_PROCESSOR12BacklightOffEv</a>
 <LI><a href="#[4ed9c54]">_ZN14HHPL_PROCESSOR15BatteryStrengthEv</a>
 <LI><a href="#[4ecdd14]">_ZN14MAIN_HHPL_PROC4BeepEiii</a>
 <LI><a href="#[4ed9c18]">_ZN14HHPL_PROCESSOR15CharacterHeightEi</a>
 <LI><a href="#[4ed9d08]">_ZN14HHPL_PROCESSOR14CharacterWidthEii</a>
 <LI><a href="#[4ed9498]">_ZN14HHPL_PROCESSOR31CorruptDataFormatCharacterCountEPc</a>
 <LI><a href="#[4ed963c]">_ZN14HHPL_PROCESSOR23DataFormatCompareFailedEPc</a>
 <LI><a href="#[4ed954c]">_ZN14HHPL_PROCESSOR26DataFormatCursorOutOfRangeEPc</a>
 <LI><a href="#[4ed9bdc]">_ZN14HHPL_PROCESSOR15DataFormatDelayEi</a>
 <LI><a href="#[4ed9894]">_ZN14HHPL_PROCESSOR20DataFormatDelayErrorEPc</a>
 <LI><a href="#[4ed981c]">_ZN14HHPL_PROCESSOR20DataFormatFindFailedEPc</a>
 <LI><a href="#[4ecdcd8]">_ZN14MAIN_HHPL_PROC5DelayEi</a>
 <LI><a href="#[4ed9ab0]">_ZN14HHPL_PROCESSOR16DisplayCursorOffEv</a>
 <LI><a href="#[4ed97a4]">_ZN14HHPL_PROCESSOR20DisplayCursorOnBlinkEv</a>
 <LI><a href="#[4ed96b4]">_ZN14HHPL_PROCESSOR21DisplayCursorOnSteadyEv</a>
 <LI><a href="#[4ed9dbc]">_ZN14HHPL_PROCESSOR13DisplayHeightEv</a>
 <LI><a href="#[4ed9ba0]">_ZN14HHPL_PROCESSOR15DisplayLanguageEPc</a>
 <LI><a href="#[4ed9b64]">_ZN14HHPL_PROCESSOR15DisplayLanguageEPw</a>
 <LI><a href="#[4eda1f4]">_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPhPj</a>
 <LI><a href="#[4eda1b8]">_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj</a>
 <LI><a href="#[4ed9240]">_ZN14HHPL_PROCESSOR9DisplayOnEv</a>
 <LI><a href="#[4eda398]">_ZN14HHPL_PROCESSOR10DisplayOffEv</a>
 <LI><a href="#[4ed9eac]">_ZN14HHPL_PROCESSOR12DisplayWidthEv</a>
 <LI><a href="#[4ecdc9c]">_ZN14MAIN_HHPL_PROC14DoBadIndicatorEv</a>
 <LI><a href="#[4ecdc60]">_ZN14MAIN_HHPL_PROC15DoGoodIndicatorEv</a>
 <LI><a href="#[4ed9e70]">_ZN14HHPL_PROCESSOR12EraseDisplayEv</a>
 <LI><a href="#[4ed9204]">_ZN14HHPL_PROCESSOR9EraseLineEii</a>
 <LI><a href="#[4ed94d4]">_ZN14HHPL_PROCESSOR27ExecuteRunTimeScriptCommandEv</a>
 <LI><a href="#[4ed9984]">_ZN14HHPL_PROCESSOR17FlushKeyPadBufferEv</a>
 <LI><a href="#[4ed9330]">_ZN14HHPL_PROCESSOR7GetFontEv</a>
 <LI><a href="#[4eda17c]">_ZN14HHPL_PROCESSOR11GetFromHostEPc</a>
 <LI><a href="#[4eda140]">_ZN14HHPL_PROCESSOR11GetFromHostEPw</a>
 <LI><a href="#[4ecdc24]">_ZN14MAIN_HHPL_PROC15GetSystemTimer0Ev</a>
 <LI><a href="#[4ecd4a4]">_ZN14MAIN_HHPL_PROC16IndicatorLightOnEiii</a>
 <LI><a href="#[4ecd4e0]">_ZN14MAIN_HHPL_PROC14InputCharacterEii</a>
 <LI><a href="#[4ecd648]">_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPciS1_</a>
 <LI><a href="#[4ecd60c]">_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc</a>
 <LI><a href="#[4ecd5d0]">_ZN14MAIN_HHPL_PROC11InputStringEiP7HSTRINGiiPciS2_</a>
 <LI><a href="#[4ecd594]">_ZN14MAIN_HHPL_PROC11InputStringEiP8HWSTRINGiiPwiPc</a>
 <LI><a href="#[4ecdbe8]">_ZN14MAIN_HHPL_PROC11InputStringEiP8HWSTRINGiiPwiPcPi</a>
 <LI><a href="#[4ecdbac]">_ZN14MAIN_HHPL_PROC11InputStringEPN14HHPL_PROCESSOR23INPUT_STRING_PARAMETERSE</a>
 <LI><a href="#[4ecda08]">_ZN14MAIN_HHPL_PROC20IsScriptingAvailableEv</a>
 <LI><a href="#[4ed92f4]">_ZN14HHPL_PROCESSOR8KeyClickEi</a>
 <LI><a href="#[4ed936c]">_ZN14HHPL_PROCESSOR6KeyHitEi</a>
 <LI><a href="#[4ecd33c]">_ZN14MAIN_HHPL_PROC25LastSystemOperationStatusEv</a>
 <LI><a href="#[4ed9a38]">_ZN14HHPL_PROCESSOR16LoadSystemBitmapEiii</a>
 <LI><a href="#[4ecd9cc]">_ZN14MAIN_HHPL_PROC8LogErrorEPKc</a>
 <LI><a href="#[4ecd990]">_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii</a>
 <LI><a href="#[4ecd558]">_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii</a>
 <LI><a href="#[4ed9948]">_ZN14HHPL_PROCESSOR17MoveDisplayCursorEii</a>
 <LI><a href="#[4ed9e34]">_ZN14HHPL_PROCESSOR12OutputStringEiiiP7HSTRING</a>
 <LI><a href="#[4ed9df8]">_ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING</a>
 <LI><a href="#[4ed9678]">_ZN14HHPL_PROCESSOR22PreserveCurrentDisplayEv</a>
 <LI><a href="#[4ecd954]">_ZN14MAIN_HHPL_PROC48ProcessBackgroundOperationsDuringScriptExecutionEv</a>
 <LI><a href="#[4ecd468]">_ZN14MAIN_HHPL_PROC16ProcessErrorFlagEv</a>
 <LI><a href="#[4ecd3b4]">_ZN14MAIN_HHPL_PROC20ProcessTerminateFlagEv</a>
 <LI><a href="#[4ecd42c]">_ZN14MAIN_HHPL_PROC18ProcessWarningFlagEv</a>
 <LI><a href="#[4ed9d80]">_ZN14HHPL_PROCESSOR13RadioStrengthEv</a>
 <LI><a href="#[4ed95c4]">_ZN14HHPL_PROCESSOR23RestorePreservedDisplayEv</a>
 <LI><a href="#[4ecd918]">_ZN14MAIN_HHPL_PROC9ScannerIDEPc</a>
 <LI><a href="#[4ecd2c4]">_ZN14MAIN_HHPL_PROC9ScannerIDEPw</a>
 <LI><a href="#[4ed9d44]">_ZN14HHPL_PROCESSOR13ScrollDisplayEi</a>
 <LI><a href="#[4eda35c]">_ZN14HHPL_PROCESSOR10SelectFontEi</a>
 <LI><a href="#[4ecd8dc]">_ZN14MAIN_HHPL_PROC10SendToHostEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSE</a>
 <LI><a href="#[4ecd684]">_ZN14MAIN_HHPL_PROC10TempEnableEii</a>
 <LI><a href="#[4ecd8a0]">_ZN14MAIN_HHPL_PROC10TerminalIDEv</a>
 <LI><a href="#[4ecd378]">_ZN14MAIN_HHPL_PROC20TerminateHHPLProgramEv</a>
 <LI><a href="#[4ecd51c]">_ZN14MAIN_HHPL_PROC11TestRoutineEiiPPv</a>
 <LI><a href="#[4ecd3f0]">_ZN14MAIN_HHPL_PROC19ToggleAuxiliaryPortEv</a>
 <LI><a href="#[4ecd738]">_ZN14MAIN_HHPL_PROC10TriggerHitEv</a>
 <LI><a href="#[4ecd288]">_ZN14MAIN_HHPL_PROC9TxSuccessEv</a>
 <LI><a href="#[4ecd6c0]">_ZN14MAIN_HHPL_PROC9WorkgroupEv</a>
 <LI><a href="#[4ecd6fc]">_ZN14MAIN_HHPL_PROC16ZeroSystemTimer0Ev</a>
 <LI><a href="#[4ecde7c]">_ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv</a>
 <LI><a href="#[4ecddc8]">_ZN14MAIN_HHPL_PROCD1Ev</a>
 <LI><a href="#[4ecdd50]">_ZN14MAIN_HHPL_PROCD0Ev</a>
 <LI><a href="#[4ecda44]">_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_</a>
 <LI><a href="#[4ecd864]">_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl</a>
 <LI><a href="#[4ecd828]">_ZN14MAIN_HHPL_PROC17SendToCodeXMLBaseEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoMan</a>
 <LI><a href="#[4ecd7ec]">_ZN14MAIN_HHPL_PROC13Send_A_PacketEP7HSTRINGcP6CIoMan</a>
 <LI><a href="#[4ecd7b0]">_ZN14MAIN_HHPL_PROC13Send_Z_PacketEP7HSTRINGcP6CIoMan</a>
 <LI><a href="#[4ecd774]">_ZN14MAIN_HHPL_PROC21TransmitCodeXMLPacketEP7HSTRINGP6CIoMan</a>
 <LI><a href="#[3f21138]">_ZN14TiXmlAttributeD1Ev</a>
 <LI><a href="#[3f21174]">_ZN14TiXmlAttributeD0Ev</a>
 <LI><a href="#[3f21084]">_ZNK14TiXmlAttribute5PrintEP7FS_FILEi</a>
 <LI><a href="#[3f21318]">_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</a>
 <LI><a href="#[41fae54]">_ZN10HTAG_IMAGE36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[41fae18]">_ZN10HTAG_IMAGE39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[41faf08]">_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[41faecc]">_ZN10HTAG_IMAGE20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[41fae90]">_ZN10HTAG_IMAGE32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[41fafbc]">_ZN15BINARIZE_HIMAGE8BinarizeEP9BITSTRINGS1_iib</a>
 <LI><a href="#[41faf44]">_ZN6HIMAGE16OutlinedBinarizeEP9BITSTRINGS1_iib</a>
 <LI><a href="#[4c4a6e4]">_ZN15CBarcodeManagerD1Ev</a>
 <LI><a href="#[4c4a66c]">_ZN15CBarcodeManagerD0Ev</a>
 <LI><a href="#[4b47290]">_ZN15CBitBangUsb2KbdD1Ev</a>
 <LI><a href="#[4b47218]">_ZN15CBitBangUsb2KbdD0Ev</a>
 <LI><a href="#[4889b94]">_ZN13CBitBangerISR21ExecuteUserDefCommandEP12CPortDetails</a>
 <LI><a href="#[4889b58]">_ZN13CBitBangerISR5CloseEv</a>
 <LI><a href="#[4b471a0]">_ZN15CBitBangUsb2Kbd14BitBangOutTermEjj</a>
 <LI><a href="#[488a788]">_ZN10CBitBanger13BitBangInTermERj</a>
 <LI><a href="#[488a74c]">_ZN10CBitBanger13BitBangOutKbdEjj</a>
 <LI><a href="#[488a710]">_ZN10CBitBanger12BitBangInKbdERj</a>
 <LI><a href="#[4b47164]">_ZN15CBitBangUsb2Kbd18NotifyOutTermDelayEm</a>
 <LI><a href="#[4883078]">_ZN15CDriverUsb2BaseD1Ev</a>
 <LI><a href="#[4883000]">_ZN15CDriverUsb2BaseD0Ev</a>
 <LI><a href="#[4882ed4]">_ZN15CDriverUsb2Base5WriteEP12CBarcodeData</a>
 <LI><a href="#[4882da8]">_ZN15CDriverUsb2Base5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4882fc4]">_ZN15CDriverUsb2Base4OpenEsPKw</a>
 <LI><a href="#[4882f88]">_ZN15CDriverUsb2Base5CloseEv</a>
 <LI><a href="#[4882f4c]">_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[4882e5c]">_ZN15CDriverUsb2Base12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[4882e98]">_ZN15CDriverUsb2Base12InitInstanceEv</a>
 <LI><a href="#[4882f10]">_ZN15CDriverUsb2Base10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[4882e20]">_ZN15CDriverUsb2Base17SetInterfaceErrorEi</a>
 <LI><a href="#[4882de4]">_ZN15CDriverUsb2Base36PrepareCableInterfaceforUSBPowerSaveEv</a>
 <LI><a href="#[440ee70]">_ZN15CThreadedDriverD1Ev</a>
 <LI><a href="#[440edf8]">_ZN15CThreadedDriverD0Ev</a>
 <LI><a href="#[440ed80]">_ZN15CThreadedDriver5WriteEP12CBarcodeData</a>
 <LI><a href="#[440e9c0]">_ZN15CThreadedDriver5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[440ed44]">_ZN15CThreadedDriver4OpenEsPKw</a>
 <LI><a href="#[440ed08]">_ZN15CThreadedDriver5CloseEv</a>
 <LI><a href="#[440eccc]">_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[440ec18]">_ZN15CThreadedDriver12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[440eba0]">_ZN15CThreadedDriver12InitInstanceEv</a>
 <LI><a href="#[440eab0]">_ZN15CThreadedDriver10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[389faec]">_ZN15CTransInfoCP932D1Ev</a>
 <LI><a href="#[389fa74]">_ZN15CTransInfoCP932D0Ev</a>
 <LI><a href="#[389f9c0]">_ZN15CTransInfoCP9329ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[389f984]">_ZN15CTransInfoCP9329ToUnicodeEPKhPwRj</a>
 <LI><a href="#[389fa38]">_ZN15CTransInfoCP93211FromUnicodeEPKwPhRj</a>
 <LI><a href="#[389f9fc]">_ZN15CTransInfoCP93211FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[389f2f4]">_ZN15CTransInfoCP936D1Ev</a>
 <LI><a href="#[389f27c]">_ZN15CTransInfoCP936D0Ev</a>
 <LI><a href="#[389f1c8]">_ZN15CTransInfoCP9369ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[389f18c]">_ZN15CTransInfoCP9369ToUnicodeEPKhPwRj</a>
 <LI><a href="#[389f240]">_ZN15CTransInfoCP93611FromUnicodeEPKwPhRj</a>
 <LI><a href="#[389f204]">_ZN15CTransInfoCP93611FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[389eafc]">_ZN15CTransInfoCP950D1Ev</a>
 <LI><a href="#[389ea84]">_ZN15CTransInfoCP950D0Ev</a>
 <LI><a href="#[389e9d0]">_ZN15CTransInfoCP9509ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[389e994]">_ZN15CTransInfoCP9509ToUnicodeEPKhPwRj</a>
 <LI><a href="#[389ea48]">_ZN15CTransInfoCP95011FromUnicodeEPKwPhRj</a>
 <LI><a href="#[389ea0c]">_ZN15CTransInfoCP95011FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[49f3a14]">_ZN15CUsb2HidSurePosD1Ev</a>
 <LI><a href="#[49f399c]">_ZN15CUsb2HidSurePosD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[49fe964]">_ZN8CUsb2Hid15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[49f3654]">_ZN15CUsb2HidSurePos14Ep0DataHandlerEv</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[49f3870]">_ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData</a>
 <LI><a href="#[49fe9a0]">_ZN8CUsb2Hid9SendToRemEPKhi</a>
 <LI><a href="#[49f3924]">_ZN15CUsb2HidSurePos17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[49fe9dc]">_ZN8CUsb2Hid23GetScannerDisableStatusEv</a>
 <LI><a href="#[49f35dc]">_ZN15CUsb2HidSurePos19GetSizeOfConfigDescEv</a>
 <LI><a href="#[49f3618]">_ZN15CUsb2HidSurePos15GetMaxNumIfacesEv</a>
 <LI><a href="#[49f3780]">_ZN15CUsb2HidSurePos12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[49f35a0]">_ZN15CUsb2HidSurePos22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[493d73c]">_ZN9CUsb2Chip14ReceiveKbdDataEj</a>
 <LI><a href="#[493d5d4]">_ZN9CUsb2Enum9stall_ep0Ev</a>
 <LI><a href="#[493d598]">_ZN9CUsb2Enum9stall_epsEhh</a>
 <LI><a href="#[493d610]">_ZN9CUsb2Enum15control_handlerEv</a>
 <LI><a href="#[49fea18]">_ZN8CUsb2Hid14OnClassRequestEv</a>
 <LI><a href="#[493d64c]">_ZN9CUsb2Enum15OnVendorRequestEv</a>
 <LI><a href="#[49f3690]">_ZN15CUsb2HidSurePos13ReportHandlerEv</a>
 <LI><a href="#[49f3960]">_ZN15CUsb2HidSurePos13GetReportSizeEP15_device_request</a>
 <LI><a href="#[49f3834]">_ZN15CUsb2HidSurePos17StoreMenuResponseEP12CBarcodeData</a>
 <LI><a href="#[4601c90]">_ZN15CWedgeEngineIBMD1Ev</a>
 <LI><a href="#[4601c18]">_ZN15CWedgeEngineIBMD0Ev</a>
 <LI><a href="#[46016b4]">_ZN12CWedgeThread4OpenEsPKw</a>
 <LI><a href="#[46017a4]">_ZN12CWedgeEngine5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[46017e0]">_ZN12CWedgeEngine10BitBangOutEjj</a>
 <LI><a href="#[4601768]">_ZN12CWedgeEngine9BitBangInERj</a>
 <LI><a href="#[4601b64]">_ZN15CWedgeEngineIBM21OpenKeyboardEmulationEv</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4601a74]">_ZN15CWedgeEngineIBM25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[4601a38]">_ZN15CWedgeEngineIBM14EnableKeyboardEv</a>
 <LI><a href="#[46019fc]">_ZN15CWedgeEngineIBM15DisableKeyboardEv</a>
 <LI><a href="#[460181c]">_ZN11CWedgeLabel22Add_CloseLabelCommandsEv</a>
 <LI><a href="#[4601ab0]">_ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv</a>
 <LI><a href="#[46d0dd4]">_ZN15CWedgeIBMFamilyD1Ev</a>
 <LI><a href="#[46d0d5c]">_ZN15CWedgeIBMFamilyD0Ev</a>
 <LI><a href="#[46d0e10]">_ZN15CWedgeIBMFamily5WriteEP12CBarcodeData</a>
 <LI><a href="#[46d0d20]">_ZN15CWedgeIBMFamily5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[46d2634]">_ZN12CWedgeDriver4OpenEsPKw</a>
 <LI><a href="#[46d25f8]">_ZN12CWedgeDriver5CloseEv</a>
 <LI><a href="#[46d25bc]">_ZN12CWedgeDriver15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[440ec18]">_ZN15CThreadedDriver12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[440eba0]">_ZN15CThreadedDriver12InitInstanceEv</a>
 <LI><a href="#[46d2580]">_ZN12CWedgeDriver10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[46d4074]">_ZN15CWedgeKeyNumberD1Ev</a>
 <LI><a href="#[46cf538]">_ZN15CWedgeKeyNumberD0Ev</a>
 <LI><a href="#[500b834]">_ZN16Exposure_control6sampleEPvm30HHPScanDriverHHPExposureMethod</a>
 <LI><a href="#[500b870]">_ZN16Exposure_control17get_pixel_samplerEv</a>
 <LI><a href="#[500b924]">_ZN16Exposure_control12deinitializeEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[500b8ac]">_ZN16Exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t</a>
 <LI><a href="#[500b8e8]">_ZN16Exposure_control13calc_exposureEv</a>
 <LI><a href="#[500b960]">_ZN16Exposure_control11frame_eventEv</a>
 <LI><a href="#[530a894]">_ZN16HCOMMAND_HANDLER12WakeupDeviceEv</a>
 <LI><a href="#[4e67748]">_ZN16HHPSD_Transition28ScanManagerAutoExpLineSampleEPvm</a>
 <LI><a href="#[4e6770c]">_ZN16HHPSD_Transition28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t</a>
 <LI><a href="#[4e675e0]">_ZN16HHPSD_Transition41ScanManagerEngineSaysOkToCaptureNextFrameEv</a>
 <LI><a href="#[4e677c0]">_ZN16HHPSD_Transition23ScanEngineFaultOccurredEv</a>
 <LI><a href="#[4e677fc]">_ZN16HHPSD_Transition22ScanManagerAutoExpCalcEv</a>
 <LI><a href="#[4e67928]">_ZN16HHPSD_Transition17ScanEngineRestartEP23ScanDriverOpenContext_t</a>
 <LI><a href="#[4e6761c]">_ZN16HHPSD_Transition33ScanManagerFrameEventAutoExposureEv</a>
 <LI><a href="#[4e67838]">_ZN16HHPSD_Transition22ExposureSettingsUpdateEP23ScanDriverOpenContext_t</a>
 <LI><a href="#[4e678ec]">_ZN16HHPSD_Transition19LightSettingsUpdateEPK23ScanDriverOpenContext_t</a>
 <LI><a href="#[4e679dc]">_ZN16HHPSD_Transition11ResetEngineEv</a>
 <LI><a href="#[4e678b0]">_ZN16HHPSD_Transition20InitializeScanEngineEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[4e67964]">_ZN16HHPSD_Transition15ScanEngineStartEv</a>
 <LI><a href="#[4e67874]">_ZN16HHPSD_Transition22DeinitializeScanEngineEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[4e67784]">_ZN16HHPSD_Transition24SetDefaultScannerOptionsEP23ScanDriverOpenContext_t</a>
 <LI><a href="#[500ba14]">_ZN15HHPSD_interface14setHwLightModeEmmmi</a>
 <LI><a href="#[4e679a0]">_ZN16HHPSD_Transition13FrameBoundaryEv</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[553cd8c]">_ZN16HTRANSFER_STATUS21PrepareDownloadStatusEP8HWSTRING</a>
 <LI><a href="#[553cd50]">_ZN16HTRANSFER_STATUS21PrepareDownloadStatusEv</a>
 <LI><a href="#[553ce40]">_ZN16HTRANSFER_STATUS19CloseDownloadStatusEv</a>
 <LI><a href="#[553cfe4]">_ZN16HTRANSFER_STATUS11MayContinueEjjb</a>
 <LI><a href="#[553d020]">_ZN16HTRANSFER_STATUS11MayContinueEjj</a>
 <LI><a href="#[553cd14]">_ZN16HTRANSFER_STATUS23DownloadStartingHandlerEv</a>
 <LI><a href="#[553cdc8]">_ZN16HTRANSFER_STATUS21DownloadFinishHandlerEv</a>
 <LI><a href="#[553cc9c]">_ZN16HTRANSFER_STATUS26ReceivedProtocolCharactersEP7HSTRING</a>
 <LI><a href="#[553cf6c]">_ZN16HTRANSFER_STATUS12RetryWarningEP7HSTRING</a>
 <LI><a href="#[553ceb8]">_ZN16HTRANSFER_STATUS16SetProgressLevelEii</a>
 <LI><a href="#[553cef4]">_ZN16HTRANSFER_STATUS16SetProgressLevelEi</a>
 <LI><a href="#[553cc60]">_ZN16HTRANSFER_STATUS35ReceivedDataLockSemaphoreWasChangedEv</a>
 <LI><a href="#[3f25440]">_ZN16TiXmlDeclarationD0Ev</a>
 <LI><a href="#[3f25008]">_ZNK16TiXmlDeclaration5PrintEP7FS_FILEi</a>
 <LI><a href="#[3f24d38]">_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</a>
 <LI><a href="#[3f24fcc]">_ZNK9TiXmlNode10ToDocumentEv</a>
 <LI><a href="#[3f24edc]">_ZNK9TiXmlNode9ToElementEv</a>
 <LI><a href="#[3f252d8]">_ZN9TiXmlNode6ToTextEv</a>
 <LI><a href="#[3f2547c]">_ZN16TiXmlDeclaration13ToDeclarationEv</a>
 <LI><a href="#[3f25a58]">_ZNK16TiXmlDeclaration5CloneEv</a>
 <LI><a href="#[3f259e0]">_ZNK16TiXmlDeclaration6AcceptEP12TiXmlVisitor</a>
 <LI><a href="#[3f25a1c]">_ZNK16TiXmlDeclaration5PrintEP7FS_FILEiP11TiXmlString</a>
 <LI><a href="#[38a18ec]">_ZN17CTransInfoUTF16BED0Ev</a>
 <LI><a href="#[38a1a54]">_ZN17CTransInfoUTF16BE9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[38a1a18]">_ZN17CTransInfoUTF16BE9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[387706c]">_ZN17CTransInfoUTF16BE11FromUnicodeEPKwPhRj</a>
 <LI><a href="#[3877030]">_ZN17CTransInfoUTF16BE11FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[38a1838]">_ZN17CTransInfoUTF16LED0Ev</a>
 <LI><a href="#[38a1964]">_ZN17CTransInfoUTF16LE9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[38a1928]">_ZN17CTransInfoUTF16LE9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[38a19dc]">_ZN17CTransInfoUTF16LE11FromUnicodeEPKwPhRj</a>
 <LI><a href="#[38a19a0]">_ZN17CTransInfoUTF16LE11FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[49fbd54]">_ZN17CUsb2HidPosHelperD2Ev</a>
 <LI><a href="#[49fbd18]">_ZN17CUsb2HidPosHelperD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[49fe964]">_ZN8CUsb2Hid15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[49fe9a0]">_ZN8CUsb2Hid9SendToRemEPKhi</a>
 <LI><a href="#[494043c]">_ZN9CUsb2Base17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[49fe9dc]">_ZN8CUsb2Hid23GetScannerDisableStatusEv</a>
 <LI><a href="#[493fe60]">_ZN9CUsb2Base19GetSizeOfConfigDescEv</a>
 <LI><a href="#[493fed8]">_ZN9CUsb2Base15GetMaxNumIfacesEv</a>
 <LI><a href="#[4940004]">_ZN9CUsb2Base12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[49fbb38]">_ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[493d73c]">_ZN9CUsb2Chip14ReceiveKbdDataEj</a>
 <LI><a href="#[493d5d4]">_ZN9CUsb2Enum9stall_ep0Ev</a>
 <LI><a href="#[493d598]">_ZN9CUsb2Enum9stall_epsEhh</a>
 <LI><a href="#[493d610]">_ZN9CUsb2Enum15control_handlerEv</a>
 <LI><a href="#[49fea18]">_ZN8CUsb2Hid14OnClassRequestEv</a>
 <LI><a href="#[493d64c]">_ZN9CUsb2Enum15OnVendorRequestEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[49f6b10]">_ZN18CDriverUsb2SurePosD1Ev</a>
 <LI><a href="#[49f6a98]">_ZN18CDriverUsb2SurePosD0Ev</a>
 <LI><a href="#[49f6a5c]">_ZN18CDriverUsb2SurePos5WriteEP12CBarcodeData</a>
 <LI><a href="#[49f69a8]">_ZN18CDriverUsb2SurePos5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[4882fc4]">_ZN15CDriverUsb2Base4OpenEsPKw</a>
 <LI><a href="#[4882f88]">_ZN15CDriverUsb2Base5CloseEv</a>
 <LI><a href="#[4882f4c]">_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[440ec54]">_ZN15CThreadedDriver13PreSendActionEv</a>
 <LI><a href="#[4882e5c]">_ZN15CDriverUsb2Base12StartSendingEv</a>
 <LI><a href="#[440ebdc]">_ZN15CThreadedDriver14PostSendActionEv</a>
 <LI><a href="#[49f6a20]">_ZN18CDriverUsb2SurePos12InitInstanceEv</a>
 <LI><a href="#[49f69e4]">_ZN18CDriverUsb2SurePos10ThreadLoopEv</a>
 <LI><a href="#[440ea74]">_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</a>
 <LI><a href="#[4882e20]">_ZN15CDriverUsb2Base17SetInterfaceErrorEi</a>
 <LI><a href="#[4882de4]">_ZN15CDriverUsb2Base36PrepareCableInterfaceforUSBPowerSaveEv</a>
 <LI><a href="#[3877e40]">_ZN18CTransInfo8Bit1To1D0Ev</a>
 <LI><a href="#[387ea88]">_ZN14CTransInfoBase9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[387ea4c]">_ZN14CTransInfoBase9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[3877f6c]">_ZN18CTransInfo8Bit1To111FromUnicodeEPKwPhRj</a>
 <LI><a href="#[3877f30]">_ZN18CTransInfo8Bit1To111FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[387bc5c]">_ZN18CTransInfoSystemCPD0Ev</a>
 <LI><a href="#[387ea88]">_ZN14CTransInfoBase9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[387ea4c]">_ZN14CTransInfoBase9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[387bcd4]">_ZN18CTransInfoSystemCP11FromUnicodeEPKwPhRj</a>
 <LI><a href="#[387bc98]">_ZN18CTransInfoSystemCP11FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[4778f5c]">_ZN18CWedgeEngineUsbHidD1Ev</a>
 <LI><a href="#[4778ee4]">_ZN18CWedgeEngineUsbHidD0Ev</a>
 <LI><a href="#[4778ea8]">_ZN18CWedgeEngineUsbHid4OpenEsPKw</a>
 <LI><a href="#[46017a4]">_ZN12CWedgeEngine5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[46017e0]">_ZN12CWedgeEngine10BitBangOutEjj</a>
 <LI><a href="#[4601768]">_ZN12CWedgeEngine9BitBangInERj</a>
 <LI><a href="#[4600124]">_ZN12CWedgeEngine21OpenKeyboardEmulationEv</a>
 <LI><a href="#[4778e6c]">_ZN18CWedgeEngineUsbHid18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[4778e30]">_ZN18CWedgeEngineUsbHid15FinalCloseLabelEv</a>
 <LI><a href="#[4778df4]">_ZN18CWedgeEngineUsbHid25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[4778db8]">_ZN18CWedgeEngineUsbHid14EnableKeyboardEv</a>
 <LI><a href="#[4778d7c]">_ZN18CWedgeEngineUsbHid15DisableKeyboardEv</a>
 <LI><a href="#[460181c]">_ZN11CWedgeLabel22Add_CloseLabelCommandsEv</a>
 <LI><a href="#[46000e8]">_ZN12CWedgeEngine22CheckKeyboardEmulationEv</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[45f67dc]">_ZN10CWedgeBase4OpenEsPKw</a>
 <LI><a href="#[45fef18]">_ZN10CWedgeBase5CloseEv</a>
 <LI><a href="#[46018d0]">_ZN10CWedgeBase17ExtractParametersEPKw</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[4601894]">_ZN10CWedgeBase18NotifyOutTermDelayEm</a>
 <LI><a href="#[4601858]">_ZN10CWedgeBase9OpenLabelEv</a>
 <LI><a href="#[460190c]">_ZN10CWedgeBase15FinalCloseLabelEv</a>
 <LI><a href="#[4600034]">_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</a>
 <LI><a href="#[46000ac]">_ZN10CWedgeBase14EnableKeyboardEv</a>
 <LI><a href="#[4600070]">_ZN10CWedgeBase15DisableKeyboardEv</a>
 <LI><a href="#[3877d8c]">_ZN20CTransInfo8BitExoticD0Ev</a>
 <LI><a href="#[387ea88]">_ZN14CTransInfoBase9ToUnicodeEPKhjPwRj</a>
 <LI><a href="#[387ea4c]">_ZN14CTransInfoBase9ToUnicodeEPKhPwRj</a>
 <LI><a href="#[387805c]">_ZN20CTransInfo8BitExotic11FromUnicodeEPKwPhRj</a>
 <LI><a href="#[3878020]">_ZN20CTransInfo8BitExotic11FromUnicodeEPKwjPhRj</a>
 <LI><a href="#[387ea10]">_ZN14CTransInfoBase16TranslateInPlaceEPhj</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[5366c64]">_ZN20READER_CONFIGURATION12ProcessErrorEiPKc</a>
 <LI><a href="#[500b834]">_ZN16Exposure_control6sampleEPvm30HHPScanDriverHHPExposureMethod</a>
 <LI><a href="#[500b7f8]">_ZN21Auto_exposure_control17get_pixel_samplerEv</a>
 <LI><a href="#[500bb04]">_ZN21Auto_exposure_control12deinitializeEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[500bac8]">_ZN21Auto_exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t</a>
 <LI><a href="#[500ba8c]">_ZN21Auto_exposure_control13calc_exposureEv</a>
 <LI><a href="#[500b960]">_ZN16Exposure_control11frame_eventEv</a>
 <LI><a href="#[440fe60]">_ZN21CSerialSimpleNoThreadD1Ev</a>
 <LI><a href="#[440fde8]">_ZN21CSerialSimpleNoThreadD0Ev</a>
 <LI><a href="#[440fdac]">_ZN21CSerialSimpleNoThread5WriteEP12CBarcodeData</a>
 <LI><a href="#[440fcbc]">_ZN21CSerialSimpleNoThread5WriteEPKhj</a>
 <LI><a href="#[4337cfc]">_ZN11CDriverBase11DirectWriteEiPh</a>
 <LI><a href="#[4337cc0]">_ZN11CDriverBase4ReadEPhj</a>
 <LI><a href="#[4337c84]">_ZN11CDriverBase4PeekEPhj</a>
 <LI><a href="#[4337c48]">_ZN11CDriverBase11IsAnyRxDataEv</a>
 <LI><a href="#[440fd70]">_ZN21CSerialSimpleNoThread4OpenEsPKw</a>
 <LI><a href="#[440fd34]">_ZN21CSerialSimpleNoThread5CloseEv</a>
 <LI><a href="#[440fcf8]">_ZN21CSerialSimpleNoThread15DeviceIoControlE11IoControl_tlj</a>
 <LI><a href="#[4337a68]">_ZN11CDriverBase18GetTxFifoFillLevelEv</a>
 <LI><a href="#[43379b4]">_ZN11CDriverBase17ExtractParametersEPKw</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[55e12f4]">_ZN21MatrixHTransferStatus21PrepareDownloadStatusEP8HWSTRING</a>
 <LI><a href="#[55e1498]">_ZN21MatrixHTransferStatus21PrepareDownloadStatusEv</a>
 <LI><a href="#[55e13e4]">_ZN21MatrixHTransferStatus19CloseDownloadStatusEv</a>
 <LI><a href="#[55e13a8]">_ZN21MatrixHTransferStatus11MayContinueEjjb</a>
 <LI><a href="#[55e1330]">_ZN21MatrixHTransferStatus11MayContinueEjj</a>
 <LI><a href="#[553cd14]">_ZN16HTRANSFER_STATUS23DownloadStartingHandlerEv</a>
 <LI><a href="#[553cdc8]">_ZN16HTRANSFER_STATUS21DownloadFinishHandlerEv</a>
 <LI><a href="#[553cc9c]">_ZN16HTRANSFER_STATUS26ReceivedProtocolCharactersEP7HSTRING</a>
 <LI><a href="#[553cf6c]">_ZN16HTRANSFER_STATUS12RetryWarningEP7HSTRING</a>
 <LI><a href="#[553ceb8]">_ZN16HTRANSFER_STATUS16SetProgressLevelEii</a>
 <LI><a href="#[553cef4]">_ZN16HTRANSFER_STATUS16SetProgressLevelEi</a>
 <LI><a href="#[553cc60]">_ZN16HTRANSFER_STATUS35ReceivedDataLockSemaphoreWasChangedEv</a>
 <LI><a href="#[5367c90]">_ZN28READER_CONFIGURATION_STORAGE12ProcessErrorEiPKc</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[4e5dd4c]">_ZN24HW_light_control_MT9V02214setHwLightModeEmmmm</a>
 <LI><a href="#[4e5dd10]">_ZN24HW_light_control_MT9V02212flashCurrentEb</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[4e5dc20]">_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm</a>
 <LI><a href="#[4e5dbe4]">_ZN25HW_light_control_OEM_Jade12flashCurrentEbi</a>
 <LI><a href="#[3a1ccc0]">_ZN26DecodePlugingConfiguration20GetAmIEnabledSettingEv</a>
 <LI><a href="#[3a1cc84]">_ZN26DecodePlugingConfiguration26GetMyConfigFileNameSettingEv</a>
 <LI><a href="#[500b834]">_ZN16Exposure_control6sampleEPvm30HHPScanDriverHHPExposureMethod</a>
 <LI><a href="#[500b7bc]">_ZN26Exposure_control_cellphone17get_pixel_samplerEv</a>
 <LI><a href="#[500b924]">_ZN16Exposure_control12deinitializeEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[500bb7c]">_ZN26Exposure_control_cellphone13is_acceptableEP24ScanDriverLastScanInfo_t</a>
 <LI><a href="#[500bb40]">_ZN26Exposure_control_cellphone13calc_exposureEv</a>
 <LI><a href="#[500b960]">_ZN16Exposure_control11frame_eventEv</a>
 <LI><a href="#[3a1cc48]">_ZN27ImagingPlugingConfiguration20GetAmIEnabledSettingEv</a>
 <LI><a href="#[3a1cc0c]">_ZN27ImagingPlugingConfiguration26GetMyConfigFileNameSettingEv</a>
 <LI><a href="#[5367c90]">_ZN28READER_CONFIGURATION_STORAGE12ProcessErrorEiPKc</a>
 <LI><a href="#[3a1cbd0]">_ZN30FormattingPlugingConfiguration20GetAmIEnabledSettingEv</a>
 <LI><a href="#[3a1cb94]">_ZN30FormattingPlugingConfiguration26GetMyConfigFileNameSettingEv</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[440fb18]">_ZN5CUartD1Ev</a>
 <LI><a href="#[4b41fd4]">_ZN5CUartD0Ev</a>
 <LI><a href="#[440fbcc]">_ZN5CUart5CloseEv</a>
 <LI><a href="#[54dd254]">_ZN5HCOMM15ZeroElapsedTimeEv</a>
 <LI><a href="#[54dd380]">_ZN5HCOMM11ElapsedTimeEv</a>
 <LI><a href="#[54dd2cc]">_ZN5HCOMM15FlushReadBufferEi</a>
 <LI><a href="#[54dd290]">_ZN5HCOMM15FlushReadBufferEv</a>
 <LI><a href="#[54dd128]">_ZN5HCOMM4ReadEP7HSTRINGjj</a>
 <LI><a href="#[54dd074]">_ZN5HCOMM5WriteEP7HSTRINGiib</a>
 <LI><a href="#[54dd0b0]">_ZN5HCOMM5WriteEP7HSTRING</a>
 <LI><a href="#[54dd218]">_ZN5HCOMM16FlushWriteBufferEv</a>
 <LI><a href="#[54dd1dc]">_ZN5HCOMM18BytesInWriteBufferEv</a>
 <LI><a href="#[54dd3bc]">_ZN5HCOMM10HCommSleepEj</a>
 <LI><a href="#[41fae54]">_ZN10HTAG_IMAGE36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[41fae18]">_ZN10HTAG_IMAGE39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[41faf08]">_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[41faecc]">_ZN10HTAG_IMAGE20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[41fae90]">_ZN10HTAG_IMAGE32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[570a2e0]">_ZN6HIMAGE8BinarizeEP9BITSTRINGS1_iib</a>
 <LI><a href="#[41faf44]">_ZN6HIMAGE16OutlinedBinarizeEP9BITSTRINGS1_iib</a>
 <LI><a href="#[4332248]">_ZN7CRxFifoD1Ev</a>
 <LI><a href="#[43321d0]">_ZN7CRxFifoD0Ev</a>
 <LI><a href="#[433211c]">_ZN9CFifoBase5PurgeEv</a>
 <LI><a href="#[49320a8]">_ZN8CUsb2HidD2Ev</a>
 <LI><a href="#[493206c]">_ZN8CUsb2HidD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[49fe964]">_ZN8CUsb2Hid15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[49fe9a0]">_ZN8CUsb2Hid9SendToRemEPKhi</a>
 <LI><a href="#[494043c]">_ZN9CUsb2Base17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[49fe9dc]">_ZN8CUsb2Hid23GetScannerDisableStatusEv</a>
 <LI><a href="#[493fe60]">_ZN9CUsb2Base19GetSizeOfConfigDescEv</a>
 <LI><a href="#[493fed8]">_ZN9CUsb2Base15GetMaxNumIfacesEv</a>
 <LI><a href="#[4940004]">_ZN9CUsb2Base12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[493d700]">_ZN9CUsb2Chip22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[493d73c]">_ZN9CUsb2Chip14ReceiveKbdDataEj</a>
 <LI><a href="#[493d5d4]">_ZN9CUsb2Enum9stall_ep0Ev</a>
 <LI><a href="#[493d598]">_ZN9CUsb2Enum9stall_epsEhh</a>
 <LI><a href="#[493d610]">_ZN9CUsb2Enum15control_handlerEv</a>
 <LI><a href="#[49fea18]">_ZN8CUsb2Hid14OnClassRequestEv</a>
 <LI><a href="#[493d64c]">_ZN9CUsb2Enum15OnVendorRequestEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[43320a4]">_ZN9CFifoBaseD1Ev</a>
 <LI><a href="#[4b41944]">_ZN9CFifoBaseD0Ev</a>
 <LI><a href="#[433211c]">_ZN9CFifoBase5PurgeEv</a>
 <LI><a href="#[49404f0]">_ZN9CUsb2BaseD2Ev</a>
 <LI><a href="#[49404b4]">_ZN9CUsb2BaseD0Ev</a>
 <LI><a href="#[493fdac]">_ZN9CUsb2Base5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[493fe9c]">_ZN9CUsb2Base15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fcf8]">_ZN9CUsb2Base9SendToRemEPKhi</a>
 <LI><a href="#[494043c]">_ZN9CUsb2Base17ExtractParametersEPKw</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493ff14]">_ZN9CUsb2Base14disconnect_USBEv</a>
 <LI><a href="#[4940040]">_ZN9CUsb2Base11connect_USBEv</a>
 <LI><a href="#[493fd34]">_ZN9CUsb2Base9ReconnectEv</a>
 <LI><a href="#[494007c]">_ZN9CUsb2Base11TimeoutHackEhjb</a>
 <LI><a href="#[493fe24]">_ZN9CUsb2Base23GetScannerDisableStatusEv</a>
 <LI><a href="#[493fe60]">_ZN9CUsb2Base19GetSizeOfConfigDescEv</a>
 <LI><a href="#[493fed8]">_ZN9CUsb2Base15GetMaxNumIfacesEv</a>
 <LI><a href="#[4940004]">_ZN9CUsb2Base12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[493d19c]">_ZN9CUsb2ChipD2Ev</a>
 <LI><a href="#[493431c]">_ZN9CUsb2ChipD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[493fe9c]">_ZN9CUsb2Base15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fcf8]">_ZN9CUsb2Base9SendToRemEPKhi</a>
 <LI><a href="#[494043c]">_ZN9CUsb2Base17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[493fe24]">_ZN9CUsb2Base23GetScannerDisableStatusEv</a>
 <LI><a href="#[493fe60]">_ZN9CUsb2Base19GetSizeOfConfigDescEv</a>
 <LI><a href="#[493fed8]">_ZN9CUsb2Base15GetMaxNumIfacesEv</a>
 <LI><a href="#[4940004]">_ZN9CUsb2Base12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[493d700]">_ZN9CUsb2Chip22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[493d73c]">_ZN9CUsb2Chip14ReceiveKbdDataEj</a>
 <LI><a href="#[4933f5c]">_ZN9CUsb2Chip9stall_epsEhh</a>
 <LI><a href="#[4933fd4]">_ZN9CUsb2Chip15control_handlerEv</a>
 <LI><a href="#[493d7f0]">_ZN9CUsb2EnumD2Ev</a>
 <LI><a href="#[493d7b4]">_ZN9CUsb2EnumD0Ev</a>
 <LI><a href="#[493d250]">_ZN9CUsb2Chip5CloseEv</a>
 <LI><a href="#[493ffc8]">_ZN9CUsb2Base12IsTxCompleteEv</a>
 <LI><a href="#[493fe9c]">_ZN9CUsb2Base15IsRemTxCompleteEv</a>
 <LI><a href="#[493ff8c]">_ZN9CUsb2Base13IsCtsInActiveEv</a>
 <LI><a href="#[493ff50]">_ZN9CUsb2Base13IsEnabled_CTSEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fd70]">_ZN9CUsb2Base8GetEPnumEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[493fcf8]">_ZN9CUsb2Base9SendToRemEPKhi</a>
 <LI><a href="#[494043c]">_ZN9CUsb2Base17ExtractParametersEPKw</a>
 <LI><a href="#[493d430]">_ZN9CUsb2Chip13SetupHardwareEv</a>
 <LI><a href="#[493d3f4]">_ZN9CUsb2Chip14disconnect_USBEv</a>
 <LI><a href="#[493d46c]">_ZN9CUsb2Chip11connect_USBEv</a>
 <LI><a href="#[493d214]">_ZN9CUsb2Chip9ReconnectEv</a>
 <LI><a href="#[493d4a8]">_ZN9CUsb2Chip11TimeoutHackEhjb</a>
 <LI><a href="#[493fe24]">_ZN9CUsb2Base23GetScannerDisableStatusEv</a>
 <LI><a href="#[493fe60]">_ZN9CUsb2Base19GetSizeOfConfigDescEv</a>
 <LI><a href="#[493fed8]">_ZN9CUsb2Base15GetMaxNumIfacesEv</a>
 <LI><a href="#[4940004]">_ZN9CUsb2Base12GetPidOffsetEb</a>
 <LI><a href="#[49402d4]">_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</a>
 <LI><a href="#[493d700]">_ZN9CUsb2Chip22EPRxHandleReceivedDataEj</a>
 <LI><a href="#[493d73c]">_ZN9CUsb2Chip14ReceiveKbdDataEj</a>
 <LI><a href="#[493d5d4]">_ZN9CUsb2Enum9stall_ep0Ev</a>
 <LI><a href="#[493d598]">_ZN9CUsb2Enum9stall_epsEhh</a>
 <LI><a href="#[493d610]">_ZN9CUsb2Enum15control_handlerEv</a>
 <LI><a href="#[493d6c4]">_ZN9CUsb2Enum14OnClassRequestEv</a>
 <LI><a href="#[493d64c]">_ZN9CUsb2Enum15OnVendorRequestEv</a>
 <LI><a href="#[477bd10]">_ZN9CWedgeHal21MakeInterfaceIoBenignEv</a>
 <LI><a href="#[477bcd4]">_ZN9CWedgeHal17PrepareIoForWedgeEv</a>
 <LI><a href="#[477be3c]">_ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb</a>
 <LI><a href="#[477bc5c]">_ZN9CWedgeHal32PrepareCableInterfaceforUSBPowerEv</a>
 <LI><a href="#[500c158]">_ZN9HHPSD_BYD28ScanManagerAutoExpLineSampleEPvm</a>
 <LI><a href="#[500c0a4]">_ZN9HHPSD_BYD28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t</a>
 <LI><a href="#[500c068]">_ZN9HHPSD_BYD41ScanManagerEngineSaysOkToCaptureNextFrameEv</a>
 <LI><a href="#[500c02c]">_ZN9HHPSD_BYD23ScanEngineFaultOccurredEv</a>
 <LI><a href="#[500bf3c]">_ZN9HHPSD_BYD22ScanManagerAutoExpCalcEv</a>
 <LI><a href="#[500bf00]">_ZN9HHPSD_BYD17ScanEngineRestartEP23ScanDriverOpenContext_t</a>
 <LI><a href="#[500be88]">_ZN9HHPSD_BYD33ScanManagerFrameEventAutoExposureEv</a>
 <LI><a href="#[500be10]">_ZN9HHPSD_BYD22ExposureSettingsUpdateEP23ScanDriverOpenContext_t</a>
 <LI><a href="#[500bdd4]">_ZN9HHPSD_BYD19LightSettingsUpdateEPK23ScanDriverOpenContext_t</a>
 <LI><a href="#[500bd98]">_ZN9HHPSD_BYD11ResetEngineEv</a>
 <LI><a href="#[500bd5c]">_ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[500bd20]">_ZN9HHPSD_BYD15ScanEngineStartEv</a>
 <LI><a href="#[500bce4]">_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[500bca8]">_ZN9HHPSD_BYD31ScanEngineSaveStateAndPowerDownEv</a>
 <LI><a href="#[500bc6c]">_ZN9HHPSD_BYD32ScanEnginePowerUpAndRestoreStateEv</a>
 <LI><a href="#[500bc30]">_ZN9HHPSD_BYD31ScanEnginePowerUpAndRestoreRegsEv</a>
 <LI><a href="#[500bbf4]">_ZN9HHPSD_BYD24SetDefaultScannerOptionsEP23ScanDriverOpenContext_t</a>
 <LI><a href="#[500ba14]">_ZN15HHPSD_interface14setHwLightModeEmmmi</a>
 <LI><a href="#[500ba50]">_ZN15HHPSD_interface13FrameBoundaryEv</a>
 <LI><a href="#[54d6828]">_ZN4HTAG36PerformAdditionalParameterValidationEPi</a>
 <LI><a href="#[54d67ec]">_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</a>
 <LI><a href="#[54d68dc]">_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</a>
 <LI><a href="#[41faf80]">_ZN4HTAG19PostLoadTaggedImageEPi</a>
 <LI><a href="#[54d68a0]">_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</a>
 <LI><a href="#[54d6864]">_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</a>
 <LI><a href="#[3a1c810]">_ZN9TiXmlNodeD2Ev</a>
 <LI><a href="#[3f26034]">_ZN9TiXmlNodeD0Ev</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[3f24fcc]">_ZNK9TiXmlNode10ToDocumentEv</a>
 <LI><a href="#[3f24edc]">_ZNK9TiXmlNode9ToElementEv</a>
 <LI><a href="#[3f252d8]">_ZN9TiXmlNode6ToTextEv</a>
 <LI><a href="#[3f25314]">_ZN9TiXmlNode13ToDeclarationEv</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[5dd14ac]">__cxa_pure_virtual</a>
 <LI><a href="#[3f251ac]">_ZN9TiXmlTextD0Ev</a>
 <LI><a href="#[3f25b48]">_ZNK9TiXmlText5PrintEP7FS_FILEi</a>
 <LI><a href="#[3f24cc0]">_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</a>
 <LI><a href="#[3f24fcc]">_ZNK9TiXmlNode10ToDocumentEv</a>
 <LI><a href="#[3f24edc]">_ZNK9TiXmlNode9ToElementEv</a>
 <LI><a href="#[3f251e8]">_ZN9TiXmlText6ToTextEv</a>
 <LI><a href="#[3f25314]">_ZN9TiXmlNode13ToDeclarationEv</a>
 <LI><a href="#[3f25ad0]">_ZNK9TiXmlText5CloneEv</a>
 <LI><a href="#[3f25b0c]">_ZNK9TiXmlText6AcceptEP12TiXmlVisitor</a>
 <LI><a href="#[226f708]">__sti___14_interrupts_cpp</a>
 <LI><a href="#[3883240]">__sti___19_PowerManagement_cpp</a>
 <LI><a href="#[3e9904c]">__sti___29_Interface_Support_Functions_c</a>
 <LI><a href="#[41f0abc]">__sti___18_PSoC_Engine_ISSP_c</a>
 <LI><a href="#[45fddfc]">__sti___14_wedgelabel_cpp</a>
 <LI><a href="#[4884c5c]">__sti___18_usb2driverbase_cpp</a>
 <LI><a href="#[493b7d4]">__sti___14_usb2cdcacm_cpp</a>
 <LI><a href="#[49f9ea0]">__sti___14_usb2hidpos_cpp</a>
 <LI><a href="#[4b46da4]">__sti___10_UsbRem_cpp</a>
 <LI><a href="#[500a40c]">__sti___25_scandriverscannerselect_c</a>
 <LI><a href="#[5301ac8]">__sti___23_ImagingMenuSettings_cpp</a>
 <LI><a href="#[226da34]">ServiceThreadTimers</a>
 <LI><a href="#[3f1e6cc]">_Z14matrix_syscallP20matrix_syscall_param</a>
 <LI><a href="#[4336eec]">_Z26CreateSerialSimpleNoThreadv</a>
 <LI><a href="#[4337144]">_Z12CreateUsbRemv</a>
 <LI><a href="#[4336fa0]">_Z18CreateSerialDriverv</a>
 <LI><a href="#[43371bc]">_Z12CreateIBM_ATv</a>
 <LI><a href="#[4336fdc]">_Z16CreateSerial4683v</a>
 <LI><a href="#[4337108]">_Z14CreateUsbKbdPcv</a>
 <LI><a href="#[4337054]">_Z15CreateUsbKbdMacv</a>
 <LI><a href="#[4336f64]">_Z18CreateUsbSurePosHHv</a>
 <LI><a href="#[4336f28]">_Z18CreateUsbSurePosTTv</a>
 <LI><a href="#[43370cc]">_Z15CreateUsbComEmuv</a>
 <LI><a href="#[4337180]">_Z12CreateUsbPosv</a>
 <LI><a href="#[4337090]">_Z15CreateUsbJapKbdv</a>
 <LI><a href="#[4337018]">_Z16CreateNullDriverv</a>
 <LI><a href="#[4337018]">_Z16CreateNullDriverv</a>
 <LI><a href="#[500a538]">_Z11dummy_FALSEv</a>
 <LI><a href="#[500a4c0]">_Z11dummy_FALSEP23ScanDriverOpenContext_t</a>
 <LI><a href="#[500a538]">_Z11dummy_FALSEv</a>
 <LI><a href="#[500a4fc]">_Z11dummy_FALSEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[500a484]">_Z10dummy_voidv</a>
 <LI><a href="#[500a4fc]">_Z11dummy_FALSEP23ScanDriverOpenContext_ti</a>
 <LI><a href="#[500a538]">_Z11dummy_FALSEv</a>
 <LI><a href="#[500a538]">_Z11dummy_FALSEv</a>
 <LI><a href="#[500a628]">_Z10dummy_zerov</a>
 <LI><a href="#[500a5b0]">_Z10dummy_zeroP23ScanDriverOpenContext_t</a>
 <LI><a href="#[500a484]">_Z10dummy_voidv</a>
 <LI><a href="#[500a484]">_Z10dummy_voidv</a>
 <LI><a href="#[500a448]">_Z10dummy_voidPK23ScanDriverOpenContext_t</a>
 <LI><a href="#[500a5ec]">_Z10dummy_zerom</a>
 <LI><a href="#[500a628]">_Z10dummy_zerov</a>
 <LI><a href="#[4e656f0]">_Z50ScanDriverOpenContext_tPtrArgumentVoidReturn_DummyP23ScanDriverOpenContext_t</a>
 <LI><a href="#[51d1f54]">_Z12DumpSPIFlashv</a>
 <LI><a href="#[51d1ea0]">_Z13EraseAllFlashv</a>
 <LI><a href="#[51d1f18]">_Z10DeviceTypev</a>
 <LI><a href="#[51d1edc]">_Z14GoInToStopModev</a>
 <LI><a href="#[575ce98]">SymLoc001324BC</a>
 <LI><a href="#[575ced4]">SymLoc0000150cLc40x5c</a>
 <LI><a href="#[575ce5c]">SymLoc000F06D7</a>
 <LI><a href="#[575ce20]">SymLoc001385AA</a>
 <LI><a href="#[575cde4]">SymLoc000EFB3B</a>
 <LI><a href="#[575cb14]">SymLoc00155452</a>
 <LI><a href="#[575d12c]">SymLoc000013b4Lc40x74</a>
 <LI><a href="#[575cda8]">SymLoc00117635</a>
 <LI><a href="#[575cd6c]">SymLoc00140B01</a>
 <LI><a href="#[575cd6c]">SymLoc00140B01</a>
 <LI><a href="#[575d0b4]">SymLoc00001428Lc40x20</a>
 <LI><a href="#[575cd30]">SymLoc0012C53B</a>
 <LI><a href="#[575ccb8]">SymLoc001571D1</a>
 <LI><a href="#[575ccf4]">SymLoc0015D576</a>
 <LI><a href="#[575ccf4]">SymLoc0015D576</a>
 <LI><a href="#[575d0f0]">SymLoc0012EC83</a>
 <LI><a href="#[575cf88]">SymLoc00115212</a>
 <LI><a href="#[575cf4c]">SymLoc000F942B</a>
 <LI><a href="#[575cf10]">SymLoc0011E4CE</a>
 <LI><a href="#[575cc04]">SymLoc000C9F5E</a>
 <LI><a href="#[575cc04]">SymLoc000C9F5E</a>
 <LI><a href="#[575d03c]">SymLoc000014e8Lc40x24</a>
 <LI><a href="#[575cc04]">SymLoc000C9F5E</a>
 <LI><a href="#[575d000]">SymLoc00128C4C</a>
 <LI><a href="#[575cfc4]">SymLoc00110210</a>
 <LI><a href="#[575d078]">SymLoc00001448Lc40xa0</a>
 <LI><a href="#[575cc04]">SymLoc000C9F5E</a>
 <LI><a href="#[575cc7c]">SymLoc00127166</a>
 <LI><a href="#[575cc40]">SymLoc00131427</a>
 <LI><a href="#[575cbc8]">SymLoc0009C1A8</a>
 <LI><a href="#[575cbc8]">SymLoc0009C1A8</a>
 <LI><a href="#[575cbc8]">SymLoc0009C1A8</a>
 <LI><a href="#[575cb8c]">SymLoc00102AF2</a>
 <LI><a href="#[575cb50]">SymLoc000BC8B4</a>
 <LI><a href="#[58d7038]">SymLoc00140E3E</a>
 <LI><a href="#[58d7128]">SymLoc0010E734</a>
 <LI><a href="#[58d7128]">SymLoc0010E734</a>
 <LI><a href="#[58d71a0]">SymLoc000EC78A</a>
 <LI><a href="#[58d7ac4]">ocrfi_allocate_temp_storage</a>
 <LI><a href="#[58d7a10]">ocrfi_iterative_find_and_decode</a>
 <LI><a href="#[58d79d4]">ocrfi_free_temp_storage</a>
 <LI><a href="#[596dc44]">dmfi_allocate_temp_storage</a>
 <LI><a href="#[596d9b0]">dmfi_find_and_decode</a>
 <LI><a href="#[596dc80]">dmfi_free_temp_storage</a>
 <LI><a href="#[596c2f4]">hhpnfi_allocate_temp_storage</a>
 <LI><a href="#[596c27c]">hhpnfi_iterative_find_and_decode</a>
 <LI><a href="#[596c240]">hhpnfi_free_temp_storage</a>
 <LI><a href="#[596af44]">SyMbOl05090902</a>
 <LI><a href="#[596ae90]">lafi_find_and_decode</a>
 <LI><a href="#[596af80]">SyMbOl05210141</a>
 <LI><a href="#[596a65c]">hzfi_allocate_temp_storage</a>
 <LI><a href="#[596a74c]">hzfi_find_and_decode</a>
 <LI><a href="#[596a698]">hzfi_free_temp_storage</a>
 <LI><a href="#[596b778]">AAAAAAAAAAAY</a>
 <LI><a href="#[596b73c]">AAAAAAAAAAAZ</a>
 <LI><a href="#[596d62c]">SyMbOl04673917</a>
 <LI><a href="#[596d5f0]">SyMbOl04829463</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[353171c]"></a>Vector_Init_Block</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))

<P><STRONG><a name="[35316e0]"></a>MT_GetContext</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)

<P><STRONG><a name="[3531a28]"></a>MT_DriverThreadExit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = MT_DriverThreadExit &rArr; MT_CloseCurrentThread &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseCurrentThread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> thread.o(.text)
</UL>
<P><STRONG><a name="[35316a4]"></a>WaitForIRQ</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR><BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
</UL>

<P><STRONG><a name="[3531668]"></a>EnableIRQ</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)

<P><STRONG><a name="[353162c]"></a>DisableIRQ</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)

<P><STRONG><a name="[35315f0]"></a>IRQ_Disabled</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)

<P><STRONG><a name="[35315b4]"></a>Get_SP</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)

<P><STRONG><a name="[3531578]"></a>ForceDataAbort</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)

<P><STRONG><a name="[353153c]"></a>ForceIllegalInstructiion</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[3531500]"></a>ForcePrefetchAbort</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts), UNUSED, KEPT)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd6ab0]"></a>_printf_n</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b20378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (via Veneer)
</UL>

<P><STRONG><a name="[5dd645c]"></a>_printf_percent</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd690c]"></a>_printf_p</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd75b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr (via Veneer)
</UL>

<P><STRONG><a name="[5dd6510]"></a>_printf_f</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcbb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[5e0290c]"></a>_printf_e</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcbb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[5e02858]"></a>_printf_g</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcbb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[5e027a4]"></a>_printf_a</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (Weak Reference)
</UL>

<P><STRONG><a name="[5e023e4]"></a>_printf_ll</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007), UNUSED)

<P><STRONG><a name="[5dd672c]"></a>_printf_i</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b204e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[5dd6678]"></a>_printf_d</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b204e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[5dd65c4]"></a>_printf_u</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b204e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[5dd681c]"></a>_printf_o</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd8568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct (via Veneer)
</UL>

<P><STRONG><a name="[5dd69fc]"></a>_printf_x</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd762c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex (via Veneer)
</UL>

<P><STRONG><a name="[5e02600]"></a>_printf_lli</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D), UNUSED)

<P><STRONG><a name="[5e0254c]"></a>_printf_lld</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E), UNUSED)

<P><STRONG><a name="[5e02498]"></a>_printf_llu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F), UNUSED)

<P><STRONG><a name="[5e0227c]"></a>_printf_llo</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010), UNUSED)

<P><STRONG><a name="[5e0218c]"></a>_printf_llx</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011), UNUSED)

<P><STRONG><a name="[5e02330]"></a>_printf_l</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012), UNUSED)

<P><STRONG><a name="[5dd6c90]"></a>_printf_c</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char (via Veneer)
</UL>

<P><STRONG><a name="[5dd6ba0]"></a>_printf_s</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string (via Veneer)
</UL>

<P><STRONG><a name="[5dd636c]"></a>_printf_lc</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015), UNUSED)

<P><STRONG><a name="[5dd627c]"></a>_printf_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016), UNUSED)

<P><STRONG><a name="[5e026b4]"></a>_printf_percent_end</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017), UNUSED)

<P><STRONG><a name="[5dfec1c]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E), UNUSED)

<P><STRONG><a name="[5dff324]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F), UNUSED)

<P><STRONG><a name="[5dff234]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013), UNUSED)

<P><STRONG><a name="[5dfeeec]"></a>__rt_lib_init_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021), UNUSED)

<P><STRONG><a name="[5df6378]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5df6dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[5dfbea4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via BLX)
</UL>

<P><STRONG><a name="[5df94b0]"></a>__rt_lib_shutdown_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e00e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[5df93c0]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006), UNUSED)

<P><STRONG><a name="[5df91e0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E), UNUSED)

<P><STRONG><a name="[5df91a4]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F), UNUSED)

<P><STRONG><a name="[5df930c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009), UNUSED)

<P><STRONG><a name="[5df9474]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003), UNUSED)

<P><STRONG><a name="[5df9294]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B), UNUSED)

<P><STRONG><a name="[5e045a4]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd492c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BLX)
</UL>

<P><STRONG><a name="[5dfbea4]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5df6378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via BLX)
</UL>

<P><STRONG><a name="[5dfbee0]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002), UNUSED)

<P><STRONG><a name="[5dfbe68]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5df741c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2278204]"></a>_Z19FlushSimpleIoQueuesv</STRONG> (ARM, 56 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22729e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13init_hardwarev
</UL>

<P><STRONG><a name="[2278150]"></a>_Z11SetBaudRatei</STRONG> (ARM, 64 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[2278114]"></a>_Z11GetBaudRatev</STRONG> (ARM, 68 bytes, Stack size 16 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z11GetBaudRatev
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
</UL>

<P><STRONG><a name="[22780d8]"></a>_Z19GetCurrentInterfacev</STRONG> (ARM, 12 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[51d2a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING
</UL>

<P><STRONG><a name="[227809c]"></a>_Z19SetCurrentInterfaceP6CIoMan</STRONG> (ARM, 12 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessEngineDatav
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[2278060]"></a>_Z25poll_getchar_from_rx_fifov</STRONG> (ARM, 64 bytes, Stack size 8 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z25poll_getchar_from_rx_fifov
</UL>
<BR>[Calls]<UL><LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
<LI><a href="#[2277cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10put_in_queP3Queh
</UL>
<BR>[Called By]<UL><LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
</UL>

<P><STRONG><a name="[2278024]"></a>_Z5kbhitv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z5kbhitv
</UL>
<BR>[Calls]<UL><LI><a href="#[2277bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan11IsAnyRxDataEv
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
<LI><a href="#[2277c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12que_has_dataP3Que
</UL>
<BR>[Called By]<UL><LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
<LI><a href="#[55e316c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm15FlushReadBufferEv
</UL>

<P><STRONG><a name="[2277fe8]"></a>_Z8get_charv</STRONG> (ARM, 52 bytes, Stack size 8 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z8get_charv
</UL>
<BR>[Calls]<UL><LI><a href="#[2277b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4ReadEPhj
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
<LI><a href="#[2277ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12get_from_queP3Que
</UL>
<BR>[Called By]<UL><LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
<LI><a href="#[55e316c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm15FlushReadBufferEv
</UL>

<P><STRONG><a name="[2277fac]"></a>_Z8xputcharh</STRONG> (ARM, 96 bytes, Stack size 16 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z8xputcharh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
</UL>

<P><STRONG><a name="[2277f70]"></a>_Z10xputstringPKhi</STRONG> (ARM, 160 bytes, Stack size 32 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z10xputstringPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>
<BR>[Called By]<UL><LI><a href="#[2277ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKci
<LI><a href="#[5303274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22StuffRxBuffFromTheMenuv
<LI><a href="#[53034cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22DiagnosticOutputStringv
</UL>

<P><STRONG><a name="[2277f34]"></a>_Z10xputstringPKh</STRONG> (ARM, 148 bytes, Stack size 24 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>
<BR>[Called By]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>

<P><STRONG><a name="[2277ef8]"></a>_Z10xputstringPKci</STRONG> (ARM, 4 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z10xputstringPKci &rArr; _Z10xputstringPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKhi
</UL>
<BR>[Called By]<UL><LI><a href="#[55e2f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm5WriteEPci
</UL>

<P><STRONG><a name="[2277ebc]"></a>_Z10xputstringPKc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKh
</UL>
<BR>[Called By]<UL><LI><a href="#[2270950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_thread_info
<LI><a href="#[2270ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpRegistersPKjPKc
<LI><a href="#[2276698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ShowUntouchedHeapSpacev
<LI><a href="#[22766d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ShowFreeHeapSpaceShortVersionv
<LI><a href="#[2276710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ShowFreeHeapSpacev
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[374f4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19StoreLastDecodeInfoP13DecoderResult
<LI><a href="#[388417c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReportStartupTimingv
<LI><a href="#[38841b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CReportStartTiming16SendTimeWithTextEPKcj
<LI><a href="#[3a1c900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12ReplaceChildEPS_RKS_
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[4060648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16WriteRegisterBYDv
<LI><a href="#[4062010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16Do2ndThreadVsyncPv
<LI><a href="#[4068c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr8Get_ByteEbb
<LI><a href="#[4068cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr23Generate_Repeated_StartEv
<LI><a href="#[4068dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr9Send_ByteEhi
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
<LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[413e000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14OpticalTriggerEv
<LI><a href="#[414952c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnableImageLineDataProcessingBYDv
<LI><a href="#[41496d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ConvertHexCharactersh
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
<LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
<LI><a href="#[433bd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EngVerifyIdPsocv
<LI><a href="#[433bdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EraseEnginePsocv
<LI><a href="#[433bde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14EngAcquirePsocv
<LI><a href="#[433be24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19EngProgramFlashPsocv
<LI><a href="#[433be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngVerifyFlashChecksumPsocv
<LI><a href="#[433be9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngWaitForSdataLowPsocSlowv
<LI><a href="#[433bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSendVectorArrayToPsocPKj
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc
<LI><a href="#[5098220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreApplicationCodeToFlashPKhibP7HSTRING
<LI><a href="#[51d1edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GoInToStopModev
<LI><a href="#[51d1f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DeviceTypev
<LI><a href="#[51d292c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ProcessNonMenuCommandsPcj
<LI><a href="#[52fe288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15Enter232Standbyv
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
<LI><a href="#[530310c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowStackUsagev
</UL>

<P><STRONG><a name="[2277e80]"></a>_Z20wait_til_tx_is_emptyv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, db_chrio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _Z20wait_til_tx_is_emptyv &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
<LI><a href="#[4ecd9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC8LogErrorEPKc
<LI><a href="#[51d1edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GoInToStopModev
<LI><a href="#[51d1f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DumpSPIFlashv
<LI><a href="#[52fe288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15Enter232Standbyv
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
</UL>

<P><STRONG><a name="[2277e44]"></a>_Z10DEBUG_putsPKc</STRONG> (ARM, 84 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[406dbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4OpenEsPKh
</UL>

<P><STRONG><a name="[2277e08]"></a>_Z11TraceOutputPKc</STRONG> (ARM, 84 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[4934100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17MX25USB2_busresetEv
<LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
<LI><a href="#[49341f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14MX25USB2_SetupEv
</UL>

<P><STRONG><a name="[2277dcc]"></a>_Z9IsCtsHighv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[2277d90]"></a>_Z13toggleCtslinev</STRONG> (ARM, 32 bytes, Stack size 0 bytes, db_chrio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[22767c4]"></a>_Z19__rt_heapdescriptorv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, db_Heap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2273fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2274028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[2276710]"></a>_Z17ShowFreeHeapSpacev</STRONG> (ARM, 380 bytes, Stack size 104 bytes, db_Heap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _Z17ShowFreeHeapSpacev &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[22766d4]"></a>_Z29ShowFreeHeapSpaceShortVersionv</STRONG> (ARM, 96 bytes, Stack size 168 bytes, db_Heap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Z29ShowFreeHeapSpaceShortVersionv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[2276698]"></a>_Z22ShowUntouchedHeapSpacev</STRONG> (ARM, 132 bytes, Stack size 88 bytes, db_Heap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _Z22ShowUntouchedHeapSpacev &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[227665c]"></a>_Z11HHPHeapInitPhj</STRONG> (ARM, 24 bytes, Stack size 0 bytes, db_Heap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _Z11HHPHeapInitPhj &rArr; _Z23__rt_embeddedalloc_initP17Heap1a_DescriptorPvj &rArr; _Z19__Heap1a_InitMemoryP17Heap1a_DescriptorPvj
</UL>
<BR>[Calls]<UL><LI><a href="#[22765a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23__rt_embeddedalloc_initP17Heap1a_DescriptorPvj
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[2276620]"></a>_Z19HHP_AddMemoryToHeapPhj</STRONG> (ARM, 44 bytes, Stack size 0 bytes, db_Heap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = _Z19HHP_AddMemoryToHeapPhj &rArr; _Z22__Heap1a_ProvideMemoryP17Heap1a_DescriptorPvj &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22765e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22__Heap1a_ProvideMemoryP17Heap1a_DescriptorPvj
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[2274be0]"></a>_Z19__Heap1a_InitMemoryP17Heap1a_DescriptorPvj</STRONG> (ARM, 64 bytes, Stack size 4 bytes, heap1a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z19__Heap1a_InitMemoryP17Heap1a_DescriptorPvj
</UL>
<BR>[Called By]<UL><LI><a href="#[22765a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23__rt_embeddedalloc_initP17Heap1a_DescriptorPvj
</UL>

<P><STRONG><a name="[2274b68]"></a>_Z13__Heap1a_FreeP17Heap1a_DescriptorPv</STRONG> (ARM, 164 bytes, Stack size 16 bytes, heap1a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2274af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj
<LI><a href="#[22765e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22__Heap1a_ProvideMemoryP17Heap1a_DescriptorPvj
</UL>

<P><STRONG><a name="[22765e4]"></a>_Z22__Heap1a_ProvideMemoryP17Heap1a_DescriptorPvj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, heap1a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = _Z22__Heap1a_ProvideMemoryP17Heap1a_DescriptorPvj &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13__Heap1a_FreeP17Heap1a_DescriptorPv
</UL>
<BR>[Called By]<UL><LI><a href="#[2276620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19HHP_AddMemoryToHeapPhj
</UL>

<P><STRONG><a name="[2274b2c]"></a>_Z14__Heap1a_AllocP17Heap1a_Descriptorj</STRONG> (ARM, 220 bytes, Stack size 16 bytes, heap1a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[2273fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2274028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2274af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj
</UL>

<P><STRONG><a name="[2274af0]"></a>_Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj</STRONG> (ARM, 328 bytes, Stack size 24 bytes, heap1a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + In Cycle
<LI>Call Chain = _Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
<LI><a href="#[2274b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14__Heap1a_AllocP17Heap1a_Descriptorj
<LI><a href="#[2274b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13__Heap1a_FreeP17Heap1a_DescriptorPv
</UL>
<BR>[Called By]<UL><LI><a href="#[2274028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[2274ab4]"></a>_Z19__Heap1a_InitialiseP17Heap1a_DescriptorPFiPvjES1_PFvS1_ES1_</STRONG> (ARM, 24 bytes, Stack size 0 bytes, heap1a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22765a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23__rt_embeddedalloc_initP17Heap1a_DescriptorPvj
</UL>

<P><STRONG><a name="[22765a8]"></a>_Z23__rt_embeddedalloc_initP17Heap1a_DescriptorPvj</STRONG> (ARM, 56 bytes, Stack size 24 bytes, heapalloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _Z23__rt_embeddedalloc_initP17Heap1a_DescriptorPvj &rArr; _Z19__Heap1a_InitMemoryP17Heap1a_DescriptorPvj
</UL>
<BR>[Calls]<UL><LI><a href="#[2274ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19__Heap1a_InitialiseP17Heap1a_DescriptorPFiPvjES1_PFvS1_ES1_
<LI><a href="#[2274be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19__Heap1a_InitMemoryP17Heap1a_DescriptorPvj
</UL>
<BR>[Called By]<UL><LI><a href="#[227665c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11HHPHeapInitPhj
</UL>

<P><STRONG><a name="[22740a0]"></a>malloc</STRONG> (ARM, 28 bytes, Stack size 8 bytes, heapalloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14__Heap1a_AllocP17Heap1a_Descriptorj
<LI><a href="#[22767c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19__rt_heapdescriptorv
</UL>
<BR>[Called By]<UL><LI><a href="#[3531b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMailbox
<LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
<LI><a href="#[36af7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit12Base64EncodeEP12CBarcodeData
<LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[36afed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13base64_encodePKci
<LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
<LI><a href="#[3885748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10showSudokuPhiiPc
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[3f1b300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FusionImageDataPhPmS0_
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
<LI><a href="#[406042c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28AllocatePhysicalScanSpaceBYDv
<LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41f90cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoCropImagev
<LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
<LI><a href="#[41f9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ImgOutLineP9Workspace5PointS1_
<LI><a href="#[41fa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10EglOutLineP9Workspace5PointS1_
<LI><a href="#[41fa0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SampleImageP9Workspace
<LI><a href="#[41fa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE9SmoothingEv
<LI><a href="#[41fa9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE22AdaptiveUltraTextImageEv
<LI><a href="#[41faa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE19InfinityFilterImageEv
<LI><a href="#[41faa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE16EdgeSharpenImageEi
<LI><a href="#[41faa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14UltraTextImageEv
<LI><a href="#[41fab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14HistogramImageEv
<LI><a href="#[41fab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE13FlySpeckImageEv
<LI><a href="#[41fabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12StretchImageEv
<LI><a href="#[41fabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FlattenImageEv
<LI><a href="#[41fac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FissionImageEv
<LI><a href="#[41fac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11ImageRotateEi
<LI><a href="#[41facb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FusionImageEv
<LI><a href="#[41facec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE10GammaImageEi
<LI><a href="#[41faff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15BINARIZE_HIMAGE11BinaryImageEPhPmiii
<LI><a href="#[41fe748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17RowNoiseReductionv
<LI><a href="#[41fe838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13TakeTwoImagesv
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
<LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
<LI><a href="#[4e6563c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18NewBufferInfoEntryv
<LI><a href="#[4e656b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6zallocj
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[5303364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10MallocTestv
<LI><a href="#[5308ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj
<LI><a href="#[54e1598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendBootRevisionv
<LI><a href="#[54e15d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SendHardwareTokenv
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
<LI><a href="#[54e1688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendScanDriverRevisionv
<LI><a href="#[54e16c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SendDecoderRevisionv
<LI><a href="#[54e1700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendDecoderAllRevisionsv
<LI><a href="#[5708bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHistogram
<LI><a href="#[5708be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SharpenEdges
<LI><a href="#[5708c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotateImage
<LI><a href="#[5708c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramStretch
<LI><a href="#[5708cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GammaCorrection
<LI><a href="#[5708d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlySpeck
<LI><a href="#[5708d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CropImage
<LI><a href="#[5708dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompensateImage
<LI><a href="#[5708e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blur
<LI><a href="#[5708e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdaptiveUltraText
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19prepare_to_compressP23uncompressed_descriptorP21compressed_descriptorP10parameters
<LI><a href="#[575c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F8942
<LI><a href="#[575d8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Distortion
<LI><a href="#[575d924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vignette
<LI><a href="#[575d9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CreateCompensateThresholds
<LI><a href="#[575da14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MirrorImage
<LI><a href="#[575da50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlipImage
<LI><a href="#[575da8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResizeImage
<LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
<LI><a href="#[575db40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoTwoTone
<LI><a href="#[575db7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelSkip
<LI><a href="#[575dbf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentLargest
<LI><a href="#[575dc6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label
<LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575de4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sobel
<LI><a href="#[575de88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GaussianBlur
<LI><a href="#[575df78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Malloc2DMat
<LI><a href="#[575e0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoTone
<LI><a href="#[575e0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Magic
<LI><a href="#[575e11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynamicTwoTone
<LI><a href="#[575e158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemiGauss
<LI><a href="#[575e248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoneFilter
<LI><a href="#[575e2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImageAdaptive
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
<LI><a href="#[575e3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CopyForConvolve
<LI><a href="#[575e3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramEqualize
<LI><a href="#[575e428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rank
<LI><a href="#[575e464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnSharp
<LI><a href="#[575e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpMask
<LI><a href="#[575e518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_convolve_matrix
<LI><a href="#[575e554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_lookup_table
<LI><a href="#[575e89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImgOutLine
<LI><a href="#[575e9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EglOutLine
<LI><a href="#[575ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleImage
<LI><a href="#[575ea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EstablishWorkspace
<LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
<LI><a href="#[57653f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CheckAppendTypeP13DecoderResult
<LI><a href="#[576546c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SortResultsv
<LI><a href="#[58d04e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAS
<LI><a href="#[58d051c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAR
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[58d3a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_small
<LI><a href="#[58d3a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_large
<LI><a href="#[58d78a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001194A7
<LI><a href="#[58d8064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11246859
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
<LI><a href="#[58d8820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_malloc
<LI><a href="#[58dc060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcalloc
<LI><a href="#[5968a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11808193
<LI><a href="#[596a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_allocate_temp_storage
<LI><a href="#[596ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAE
<LI><a href="#[596af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05090902
<LI><a href="#[596c63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReedSolomon
<LI><a href="#[596d410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00175A7B
<LI><a href="#[596dc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_allocate_temp_storage
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
<LI><a href="#[5b89cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolveEcc
<LI><a href="#[5b89cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_create_unprotected_bit_stream
<LI><a href="#[5dfa644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen (via BLX)
<LI><a href="#[5dfaa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf (via BLX)
<LI><a href="#[5e6281c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init (via BLX)
<LI><a href="#[5e63dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals (via BLX)
</UL>

<P><STRONG><a name="[2274064]"></a>free</STRONG> (ARM, 32 bytes, Stack size 8 bytes, heapalloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13__Heap1a_FreeP17Heap1a_DescriptorPv
<LI><a href="#[22767c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19__rt_heapdescriptorv
</UL>
<BR>[Called By]<UL><LI><a href="#[3531aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_DeleteMailbox
<LI><a href="#[3531b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMailbox
<LI><a href="#[3531e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseDriverThread
<LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
<LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
<LI><a href="#[3885748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10showSudokuPhiiPc
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
<LI><a href="#[3896474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11ClearPluginEv
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[3f1b300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FusionImageDataPhPmS0_
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_
<LI><a href="#[3f1d6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginReadFilev
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
<LI><a href="#[40603f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24FreePhysicalScanSpaceBYDm
<LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41f90cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoCropImagev
<LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
<LI><a href="#[41f9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ImgOutLineP9Workspace5PointS1_
<LI><a href="#[41fa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10EglOutLineP9Workspace5PointS1_
<LI><a href="#[41fa0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SampleImageP9Workspace
<LI><a href="#[41fa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE9SmoothingEv
<LI><a href="#[41fa9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE22AdaptiveUltraTextImageEv
<LI><a href="#[41faa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE19InfinityFilterImageEv
<LI><a href="#[41faa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE16EdgeSharpenImageEi
<LI><a href="#[41faa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14UltraTextImageEv
<LI><a href="#[41fab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14HistogramImageEv
<LI><a href="#[41fab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE13FlySpeckImageEv
<LI><a href="#[41fabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12StretchImageEv
<LI><a href="#[41fabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FlattenImageEv
<LI><a href="#[41fac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FissionImageEv
<LI><a href="#[41fac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11ImageRotateEi
<LI><a href="#[41facb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FusionImageEv
<LI><a href="#[41facec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE10GammaImageEi
<LI><a href="#[41faff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15BINARIZE_HIMAGE11BinaryImageEPhPmiii
<LI><a href="#[41fe748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17RowNoiseReductionv
<LI><a href="#[41fe838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13TakeTwoImagesv
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
<LI><a href="#[493d3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14disconnect_USBEv
<LI><a href="#[4e65420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23DeinitializeScanManagerv
<LI><a href="#[4e65600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21DeleteBufferInfoEntryP14ScanBufferInfo
<LI><a href="#[4e65678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5zfreePv
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[5300b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23WriteEngineFirmwareFilev
<LI><a href="#[53031fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskReadFilev
<LI><a href="#[5303364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10MallocTestv
<LI><a href="#[5308ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj
<LI><a href="#[54e1598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendBootRevisionv
<LI><a href="#[54e15d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SendHardwareTokenv
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
<LI><a href="#[54e1688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendScanDriverRevisionv
<LI><a href="#[54e16c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SendDecoderRevisionv
<LI><a href="#[54e1700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendDecoderAllRevisionsv
<LI><a href="#[5708b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpAndBrighten
<LI><a href="#[5708bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHistogram
<LI><a href="#[5708be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SharpenEdges
<LI><a href="#[5708c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotateImage
<LI><a href="#[5708cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GammaCorrection
<LI><a href="#[5708d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlySpeck
<LI><a href="#[5708d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CropImage
<LI><a href="#[5708dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompensateImage
<LI><a href="#[5708e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blur
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
<LI><a href="#[575c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F8942
<LI><a href="#[575c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082867
<LI><a href="#[575d8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Distortion
<LI><a href="#[575d924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vignette
<LI><a href="#[575d960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_FreeCompensateBuffers
<LI><a href="#[575d9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CreateCompensateThresholds
<LI><a href="#[575da14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MirrorImage
<LI><a href="#[575da50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlipImage
<LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
<LI><a href="#[575db40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoTwoTone
<LI><a href="#[575db7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelSkip
<LI><a href="#[575dbf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentLargest
<LI><a href="#[575dc6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label
<LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
<LI><a href="#[575de4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sobel
<LI><a href="#[575de88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GaussianBlur
<LI><a href="#[575df00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderStatisticFilter
<LI><a href="#[575df3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free2DMat
<LI><a href="#[575df78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Malloc2DMat
<LI><a href="#[575e0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoTone
<LI><a href="#[575e0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Magic
<LI><a href="#[575e11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynamicTwoTone
<LI><a href="#[575e158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemiGauss
<LI><a href="#[575e2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImageAdaptive
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
<LI><a href="#[575e374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BiConvolveImage
<LI><a href="#[575e428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rank
<LI><a href="#[575e464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnSharp
<LI><a href="#[575e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpMask
<LI><a href="#[575e89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImgOutLine
<LI><a href="#[575e9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EglOutLine
<LI><a href="#[575ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleImage
<LI><a href="#[575ea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EstablishWorkspace
<LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
<LI><a href="#[57653f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CheckAppendTypeP13DecoderResult
<LI><a href="#[576546c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SortResultsv
<LI><a href="#[58d04e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAS
<LI><a href="#[58d051c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAR
<LI><a href="#[58d0dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C8A65
<LI><a href="#[58d132c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00116CD4
<LI><a href="#[58d3a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_small
<LI><a href="#[58d3ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_large
<LI><a href="#[58d78a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001194A7
<LI><a href="#[58d8028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11292966
<LI><a href="#[58d8064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11246859
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
<LI><a href="#[58d8370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00011C70
<LI><a href="#[58d885c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_free
<LI><a href="#[58dc024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zcfree
<LI><a href="#[596a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_free_temp_storage
<LI><a href="#[596ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAE
<LI><a href="#[596acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAC
<LI><a href="#[596af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05210141
<LI><a href="#[596c63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReedSolomon
<LI><a href="#[596d410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00175A7B
<LI><a href="#[596d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00167EEE
<LI><a href="#[596dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_free_temp_storage
<LI><a href="#[5a2d090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0AF8
<LI><a href="#[5b89cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolveEcc
<LI><a href="#[5b89cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_create_unprotected_bit_stream
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
<LI><a href="#[5dfa4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal (via BLX)
</UL>

<P><STRONG><a name="[2274028]"></a>realloc</STRONG> (ARM, 52 bytes, Stack size 16 bytes, heapalloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = realloc &rArr; _Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj
<LI><a href="#[2274b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14__Heap1a_AllocP17Heap1a_Descriptorj
<LI><a href="#[22767c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19__rt_heapdescriptorv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[2273fec]"></a>calloc</STRONG> (ARM, 124 bytes, Stack size 16 bytes, heapalloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = calloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14__Heap1a_AllocP17Heap1a_Descriptorj
<LI><a href="#[22767c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19__rt_heapdescriptorv
<LI><a href="#[5dd3360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[22729e4]"></a>_Z13init_hardwarev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, db_hdw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z13init_hardwarev
</UL>
<BR>[Calls]<UL><LI><a href="#[2272750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ZeroInterruptInitv
<LI><a href="#[227278c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Initialize_Clocksv
<LI><a href="#[22727c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10init_timerv
<LI><a href="#[2278204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlushSimpleIoQueuesv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[227278c]"></a>_Z17Initialize_Clocksv</STRONG> (ARM, 144 bytes, Stack size 0 bytes, Hardware_Clocks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22729e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13init_hardwarev
</UL>

<P><STRONG><a name="[22719f4]"></a>_Z15crank_up_clocksii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Hardware_Clocks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[2270ba8]"></a>_Z13DumpRegistersPKjPKc</STRONG> (ARM, 180 bytes, Stack size 48 bytes, Abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z13DumpRegistersPKjPKc &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[2270950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_thread_info
</UL>

<P><STRONG><a name="[2270af4]"></a>_Z23reset_to_boot_code_hardv</STRONG> (ARM, 80 bytes, Stack size 0 bytes, Abort.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22709c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_raise
<LI><a href="#[2270a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbortHandler
<LI><a href="#[2270a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchHandler
<LI><a href="#[2270a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_SWI_Handler
<LI><a href="#[2270ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UndefinedHandler
<LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[36b9b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25AutoCable_Ctl_Sys_Controlv
<LI><a href="#[493413c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip11ResetDeviceEv
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
<LI><a href="#[5302eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15DiagnosticResetv
</UL>

<P><STRONG><a name="[2270ab8]"></a>UndefinedHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Abort.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
</UL>
<BR>[Called By]<UL><LI><a href="#[3531884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Handler
</UL>

<P><STRONG><a name="[2270a7c]"></a>C_SWI_Handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Abort.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
</UL>
<BR>[Called By]<UL><LI><a href="#[3531848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>

<P><STRONG><a name="[2270a40]"></a>PrefetchHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Abort.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
</UL>
<BR>[Called By]<UL><LI><a href="#[353180c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prefetch_Handler
</UL>

<P><STRONG><a name="[2270a04]"></a>AbortHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Abort.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
</UL>
<BR>[Called By]<UL><LI><a href="#[35317d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abort_Handler
</UL>

<P><STRONG><a name="[22709c8]"></a>__rt_raise</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Abort.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
</UL>
<BR>[Called By]<UL><LI><a href="#[5df6a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGFPE (via BLX)
<LI><a href="#[5df9b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED (via BLX)
<LI><a href="#[5e00134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN (via BLX)
<LI><a href="#[5e62eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT (via BLX)
</UL>

<P><STRONG><a name="[226eb8c]"></a>_Z7NullIsrPv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, interrupts.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> interrupts.o(.text)
</UL>
<P><STRONG><a name="[226eda8]"></a>_Z13Scheduler_ISRPv</STRONG> (ARM, 68 bytes, Stack size 4 bytes, interrupts.o(.text), UNUSED)

<P><STRONG><a name="[226eb50]"></a>_Z14UnLockShedulerv</STRONG> (ARM, 92 bytes, Stack size 4 bytes, interrupts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z14UnLockShedulerv
</UL>
<BR>[Called By]<UL><LI><a href="#[3531ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeTheadSystem
</UL>

<P><STRONG><a name="[2272750]"></a>_Z17ZeroInterruptInitv</STRONG> (ARM, 104 bytes, Stack size 0 bytes, interrupts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226eb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13InterruptInitv
<LI><a href="#[22729e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13init_hardwarev
</UL>

<P><STRONG><a name="[226eb14]"></a>_Z13InterruptInitv</STRONG> (ARM, 156 bytes, Stack size 16 bytes, interrupts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z13InterruptInitv
</UL>
<BR>[Calls]<UL><LI><a href="#[2272750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ZeroInterruptInitv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[226ead8]"></a>_Z16UseFastInterrupt15vector_number_t</STRONG> (ARM, 136 bytes, Stack size 4 bytes, interrupts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z16UseFastInterrupt15vector_number_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4889b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISRC1Ej
</UL>

<P><STRONG><a name="[226ea9c]"></a>_ZN10CIrqVectorC1Ev</STRONG> (ARM, 20 bytes, Stack size 0 bytes, interrupts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[440ffc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadC1EP6Uart_T15vector_number_t
<LI><a href="#[4889b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISRC1Ej
<LI><a href="#[5301ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_ImagingMenuSettings_cpp
</UL>

<P><STRONG><a name="[226ea60]"></a>_ZN10CIrqVectorC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, interrupts.o(.text), UNUSED)

<P><STRONG><a name="[226ec7c]"></a>_Z23IsInterruptSourceActive15vector_number_t</STRONG> (ARM, 64 bytes, Stack size 0 bytes, interrupts.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[226db9c]"></a>_Z13read_ms_clockv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, OsTimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[226db24]"></a>_Z10read_timerv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, OsTimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[36b8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTriggerC1Ev
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b9600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC23ServiceMainScriptTimersEv
<LI><a href="#[36b9948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36IndicateCustomDefaultProgrammingModev
<LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[36b9c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ManageUsageStatisticsv
<LI><a href="#[36b9ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19LoadUsageStatisticsv
<LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[3753ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SD_CB_ResultNotifyi
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[38809f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ResetPowerTimeOutsv
<LI><a href="#[3883240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_PowerManagement_cpp
<LI><a href="#[4061f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShutDownThreadPv
<LI><a href="#[413de98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger16WaitForScanStandEv
<LI><a href="#[413df4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger20SetSkipDecodeTimeoutEv
<LI><a href="#[413df88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv
<LI><a href="#[413e0b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger20NeedToChangeToManualEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[413e1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23UnTriggerAllignmentModeEv
<LI><a href="#[413e258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23SetSerialTriggerTimeoutEv
<LI><a href="#[413e348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18SetReReadTimeout2DEv
<LI><a href="#[413e3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger13TriggerSerialEv
<LI><a href="#[414952c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnableImageLineDataProcessingBYDv
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4407580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver10WaitForCtsEmi
<LI><a href="#[4531b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310InitializeEv
<LI><a href="#[4531c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683C1Ec
<LI><a href="#[4938930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm20HandlePreSendActionsEv
<LI><a href="#[49389e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm25WaitUntilNotificationSentEv
<LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[5303328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8EchoReadPhii
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
<LI><a href="#[55e31a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm11ElapsedTimeEv
<LI><a href="#[55e31e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm15ZeroElapsedTimeEv
</UL>

<P><STRONG><a name="[226dae8]"></a>_Z11InitOsTimerv</STRONG> (ARM, 116 bytes, Stack size 16 bytes, OsTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z11InitOsTimerv
</UL>
<BR>[Calls]<UL><LI><a href="#[226d9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14set_time_limitj
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[226daac]"></a>_Z17RegisterOneMsTaskPFvvE</STRONG> (ARM, 96 bytes, Stack size 8 bytes, OsTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z17RegisterOneMsTaskPFvvE
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
<LI><a href="#[4144234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger13SetUpHardwareEv (via BLX)
</UL>

<P><STRONG><a name="[226da70]"></a>_Z19UnRegisterOneMsTaskPFvvE</STRONG> (ARM, 112 bytes, Stack size 8 bytes, OsTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z19UnRegisterOneMsTaskPFvvE
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
</UL>

<P><STRONG><a name="[2274a3c]"></a>MT_WaitMutex</STRONG> (ARM, 376 bytes, Stack size 40 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1848 + Unknown Stack Size
<LI>Call Chain = MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2274af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj
<LI><a href="#[2274b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14__Heap1a_AllocP17Heap1a_Descriptorj
<LI><a href="#[2274b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13__Heap1a_FreeP17Heap1a_DescriptorPv
<LI><a href="#[3530eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TryEnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4068ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji
<LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
<LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
<LI><a href="#[4c4a630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager16GetFreshInstanceEv
<LI><a href="#[4c4c598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferEj
</UL>

<P><STRONG><a name="[3531f14]"></a>MT_CreateMutex</STRONG> (ARM, 192 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[3530f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25InitializeCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3531ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeTheadSystem
<LI><a href="#[36b8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTriggerC1Ev
<LI><a href="#[36b9588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager20CreateBarcodeManagerEv
<LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[3a1cea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfigurationC2Ev
<LI><a href="#[4068eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr7InitI2CEv
<LI><a href="#[4c48b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManagerC1Ev
</UL>

<P><STRONG><a name="[226da34]"></a>ServiceThreadTimers</STRONG> (ARM, 180 bytes, Stack size 12 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ServiceThreadTimers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> OsTimer.o(.data)
</UL>
<P><STRONG><a name="[3531ed8]"></a>InitializeTheadSystem</STRONG> (ARM, 152 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = InitializeTheadSystem &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226eb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14UnLockShedulerv
<LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[3531e9c]"></a>MT_OpenDriverThread</STRONG> (ARM, 416 bytes, Stack size 32 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2273fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[36ba1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StartScriptv
<LI><a href="#[41495a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36InitializeImageLineDataProcessingBYDv
<LI><a href="#[4149658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28InitializeVsyncProcessingBYDv
<LI><a href="#[440c134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator
<LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[3531e60]"></a>MT_CloseDriverThread</STRONG> (ARM, 184 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3531e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseCurrentThread
<LI><a href="#[4149568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z38DeinitializeImageLineDataProcessingBYDv
<LI><a href="#[414961c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30DeinitializeVsyncProcessingBYDv
<LI><a href="#[440c1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CThreadSimpleD1Ev
<LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
</UL>

<P><STRONG><a name="[3531e24]"></a>MT_CloseCurrentThread</STRONG> (ARM, 12 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = MT_CloseCurrentThread &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseDriverThread
</UL>
<BR>[Called By]<UL><LI><a href="#[3531a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_DriverThreadExit
</UL>

<P><STRONG><a name="[3531de8]"></a>IsThreadOpen</STRONG> (ARM, 40 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[530310c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowStackUsagev
</UL>

<P><STRONG><a name="[3531dac]"></a>WakeDriverThread</STRONG> (ARM, 136 bytes, Stack size 4 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WakeDriverThread
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[36ba1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StartScriptv
<LI><a href="#[41495a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36InitializeImageLineDataProcessingBYDv
<LI><a href="#[4149658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28InitializeVsyncProcessingBYDv
<LI><a href="#[440ec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver9RunThreadEv
<LI><a href="#[493d1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[2274a78]"></a>MT_ReleaseMutex</STRONG> (ARM, 144 bytes, Stack size 4 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MT_ReleaseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[2274af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16__Heap1a_ReallocP17Heap1a_DescriptorPvj
<LI><a href="#[2274b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14__Heap1a_AllocP17Heap1a_Descriptorj
<LI><a href="#[2274b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13__Heap1a_FreeP17Heap1a_DescriptorPv
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[374f0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ClearDecoderWorkspacev
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4068ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji
<LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
<LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
<LI><a href="#[4c4a630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager16GetFreshInstanceEv
<LI><a href="#[4c4c598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferEj
</UL>

<P><STRONG><a name="[3531d70]"></a>MT_CloseMutex</STRONG> (ARM, 228 bytes, Stack size 4 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MT_CloseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[3530f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21DeleteCriticalSectionPP15MutexStruct_tag
<LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[4c48a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManagerD0Ev
<LI><a href="#[4c48b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManagerD1Ev
<LI><a href="#[4c4a66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManagerD0Ev
<LI><a href="#[4c4a6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManagerD1Ev
</UL>

<P><STRONG><a name="[3531d34]"></a>MT_Delay</STRONG> (ARM, 272 bytes, Stack size 48 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[374f2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8OPdecodePhiiiiii
<LI><a href="#[387c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPhRj
<LI><a href="#[38854f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKhj
<LI><a href="#[4060120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitMillisecondsBYDm
<LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
<LI><a href="#[4060648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16WriteRegisterBYDv
<LI><a href="#[4061f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShutDownThreadPv
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[4146ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[41494b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EnableVsyncProcessingBYDv
<LI><a href="#[414952c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnableImageLineDataProcessingBYDv
<LI><a href="#[4149658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28InitializeVsyncProcessingBYDv
<LI><a href="#[4149694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ReadRegisterBYDv
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[4337978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKwj
<LI><a href="#[4407364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase12StartSendingEv
<LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
<LI><a href="#[4407544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19WaitForTxToCompleteEm
<LI><a href="#[44075bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver11EnsureDelayEm
<LI><a href="#[440cda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadRealTime5SleepEm
<LI><a href="#[440eab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver10ThreadLoopEv
<LI><a href="#[440eaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver19DoInterMessageDelayEv
<LI><a href="#[45fa9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15MT_Driver_SleepEl
<LI><a href="#[4601b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM11GetNextByteEPh
<LI><a href="#[4601bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18WaitForClkDataHighEj
<LI><a href="#[4882cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base24WaitUntilWeAreConfiguredEv
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
<LI><a href="#[49388f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData
<LI><a href="#[4938930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm20HandlePreSendActionsEv
<LI><a href="#[49389e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm25WaitUntilNotificationSentEv
<LI><a href="#[493d4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip11TimeoutHackEhjb
<LI><a href="#[4b49324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendKbdReportEb
<LI><a href="#[4b4cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendAllKeysUpEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdcd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC5DelayEi
<LI><a href="#[51d1f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DumpSPIFlashv
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[55e3040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm10HCommSleepEj
</UL>

<P><STRONG><a name="[3531cf8]"></a>MT_CreateEvent_Ex</STRONG> (ARM, 176 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MT_CreateEvent_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[3531b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMailbox
<LI><a href="#[3531cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent
<LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[36ba1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11Timer3_Initv
<LI><a href="#[41495a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36InitializeImageLineDataProcessingBYDv
<LI><a href="#[4149658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28InitializeVsyncProcessingBYDv
</UL>

<P><STRONG><a name="[3531cbc]"></a>MT_CreateEvent</STRONG> (ARM, 8 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MT_CreateEvent &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[3530e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11CreateEventPPviiS0_
<LI><a href="#[4068eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr7InitI2CEv
<LI><a href="#[45331c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserC1EP7CRxFifo
<LI><a href="#[493d1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime
<LI><a href="#[4940568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseC2EP7CRxFifoP15CThreadRealTime
<LI><a href="#[4ecde40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROCC1Ev
</UL>

<P><STRONG><a name="[3531c80]"></a>MT_WaitEvent</STRONG> (ARM, 348 bytes, Stack size 40 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>
<BR>[Called By]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3531adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMailbox
<LI><a href="#[4061f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShutDownThreadPv
<LI><a href="#[4061f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16FastLinearThreadPv
<LI><a href="#[4061fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Do2ndThreadLineSvcPv
<LI><a href="#[4062010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16Do2ndThreadVsyncPv
<LI><a href="#[4064860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Timer3_MicroSecondDelayj
<LI><a href="#[4068dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr20Is_Transfer_CompleteEb
<LI><a href="#[4532a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18TalkToReaderConfigEi
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
<LI><a href="#[4940130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base38StuffInputBufferAndWaitForMenuResponseEPKh
<LI><a href="#[4ecd954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC48ProcessBackgroundOperationsDuringScriptExecutionEv
</UL>

<P><STRONG><a name="[3531c44]"></a>MT_WaitMultiEvents</STRONG> (ARM, 480 bytes, Stack size 40 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1848 + Unknown Stack Size
<LI>Call Chain = MT_WaitMultiEvents &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
</UL>

<P><STRONG><a name="[3531c08]"></a>MT_ResetEvent</STRONG> (ARM, 60 bytes, Stack size 4 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MT_ResetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[3530dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ResetEventj
<LI><a href="#[4068c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr29Read_Request_w_Repeated_StartEh
<LI><a href="#[4068cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr23Generate_Repeated_StartEv
<LI><a href="#[4068d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr12Read_RequestEh
<LI><a href="#[4068d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr14Generate_StartEv
<LI><a href="#[4068d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr13Generate_StopEv
<LI><a href="#[4068dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr20Is_Transfer_CompleteEb
<LI><a href="#[4532a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18TalkToReaderConfigEi
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
<LI><a href="#[4940130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base38StuffInputBufferAndWaitForMenuResponseEPKh
<LI><a href="#[4ecd954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC48ProcessBackgroundOperationsDuringScriptExecutionEv
</UL>

<P><STRONG><a name="[3531bcc]"></a>MT_SetEvent</STRONG> (ARM, 104 bytes, Stack size 4 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MT_SetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[3530df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8SetEventj
<LI><a href="#[36b9678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12SriptRunSomeEv
<LI><a href="#[375a598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Ill_HW_Enable_Aimerb
<LI><a href="#[3880798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Disable_Boostv
<LI><a href="#[3880810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Enable_Boostv
<LI><a href="#[4062010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16Do2ndThreadVsyncPv
<LI><a href="#[406204c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15VsyncServiceBYDPv
<LI><a href="#[4064af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Timer3_Service_IRQPv
<LI><a href="#[4069aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10I2CServicePv
<LI><a href="#[4146ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllTestModebb
<LI><a href="#[4146ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj
<LI><a href="#[4146f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetILL_FlashModej
<LI><a href="#[4147e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GPIO3_Service_IRQPv
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[4147ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToAIMONv
<LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
<LI><a href="#[4149310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SetILL_ONStateb
<LI><a href="#[414934c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SetAIM_ONStateb
<LI><a href="#[41494f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33DisableImageLineDataProcessingBYDv
<LI><a href="#[453309c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData
<LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[4940400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17StoreMenuResponseEP12CBarcodeData
</UL>

<P><STRONG><a name="[3531b90]"></a>MT_CloseEvent</STRONG> (ARM, 144 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MT_CloseEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[3530d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11CloseHandlej
<LI><a href="#[3531aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_DeleteMailbox
<LI><a href="#[4149568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z38DeinitializeImageLineDataProcessingBYDv
<LI><a href="#[414961c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30DeinitializeVsyncProcessingBYDv
<LI><a href="#[45330d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserD0Ev
<LI><a href="#[4533150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserD1Ev
<LI><a href="#[493431c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD0Ev
<LI><a href="#[493d19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD2Ev
<LI><a href="#[49404b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseD0Ev
<LI><a href="#[49404f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseD2Ev
</UL>

<P><STRONG><a name="[3531b54]"></a>MT_CreateMailbox</STRONG> (ARM, 124 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = MT_CreateMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3531cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
<LI><a href="#[45fff44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR13CreateMailBoxEv
</UL>

<P><STRONG><a name="[3531b18]"></a>MT_AddMailbox</STRONG> (ARM, 252 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MT_AddMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[440ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5WriteEP12CBarcodeData
<LI><a href="#[440edbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver6SignalEm
<LI><a href="#[4885724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR12DoEndCommandEP12CPortDetails
<LI><a href="#[4885760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR12DoIllegalCmdEP12CPortDetails
</UL>

<P><STRONG><a name="[3531adc]"></a>MT_WaitMailbox</STRONG> (ARM, 280 bytes, Stack size 32 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[440ea38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEmm
<LI><a href="#[440eab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver10ThreadLoopEv
<LI><a href="#[440eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEm
<LI><a href="#[4889c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR16WaitForAnySignalEm
</UL>

<P><STRONG><a name="[3531aa0]"></a>MT_DeleteMailbox</STRONG> (ARM, 36 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
<LI><a href="#[48857d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISRD0Ev
<LI><a href="#[4889ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISRD1Ev
</UL>

<P><STRONG><a name="[3531a64]"></a>ReportDriverThreadUnusedStack</STRONG> (ARM, 64 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[530310c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowStackUsagev
</UL>

<P><STRONG><a name="[2270950]"></a>print_thread_info</STRONG> (ARM, 700 bytes, Stack size 224 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = print_thread_info &rArr; _Z13DumpRegistersPKjPKc &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2270ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpRegistersPKjPKc
<LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[53033dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Doprint_thread_infov
</UL>

<P><STRONG><a name="[3530f60]"></a>_Z25InitializeCriticalSectionPP15MutexStruct_tag</STRONG> (ARM, 24 bytes, Stack size 8 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = _Z25InitializeCriticalSectionPP15MutexStruct_tag &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Init
<LI><a href="#[4e6545c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21InitializeScanManagerv
</UL>

<P><STRONG><a name="[3530f24]"></a>_Z21DeleteCriticalSectionPP15MutexStruct_tag</STRONG> (ARM, 28 bytes, Stack size 8 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z21DeleteCriticalSectionPP15MutexStruct_tag &rArr; MT_CloseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23DeinitializeScanManagerv
<LI><a href="#[4e6545c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21InitializeScanManagerv
</UL>

<P><STRONG><a name="[3530ee8]"></a>_Z20EnterCriticalSectionPP15MutexStruct_tag</STRONG> (ARM, 32 bytes, Stack size 8 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _Z20EnterCriticalSectionPP15MutexStruct_tag &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
<LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Open
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e65060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32ScanDriverPreEngineCommunicationv
<LI><a href="#[4e6509c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagerReconfigureEngineP23ScanDriverOpenContext_t
<LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
<LI><a href="#[4e651c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverPrepareChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[4e65204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ScanDriverIsScanningv
<LI><a href="#[4e65240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e6527c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e652b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
<LI><a href="#[4e6536c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementBufferReturnP23ScanDriverOpenContext_tPv
<LI><a href="#[4e653a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e655c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z43AllocatePhysicalBufferAndCreateNewInfoEntryv
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>

<P><STRONG><a name="[3530eac]"></a>_Z23TryEnterCriticalSectionPP15MutexStruct_tag</STRONG> (ARM, 12 bytes, Stack size 0 bytes, syncobjects.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6509c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagerReconfigureEngineP23ScanDriverOpenContext_t
<LI><a href="#[4e65498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverSofISTroutinev
<LI><a href="#[4e654d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanDriverVsyncISTroutinev
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
<LI><a href="#[4e6554c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverImageLineDataISTroutinev
<LI><a href="#[4e65588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanManagementUpdateCyclem
</UL>

<P><STRONG><a name="[3530e70]"></a>_Z20LeaveCriticalSectionPP15MutexStruct_tag</STRONG> (ARM, 8 bytes, Stack size 0 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z20LeaveCriticalSectionPP15MutexStruct_tag &rArr; MT_ReleaseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Open
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e65024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverPostEngineCommunicationv
<LI><a href="#[4e6509c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagerReconfigureEngineP23ScanDriverOpenContext_t
<LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
<LI><a href="#[4e6518c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverCleanupChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[4e651c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverPrepareChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[4e65204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ScanDriverIsScanningv
<LI><a href="#[4e65240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e6527c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e652b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
<LI><a href="#[4e6536c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementBufferReturnP23ScanDriverOpenContext_tPv
<LI><a href="#[4e653a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e65498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverSofISTroutinev
<LI><a href="#[4e654d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanDriverVsyncISTroutinev
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
<LI><a href="#[4e6554c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverImageLineDataISTroutinev
<LI><a href="#[4e65588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanManagementUpdateCyclem
<LI><a href="#[4e655c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z43AllocatePhysicalBufferAndCreateNewInfoEntryv
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>

<P><STRONG><a name="[3530e34]"></a>_Z11CreateEventPPviiS0_</STRONG> (ARM, 12 bytes, Stack size 0 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z11CreateEventPPviiS0_ &rArr; MT_CreateEvent &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6545c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21InitializeScanManagerv
</UL>

<P><STRONG><a name="[3530df8]"></a>_Z8SetEventj</STRONG> (ARM, 16 bytes, Stack size 8 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z8SetEventj &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
<LI><a href="#[4e65588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanManagementUpdateCyclem
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>

<P><STRONG><a name="[3530dbc]"></a>_Z10ResetEventj</STRONG> (ARM, 16 bytes, Stack size 8 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z10ResetEventj &rArr; MT_ResetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6509c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagerReconfigureEngineP23ScanDriverOpenContext_t
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
<LI><a href="#[4e65588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanManagementUpdateCyclem
<LI><a href="#[4e6662c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18HandleImageNotOkayv
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>

<P><STRONG><a name="[3530d80]"></a>_Z11CloseHandlej</STRONG> (ARM, 16 bytes, Stack size 8 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z11CloseHandlej &rArr; MT_CloseEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23DeinitializeScanManagerv
<LI><a href="#[4e6545c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21InitializeScanManagerv
</UL>

<P><STRONG><a name="[3530d44]"></a>_Z19WaitForSingleObjectjm</STRONG> (ARM, 24 bytes, Stack size 8 bytes, syncobjects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4e652b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
<LI><a href="#[4e65330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27ScanManagerNewScanAvailableP23ScanDriverOpenContext_t
<LI><a href="#[4e6536c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementBufferReturnP23ScanDriverOpenContext_tPv
<LI><a href="#[4e653a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
<LI><a href="#[4e6554c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverImageLineDataISTroutinev
<LI><a href="#[4e65588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanManagementUpdateCyclem
<LI><a href="#[4e655c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z43AllocatePhysicalBufferAndCreateNewInfoEntryv
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>

<P><STRONG><a name="[352f2c8]"></a>_Z27FindMatrixApplicationHeaderPKci</STRONG> (ARM, 276 bytes, Stack size 4 bytes, MatrixHeader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z27FindMatrixApplicationHeaderPKci
</UL>
<BR>[Called By]<UL><LI><a href="#[352f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SearchForTextFlagPKciS0_Pi
</UL>

<P><STRONG><a name="[352f250]"></a>_Z17SearchForTextFlagPKciS0_Pi</STRONG> (ARM, 164 bytes, Stack size 32 bytes, MatrixHeader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _Z17SearchForTextFlagPKciS0_Pi &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[352f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10hhpstricmpEPKcS1_b
<LI><a href="#[352f2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27FindMatrixApplicationHeaderPKci
</UL>
<BR>[Called By]<UL><LI><a href="#[352f214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7RAMOnlyPKci
</UL>

<P><STRONG><a name="[352f214]"></a>_Z7RAMOnlyPKci</STRONG> (ARM, 28 bytes, Stack size 8 bytes, MatrixHeader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _Z7RAMOnlyPKci &rArr; _Z17SearchForTextFlagPKciS0_Pi &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[352f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SearchForTextFlagPKciS0_Pi
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
</UL>

<P><STRONG><a name="[2277ca0]"></a>_Z12get_from_queP3Que</STRONG> (ARM, 56 bytes, Stack size 0 bytes, db_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2277fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8get_charv
</UL>

<P><STRONG><a name="[2277cdc]"></a>_Z10put_in_queP3Queh</STRONG> (ARM, 48 bytes, Stack size 0 bytes, db_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2278060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25poll_getchar_from_rx_fifov
</UL>

<P><STRONG><a name="[2277c64]"></a>_Z12que_has_dataP3Que</STRONG> (ARM, 36 bytes, Stack size 0 bytes, db_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2278024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5kbhitv
</UL>

<P><STRONG><a name="[22727c8]"></a>_Z10init_timerv</STRONG> (ARM, 60 bytes, Stack size 0 bytes, db_time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22729e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13init_hardwarev
</UL>

<P><STRONG><a name="[352d360]"></a>_Z12current_timev</STRONG> (ARM, 12 bytes, Stack size 0 bytes, db_time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b9858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8MarkTimeiPKc
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36ba230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10reset_psocv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19StoreLastDecodeInfoP13DecoderResult
<LI><a href="#[3758bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResetUsageInfov
<LI><a href="#[3758c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21UpdateUsageStatisticsv
<LI><a href="#[375a250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12IndicatorTfb7CondOffEv
<LI><a href="#[375a28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12IndicatorTfb6CondOnEv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[38832b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GoInToPowerDownModev
<LI><a href="#[4068d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr14Generate_StartEv
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
<LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[413dd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger11GetNextScanEmPPh
<LI><a href="#[413dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18PrepareForScanningEv
<LI><a href="#[41f0abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_PSoC_Engine_ISSP_c
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
<LI><a href="#[43393b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Psoc5100DelayInMilliSeci
<LI><a href="#[433bf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EngResetPsocv
<LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
<LI><a href="#[4407544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19WaitForTxToCompleteEm
<LI><a href="#[44075bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver11EnsureDelayEm
<LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
<LI><a href="#[452f640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468320Start4683TransmitterEv
<LI><a href="#[452f67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468311Receive4683Ev
<LI><a href="#[452f6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468312Transmit4683Ev
<LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
<LI><a href="#[4882f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base5CloseEv
<LI><a href="#[4882fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base4OpenEsPKw
<LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
<LI><a href="#[4884c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_usb2driverbase_cpp
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
<LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[4934178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13connect_USBHwEv
<LI><a href="#[493d214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip9ReconnectEv
<LI><a href="#[493d4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip11TimeoutHackEhjb
<LI><a href="#[4ecd0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes21UpdatePreferredTimersEv
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[501445c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi
<LI><a href="#[5016928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes30SequencePriorityTimeoutExpiredEv
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
</UL>

<P><STRONG><a name="[226d9f8]"></a>_Z14set_time_limitj</STRONG> (ARM, 28 bytes, Stack size 0 bytes, db_time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226dae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11InitOsTimerv
<LI><a href="#[226e40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10OsTimerIrqPv
</UL>

<P><STRONG><a name="[352d324]"></a>_Z18translate_ms_ticksj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, db_time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36ba230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10reset_psocv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[38832b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GoInToPowerDownModev
<LI><a href="#[4068d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr14Generate_StartEv
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
<LI><a href="#[41f0abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_PSoC_Engine_ISSP_c
<LI><a href="#[43393b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Psoc5100DelayInMilliSeci
<LI><a href="#[433bf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EngResetPsocv
<LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
<LI><a href="#[4407544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19WaitForTxToCompleteEm
<LI><a href="#[44075bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver11EnsureDelayEm
<LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
<LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
<LI><a href="#[4884c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_usb2driverbase_cpp
<LI><a href="#[4934178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13connect_USBHwEv
<LI><a href="#[493d214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip9ReconnectEv
<LI><a href="#[493d4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip11TimeoutHackEhjb
<LI><a href="#[4ecd0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes21UpdatePreferredTimersEv
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[501445c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
</UL>

<P><STRONG><a name="[352d2e8]"></a>_Z21translate_ticks_to_msj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, db_time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375a250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12IndicatorTfb7CondOffEv
<LI><a href="#[38841b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CReportStartTiming16SendTimeWithTextEPKcj
</UL>

<P><STRONG><a name="[352c910]"></a>_Z16InputPowerStatusv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, product.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
<LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
</UL>

<P><STRONG><a name="[36ba8c0]"></a>_Z24SetupReaderConfigurationv</STRONG> (ARM, 256 bytes, Stack size 8 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504 + Unknown Stack Size
<LI>Call Chain = _Z24SetupReaderConfigurationv &rArr; _ZN20READER_CONFIGURATIONC1Ei &rArr; _ZN20READER_CONFIGURATION10InitializeEi &rArr; _ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATIONC1Ei
<LI><a href="#[36b9498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36ba6a4]"></a>_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_</STRONG> (ARM, 756 bytes, Stack size 64 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = _Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_ &rArr; _Z4MenuPjPh &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE35UpdateNumericListWorkingDefaltValueEPKci
<LI><a href="#[36b9858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8MarkTimeiPKc
<LI><a href="#[36b990c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z4MenuPjPh
<LI><a href="#[36b9e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18AutoCable_StrIndexPhS_
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36ba668]"></a>_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING</STRONG> (ARM, 580 bytes, Stack size 56 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = _Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING &rArr; _Z4MenuPjPh &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE35UpdateNumericListWorkingDefaltValueEPKci
<LI><a href="#[36b91c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb
<LI><a href="#[36b990c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z4MenuPjPh
<LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[36ba17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EncodeBufferPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36ba62c]"></a>_Z24ProcessUpdateInformationPi</STRONG> (ARM, 576 bytes, Stack size 416 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2968 + Unknown Stack Size
<LI>Call Chain = _Z24ProcessUpdateInformationPi &rArr; _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE37CopyWorkingSettingsOverActiveSettingsEv
<LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[36b981c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9EraseFilePKc
<LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[36ba050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ExpandBaudRatesv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36ba5f0]"></a>_Z14OpenScanDriverv</STRONG> (ARM, 344 bytes, Stack size 24 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = _Z14OpenScanDriverv &rArr; _Z23Ill_Ctl_Sys_Init_Threadv &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[36b8e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr15Create_I2C_DrvrEv
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[36b9dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18UpdatePowerDownPinv
<LI><a href="#[36ba398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Open
<LI><a href="#[36ba3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Init
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36ba5b4]"></a>_Z36CreateManualCableSelect_ProdSpecificv</STRONG> (ARM, 124 bytes, Stack size 8 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _Z36CreateManualCableSelect_ProdSpecificv &rArr; _ZN28READER_CONFIGURATION_STORAGE35UpdateNumericListWorkingDefaltValueEPKci &rArr; _ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[36b918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE35UpdateNumericListWorkingDefaltValueEPKci
<LI><a href="#[36b9984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34ManualCable_Ctl_Sys_Initializationv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36ba578]"></a>_Z17Init_ProdSpecificv</STRONG> (ARM, 376 bytes, Stack size 8 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12200 + Unknown Stack Size
<LI>Call Chain = _Z17Init_ProdSpecificv &rArr; _Z18DecoderPowerupInitv &rArr; _Z16EstablishDecoderii &rArr; InitDecoder &rArr; SI_InitDecoder &rArr; SD_Create &rArr; SymLoc00000e88Lc40xec &rArr; SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTriggerC1Ev
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci22OnChangedConfigurationEv
<LI><a href="#[36b97e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger15CreateHWTriggerEv (via BLX)
<LI><a href="#[36b9858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8MarkTimeiPKc
<LI><a href="#[36b99c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33DecodeIFaceOnChangedConfigurationv
<LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[36ba1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StartScriptv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[227a8b0]"></a>C_Entry</STRONG> (ARM, 2004 bytes, Stack size 1656 bytes, OS_Start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 30136 + Unknown Stack Size
<LI>Call Chain = C_Entry &rArr; _Z17ProcessEngineDatav &rArr; _ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh &rArr; _Z16ImageSnapAndShipv &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226dae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11InitOsTimerv
<LI><a href="#[226eb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13InterruptInitv
<LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
<LI><a href="#[22729e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13init_hardwarev
<LI><a href="#[2276620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19HHP_AddMemoryToHeapPhj
<LI><a href="#[227665c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11HHPHeapInitPhj
<LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[2277fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8xputcharh
<LI><a href="#[2278150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SetBaudRatei
<LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeTheadSystem
<LI><a href="#[36b8dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal14CreateWedgeHalEv
<LI><a href="#[36b8e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit16CreateDataEditorEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger16IsHWorSerialTrigEv
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan19CreateStdInterfacesEv
<LI><a href="#[36b909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci9CreateEciEv
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24CustomerDefaultsUpToDateEv
<LI><a href="#[36b9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE21WorkingValuesUpToDateEv
<LI><a href="#[36b927c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20ActiveValuesUpToDateEv
<LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[36b9330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration6CreateEv
<LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b93e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21MatrixHTransferStatusC1Ev
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b94d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSEC1Ev
<LI><a href="#[36b9510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSEC1Ei
<LI><a href="#[36b954c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CRemRouterHandler12CreateRouterEv
<LI><a href="#[36b9588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager20CreateBarcodeManagerEv
<LI><a href="#[36b95c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC35ScriptIsInBackgroundOperationsStateEv
<LI><a href="#[36b9600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC23ServiceMainScriptTimersEv
<LI><a href="#[36b963c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC23CreateScriptInterpreterEv
<LI><a href="#[36b9678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12SriptRunSomeEv
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b96f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken19CreateHardwareTokenEv
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36b9768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12IndicatorTfb8CondInitEv
<LI><a href="#[36b97a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHCommC1Ev
<LI><a href="#[36b981c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9EraseFilePKc
<LI><a href="#[36b9858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8MarkTimeiPKc
<LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
<LI><a href="#[36b98d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7InitSpijP11spiregs_tag
<LI><a href="#[36b9948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36IndicateCustomDefaultProgrammingModev
<LI><a href="#[36b99fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32AutoCable_Ctl_Sys_Initializationv
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30CollectInterfaceUSBTerminalIdsPi
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
<LI><a href="#[36b9b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25AutoCable_Ctl_Sys_Controlv
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[36b9c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21UpdateOpenInterfaceIDv
<LI><a href="#[36b9c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ManageUsageStatisticsv
<LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
<LI><a href="#[36b9ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19LoadUsageStatisticsv
<LI><a href="#[36b9d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19InitUsageStatisticsv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi
<LI><a href="#[36b9eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessEngineDatav
<LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
<LI><a href="#[36b9f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SoundPowerupBeepv
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[36b9f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginsAPIExtendv
<LI><a href="#[36b9fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16IsBeepInProgressv
<LI><a href="#[36ba08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PSOC_Port_Initv
<LI><a href="#[36ba0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14Init_PowerPinsv
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
<LI><a href="#[36ba140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13GetFileLengthPKc
<LI><a href="#[36ba17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EncodeBufferPKcPhi
<LI><a href="#[36ba1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11Timer3_Initv
<LI><a href="#[36ba230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10reset_psocv
<LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
<LI><a href="#[36ba5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36CreateManualCableSelect_ProdSpecificv
<LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
<LI><a href="#[36ba8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24SetupReaderConfigurationv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[36b5028]"></a>_ZN13CRemRouterLob15RouteBarcodeLobEP12CBarcodeDataPKwi</STRONG> (ARM, 268 bytes, Stack size 88 bytes, RemRouter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = _ZN13CRemRouterLob15RouteBarcodeLobEP12CBarcodeDataPKwi &rArr; _ZN12CBarcodeData7AddTextEPKwj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEP12CBarcodeData
<LI><a href="#[36b4e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData7AddTextEPKwj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> RemRouter.o(.constdata__ZTV13CRemRouterLob)
</UL>
<P><STRONG><a name="[36b4fec]"></a>_ZN13CRemRouterLob13RouteImageLobEiPK7HSTRINGS2_</STRONG> (ARM, 252 bytes, Stack size 48 bytes, RemRouter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN13CRemRouterLob13RouteImageLobEiPK7HSTRINGS2_
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[36b4dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPK7HSTRING
</UL>
<BR>[Address Reference Count : 1]<UL><LI> RemRouter.o(.constdata__ZTV13CRemRouterLob)
</UL>
<P><STRONG><a name="[36b954c]"></a>_ZN17CRemRouterHandler12CreateRouterEv</STRONG> (ARM, 84 bytes, Stack size 16 bytes, RemRouter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN17CRemRouterHandler12CreateRouterEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b4fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CRemRouterHandler22OnChangedConfigurationEv
</UL>

<P><STRONG><a name="[36b4fb0]"></a>_ZN17CRemRouterHandler22OnChangedConfigurationEv</STRONG> (ARM, 48 bytes, Stack size 8 bytes, RemRouter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN17CRemRouterHandler22OnChangedConfigurationEv &rArr; _ZN17CRemRouterHandler12CreateRouterEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b954c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CRemRouterHandler12CreateRouterEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[36afed4]"></a>_Z13base64_encodePKci</STRONG> (ARM, 304 bytes, Stack size 40 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _Z13base64_encodePKci &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[36af7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit12Base64EncodeEP12CBarcodeData
</UL>

<P><STRONG><a name="[36af9ac]"></a>_Z22SendDataFormatCommandsv</STRONG> (ARM, 32 bytes, Stack size 8 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z22SendDataFormatCommandsv &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[36b8e08]"></a>_ZN9CDataEdit16CreateDataEditorEv</STRONG> (ARM, 60 bytes, Stack size 8 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN9CDataEdit16CreateDataEditorEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36af970]"></a>_ZN9CDataEdit7AddXfixEP12CBarcodeDataPwjP7HSTRING</STRONG> (ARM, 544 bytes, Stack size 40 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN9CDataEdit7AddXfixEP12CBarcodeDataPwjP7HSTRING &rArr; _ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36af664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode26SystemCPCharacterToUnicodeEh
</UL>
<BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af934]"></a>_ZN9CDataEdit15DetermineSuffixEv</STRONG> (ARM, 120 bytes, Stack size 0 bytes, dataedit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af8f8]"></a>_ZN9CDataEdit20GetSizeAndEditStringEP13PREFIX_SUFFIXiRP7HSTRING</STRONG> (ARM, 304 bytes, Stack size 32 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9CDataEdit20GetSizeAndEditStringEP13PREFIX_SUFFIXiRP7HSTRING &rArr; _ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36af3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17FindCommandStringEi
</UL>
<BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af8bc]"></a>_ZN9CDataEdit16IncludeCharacterEv</STRONG> (ARM, 236 bytes, Stack size 16 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CDataEdit16IncludeCharacterEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
</UL>

<P><STRONG><a name="[36af880]"></a>_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData</STRONG> (ARM, 4120 bytes, Stack size 88 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = _ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36af448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8ReportIDEv
<LI><a href="#[36af4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPwRj
<LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36af5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12CopyTypeInfoERKS_
<LI><a href="#[36af664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode26SystemCPCharacterToUnicodeEh
<LI><a href="#[36af6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode23SystemCPStringToUnicodeEPKhjPwRj
<LI><a href="#[36af8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit16IncludeCharacterEv
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36af844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData
</UL>

<P><STRONG><a name="[36af844]"></a>_ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData</STRONG> (ARM, 188 bytes, Stack size 40 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = _ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData &rArr; _ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17FindCommandStringEiiiiRi
<LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[36af808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit10DataFormatERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af808]"></a>_ZN9CDataEdit10DataFormatERP12CBarcodeData</STRONG> (ARM, 400 bytes, Stack size 40 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2040 + Unknown Stack Size
<LI>Call Chain = _ZN9CDataEdit10DataFormatERP12CBarcodeData &rArr; _ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData &rArr; _ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af7cc]"></a>_ZN9CDataEdit12Base64EncodeEP12CBarcodeData</STRONG> (ARM, 232 bytes, Stack size 24 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN9CDataEdit12Base64EncodeEP12CBarcodeData &rArr; _Z13base64_encodePKci &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36af4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPwRj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36afed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13base64_encodePKci
</UL>
<BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af790]"></a>_ZN9CDataEdit27GetDataEditSettingsFromMenuEv</STRONG> (ARM, 268 bytes, Stack size 0 bytes, dataedit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
</UL>

<P><STRONG><a name="[36af754]"></a>_ZN9CDataEdit8DataEditERP12CBarcodeData</STRONG> (ARM, 540 bytes, Stack size 40 bytes, dataedit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2080 + Unknown Stack Size
<LI>Call Chain = _ZN9CDataEdit8DataEditERP12CBarcodeData &rArr; _ZN9CDataEdit10DataFormatERP12CBarcodeData &rArr; _ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData &rArr; _ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceERPwjj
<LI><a href="#[36af484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData22FinalizeAddingElementsEj
<LI><a href="#[36af4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPwRj
<LI><a href="#[36af538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetAddrOfElementERPwj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
<LI><a href="#[36af790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit27GetDataEditSettingsFromMenuEv
<LI><a href="#[36af7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit12Base64EncodeEP12CBarcodeData
<LI><a href="#[36af808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit10DataFormatERP12CBarcodeData
<LI><a href="#[36af8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit20GetSizeAndEditStringEP13PREFIX_SUFFIXiRP7HSTRING
<LI><a href="#[36af934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit15DetermineSuffixEv
<LI><a href="#[36af970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit7AddXfixEP12CBarcodeDataPwjP7HSTRING
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
</UL>

<P><STRONG><a name="[375aebc]"></a>_Z6BeepOnjj</STRONG> (ARM, 372 bytes, Stack size 32 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z6BeepOnjj &rArr; _Z18PWM_Interrupt_Initv &rArr; _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9PWM_Start8PWM_BASE
<LI><a href="#[375a340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Init8PWM_BASE12PWM_PIN_NAMEs
<LI><a href="#[375a37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32DoesPluginHaveControlofCSPI1_SS0v
<LI><a href="#[375a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15Force_Green_LEDb
<LI><a href="#[375a73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Force_Red_LEDb
<LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
<LI><a href="#[375a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Period8PWM_BASEi
<LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
</UL>

<P><STRONG><a name="[375ae80]"></a>_Z32ConfigurePWMtoGPIOForBeepConvertv</STRONG> (ARM, 380 bytes, Stack size 32 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z32ConfigurePWMtoGPIOForBeepConvertv &rArr; _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[375ae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepOffv
</UL>

<P><STRONG><a name="[375ae44]"></a>_Z7BeepOffv</STRONG> (ARM, 92 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z7BeepOffv &rArr; _Z32ConfigurePWMtoGPIOForBeepConvertv &rArr; _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Stop8PWM_BASE
<LI><a href="#[375a37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32DoesPluginHaveControlofCSPI1_SS0v
<LI><a href="#[375ae80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32ConfigurePWMtoGPIOForBeepConvertv
</UL>
<BR>[Called By]<UL><LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
</UL>

<P><STRONG><a name="[375ae08]"></a>_Z13ServiceBeeperv</STRONG> (ARM, 804 bytes, Stack size 24 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z13ServiceBeeperv &rArr; _Z6BeepOnjj &rArr; _Z18PWM_Interrupt_Initv &rArr; _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375a250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12IndicatorTfb7CondOffEv
<LI><a href="#[375a28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12IndicatorTfb6CondOnEv
<LI><a href="#[375a304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Stop8PWM_BASE
<LI><a href="#[375a37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32DoesPluginHaveControlofCSPI1_SS0v
<LI><a href="#[375a3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
<LI><a href="#[375a520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Ill_HW_Disable_Aimerb
<LI><a href="#[375a598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Ill_HW_Enable_Aimerb
<LI><a href="#[375a610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16BeeperUnLockLEDSv
<LI><a href="#[375a688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GoodReadLedOffv
<LI><a href="#[375a6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14BeeperLockLEDSv
<LI><a href="#[375a700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13GoodReadLedOnv
<LI><a href="#[375a7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ErrorLedOffv
<LI><a href="#[375a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ErrorLedOnv
<LI><a href="#[375ae80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32ConfigurePWMtoGPIOForBeepConvertv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> beep.o(.text)
</UL>
<P><STRONG><a name="[36b9894]"></a>_Z8BeepInitv</STRONG> (ARM, 252 bytes, Stack size 16 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z8BeepInitv &rArr; _Z18PWM_Interrupt_Initv &rArr; _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[226da70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19UnRegisterOneMsTaskPFvvE
<LI><a href="#[226daac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17RegisterOneMsTaskPFvvE
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Init8PWM_BASE12PWM_PIN_NAMEs
<LI><a href="#[375a37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32DoesPluginHaveControlofCSPI1_SS0v
<LI><a href="#[375a5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Init_IndicatorLEDsv
<LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[375adcc]"></a>_Z17QueueBeepSequencePKj</STRONG> (ARM, 156 bytes, Stack size 12 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SoundPowerupBeepv
<LI><a href="#[375a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22FlashImageDownloadBeepv
<LI><a href="#[375aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27BlinkCustomDefaultIndicatorv
<LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
<LI><a href="#[375aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25SoundBadPsocCommunicationv
<LI><a href="#[375aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepBipv
<LI><a href="#[375ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5Clickv
<LI><a href="#[375ab74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12NoDecodeBeepv
<LI><a href="#[375abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SoundOposBeepv
<LI><a href="#[375abec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DecodeBeepv
<LI><a href="#[375ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SoundDifferentMenuBeepv
<LI><a href="#[375ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SoundMenuBeepv
<LI><a href="#[375ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z4Beepbjj
<LI><a href="#[375ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundStandardBeepj
<LI><a href="#[375aef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TrigClickv
<LI><a href="#[375d310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22QueueEfficientSequencePKjS0_i
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[375ad90]"></a>_Z17SoundStandardBeepj</STRONG> (ARM, 44 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z17SoundStandardBeepj &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[52ffaac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ExecuteSoundv
</UL>

<P><STRONG><a name="[375ad54]"></a>_Z4Beepbjj</STRONG> (ARM, 60 bytes, Stack size 4 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z4Beepbjj &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecdd14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC4BeepEiii
</UL>

<P><STRONG><a name="[375ad18]"></a>_Z14IsBeepQueEmptyv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
<LI><a href="#[452caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320SimulateScannerResetEv
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
</UL>

<P><STRONG><a name="[375acdc]"></a>_Z17SoundGoodReadBeepv</STRONG> (ARM, 108 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z17SoundGoodReadBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
<LI><a href="#[375d310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22QueueEfficientSequencePKjS0_i
</UL>
<BR>[Called By]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
<LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
<LI><a href="#[4ecdc60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC15DoGoodIndicatorEv
</UL>

<P><STRONG><a name="[375aca0]"></a>_Z14SoundErrorBeepb</STRONG> (ARM, 72 bytes, Stack size 16 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z14SoundErrorBeepb &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
<LI><a href="#[375d310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22QueueEfficientSequencePKjS0_i
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC23ServiceMainScriptTimersEv
<LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[3753ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SD_CB_ResultNotifyi
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
<LI><a href="#[4ecdc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC14DoBadIndicatorEv
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[52ffaac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ExecuteSoundv
<LI><a href="#[54e1868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayVisualMenu3v
<LI><a href="#[54e18a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayVisualMenu2v
<LI><a href="#[54e18e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PlugAndPlayVisualMenuv
</UL>

<P><STRONG><a name="[375ac64]"></a>_Z13SoundMenuBeepv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z13SoundMenuBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
<LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[5302eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15DiagnosticResetv
</UL>

<P><STRONG><a name="[375ac28]"></a>_Z22SoundDifferentMenuBeepv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z22SoundDifferentMenuBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
<LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[375abec]"></a>_Z10DecodeBeepv</STRONG> (ARM, 64 bytes, Stack size 16 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z10DecodeBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
<LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[375abb0]"></a>_Z13SoundOposBeepv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z13SoundOposBeepv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
</UL>

<P><STRONG><a name="[375ab74]"></a>_Z12NoDecodeBeepv</STRONG> (ARM, 48 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z12NoDecodeBeepv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[375ab38]"></a>_Z5Clickv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z5Clickv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4ecd24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes10DoSequenceER12CBarcodeDataPi
</UL>

<P><STRONG><a name="[375aafc]"></a>_Z7BeepBipv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z7BeepBipv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[3753ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SD_CB_ResultNotifyi
</UL>

<P><STRONG><a name="[36b9f24]"></a>_Z16SoundPowerupBeepv</STRONG> (ARM, 100 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z16SoundPowerupBeepv &rArr; _ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[452caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320SimulateScannerResetEv
<LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[375aac0]"></a>_Z25SoundBadPsocCommunicationv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z25SoundBadPsocCommunicationv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[3a1d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadFormatPluginsEP7HSTRING
<LI><a href="#[3a1d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadDecodePluginsEP7HSTRING
</UL>

<P><STRONG><a name="[36b9fd8]"></a>_Z16IsBeepInProgressv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
<LI><a href="#[5302eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15DiagnosticResetv
</UL>

<P><STRONG><a name="[375aa84]"></a>_Z18ExecuteHostAckBeeph</STRONG> (ARM, 304 bytes, Stack size 16 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z18ExecuteHostAckBeeph &rArr; _Z17SoundGoodReadBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375a19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC36HostAcknowledgedLastDataTransmissionEb
<LI><a href="#[375acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundGoodReadBeepv
<LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
<LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
<LI><a href="#[375d310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22QueueEfficientSequencePKjS0_i
</UL>
<BR>[Called By]<UL><LI><a href="#[375a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ErrorMenuBeepv
<LI><a href="#[375a994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12GoodMenuBeepv
<LI><a href="#[375a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ExecuteNoReadBeepSequencev
<LI><a href="#[375aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27ExecuteGoodReadBeepSequencev
</UL>

<P><STRONG><a name="[375aa48]"></a>_Z27BlinkCustomDefaultIndicatorv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z27BlinkCustomDefaultIndicatorv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36IndicateCustomDefaultProgrammingModev
</UL>

<P><STRONG><a name="[375aa0c]"></a>_Z27ExecuteGoodReadBeepSequencev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z27ExecuteGoodReadBeepSequencev &rArr; _Z18ExecuteHostAckBeeph &rArr; _Z17SoundGoodReadBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[375a9d0]"></a>_Z25ExecuteNoReadBeepSequencev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z25ExecuteNoReadBeepSequencev &rArr; _Z18ExecuteHostAckBeeph &rArr; _Z17SoundGoodReadBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[375a994]"></a>_Z12GoodMenuBeepv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z12GoodMenuBeepv &rArr; _Z18ExecuteHostAckBeeph &rArr; _Z17SoundGoodReadBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[375a958]"></a>_Z13ErrorMenuBeepv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z13ErrorMenuBeepv &rArr; _Z18ExecuteHostAckBeeph &rArr; _Z17SoundGoodReadBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[375a91c]"></a>_Z22FlashImageDownloadBeepv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z22FlashImageDownloadBeepv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[55e1498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21MatrixHTransferStatus21PrepareDownloadStatusEv
</UL>

<P><STRONG><a name="[375a8e0]"></a>_Z24Is_PWM_Signal_State_Highv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375a3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
</UL>

<P><STRONG><a name="[375aef8]"></a>_Z9TrigClickv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, beep.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>

<P><STRONG><a name="[36b9d08]"></a>_Z19InitUsageStatisticsv</STRONG> (ARM, 80 bytes, Stack size 0 bytes, usage_statistics.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[3758bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResetUsageInfov
</UL>

<P><STRONG><a name="[3758c84]"></a>_Z21UpdateUsageStatisticsv</STRONG> (ARM, 480 bytes, Stack size 16 bytes, usage_statistics.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z21UpdateUsageStatisticsv
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[3758c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpUsageInfov
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
</UL>

<P><STRONG><a name="[3758c48]"></a>_Z20StoreUsageStatisticsv</STRONG> (ARM, 440 bytes, Stack size 648 bytes, usage_statistics.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1744 + Unknown Stack Size
<LI>Call Chain = _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj
<LI><a href="#[3758c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21UpdateUsageStatisticsv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ManageUsageStatisticsv
<LI><a href="#[36b9ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19LoadUsageStatisticsv
<LI><a href="#[3758bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResetUsageInfov
<LI><a href="#[3758c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpUsageInfov
<LI><a href="#[38832b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GoInToPowerDownModev
<LI><a href="#[5098220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreApplicationCodeToFlashPKhibP7HSTRING
</UL>

<P><STRONG><a name="[36b9ccc]"></a>_Z19LoadUsageStatisticsv</STRONG> (ARM, 96 bytes, Stack size 16 bytes, usage_statistics.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1760 + Unknown Stack Size
<LI>Call Chain = _Z19LoadUsageStatisticsv &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[3758c0c]"></a>_Z13DumpUsageInfov</STRONG> (ARM, 2476 bytes, Stack size 48 bytes, usage_statistics.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = _Z13DumpUsageInfov &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[3758c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21UpdateUsageStatisticsv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3758bd0]"></a>_Z14ResetUsageInfov</STRONG> (ARM, 144 bytes, Stack size 8 bytes, usage_statistics.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1752 + Unknown Stack Size
<LI>Call Chain = _Z14ResetUsageInfov &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b9d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19InitUsageStatisticsv
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[36b9c54]"></a>_Z21ManageUsageStatisticsv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usage_statistics.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1752 + Unknown Stack Size
<LI>Call Chain = _Z21ManageUsageStatisticsv &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[37576b8]"></a>_Z19ReadSoftwareVersionPci</STRONG> (ARM, 324 bytes, Stack size 80 bytes, ProjectRevision.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = _Z19ReadSoftwareVersionPci &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3757550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seek (via BLX)
<LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read (via BLX)
<LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3757640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CTlvContainerParser19CalcNumPaddingBytesEPKN4CTlv8Header_tE
</UL>
<BR>[Called By]<UL><LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
</UL>

<P><STRONG><a name="[374f774]"></a>_Z20ChangeDecoderSettingv</STRONG> (ARM, 412 bytes, Stack size 112 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096 + Unknown Stack Size
<LI>Call Chain = _Z20ChangeDecoderSettingv &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3885130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20FindCharacterForwardEhjPi
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[38851a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiPi
<LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3885928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[374f558]"></a>_Z22ClearLastReadTimestampv</STRONG> (ARM, 80 bytes, Stack size 16 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z22ClearLastReadTimestampv
</UL>
<BR>[Calls]<UL><LI><a href="#[3753dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FindReReadDelayc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
</UL>

<P><STRONG><a name="[374f51c]"></a>_Z22WasLastSymbolScanStandv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[374f4e0]"></a>_Z7ShotgunP13DecoderResult</STRONG> (ARM, 312 bytes, Stack size 24 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z7ShotgunP13DecoderResult
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[374f4a4]"></a>_Z19StoreLastDecodeInfoP13DecoderResult</STRONG> (ARM, 384 bytes, Stack size 120 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = _Z19StoreLastDecodeInfoP13DecoderResult &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[374f468]"></a>_Z16ImageQualityModev</STRONG> (ARM, 36 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[374f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6decodePh
<LI><a href="#[374f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessLinearScanPh
<LI><a href="#[374f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15GetBestNewImagePPh
</UL>

<P><STRONG><a name="[374f42c]"></a>_Z24PluginDecoderMayContinuev</STRONG> (ARM, 92 bytes, Stack size 8 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3792 + Unknown Stack Size
<LI>Call Chain = _Z24PluginDecoderMayContinuev &rArr; _ZN8CTrigger15IsUnitTriggeredEv &rArr; _ZN8CTrigger19UpdateTriggerStatusEv &rArr; _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[374f3f0]"></a>_Z26PluginDecoderProcessResultP12DecodeResult</STRONG> (ARM, 240 bytes, Stack size 8392 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 45944 + Unknown Stack Size
<LI>Call Chain = _Z26PluginDecoderProcessResultP12DecodeResult &rArr; _Z13ProcessResultiP13DecoderResult &rArr; _Z10showSudokuPhiiPc &rArr; _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[374f3b4]"></a>_Z20PluginDecoderMsTimerv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[374f378]"></a>_Z20FillSwiftDecoderMenuv</STRONG> (ARM, 752 bytes, Stack size 8 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = _Z20FillSwiftDecoderMenuv &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
</UL>

<P><STRONG><a name="[374f33c]"></a>_Z18SetImageParametersiiiii</STRONG> (ARM, 396 bytes, Stack size 120 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2104 + Unknown Stack Size
<LI>Call Chain = _Z18SetImageParametersiiiii &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[3884f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger25IsPresentationTypeTriggerEv
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[374f24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10FastDecodePhi
<LI><a href="#[374f2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8OPdecodePhiiiiii
<LI><a href="#[413df88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv
</UL>

<P><STRONG><a name="[36ba014]"></a>_Z15FillDecoderMenuv</STRONG> (ARM, 4364 bytes, Stack size 88 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2192 + Unknown Stack Size
<LI>Call Chain = _Z15FillDecoderMenuv &rArr; _Z18SetImageParametersiiiii &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
<LI><a href="#[374f378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20FillSwiftDecoderMenuv
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[3885694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImageEngineHasPsocv
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
</UL>

<P><STRONG><a name="[374f300]"></a>_Z30FillDecoderWindowCenteringMenuv</STRONG> (ARM, 312 bytes, Stack size 32 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2016 + Unknown Stack Size
<LI>Call Chain = _Z30FillDecoderWindowCenteringMenuv &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3884f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger25IsPresentationTypeTriggerEv
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[374f2c4]"></a>_Z8OPdecodePhiiiiii</STRONG> (ARM, 160 bytes, Stack size 24 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3528 + Unknown Stack Size
<LI>Call Chain = _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
<LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[374f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6decodePh
</UL>

<P><STRONG><a name="[374f288]"></a>_Z16EstablishDecoderii</STRONG> (ARM, 96 bytes, Stack size 8 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12168 + Unknown Stack Size
<LI>Call Chain = _Z16EstablishDecoderii &rArr; InitDecoder &rArr; SI_InitDecoder &rArr; SD_Create &rArr; SymLoc00000e88Lc40xec &rArr; SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3885874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InstallCallback
<LI><a href="#[38858b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDecoder
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
</UL>

<P><STRONG><a name="[36b9df8]"></a>_Z18DecoderPowerupInitv</STRONG> (ARM, 228 bytes, Stack size 24 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12192 + Unknown Stack Size
<LI>Call Chain = _Z18DecoderPowerupInitv &rArr; _Z16EstablishDecoderii &rArr; InitDecoder &rArr; SI_InitDecoder &rArr; SD_Create &rArr; SymLoc00000e88Lc40xec &rArr; SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3531d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseMutex
<LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
<LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EstablishDecoderii
<LI><a href="#[38853c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
</UL>

<P><STRONG><a name="[374f24c]"></a>_Z10FastDecodePhi</STRONG> (ARM, 188 bytes, Stack size 16 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3520 + Unknown Stack Size
<LI>Call Chain = _Z10FastDecodePhi &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[374f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessLinearScanPh
</UL>

<P><STRONG><a name="[374f210]"></a>_Z15GetBestNewImagePPh</STRONG> (ARM, 312 bytes, Stack size 48 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _Z15GetBestNewImagePPh &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageQualityModev
<LI><a href="#[38856d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ComputeImageScorePhiiii
<LI><a href="#[3885928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[413dd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger11GetNextScanEmPPh
</UL>

<P><STRONG><a name="[374f1d4]"></a>_Z17ProcessLinearScanPh</STRONG> (ARM, 1096 bytes, Stack size 56 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3576 + Unknown Stack Size
<LI>Call Chain = _Z17ProcessLinearScanPh &rArr; _Z10FastDecodePhi &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10FastDecodePhi
<LI><a href="#[374f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageQualityModev
<LI><a href="#[38856d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ComputeImageScorePhiiii
<LI><a href="#[3885928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[4061f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16FastLinearThreadPv
</UL>

<P><STRONG><a name="[374f198]"></a>_Z12SetVigorEtAliPiS_S_</STRONG> (ARM, 844 bytes, Stack size 40 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024 + Unknown Stack Size
<LI>Call Chain = _Z12SetVigorEtAliPiS_S_ &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3884fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19PrsModesPDFdetectedEv
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[374f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6decodePh
</UL>

<P><STRONG><a name="[36b99c0]"></a>_Z33DecodeIFaceOnChangedConfigurationv</STRONG> (ARM, 68 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
</UL>

<P><STRONG><a name="[374f15c]"></a>_Z6decodePh</STRONG> (ARM, 492 bytes, Stack size 64 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3592 + Unknown Stack Size
<LI>Call Chain = _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SetVigorEtAliPiS_S_
<LI><a href="#[374f2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8OPdecodePhiiiiii
<LI><a href="#[374f468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageQualityModev
</UL>
<BR>[Called By]<UL><LI><a href="#[374f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16DecodeForMenuingPh
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[374f120]"></a>_Z16DecodeForMenuingPh</STRONG> (ARM, 40 bytes, Stack size 8 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3600 + Unknown Stack Size
<LI>Call Chain = _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[374f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6decodePh
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
</UL>

<P><STRONG><a name="[374f0e4]"></a>_Z21ClearDecoderWorkspacev</STRONG> (ARM, 100 bytes, Stack size 16 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z21ClearDecoderWorkspacev &rArr; MT_ReleaseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[3885a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ResetDecoderWorkspacev
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[374f0a8]"></a>_Z14ResetIqScoringv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[413df88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv
</UL>

<P><STRONG><a name="[374f06c]"></a>_Z17CheckForScanStandPhPj</STRONG> (ARM, 20 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413e168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15GetLowPowPixValEPj
</UL>

<P><STRONG><a name="[374f030]"></a>_Z13GetImageWidthv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[413e168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15GetLowPowPixValEPj
</UL>

<P><STRONG><a name="[3885a54]"></a>_Z14GetImageHeightv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[413e168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15GetLowPowPixValEPj
</UL>

<P><STRONG><a name="[3885a18]"></a>_Z21ResetDecoderWorkspacev</STRONG> (ARM, 28 bytes, Stack size 8 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _Z21ResetDecoderWorkspacev &rArr; _Z21ClearDecoderWorkspacev &rArr; MT_ReleaseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[374f0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ClearDecoderWorkspacev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[36b9858]"></a>_Z8MarkTimeiPKc</STRONG> (ARM, 56 bytes, Stack size 16 bytes, ReportStartupTiming.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z8MarkTimeiPKc
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
<LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
</UL>

<P><STRONG><a name="[38841b8]"></a>_ZN18CReportStartTiming16SendTimeWithTextEPKcj</STRONG> (ARM, 204 bytes, Stack size 176 bytes, ReportStartupTiming.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _ZN18CReportStartTiming16SendTimeWithTextEPKcj &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[352d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21translate_ticks_to_msj
</UL>
<BR>[Called By]<UL><LI><a href="#[388417c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReportStartupTimingv
</UL>

<P><STRONG><a name="[388417c]"></a>_Z19ReportStartupTimingv</STRONG> (ARM, 456 bytes, Stack size 24 bytes, ReportStartupTiming.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _Z19ReportStartupTimingv &rArr; _ZN18CReportStartTiming16SendTimeWithTextEPKcj &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[38841b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CReportStartTiming16SendTimeWithTextEPKcj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[38809f0]"></a>_Z18ResetPowerTimeOutsv</STRONG> (ARM, 76 bytes, Stack size 8 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z18ResetPowerTimeOutsv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[36b8e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTriggerC1Ev
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
</UL>

<P><STRONG><a name="[36b9ab0]"></a>_Z27Restore_System_from_Suspendv</STRONG> (ARM, 244 bytes, Stack size 8 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = _Z27Restore_System_from_Suspendv &rArr; _ZN8CTrigger22OnChangedConfigurationEv &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[38807d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12StartImagingv
<LI><a href="#[3880810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Enable_Boostv
<LI><a href="#[388084c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StopImagingv
<LI><a href="#[38809f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ResetPowerTimeOutsv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>

<P><STRONG><a name="[3880978]"></a>_Z13EnterStopModev</STRONG> (ARM, 1972 bytes, Stack size 40 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _Z13EnterStopModev &rArr; _Z7BeepOffv &rArr; _Z32ConfigurePWMtoGPIOForBeepConvertv &rArr; _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[35316a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForIRQ
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375a250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12IndicatorTfb7CondOffEv
<LI><a href="#[375a688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GoodReadLedOffv
<LI><a href="#[375a7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ErrorLedOffv
<LI><a href="#[375ae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepOffv
<LI><a href="#[38806a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31DoesPluginHaveControlofKPP_COL2v
<LI><a href="#[38806e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26reset_res_count_and_timoutv
<LI><a href="#[388075c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17is_ignore_suspendv
<LI><a href="#[3883204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9Wake_Ctrlb
</UL>
<BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
</UL>

<P><STRONG><a name="[388093c]"></a>_Z26Prepare_System_for_Suspendv</STRONG> (ARM, 224 bytes, Stack size 16 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = _Z26Prepare_System_for_Suspendv &rArr; _ZN8CTrigger22OnChangedConfigurationEv &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[3880798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Disable_Boostv
<LI><a href="#[388084c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StopImagingv
</UL>
<BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
</UL>

<P><STRONG><a name="[35319ec]"></a>_Z15EnterPowerState7power_t</STRONG> (ARM, 312 bytes, Stack size 16 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[35316a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForIRQ
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[38805f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8ClearRTCv
<LI><a href="#[3880630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7ZeroRTCv
<LI><a href="#[3880720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21GetRTC_ALM_ISR_Statusv
<LI><a href="#[3880888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PrepareRTCm
<LI><a href="#[388093c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Prepare_System_for_Suspendv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[38809f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ResetPowerTimeOutsv
<LI><a href="#[38832b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GoInToPowerDownModev
</UL>
<BR>[Called By]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[3531c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMultiEvents
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
<LI><a href="#[413e12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger29WaitForHeatMitigationCoolDownEjj
<LI><a href="#[51d1edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GoInToStopModev
<LI><a href="#[52fe288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15Enter232Standbyv
</UL>

<P><STRONG><a name="[36b9ee8]"></a>_Z17ManageSystemPowerv</STRONG> (ARM, 544 bytes, Stack size 32 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = _Z17ManageSystemPowerv &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b8f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger16IsHWorSerialTrigEv
<LI><a href="#[375ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14IsBeepQueEmptyv
<LI><a href="#[38809f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ResetPowerTimeOutsv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[413e12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger29WaitForHeatMitigationCoolDownEjj
</UL>

<P><STRONG><a name="[3880900]"></a>_Z18SystemSuspendStateb</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PowerManagement.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
<LI><a href="#[493431c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD0Ev
<LI><a href="#[493d19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD2Ev
</UL>

<P><STRONG><a name="[36ba0c8]"></a>_Z14Init_PowerPinsv</STRONG> (ARM, 500 bytes, Stack size 40 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z14Init_PowerPinsv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[387eb78]"></a>_ZN14CTransInfoBaseC2Ejh</STRONG> (ARM, 108 bytes, Stack size 16 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[3878278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t
<LI><a href="#[387aca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfo7BitC1EhPK14replacements_t
<LI><a href="#[387bd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CTransInfoSystemCPC1EhPKwj
<LI><a href="#[387e5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateUTF16TranslatorEv
<LI><a href="#[387e614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateCp950TranslatorEv
<LI><a href="#[387e650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateCp936TranslatorEv
<LI><a href="#[387e68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateCp932TranslatorEv
<LI><a href="#[387e6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode20CreateUTF8TranslatorEv
<LI><a href="#[387e7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode16Create7BitTablesEv
</UL>

<P><STRONG><a name="[387eb3c]"></a>_ZN14CTransInfoBaseD1Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, transcode.o(.text), UNUSED)

<P><STRONG><a name="[387eb00]"></a>_ZN14CTransInfoBaseD2Ev</STRONG> (ARM, 40 bytes, Stack size 8 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3877d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20CTransInfo8BitExoticD0Ev
<LI><a href="#[3877e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CTransInfo8Bit1To1D0Ev
<LI><a href="#[3877ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfo8BitD0Ev
<LI><a href="#[387ab7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfo7BitD0Ev
<LI><a href="#[387bc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CTransInfoSystemCPD0Ev
<LI><a href="#[389ea84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CTransInfoCP950D0Ev
<LI><a href="#[389eafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CTransInfoCP950D1Ev
<LI><a href="#[389f27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CTransInfoCP936D0Ev
<LI><a href="#[389f2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CTransInfoCP936D1Ev
<LI><a href="#[389fa74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CTransInfoCP932D0Ev
<LI><a href="#[389faec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CTransInfoCP932D1Ev
<LI><a href="#[38a0adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoUTF8D0Ev
<LI><a href="#[38a1838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CTransInfoUTF16LED0Ev
<LI><a href="#[38a18ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CTransInfoUTF16BED0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcode.o(.constdata__ZTV14CTransInfoBase)
</UL>
<P><STRONG><a name="[387eac4]"></a>_ZN14CTransInfoBaseD0Ev</STRONG> (ARM, 44 bytes, Stack size 8 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CTransInfoBaseD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcode.o(.constdata__ZTV14CTransInfoBase)
</UL>
<P><STRONG><a name="[387ea88]"></a>_ZN14CTransInfoBase9ToUnicodeEPKhjPwRj</STRONG> (ARM, 124 bytes, Stack size 16 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14CTransInfoBase9ToUnicodeEPKhjPwRj
</UL>
<BR>[Address Reference Count : 6]<UL><LI> codepagesystemcp.o(.constdata__ZTV18CTransInfoSystemCP)
<LI> codepagetables7bit.o(.constdata__ZTV14CTransInfo7Bit)
<LI> transcode.o(.constdata__ZTV14CTransInfoBase)
<LI> codepagetables8bit.o(.constdata__ZTV20CTransInfo8BitExotic)
<LI> codepagetables8bit.o(.constdata__ZTV14CTransInfo8Bit)
<LI> codepagetables8bit.o(.constdata__ZTV18CTransInfo8Bit1To1)
</UL>
<P><STRONG><a name="[387ea4c]"></a>_ZN14CTransInfoBase9ToUnicodeEPKhPwRj</STRONG> (ARM, 140 bytes, Stack size 16 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14CTransInfoBase9ToUnicodeEPKhPwRj
</UL>
<BR>[Address Reference Count : 6]<UL><LI> codepagesystemcp.o(.constdata__ZTV18CTransInfoSystemCP)
<LI> codepagetables7bit.o(.constdata__ZTV14CTransInfo7Bit)
<LI> transcode.o(.constdata__ZTV14CTransInfoBase)
<LI> codepagetables8bit.o(.constdata__ZTV20CTransInfo8BitExotic)
<LI> codepagetables8bit.o(.constdata__ZTV14CTransInfo8Bit)
<LI> codepagetables8bit.o(.constdata__ZTV18CTransInfo8Bit1To1)
</UL>
<P><STRONG><a name="[387ea10]"></a>_ZN14CTransInfoBase16TranslateInPlaceEPhj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, transcode.o(.text))
<BR>[Address Reference Count : 11]<UL><LI> transcp932.o(.constdata__ZTV15CTransInfoCP932)
<LI> transcp936.o(.constdata__ZTV15CTransInfoCP936)
<LI> transcp950.o(.constdata__ZTV15CTransInfoCP950)
<LI> codepagesystemcp.o(.constdata__ZTV18CTransInfoSystemCP)
<LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16LE)
<LI> transutf8.o(.constdata__ZTV14CTransInfoUTF8)
<LI> transcode.o(.constdata__ZTV14CTransInfoBase)
<LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16BE)
<LI> codepagetables8bit.o(.constdata__ZTV20CTransInfo8BitExotic)
<LI> codepagetables8bit.o(.constdata__ZTV14CTransInfo8Bit)
<LI> codepagetables8bit.o(.constdata__ZTV18CTransInfo8Bit1To1)
</UL>
<P><STRONG><a name="[387e9d4]"></a>_ZN10CTransCode22OnChangedConfigurationEv</STRONG> (ARM, 100 bytes, Stack size 16 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN10CTransCode22OnChangedConfigurationEv &rArr; _ZN10CTransCode19CreateSystemCPTableEv &rArr; _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387e704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CreateSystemCPTableEv
<LI><a href="#[387e740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CreateAuto7BitTableEi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci22OnChangedConfigurationEv
</UL>

<P><STRONG><a name="[387e998]"></a>_ZN10CTransCodeC1Ev</STRONG> (ARM, 192 bytes, Stack size 24 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN10CTransCodeC1Ev &rArr; _ZN10CTransCode19CreateSystemCPTableEv &rArr; _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387e5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateUTF16TranslatorEv
<LI><a href="#[387e614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateCp950TranslatorEv
<LI><a href="#[387e650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateCp936TranslatorEv
<LI><a href="#[387e68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode21CreateCp932TranslatorEv
<LI><a href="#[387e6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode20CreateUTF8TranslatorEv
<LI><a href="#[387e704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CreateSystemCPTableEv
<LI><a href="#[387e740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CreateAuto7BitTableEi
<LI><a href="#[387e77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode16Create8BitTablesEv
<LI><a href="#[387e7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode16Create7BitTablesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[387cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx15CreateTransCodeEv
</UL>

<P><STRONG><a name="[387e95c]"></a>_ZN10CTransCodeC2Ev</STRONG> (ARM, 0 bytes, Stack size 24 bytes, transcode.o(.text), UNUSED)

<P><STRONG><a name="[387e920]"></a>_ZN10CTransCode15StringToUnicodeEhPKhjPwRj</STRONG> (ARM, 80 bytes, Stack size 16 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CTransCode15StringToUnicodeEhPKhjPwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
<LI><a href="#[389b0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet25TranslateFromCPToSystemCPEPKhPwjRj
<LI><a href="#[389d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw
</UL>

<P><STRONG><a name="[387e8e4]"></a>_ZN10CTransCode19UnicodeToSingleByteEhwRh</STRONG> (ARM, 100 bytes, Stack size 32 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CTransCode19UnicodeToSingleByteEhwRh
</UL>
<BR>[Called By]<UL><LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
</UL>

<P><STRONG><a name="[387e8a8]"></a>_ZN10CTransCode15UnicodeToStringEhPKwjPhRj</STRONG> (ARM, 80 bytes, Stack size 16 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CTransCode15UnicodeToStringEhPKwjPhRj
</UL>
<BR>[Called By]<UL><LI><a href="#[387c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t
</UL>

<P><STRONG><a name="[36af664]"></a>_ZN10CTransCode26SystemCPCharacterToUnicodeEh</STRONG> (ARM, 108 bytes, Stack size 24 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CTransCode26SystemCPCharacterToUnicodeEh
</UL>
<BR>[Called By]<UL><LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[36af970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit7AddXfixEP12CBarcodeDataPwjP7HSTRING
</UL>

<P><STRONG><a name="[36af6a0]"></a>_ZN10CTransCode23SystemCPStringToUnicodeEPKhjPwRj</STRONG> (ARM, 72 bytes, Stack size 16 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CTransCode23SystemCPStringToUnicodeEPKhjPwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
</UL>

<P><STRONG><a name="[387e86c]"></a>_ZN10CTransCode19CollectAllCodePagesEPii</STRONG> (ARM, 76 bytes, Stack size 4 bytes, transcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN10CTransCode19CollectAllCodePagesEPii
</UL>
<BR>[Called By]<UL><LI><a href="#[389b118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet19CollectAllCodePagesEPii
</UL>

<P><STRONG><a name="[387e830]"></a>_ZN10CTransCode14GetWinCodepageEi</STRONG> (ARM, 20 bytes, Stack size 0 bytes, transcode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
</UL>

<P><STRONG><a name="[387e7f4]"></a>_ZN10CTransCode14GetDOSCodepageEi</STRONG> (ARM, 24 bytes, Stack size 0 bytes, transcode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
</UL>

<P><STRONG><a name="[387cb5c]"></a>_ZN12CTransCodeEx15CreateTransCodeEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, transcodeex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN12CTransCodeEx15CreateTransCodeEv &rArr; _ZN10CTransCodeC1Ev &rArr; _ZN10CTransCode19CreateSystemCPTableEv &rArr; _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci9CreateEciEv
</UL>

<P><STRONG><a name="[387c8c8]"></a>_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah</STRONG> (ARM, 220 bytes, Stack size 48 bytes, transcodeex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah &rArr; _ZN12CBarcodeData16GetSaveNewBufferERPwRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[387c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData10MoveBufferERS_
<LI><a href="#[387e920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode15StringToUnicodeEhPKhjPwRj
<LI><a href="#[38854b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPhRj
</UL>
<BR>[Called By]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
<LI><a href="#[389b0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet17TranslateCodepageEP12CBarcodeData
</UL>

<P><STRONG><a name="[387c88c]"></a>_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t</STRONG> (ARM, 256 bytes, Stack size 48 bytes, transcodeex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t &rArr; _ZN12CBarcodeData16GetSaveNewBufferERPhRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPwRj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[387c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPhRj
<LI><a href="#[387c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData10MoveBufferERS_
<LI><a href="#[387e8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode15UnicodeToStringEhPKwjPhRj
</UL>
<BR>[Called By]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
</UL>

<P><STRONG><a name="[387c850]"></a>_ZN12CTransCodeEx27TranslateBigAndLittleEndianEP12CBarcodeData12IoDataType_t</STRONG> (ARM, 208 bytes, Stack size 24 bytes, transcodeex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CTransCodeEx27TranslateBigAndLittleEndianEP12CBarcodeData12IoDataType_t
</UL>
<BR>[Calls]<UL><LI><a href="#[36af4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPwRj
<LI><a href="#[38854b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPhRj
</UL>
<BR>[Called By]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
</UL>

<P><STRONG><a name="[387c814]"></a>_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai</STRONG> (ARM, 520 bytes, Stack size 24 bytes, transcodeex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + In Cycle
<LI>Call Chain = _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[387c79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj12IoDataType_t
<LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
<LI><a href="#[387c850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx27TranslateBigAndLittleEndianEP12CBarcodeData12IoDataType_t
<LI><a href="#[387c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t
<LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
</UL>
<BR>[Called By]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
<LI><a href="#[38852d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[4337db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEP12CBarcodeData
<LI><a href="#[4337dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase13AutoTranslateEP12CBarcodeData
<LI><a href="#[4b4939c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd9SendLabelEP12CBarcodeData
<LI><a href="#[4b4cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd19SendLabelToKeyboardEP12CBarcodeData
</UL>

<P><STRONG><a name="[387bd4c]"></a>_ZN18CTransInfoSystemCPC1EhPKwj</STRONG> (ARM, 276 bytes, Stack size 16 bytes, codepagesystemcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN18CTransInfoSystemCPC1EhPKwj &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CreateSystemCPTableEv
</UL>

<P><STRONG><a name="[387bd10]"></a>_ZN18CTransInfoSystemCPC2EhPKwj</STRONG> (ARM, 0 bytes, Stack size 16 bytes, codepagesystemcp.o(.text), UNUSED)

<P><STRONG><a name="[387bcd4]"></a>_ZN18CTransInfoSystemCP11FromUnicodeEPKwPhRj</STRONG> (ARM, 104 bytes, Stack size 8 bytes, codepagesystemcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN18CTransInfoSystemCP11FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagesystemcp.o(.constdata__ZTV18CTransInfoSystemCP)
</UL>
<P><STRONG><a name="[387bc98]"></a>_ZN18CTransInfoSystemCP11FromUnicodeEPKwjPhRj</STRONG> (ARM, 92 bytes, Stack size 8 bytes, codepagesystemcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN18CTransInfoSystemCP11FromUnicodeEPKwjPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagesystemcp.o(.constdata__ZTV18CTransInfoSystemCP)
</UL>
<P><STRONG><a name="[387aca8]"></a>_ZN14CTransInfo7BitC1EhPK14replacements_t</STRONG> (ARM, 112 bytes, Stack size 8 bytes, codepagetables7bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14CTransInfo7BitC1EhPK14replacements_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CreateAuto7BitTableEi
</UL>

<P><STRONG><a name="[387ac6c]"></a>_ZN14CTransInfo7BitC2EhPK14replacements_t</STRONG> (ARM, 0 bytes, Stack size 8 bytes, codepagetables7bit.o(.text), UNUSED)

<P><STRONG><a name="[387e7b8]"></a>_ZN10CTransCode16Create7BitTablesEv</STRONG> (ARM, 172 bytes, Stack size 32 bytes, codepagetables7bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN10CTransCode16Create7BitTablesEv &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>

<P><STRONG><a name="[387e740]"></a>_ZN10CTransCode19CreateAuto7BitTableEi</STRONG> (ARM, 80 bytes, Stack size 16 bytes, codepagetables7bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN10CTransCode19CreateAuto7BitTableEi &rArr; _ZN14CTransInfo7BitC1EhPK14replacements_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387aca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfo7BitC1EhPK14replacements_t
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
<LI><a href="#[387e9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode22OnChangedConfigurationEv
</UL>

<P><STRONG><a name="[387ac30]"></a>_ZN14CTransInfo7Bit11FromUnicodeEPKwPhRj</STRONG> (ARM, 192 bytes, Stack size 28 bytes, codepagetables7bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN14CTransInfo7Bit11FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables7bit.o(.constdata__ZTV14CTransInfo7Bit)
</UL>
<P><STRONG><a name="[387abf4]"></a>_ZN14CTransInfo7Bit11FromUnicodeEPKwjPhRj</STRONG> (ARM, 180 bytes, Stack size 28 bytes, codepagetables7bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN14CTransInfo7Bit11FromUnicodeEPKwjPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables7bit.o(.constdata__ZTV14CTransInfo7Bit)
</UL>
<P><STRONG><a name="[387abb8]"></a>_ZN14CTransInfo7Bit16TranslateInPlaceEPhj</STRONG> (ARM, 60 bytes, Stack size 4 bytes, codepagetables7bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN14CTransInfo7Bit16TranslateInPlaceEPhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables7bit.o(.constdata__ZTV14CTransInfo7Bit)
</UL>
<P><STRONG><a name="[3878278]"></a>_ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t</STRONG> (ARM, 220 bytes, Stack size 24 bytes, codepagetables8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CreateSystemCPTableEv
<LI><a href="#[387e77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode16Create8BitTablesEv
</UL>

<P><STRONG><a name="[387e77c]"></a>_ZN10CTransCode16Create8BitTablesEv</STRONG> (ARM, 88 bytes, Stack size 16 bytes, codepagetables8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN10CTransCode16Create8BitTablesEv &rArr; _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[3878278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>

<P><STRONG><a name="[387e704]"></a>_ZN10CTransCode19CreateSystemCPTableEv</STRONG> (ARM, 212 bytes, Stack size 24 bytes, codepagetables8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN10CTransCode19CreateSystemCPTableEv &rArr; _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[3878278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t
<LI><a href="#[387bd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CTransInfoSystemCPC1EhPKwj
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
<LI><a href="#[387e9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode22OnChangedConfigurationEv
</UL>

<P><STRONG><a name="[387805c]"></a>_ZN20CTransInfo8BitExotic11FromUnicodeEPKwPhRj</STRONG> (ARM, 144 bytes, Stack size 24 bytes, codepagetables8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN20CTransInfo8BitExotic11FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV20CTransInfo8BitExotic)
</UL>
<P><STRONG><a name="[3878020]"></a>_ZN20CTransInfo8BitExotic11FromUnicodeEPKwjPhRj</STRONG> (ARM, 128 bytes, Stack size 24 bytes, codepagetables8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN20CTransInfo8BitExotic11FromUnicodeEPKwjPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV20CTransInfo8BitExotic)
</UL>
<P><STRONG><a name="[3877fe4]"></a>_ZN14CTransInfo8Bit11FromUnicodeEPKwPhRj</STRONG> (ARM, 152 bytes, Stack size 24 bytes, codepagetables8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14CTransInfo8Bit11FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV14CTransInfo8Bit)
</UL>
<P><STRONG><a name="[3877fa8]"></a>_ZN14CTransInfo8Bit11FromUnicodeEPKwjPhRj</STRONG> (ARM, 140 bytes, Stack size 24 bytes, codepagetables8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14CTransInfo8Bit11FromUnicodeEPKwjPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV14CTransInfo8Bit)
</UL>
<P><STRONG><a name="[3877f6c]"></a>_ZN18CTransInfo8Bit1To111FromUnicodeEPKwPhRj</STRONG> (ARM, 76 bytes, Stack size 0 bytes, codepagetables8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV18CTransInfo8Bit1To1)
</UL>
<P><STRONG><a name="[3877f30]"></a>_ZN18CTransInfo8Bit1To111FromUnicodeEPKwjPhRj</STRONG> (ARM, 64 bytes, Stack size 0 bytes, codepagetables8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV18CTransInfo8Bit1To1)
</UL>
<P><STRONG><a name="[387e5d8]"></a>_ZN10CTransCode21CreateUTF16TranslatorEv</STRONG> (ARM, 88 bytes, Stack size 16 bytes, transutf16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CTransCode21CreateUTF16TranslatorEv &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>

<P><STRONG><a name="[387706c]"></a>_ZN17CTransInfoUTF16BE11FromUnicodeEPKwPhRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transutf16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN17CTransInfoUTF16BE11FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16BE)
</UL>
<P><STRONG><a name="[3877030]"></a>_ZN17CTransInfoUTF16BE11FromUnicodeEPKwjPhRj</STRONG> (ARM, 68 bytes, Stack size 0 bytes, transutf16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16BE)
</UL>
<P><STRONG><a name="[38a1a54]"></a>_ZN17CTransInfoUTF16BE9ToUnicodeEPKhjPwRj</STRONG> (ARM, 72 bytes, Stack size 4 bytes, transutf16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN17CTransInfoUTF16BE9ToUnicodeEPKhjPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16BE)
</UL>
<P><STRONG><a name="[38a1a18]"></a>_ZN17CTransInfoUTF16BE9ToUnicodeEPKhPwRj</STRONG> (ARM, 72 bytes, Stack size 16 bytes, transutf16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN17CTransInfoUTF16BE9ToUnicodeEPKhPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16BE)
</UL>
<P><STRONG><a name="[38a19dc]"></a>_ZN17CTransInfoUTF16LE11FromUnicodeEPKwPhRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transutf16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN17CTransInfoUTF16LE11FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16LE)
</UL>
<P><STRONG><a name="[38a19a0]"></a>_ZN17CTransInfoUTF16LE11FromUnicodeEPKwjPhRj</STRONG> (ARM, 68 bytes, Stack size 0 bytes, transutf16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16LE)
</UL>
<P><STRONG><a name="[38a1964]"></a>_ZN17CTransInfoUTF16LE9ToUnicodeEPKhjPwRj</STRONG> (ARM, 72 bytes, Stack size 4 bytes, transutf16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN17CTransInfoUTF16LE9ToUnicodeEPKhjPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16LE)
</UL>
<P><STRONG><a name="[38a1928]"></a>_ZN17CTransInfoUTF16LE9ToUnicodeEPKhPwRj</STRONG> (ARM, 72 bytes, Stack size 16 bytes, transutf16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN17CTransInfoUTF16LE9ToUnicodeEPKhPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16LE)
</UL>
<P><STRONG><a name="[387e6c8]"></a>_ZN10CTransCode20CreateUTF8TranslatorEv</STRONG> (ARM, 52 bytes, Stack size 8 bytes, transutf8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CTransCode20CreateUTF8TranslatorEv &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>

<P><STRONG><a name="[38a0bcc]"></a>_ZN14CTransInfoUTF811FromUnicodeEPKwPhRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transutf8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14CTransInfoUTF811FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf8.o(.constdata__ZTV14CTransInfoUTF8)
</UL>
<P><STRONG><a name="[38a0b90]"></a>_ZN14CTransInfoUTF811FromUnicodeEPKwjPhRj</STRONG> (ARM, 108 bytes, Stack size 24 bytes, transutf8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN14CTransInfoUTF811FromUnicodeEPKwjPhRj &rArr; _Z18ConvertUTF16toUTF8PPKtS0_PPhS2_15ConversionFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[38a0a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ConvertUTF16toUTF8PPKtS0_PPhS2_15ConversionFlags
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf8.o(.constdata__ZTV14CTransInfoUTF8)
</UL>
<P><STRONG><a name="[38a0b54]"></a>_ZN14CTransInfoUTF89ToUnicodeEPKhjPwRj</STRONG> (ARM, 112 bytes, Stack size 24 bytes, transutf8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN14CTransInfoUTF89ToUnicodeEPKhjPwRj &rArr; _Z18ConvertUTF8toUTF16PPKhS0_PPtS2_15ConversionFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[38a09ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ConvertUTF8toUTF16PPKhS0_PPtS2_15ConversionFlags
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf8.o(.constdata__ZTV14CTransInfoUTF8)
</UL>
<P><STRONG><a name="[38a0b18]"></a>_ZN14CTransInfoUTF89ToUnicodeEPKhPwRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transutf8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14CTransInfoUTF89ToUnicodeEPKhPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf8.o(.constdata__ZTV14CTransInfoUTF8)
</UL>
<P><STRONG><a name="[387e68c]"></a>_ZN10CTransCode21CreateCp932TranslatorEv</STRONG> (ARM, 132 bytes, Stack size 16 bytes, transcp932.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CTransCode21CreateCp932TranslatorEv &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>

<P><STRONG><a name="[389faec]"></a>_ZN15CTransInfoCP932D1Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, transcp932.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CTransInfoCP932D1Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp932.o(.constdata__ZTV15CTransInfoCP932)
</UL>
<P><STRONG><a name="[389fab0]"></a>_ZN15CTransInfoCP932D2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, transcp932.o(.text), UNUSED)

<P><STRONG><a name="[389fa74]"></a>_ZN15CTransInfoCP932D0Ev</STRONG> (ARM, 40 bytes, Stack size 8 bytes, transcp932.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CTransInfoCP932D0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp932.o(.constdata__ZTV15CTransInfoCP932)
</UL>
<P><STRONG><a name="[389fa38]"></a>_ZN15CTransInfoCP93211FromUnicodeEPKwPhRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transcp932.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP93211FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp932.o(.constdata__ZTV15CTransInfoCP932)
</UL>
<P><STRONG><a name="[389f9fc]"></a>_ZN15CTransInfoCP93211FromUnicodeEPKwjPhRj</STRONG> (ARM, 152 bytes, Stack size 32 bytes, transcp932.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN15CTransInfoCP93211FromUnicodeEPKwjPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp932.o(.constdata__ZTV15CTransInfoCP932)
</UL>
<P><STRONG><a name="[389f9c0]"></a>_ZN15CTransInfoCP9329ToUnicodeEPKhjPwRj</STRONG> (ARM, 136 bytes, Stack size 20 bytes, transcp932.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN15CTransInfoCP9329ToUnicodeEPKhjPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp932.o(.constdata__ZTV15CTransInfoCP932)
</UL>
<P><STRONG><a name="[389f984]"></a>_ZN15CTransInfoCP9329ToUnicodeEPKhPwRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transcp932.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP9329ToUnicodeEPKhPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp932.o(.constdata__ZTV15CTransInfoCP932)
</UL>
<P><STRONG><a name="[387e650]"></a>_ZN10CTransCode21CreateCp936TranslatorEv</STRONG> (ARM, 132 bytes, Stack size 16 bytes, transcp936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CTransCode21CreateCp936TranslatorEv &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>

<P><STRONG><a name="[389f2f4]"></a>_ZN15CTransInfoCP936D1Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, transcp936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CTransInfoCP936D1Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp936.o(.constdata__ZTV15CTransInfoCP936)
</UL>
<P><STRONG><a name="[389f2b8]"></a>_ZN15CTransInfoCP936D2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, transcp936.o(.text), UNUSED)

<P><STRONG><a name="[389f27c]"></a>_ZN15CTransInfoCP936D0Ev</STRONG> (ARM, 40 bytes, Stack size 8 bytes, transcp936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CTransInfoCP936D0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp936.o(.constdata__ZTV15CTransInfoCP936)
</UL>
<P><STRONG><a name="[389f240]"></a>_ZN15CTransInfoCP93611FromUnicodeEPKwPhRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transcp936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP93611FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp936.o(.constdata__ZTV15CTransInfoCP936)
</UL>
<P><STRONG><a name="[389f204]"></a>_ZN15CTransInfoCP93611FromUnicodeEPKwjPhRj</STRONG> (ARM, 152 bytes, Stack size 32 bytes, transcp936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN15CTransInfoCP93611FromUnicodeEPKwjPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp936.o(.constdata__ZTV15CTransInfoCP936)
</UL>
<P><STRONG><a name="[389f1c8]"></a>_ZN15CTransInfoCP9369ToUnicodeEPKhjPwRj</STRONG> (ARM, 136 bytes, Stack size 24 bytes, transcp936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP9369ToUnicodeEPKhjPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp936.o(.constdata__ZTV15CTransInfoCP936)
</UL>
<P><STRONG><a name="[389f18c]"></a>_ZN15CTransInfoCP9369ToUnicodeEPKhPwRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transcp936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP9369ToUnicodeEPKhPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp936.o(.constdata__ZTV15CTransInfoCP936)
</UL>
<P><STRONG><a name="[387e614]"></a>_ZN10CTransCode21CreateCp950TranslatorEv</STRONG> (ARM, 132 bytes, Stack size 16 bytes, transcp950.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CTransCode21CreateCp950TranslatorEv &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Called By]<UL><LI><a href="#[387e998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCodeC1Ev
</UL>

<P><STRONG><a name="[389eafc]"></a>_ZN15CTransInfoCP950D1Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, transcp950.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CTransInfoCP950D1Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp950.o(.constdata__ZTV15CTransInfoCP950)
</UL>
<P><STRONG><a name="[389eac0]"></a>_ZN15CTransInfoCP950D2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, transcp950.o(.text), UNUSED)

<P><STRONG><a name="[389ea84]"></a>_ZN15CTransInfoCP950D0Ev</STRONG> (ARM, 40 bytes, Stack size 8 bytes, transcp950.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CTransInfoCP950D0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp950.o(.constdata__ZTV15CTransInfoCP950)
</UL>
<P><STRONG><a name="[389ea48]"></a>_ZN15CTransInfoCP95011FromUnicodeEPKwPhRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transcp950.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP95011FromUnicodeEPKwPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp950.o(.constdata__ZTV15CTransInfoCP950)
</UL>
<P><STRONG><a name="[389ea0c]"></a>_ZN15CTransInfoCP95011FromUnicodeEPKwjPhRj</STRONG> (ARM, 152 bytes, Stack size 32 bytes, transcp950.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN15CTransInfoCP95011FromUnicodeEPKwjPhRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp950.o(.constdata__ZTV15CTransInfoCP950)
</UL>
<P><STRONG><a name="[389e9d0]"></a>_ZN15CTransInfoCP9509ToUnicodeEPKhjPwRj</STRONG> (ARM, 136 bytes, Stack size 24 bytes, transcp950.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP9509ToUnicodeEPKhjPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp950.o(.constdata__ZTV15CTransInfoCP950)
</UL>
<P><STRONG><a name="[389e994]"></a>_ZN15CTransInfoCP9509ToUnicodeEPKhPwRj</STRONG> (ARM, 64 bytes, Stack size 24 bytes, transcp950.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CTransInfoCP9509ToUnicodeEPKhPwRj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transcp950.o(.constdata__ZTV15CTransInfoCP950)
</UL>
<P><STRONG><a name="[389e55c]"></a>_ZN8CEciBaseC1Ev</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eci_base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[389d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSetC1Ev
</UL>

<P><STRONG><a name="[389e520]"></a>_ZN8CEciBaseC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, eci_base.o(.text), UNUSED)

<P><STRONG><a name="[389e4e4]"></a>_ZN8CEciBase13ParseEndOfECIEPKhjh</STRONG> (ARM, 44 bytes, Stack size 0 bytes, eci_base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[389d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw
<LI><a href="#[389d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro11PreParseECIEP12CBarcodeData
</UL>

<P><STRONG><a name="[389d38c]"></a>_ZN10CECI_MacroC1Ev</STRONG> (ARM, 48 bytes, Stack size 0 bytes, eci_macro.o(.text), UNUSED)

<P><STRONG><a name="[389d350]"></a>_ZN10CECI_MacroC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, eci_macro.o(.text), UNUSED)

<P><STRONG><a name="[389d29c]"></a>_ZN9CEciMacroC1Ev</STRONG> (ARM, 80 bytes, Stack size 8 bytes, eci_macro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN9CEciMacroC1Ev &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[389d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSetC1Ev
<LI><a href="#[5dd0c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36b909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci9CreateEciEv
</UL>

<P><STRONG><a name="[389d260]"></a>_ZN9CEciMacroC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, eci_macro.o(.text), UNUSED)

<P><STRONG><a name="[389d224]"></a>_ZN9CEciMacro11PreParseECIEP12CBarcodeData</STRONG> (ARM, 312 bytes, Stack size 32 bytes, eci_macro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN9CEciMacro11PreParseECIEP12CBarcodeData &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[389e4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CEciBase13ParseEndOfECIEPKhjh
<LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[5dd4698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[389d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro7ScanECIEP12CBarcodeData
</UL>

<P><STRONG><a name="[389d1e8]"></a>_ZN9CEciMacro7ScanECIEP12CBarcodeData</STRONG> (ARM, 124 bytes, Stack size 24 bytes, eci_macro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN9CEciMacro7ScanECIEP12CBarcodeData &rArr; _ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw &rArr; _ZN11CEciCharSet25TranslateFromCPToSystemCPEPKhPwjRj &rArr; _ZN10CTransCode15StringToUnicodeEhPKhjPwRj
</UL>
<BR>[Calls]<UL><LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[387c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData10MoveBufferERS_
<LI><a href="#[389d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw
<LI><a href="#[389d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro11PreParseECIEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[3899534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci5CheckEP12CBarcodeData
</UL>

<P><STRONG><a name="[389d170]"></a>_ZN11CEciCharSetC1Ev</STRONG> (ARM, 24 bytes, Stack size 8 bytes, eci_charset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11CEciCharSetC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[389e55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CEciBaseC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[389d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacroC1Ev
</UL>

<P><STRONG><a name="[389b1cc]"></a>_ZN11CEciCharSetC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, eci_charset.o(.text), UNUSED)

<P><STRONG><a name="[389b118]"></a>_ZN11CEciCharSet19CollectAllCodePagesEPii</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eci_charset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN11CEciCharSet19CollectAllCodePagesEPii &rArr; _ZN10CTransCode19CollectAllCodePagesEPii
</UL>
<BR>[Calls]<UL><LI><a href="#[387e86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19CollectAllCodePagesEPii
</UL>
<BR>[Called By]<UL><LI><a href="#[406e1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15UpdateCodePagesv
</UL>

<P><STRONG><a name="[389b0dc]"></a>_ZN11CEciCharSet17TranslateCodepageEP12CBarcodeData</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eci_charset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _ZN11CEciCharSet17TranslateCodepageEP12CBarcodeData &rArr; _ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah &rArr; _ZN12CBarcodeData16GetSaveNewBufferERPwRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
</UL>
<BR>[Called By]<UL><LI><a href="#[3899534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci5CheckEP12CBarcodeData
</UL>

<P><STRONG><a name="[389b0a0]"></a>_ZN11CEciCharSet25TranslateFromCPToSystemCPEPKhPwjRj</STRONG> (ARM, 104 bytes, Stack size 32 bytes, eci_charset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN11CEciCharSet25TranslateFromCPToSystemCPEPKhPwjRj &rArr; _ZN10CTransCode15StringToUnicodeEhPKhjPwRj
</UL>
<BR>[Calls]<UL><LI><a href="#[387e920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode15StringToUnicodeEhPKhjPwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[389d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw
</UL>

<P><STRONG><a name="[389b064]"></a>_ZN11CEciCharSet12ParseECICodeEPKhj</STRONG> (ARM, 216 bytes, Stack size 32 bytes, eci_charset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN11CEciCharSet12ParseECICodeEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[389d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw
</UL>

<P><STRONG><a name="[389d1ac]"></a>_ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw</STRONG> (ARM, 604 bytes, Stack size 64 bytes, eci_charset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw &rArr; _ZN11CEciCharSet25TranslateFromCPToSystemCPEPKhPwjRj &rArr; _ZN10CTransCode15StringToUnicodeEhPKhjPwRj
</UL>
<BR>[Calls]<UL><LI><a href="#[387e920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode15StringToUnicodeEhPKhjPwRj
<LI><a href="#[389b064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet12ParseECICodeEPKhj
<LI><a href="#[389b0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet25TranslateFromCPToSystemCPEPKhPwjRj
<LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[389e4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CEciBase13ParseEndOfECIEPKhjh
</UL>
<BR>[Called By]<UL><LI><a href="#[389d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro7ScanECIEP12CBarcodeData
</UL>

<P><STRONG><a name="[36b909c]"></a>_ZN4CEci9CreateEciEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, eci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN4CEci9CreateEciEv &rArr; _ZN12CTransCodeEx15CreateTransCodeEv &rArr; _ZN10CTransCodeC1Ev &rArr; _ZN10CTransCode19CreateSystemCPTableEv &rArr; _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[387cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx15CreateTransCodeEv
<LI><a href="#[389d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacroC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[38995e8]"></a>_ZN4CEci14FixAimModifierEP12CBarcodeData</STRONG> (ARM, 332 bytes, Stack size 0 bytes, eci.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3885478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8StoreAimEhh
</UL>
<BR>[Called By]<UL><LI><a href="#[3899534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci5CheckEP12CBarcodeData
</UL>

<P><STRONG><a name="[38995ac]"></a>_ZN4CEci19IsECICharsetContentEP12CBarcodeData</STRONG> (ARM, 68 bytes, Stack size 16 bytes, eci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN4CEci19IsECICharsetContentEP12CBarcodeData
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
</UL>
<BR>[Called By]<UL><LI><a href="#[3899570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci26GetSymbologyTypeAndOptionsEP12CBarcodeData
</UL>

<P><STRONG><a name="[3899570]"></a>_ZN4CEci26GetSymbologyTypeAndOptionsEP12CBarcodeData</STRONG> (ARM, 672 bytes, Stack size 24 bytes, eci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN4CEci26GetSymbologyTypeAndOptionsEP12CBarcodeData &rArr; _ZN4CEci19IsECICharsetContentEP12CBarcodeData
</UL>
<BR>[Calls]<UL><LI><a href="#[38995ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci19IsECICharsetContentEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[3899534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci5CheckEP12CBarcodeData
</UL>

<P><STRONG><a name="[3899534]"></a>_ZN4CEci5CheckEP12CBarcodeData</STRONG> (ARM, 152 bytes, Stack size 16 bytes, eci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = _ZN4CEci5CheckEP12CBarcodeData &rArr; _ZN11CEciCharSet17TranslateCodepageEP12CBarcodeData &rArr; _ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah &rArr; _ZN12CBarcodeData16GetSaveNewBufferERPwRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3899570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci26GetSymbologyTypeAndOptionsEP12CBarcodeData
<LI><a href="#[38995e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci14FixAimModifierEP12CBarcodeData
<LI><a href="#[389b0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet17TranslateCodepageEP12CBarcodeData
<LI><a href="#[389d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro7ScanECIEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[36b90d8]"></a>_ZN4CEci22OnChangedConfigurationEv</STRONG> (ARM, 152 bytes, Stack size 8 bytes, eci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN4CEci22OnChangedConfigurationEv &rArr; _ZN10CTransCode22OnChangedConfigurationEv &rArr; _ZN10CTransCode19CreateSystemCPTableEv &rArr; _ZN10CTransCode15Create8BitTableEPK22TranslateItemUnicode_t &rArr; _ZN14CTransInfoBaseC2Ejh
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[387e9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode22OnChangedConfigurationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
</UL>

<P><STRONG><a name="[38a0a28]"></a>_Z18ConvertUTF16toUTF8PPKtS0_PPhS2_15ConversionFlags</STRONG> (ARM, 336 bytes, Stack size 36 bytes, ConvertUTF.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _Z18ConvertUTF16toUTF8PPKtS0_PPhS2_15ConversionFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[38a0b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoUTF811FromUnicodeEPKwjPhRj
</UL>

<P><STRONG><a name="[38a09ec]"></a>_Z18ConvertUTF8toUTF16PPKhS0_PPtS2_15ConversionFlags</STRONG> (ARM, 376 bytes, Stack size 56 bytes, ConvertUTF.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z18ConvertUTF8toUTF16PPKhS0_PPtS2_15ConversionFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[3898a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11isLegalUTF8PKhi
</UL>
<BR>[Called By]<UL><LI><a href="#[38a0b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoUTF89ToUnicodeEPKhjPwRj
</UL>

<P><STRONG><a name="[3896564]"></a>_ZN9HONPluginC1EPKc</STRONG> (ARM, 72 bytes, Stack size 0 bytes, HONPlugin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[38964ec]"></a>_ZN9HONPluginC2EPKc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, HONPlugin.o(.text), UNUSED)

<P><STRONG><a name="[3896474]"></a>_ZN9HONPlugin11ClearPluginEv</STRONG> (ARM, 92 bytes, Stack size 16 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
<LI><a href="#[38961e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin17PluginSanityCheckEv
<LI><a href="#[389621c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12LoadSectionsEv
<LI><a href="#[3896438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPluginD1Ev
<LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[3896438]"></a>_ZN9HONPluginD1Ev</STRONG> (ARM, 52 bytes, Stack size 8 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN9HONPluginD1Ev &rArr; _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3896474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11ClearPluginEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration31HONPluginDestroyLoadingSequenceEv
</UL>

<P><STRONG><a name="[38963fc]"></a>_ZN9HONPluginD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HONPlugin.o(.text), UNUSED)

<P><STRONG><a name="[38963c0]"></a>_ZN9HONPlugin10FindSymbolEPKcPPS_</STRONG> (ARM, 260 bytes, Stack size 296 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _ZN9HONPlugin10FindSymbolEPKcPPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[38962d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin15SimplifySymbolsEv
<LI><a href="#[3896384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin19VerifyExportSymbolsEv
</UL>

<P><STRONG><a name="[3896384]"></a>_ZN9HONPlugin19VerifyExportSymbolsEv</STRONG> (ARM, 272 bytes, Stack size 40 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _ZN9HONPlugin19VerifyExportSymbolsEv &rArr; _ZN9HONPlugin10FindSymbolEPKcPPS_
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[38963c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10FindSymbolEPKcPPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
</UL>

<P><STRONG><a name="[3896348]"></a>_ZN9HONPlugin13ApplyRelocateEP10Elf32_ShdrPKcjjPS_</STRONG> (ARM, 728 bytes, Stack size 64 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _ZN9HONPlugin13ApplyRelocateEP10Elf32_ShdrPKcjjPS_ &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Called By]<UL><LI><a href="#[389630c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12DoRelocationEv
</UL>

<P><STRONG><a name="[389630c]"></a>_ZN9HONPlugin12DoRelocationEv</STRONG> (ARM, 320 bytes, Stack size 40 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _ZN9HONPlugin12DoRelocationEv &rArr; _ZN9HONPlugin13ApplyRelocateEP10Elf32_ShdrPKcjjPS_ &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3896348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin13ApplyRelocateEP10Elf32_ShdrPKcjjPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
</UL>

<P><STRONG><a name="[38962d0]"></a>_ZN9HONPlugin15SimplifySymbolsEv</STRONG> (ARM, 456 bytes, Stack size 40 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _ZN9HONPlugin15SimplifySymbolsEv &rArr; _ZN9HONPlugin10FindSymbolEPKcPPS_
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[38963c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10FindSymbolEPKcPPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
</UL>

<P><STRONG><a name="[3896294]"></a>_ZN9HONPlugin14LayoutSectionsEv</STRONG> (ARM, 956 bytes, Stack size 72 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _ZN9HONPlugin14LayoutSectionsEv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
</UL>

<P><STRONG><a name="[3896258]"></a>_ZN9HONPlugin11FindSectionEP9elf32_hdrP10Elf32_ShdrPKcS5_</STRONG> (ARM, 108 bytes, Stack size 24 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9HONPlugin11FindSectionEP9elf32_hdrP10Elf32_ShdrPKcS5_
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
<LI><a href="#[389621c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12LoadSectionsEv
</UL>

<P><STRONG><a name="[389621c]"></a>_ZN9HONPlugin12LoadSectionsEv</STRONG> (ARM, 764 bytes, Stack size 40 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN9HONPlugin12LoadSectionsEv &rArr; _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3896258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11FindSectionEP9elf32_hdrP10Elf32_ShdrPKcS5_
<LI><a href="#[3896474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11ClearPluginEv
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
</UL>

<P><STRONG><a name="[38961e0]"></a>_ZN9HONPlugin17PluginSanityCheckEv</STRONG> (ARM, 192 bytes, Stack size 16 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN9HONPlugin17PluginSanityCheckEv &rArr; _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3896474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11ClearPluginEv
</UL>
<BR>[Called By]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
</UL>

<P><STRONG><a name="[38961a4]"></a>_ZN9HONPlugin10LoadPluginEPKc</STRONG> (ARM, 1236 bytes, Stack size 1080 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3008 + Unknown Stack Size
<LI>Call Chain = _ZN9HONPlugin10LoadPluginEPKc &rArr; _ZN9HONPlugin12LoadSectionsEv &rArr; _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read (via BLX)
<LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3896078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_filelength (via BLX)
<LI><a href="#[38961e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin17PluginSanityCheckEv
<LI><a href="#[389621c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12LoadSectionsEv
<LI><a href="#[3896258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11FindSectionEP9elf32_hdrP10Elf32_ShdrPKcS5_
<LI><a href="#[3896294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin14LayoutSectionsEv
<LI><a href="#[38962d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin15SimplifySymbolsEv
<LI><a href="#[389630c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12DoRelocationEv
<LI><a href="#[3896384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin19VerifyExportSymbolsEv
<LI><a href="#[3896474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11ClearPluginEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3896168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEv
</UL>

<P><STRONG><a name="[3896168]"></a>_ZN9HONPlugin10LoadPluginEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3008 + Unknown Stack Size
<LI>Call Chain = _ZN9HONPlugin10LoadPluginEv &rArr; _ZN9HONPlugin10LoadPluginEPKc &rArr; _ZN9HONPlugin12LoadSectionsEv &rArr; _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[389612c]"></a>_ZN9HONPlugin16InitializePluginEv</STRONG> (ARM, 568 bytes, Stack size 64 bytes, HONPlugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _ZN9HONPlugin16InitializePluginEv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[38960f0]"></a>_ZN9HONPlugin12AddEndPluginEPPS_S1_</STRONG> (ARM, 68 bytes, Stack size 0 bytes, HONPlugin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[36b9f9c]"></a>_Z16PluginsAPIExtendv</STRONG> (ARM, 188 bytes, Stack size 8 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z16PluginsAPIExtendv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[3a1cea0]"></a>_ZN22HONPluginConfigurationC2Ev</STRONG> (ARM, 84 bytes, Stack size 8 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = _ZN22HONPluginConfigurationC2Ev &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
<LI><a href="#[3a1c93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration6CreateEv
</UL>

<P><STRONG><a name="[36b9330]"></a>_ZN22HONPluginConfiguration6CreateEv</STRONG> (ARM, 156 bytes, Stack size 16 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN22HONPluginConfiguration6CreateEv &rArr; _ZN22HONPluginConfigurationC2Ev &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfigurationC2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[3a1ce64]"></a>_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo</STRONG> (ARM, 1508 bytes, Stack size 104 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo &rArr; _ZN9TiXmlNode14InsertEndChildERKS_ &rArr; _ZN9TiXmlNode12LinkEndChildEPS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEPKc
<LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
<LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1c8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode14InsertEndChildERKS_
<LI><a href="#[3a1c900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12ReplaceChildEPS_RKS_
<LI><a href="#[3a1ca68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementD1Ev
<LI><a href="#[3a1caa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementC1EPKc
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[3a1ce28]"></a>_ZN22HONPluginConfiguration14ElementGetTextEP12TiXmlElement</STRONG> (ARM, 60 bytes, Stack size 8 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN22HONPluginConfiguration14ElementGetTextEP12TiXmlElement
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
</UL>

<P><STRONG><a name="[3a1cdec]"></a>_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc</STRONG> (ARM, 240 bytes, Stack size 152 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = _ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc &rArr; _ZNK13TiXmlDocument8SaveFileEPKc &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEPKc
<LI><a href="#[3a1c7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument8SaveFileEPKc
<LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
<LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1c8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode14InsertEndChildERKS_
<LI><a href="#[3a1c900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12ReplaceChildEPS_RKS_
<LI><a href="#[3a1ca68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementD1Ev
<LI><a href="#[3a1caa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementC1EPKc
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3a1ce28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14ElementGetTextEP12TiXmlElement
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[3a1cdb0]"></a>_ZN22HONPluginConfiguration18HONPluginConfigureEP9HONPluginP9TiXmlNode</STRONG> (ARM, 1048 bytes, Stack size 40 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN22HONPluginConfiguration18HONPluginConfigureEP9HONPluginP9TiXmlNode &rArr; _ZNK9TiXmlNode18NextSiblingElementEv
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode18NextSiblingElementEv
<LI><a href="#[3a1c720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[3a1cd74]"></a>_ZN22HONPluginConfiguration24VerifyPluginIDUniquenessEP12TiXmlElement</STRONG> (ARM, 540 bytes, Stack size 32 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN22HONPluginConfiguration24VerifyPluginIDUniquenessEP12TiXmlElement &rArr; _ZNK9TiXmlNode17FirstChildElementEPKc
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode18NextSiblingElementEv
<LI><a href="#[3a1c720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEv
<LI><a href="#[3a1c75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[3a1cd38]"></a>_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv</STRONG> (ARM, 2932 bytes, Stack size 128 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3136 + Unknown Stack Size
<LI>Call Chain = _ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv &rArr; _ZN9HONPlugin10LoadPluginEv &rArr; _ZN9HONPlugin10LoadPluginEPKc &rArr; _ZN9HONPlugin12LoadSectionsEv &rArr; _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[38960f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12AddEndPluginEPPS_S1_
<LI><a href="#[389612c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin16InitializePluginEv
<LI><a href="#[3896168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEv
<LI><a href="#[3896438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPluginD1Ev
<LI><a href="#[3896474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin11ClearPluginEv
<LI><a href="#[3896564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPluginC1EPKc
<LI><a href="#[3a1c6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode18NextSiblingElementEv
<LI><a href="#[3a1c720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEv
<LI><a href="#[3a1c75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEPKc
<LI><a href="#[3a1c7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument8SaveFileEPKc
<LI><a href="#[3a1c888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode16InsertAfterChildEPS_RKS_
<LI><a href="#[3a1ca68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementD1Ev
<LI><a href="#[3a1caa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementC1EPKc
<LI><a href="#[3a1cd74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration24VerifyPluginIDUniquenessEP12TiXmlElement
<LI><a href="#[3a1cdb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration18HONPluginConfigureEP9HONPluginP9TiXmlNode
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[3a1d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadFormatPluginsEP7HSTRING
<LI><a href="#[3a1d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadDecodePluginsEP7HSTRING
</UL>

<P><STRONG><a name="[36b936c]"></a>_ZN22HONPluginConfiguration14LoadAllPluginsEv</STRONG> (ARM, 652 bytes, Stack size 56 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3192 + Unknown Stack Size
<LI>Call Chain = _ZN22HONPluginConfiguration14LoadAllPluginsEv &rArr; _ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv &rArr; _ZN9HONPlugin10LoadPluginEv &rArr; _ZN9HONPlugin10LoadPluginEPKc &rArr; _ZN9HONPlugin12LoadSectionsEv &rArr; _ZN9HONPlugin11ClearPluginEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[375aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25SoundBadPsocCommunicationv
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3a1c9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocumentC1Ev
<LI><a href="#[3a1ca2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding
<LI><a href="#[3a1cb1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio16CreatePluginGpioEv
<LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[3a1ccfc]"></a>_ZN22HONPluginConfiguration23HONPluginDumpConfigFileEv</STRONG> (ARM, 828 bytes, Stack size 792 bytes, HONPluginConfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _ZN22HONPluginConfiguration23HONPluginDumpConfigFileEv &rArr; _Z21SendStringToInterfacePKcib
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode18NextSiblingElementEv
<LI><a href="#[3a1c720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode17FirstChildElementEv
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReportConfigFilev
</UL>

<P><STRONG><a name="[3a1d134]"></a>_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING</STRONG> (ARM, 112 bytes, Stack size 16 bytes, HONPluginConfiguration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3a1c9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocumentC1Ev
<LI><a href="#[3a1ca2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadFormatPluginsEP7HSTRING
<LI><a href="#[3a1d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadDecodePluginsEP7HSTRING
</UL>

<P><STRONG><a name="[3a1d314]"></a>_ZN22HONPluginConfiguration17LoadFormatPluginsEP7HSTRING</STRONG> (ARM, 108 bytes, Stack size 16 bytes, HONPluginConfiguration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[375aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25SoundBadPsocCommunicationv
<LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatConfigChangedv
<LI><a href="#[3f1d4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatEnableChangedv
</UL>

<P><STRONG><a name="[3a1d350]"></a>_ZN22HONPluginConfiguration17LoadDecodePluginsEP7HSTRING</STRONG> (ARM, 108 bytes, Stack size 16 bytes, HONPluginConfiguration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[375aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25SoundBadPsocCommunicationv
<LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeConfigChangedv
<LI><a href="#[3f1d4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeEnableChangedv
</UL>

<P><STRONG><a name="[3a1cfcc]"></a>_ZN22HONPluginConfiguration31HONPluginDestroyLoadingSequenceEv</STRONG> (ARM, 76 bytes, Stack size 16 bytes, HONPluginConfiguration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3896438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPluginD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration19RemoveFormatPluginsEv
<LI><a href="#[3a1d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration19RemoveDecodePluginsEv
</UL>

<P><STRONG><a name="[3a1d224]"></a>_ZN22HONPluginConfiguration19RemoveFormatPluginsEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, HONPluginConfiguration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a1cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration31HONPluginDestroyLoadingSequenceEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatConfigChangedv
<LI><a href="#[3f1d4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatEnableChangedv
</UL>

<P><STRONG><a name="[3a1d260]"></a>_ZN22HONPluginConfiguration19RemoveDecodePluginsEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, HONPluginConfiguration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a1cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration31HONPluginDestroyLoadingSequenceEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeConfigChangedv
<LI><a href="#[3f1d4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeEnableChangedv
</UL>

<P><STRONG><a name="[3a1b2f8]"></a>_ZN11TiXmlString7reserveEj</STRONG> (ARM, 148 bytes, Stack size 32 bytes, tinystr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN11TiXmlString7reserveEj
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding
</UL>

<P><STRONG><a name="[3a1b208]"></a>_ZN11TiXmlString6appendEPKcj</STRONG> (ARM, 104 bytes, Stack size 24 bytes, tinystr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN11TiXmlString6appendEPKcj &rArr; _ZN11TiXmlString7reserveEj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString7reserveEj
</UL>
<BR>[Called By]<UL><LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f213cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding
<LI><a href="#[3f24cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding
<LI><a href="#[3f25a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK16TiXmlDeclaration5PrintEP7FS_FILEiP11TiXmlString
<LI><a href="#[3f25f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK14TiXmlAttribute5PrintEP7FS_FILEiP11TiXmlString
<LI><a href="#[3f268a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase12EncodeStringERK11TiXmlStringPS0_
</UL>

<P><STRONG><a name="[3a1cae0]"></a>_ZN11TiXmlString6assignEPKcj</STRONG> (ARM, 188 bytes, Stack size 32 bytes, tinystr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1c9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocumentC1Ev
<LI><a href="#[3a1ca2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding
<LI><a href="#[3a1caa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementC1EPKc
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
<LI><a href="#[3f212a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f213cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding
<LI><a href="#[3f214bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadNameEPKcP11TiXmlString13TiXmlEncoding
<LI><a href="#[3f24cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f257c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument5CloneEv
<LI><a href="#[3f258b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument6CopyToEPS_
<LI><a href="#[3f259a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlUnknown5CloneEv
<LI><a href="#[3f25a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK16TiXmlDeclaration6CopyToEPS_
<LI><a href="#[3f25ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlText5CloneEv
<LI><a href="#[3f25bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlComment5CloneEv
<LI><a href="#[3f25cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement5CloneEv
<LI><a href="#[3f25da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement6CopyToEPS_
<LI><a href="#[3f25ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement12SetAttributeEPKcS1_
</UL>

<P><STRONG><a name="[3f268a4]"></a>_ZN9TiXmlBase12EncodeStringERK11TiXmlStringPS0_</STRONG> (ARM, 452 bytes, Stack size 56 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN9TiXmlBase12EncodeStringERK11TiXmlStringPS0_ &rArr; _ZN11TiXmlString6appendEPKcj &rArr; _ZN11TiXmlString7reserveEj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[3f25b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlText5PrintEP7FS_FILEi
<LI><a href="#[3f25f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK14TiXmlAttribute5PrintEP7FS_FILEiP11TiXmlString
</UL>

<P><STRONG><a name="[3f26070]"></a>_ZN9TiXmlNodeD1Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, tinyxml.o(.text), UNUSED)

<P><STRONG><a name="[3a1c810]"></a>_ZN9TiXmlNodeD2Ev</STRONG> (ARM, 84 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9TiXmlNodeD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1ca68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementD1Ev
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
<LI><a href="#[3f21228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocumentD0Ev
<LI><a href="#[3f251ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlTextD0Ev
<LI><a href="#[3f25440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclarationD0Ev
<LI><a href="#[3f25530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlUnknownD0Ev
<LI><a href="#[3f2574c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlCommentD0Ev
<LI><a href="#[3f25cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementD0Ev
<LI><a href="#[3f26034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlNode)
</UL>
<P><STRONG><a name="[3f26034]"></a>_ZN9TiXmlNodeD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9TiXmlNodeD0Ev &rArr; _ZN9TiXmlNodeD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlNode)
</UL>
<P><STRONG><a name="[3f25ff8]"></a>_ZN9TiXmlNode5ClearEv</STRONG> (ARM, 64 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9TiXmlNode5ClearEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding
<LI><a href="#[3f25d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ClearThisEv
</UL>

<P><STRONG><a name="[3f25fbc]"></a>_ZNK9TiXmlNode11GetDocumentEv</STRONG> (ARM, 72 bytes, Stack size 8 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f24cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f25f80]"></a>_ZN9TiXmlNode12LinkEndChildEPS_</STRONG> (ARM, 208 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN9TiXmlNode12LinkEndChildEPS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1c8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode14InsertEndChildERKS_
<LI><a href="#[3f212a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f258b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument6CopyToEPS_
<LI><a href="#[3f25da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement6CopyToEPS_
</UL>

<P><STRONG><a name="[3a1c8c4]"></a>_ZN9TiXmlNode14InsertEndChildERKS_</STRONG> (ARM, 112 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN9TiXmlNode14InsertEndChildERKS_ &rArr; _ZN9TiXmlNode12LinkEndChildEPS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12LinkEndChildEPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
</UL>

<P><STRONG><a name="[3a1c888]"></a>_ZN9TiXmlNode16InsertAfterChildEPS_RKS_</STRONG> (ARM, 176 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN9TiXmlNode16InsertAfterChildEPS_RKS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
</UL>

<P><STRONG><a name="[3a1c900]"></a>_ZN9TiXmlNode12ReplaceChildEPS_RKS_</STRONG> (ARM, 196 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9TiXmlNode12ReplaceChildEPS_RKS_ &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
</UL>

<P><STRONG><a name="[3a1c6e4]"></a>_ZNK9TiXmlNode18NextSiblingElementEv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZNK9TiXmlNode18NextSiblingElementEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1ccfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginDumpConfigFileEv
<LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1cd74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration24VerifyPluginIDUniquenessEP12TiXmlElement
<LI><a href="#[3a1cdb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration18HONPluginConfigureEP9HONPluginP9TiXmlNode
</UL>

<P><STRONG><a name="[3a1c720]"></a>_ZNK9TiXmlNode17FirstChildElementEv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZNK9TiXmlNode17FirstChildElementEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1ccfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginDumpConfigFileEv
<LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1cd74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration24VerifyPluginIDUniquenessEP12TiXmlElement
<LI><a href="#[3a1cdb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration18HONPluginConfigureEP9HONPluginP9TiXmlNode
</UL>

<P><STRONG><a name="[3a1c75c]"></a>_ZNK9TiXmlNode17FirstChildElementEPKc</STRONG> (ARM, 184 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZNK9TiXmlNode17FirstChildElementEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1cd74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration24VerifyPluginIDUniquenessEP12TiXmlElement
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
</UL>

<P><STRONG><a name="[3a1c84c]"></a>_ZN9TiXmlNodeC2ENS_8NodeTypeE</STRONG> (ARM, 64 bytes, Stack size 0 bytes, tinyxml.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a1c9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocumentC1Ev
<LI><a href="#[3a1caa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementC1EPKc
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f257c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument5CloneEv
<LI><a href="#[3f259a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlUnknown5CloneEv
<LI><a href="#[3f25a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK16TiXmlDeclaration5CloneEv
<LI><a href="#[3f25ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlText5CloneEv
<LI><a href="#[3f25bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlComment5CloneEv
<LI><a href="#[3f25cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement5CloneEv
</UL>

<P><STRONG><a name="[3f25f44]"></a>_ZNK14TiXmlAttribute5PrintEP7FS_FILEiP11TiXmlString</STRONG> (ARM, 564 bytes, Stack size 1064 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = _ZNK14TiXmlAttribute5PrintEP7FS_FILEiP11TiXmlString &rArr; fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
<LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3f268a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase12EncodeStringERK11TiXmlStringPS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[3f21084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK14TiXmlAttribute5PrintEP7FS_FILEi
</UL>

<P><STRONG><a name="[3f25f08]"></a>_ZN17TiXmlAttributeSetC1Ev</STRONG> (ARM, 56 bytes, Stack size 0 bytes, tinyxml.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a1caa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementC1EPKc
<LI><a href="#[3f25cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement5CloneEv
</UL>

<P><STRONG><a name="[3f25ecc]"></a>_ZN17TiXmlAttributeSetC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, tinyxml.o(.text), UNUSED)

<P><STRONG><a name="[3f25e90]"></a>_ZNK17TiXmlAttributeSet4FindEPKc</STRONG> (ARM, 72 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZNK17TiXmlAttributeSet4FindEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f25e54]"></a>_ZN17TiXmlAttributeSet3AddEP14TiXmlAttribute</STRONG> (ARM, 108 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN17TiXmlAttributeSet3AddEP14TiXmlAttribute
</UL>
<BR>[Called By]<UL><LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3a1caa4]"></a>_ZN12TiXmlElementC1EPKc</STRONG> (ARM, 80 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN12TiXmlElementC1EPKc &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f25f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17TiXmlAttributeSetC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f25e18]"></a>_ZN12TiXmlElementC2EPKc</STRONG> (ARM, 0 bytes, Stack size 16 bytes, tinyxml.o(.text), UNUSED)

<P><STRONG><a name="[3f25ddc]"></a>_ZN12TiXmlElement12SetAttributeEPKcS1_</STRONG> (ARM, 332 bytes, Stack size 32 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN12TiXmlElement12SetAttributeEPKcS1_ &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[3f25da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement6CopyToEPS_
</UL>

<P><STRONG><a name="[3f25da0]"></a>_ZNK12TiXmlElement6CopyToEPS_</STRONG> (ARM, 204 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZNK12TiXmlElement6CopyToEPS_ &rArr; _ZN9TiXmlNode12LinkEndChildEPS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f25ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement12SetAttributeEPKcS1_
<LI><a href="#[3f25f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12LinkEndChildEPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[3f25cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement5CloneEv
</UL>

<P><STRONG><a name="[3f25d64]"></a>_ZN12TiXmlElement9ClearThisEv</STRONG> (ARM, 160 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN12TiXmlElement9ClearThisEv &rArr; _ZN9TiXmlNode5ClearEv
</UL>
<BR>[Calls]<UL><LI><a href="#[3f25ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode5ClearEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1ca68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementD1Ev
<LI><a href="#[3f25cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementD0Ev
</UL>

<P><STRONG><a name="[3a1ca68]"></a>_ZN12TiXmlElementD1Ev</STRONG> (ARM, 72 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN12TiXmlElementD1Ev &rArr; _ZN12TiXmlElement9ClearThisEv &rArr; _ZN9TiXmlNode5ClearEv
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
<LI><a href="#[3f25d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ClearThisEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
<LI><a href="#[3a1ce64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration25HONPluginUpdateConfigFileEP12TiXmlElementP9HONPlugin13HONPluginInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
</UL>
<P><STRONG><a name="[3f25d28]"></a>_ZN12TiXmlElementD2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, tinyxml.o(.text), UNUSED)

<P><STRONG><a name="[3f25cec]"></a>_ZN12TiXmlElementD0Ev</STRONG> (ARM, 76 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN12TiXmlElementD0Ev &rArr; _ZN12TiXmlElement9ClearThisEv &rArr; _ZN9TiXmlNode5ClearEv
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
<LI><a href="#[3f25d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ClearThisEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
</UL>
<P><STRONG><a name="[3f25cb0]"></a>_ZNK12TiXmlElement5CloneEv</STRONG> (ARM, 108 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZNK12TiXmlElement5CloneEv &rArr; _ZNK12TiXmlElement6CopyToEPS_ &rArr; _ZN9TiXmlNode12LinkEndChildEPS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f25da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement6CopyToEPS_
<LI><a href="#[3f25f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17TiXmlAttributeSetC1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
</UL>
<P><STRONG><a name="[3f25c74]"></a>_ZNK12TiXmlElement5PrintEP7FS_FILEi</STRONG> (ARM, 788 bytes, Stack size 1048 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = _ZNK12TiXmlElement5PrintEP7FS_FILEi &rArr; fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
</UL>
<P><STRONG><a name="[3f25c38]"></a>_ZNK12TiXmlElement6AcceptEP12TiXmlVisitor</STRONG> (ARM, 124 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZNK12TiXmlElement6AcceptEP12TiXmlVisitor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
</UL>
<P><STRONG><a name="[3f25bfc]"></a>_ZNK12TiXmlComment5CloneEv</STRONG> (ARM, 88 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZNK12TiXmlComment5CloneEv &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
</UL>
<P><STRONG><a name="[3f25bc0]"></a>_ZNK12TiXmlComment5PrintEP7FS_FILEi</STRONG> (ARM, 164 bytes, Stack size 1048 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = _ZNK12TiXmlComment5PrintEP7FS_FILEi &rArr; fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
</UL>
<P><STRONG><a name="[3f25b84]"></a>_ZNK12TiXmlComment6AcceptEP12TiXmlVisitor</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tinyxml.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
</UL>
<P><STRONG><a name="[3f25b48]"></a>_ZNK9TiXmlText5PrintEP7FS_FILEi</STRONG> (ARM, 284 bytes, Stack size 1064 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = _ZNK9TiXmlText5PrintEP7FS_FILEi &rArr; fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
<LI><a href="#[3f24a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_putc (via BLX)
<LI><a href="#[3f268a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase12EncodeStringERK11TiXmlStringPS0_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlText)
</UL>
<P><STRONG><a name="[3f25b0c]"></a>_ZNK9TiXmlText6AcceptEP12TiXmlVisitor</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tinyxml.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlText)
</UL>
<P><STRONG><a name="[3f25ad0]"></a>_ZNK9TiXmlText5CloneEv</STRONG> (ARM, 136 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZNK9TiXmlText5CloneEv &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlText)
</UL>
<P><STRONG><a name="[3f25a94]"></a>_ZNK16TiXmlDeclaration6CopyToEPS_</STRONG> (ARM, 108 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZNK16TiXmlDeclaration6CopyToEPS_ &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[3f25a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK16TiXmlDeclaration5CloneEv
</UL>

<P><STRONG><a name="[3f25a58]"></a>_ZNK16TiXmlDeclaration5CloneEv</STRONG> (ARM, 72 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZNK16TiXmlDeclaration5CloneEv &rArr; _ZNK16TiXmlDeclaration6CopyToEPS_ &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3f25a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK16TiXmlDeclaration6CopyToEPS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
</UL>
<P><STRONG><a name="[3f25a1c]"></a>_ZNK16TiXmlDeclaration5PrintEP7FS_FILEiP11TiXmlString</STRONG> (ARM, 772 bytes, Stack size 1048 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = _ZNK16TiXmlDeclaration5PrintEP7FS_FILEiP11TiXmlString &rArr; fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
<LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
</UL>
<P><STRONG><a name="[3f259e0]"></a>_ZNK16TiXmlDeclaration6AcceptEP12TiXmlVisitor</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tinyxml.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
</UL>
<P><STRONG><a name="[3f259a4]"></a>_ZNK12TiXmlUnknown5CloneEv</STRONG> (ARM, 88 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZNK12TiXmlUnknown5CloneEv &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[3f25968]"></a>_ZNK12TiXmlUnknown5PrintEP7FS_FILEi</STRONG> (ARM, 160 bytes, Stack size 1048 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = _ZNK12TiXmlUnknown5PrintEP7FS_FILEi &rArr; fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[3f2592c]"></a>_ZNK12TiXmlUnknown6AcceptEP12TiXmlVisitor</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tinyxml.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[3a1c9f0]"></a>_ZN13TiXmlDocumentC1Ev</STRONG> (ARM, 112 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN13TiXmlDocumentC1Ev &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
</UL>

<P><STRONG><a name="[3f258f0]"></a>_ZN13TiXmlDocumentC2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, tinyxml.o(.text), UNUSED)

<P><STRONG><a name="[3f258b4]"></a>_ZNK13TiXmlDocument6CopyToEPS_</STRONG> (ARM, 176 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZNK13TiXmlDocument6CopyToEPS_ &rArr; _ZN9TiXmlNode12LinkEndChildEPS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f25f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12LinkEndChildEPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[3f257c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument5CloneEv
</UL>

<P><STRONG><a name="[3f25878]"></a>_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding</STRONG> (ARM, 648 bytes, Stack size 40 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding &rArr; fsm_seek &rArr; fg_seek &rArr; _fg_fseek &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3757550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seek (via BLX)
<LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read (via BLX)
<LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3a1b2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString7reserveEj
<LI><a href="#[3f24a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_tell (via BLX)
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode5ClearEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1ca2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding
</UL>

<P><STRONG><a name="[3a1ca2c]"></a>_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding</STRONG> (ARM, 264 bytes, Stack size 40 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = _ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
</UL>

<P><STRONG><a name="[3a1c7d4]"></a>_ZNK13TiXmlDocument8SaveFileEPKc</STRONG> (ARM, 132 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = _ZNK13TiXmlDocument8SaveFileEPKc &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3f24a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_putc (via BLX)
<LI><a href="#[3f24aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getlasterror (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3a1cdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration21HONPluginUpdateStatusEP12TiXmlElementPKc
</UL>

<P><STRONG><a name="[3f2583c]"></a>_ZNK13TiXmlDocument5PrintEP7FS_FILEi</STRONG> (ARM, 96 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZNK13TiXmlDocument5PrintEP7FS_FILEi &rArr; fsm_putc &rArr; fg_putc &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f24a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_putc (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
</UL>
<P><STRONG><a name="[3f25800]"></a>_ZNK13TiXmlDocument6AcceptEP12TiXmlVisitor</STRONG> (ARM, 108 bytes, Stack size 16 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZNK13TiXmlDocument6AcceptEP12TiXmlVisitor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
</UL>
<P><STRONG><a name="[3f257c4]"></a>_ZNK13TiXmlDocument5CloneEv</STRONG> (ARM, 136 bytes, Stack size 24 bytes, tinyxml.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZNK13TiXmlDocument5CloneEv &rArr; _ZNK13TiXmlDocument6CopyToEPS_ &rArr; _ZN9TiXmlNode12LinkEndChildEPS_ &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f258b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument6CopyToEPS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
</UL>
<P><STRONG><a name="[3f21570]"></a>_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding</STRONG> (ARM, 212 bytes, Stack size 16 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3f212a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f213cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding
<LI><a href="#[3f24d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f214bc]"></a>_ZN9TiXmlBase8ReadNameEPKcP11TiXmlString13TiXmlEncoding</STRONG> (ARM, 208 bytes, Stack size 24 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9TiXmlBase8ReadNameEPKcP11TiXmlString13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f21480]"></a>_ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi</STRONG> (ARM, 240 bytes, Stack size 44 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3f21444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f21444]"></a>_ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding</STRONG> (ARM, 600 bytes, Stack size 56 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding &rArr; _ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi
</UL>
<BR>[Calls]<UL><LI><a href="#[3f21480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3f213cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f21408]"></a>_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding</STRONG> (ARM, 224 bytes, Stack size 24 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3f212a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f213cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding
<LI><a href="#[3f24cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f213cc]"></a>_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding</STRONG> (ARM, 672 bytes, Stack size 64 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding &rArr; _ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding &rArr; _ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f21444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f21390]"></a>_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding</STRONG> (ARM, 312 bytes, Stack size 32 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f24d74]"></a>_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 136 bytes, Stack size 32 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1c888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode16InsertAfterChildEPS_RKS_
<LI><a href="#[3a1c8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode14InsertEndChildERKS_
<LI><a href="#[3a1ca2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding
<LI><a href="#[3f212a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f24cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f24e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding
<LI><a href="#[3f25f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12LinkEndChildEPS_
</UL>

<P><STRONG><a name="[3f21354]"></a>_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding</STRONG> (ARM, 564 bytes, Stack size 40 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1caa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElementC1EPKc
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f212a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f21318]"></a>_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 532 bytes, Stack size 40 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding &rArr; _ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding &rArr; _ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
<LI><a href="#[3f213cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding
<LI><a href="#[3f214bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadNameEPKcP11TiXmlString13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
</UL>
<BR>[Called By]<UL><LI><a href="#[3f24d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV14TiXmlAttribute)
</UL>
<P><STRONG><a name="[3f212dc]"></a>_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 484 bytes, Stack size 56 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeC2ENS_8NodeTypeE
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12LinkEndChildEPS_
<LI><a href="#[3f25fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f24dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
</UL>

<P><STRONG><a name="[3f24dec]"></a>_ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 1124 bytes, Stack size 64 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _ZN12TiXmlElement5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f212dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12TiXmlElement9ReadValueEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f214bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadNameEPKcP11TiXmlString13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17TiXmlAttributeSet3AddEP14TiXmlAttribute
<LI><a href="#[3f25e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK17TiXmlAttributeSet4FindEPKc
<LI><a href="#[3f25fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
</UL>
<P><STRONG><a name="[3f24e28]"></a>_ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 328 bytes, Stack size 40 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN12TiXmlComment5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
</UL>
<P><STRONG><a name="[3f24cc0]"></a>_ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 436 bytes, Stack size 48 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = _ZN9TiXmlText5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding &rArr; _ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding &rArr; _ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
<LI><a href="#[3f213cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlText)
</UL>
<P><STRONG><a name="[3f24d38]"></a>_ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 932 bytes, Stack size 96 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = _ZN16TiXmlDeclaration5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN9TiXmlBase8ReadTextEPKcP11TiXmlStringbS1_b13TiXmlEncoding &rArr; _ZN9TiXmlBase9GetEntityEPKcPcPi13TiXmlEncoding &rArr; _ZN9TiXmlBase18ConvertUTF32ToUTF8EmPcPi
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttribute5ParseEPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f21390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
</UL>
<P><STRONG><a name="[3f24db0]"></a>_ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 300 bytes, Stack size 32 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN12TiXmlUnknown5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6appendEPKcj
<LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16TiXmlParsingData5StampEPKc13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlNode11GetDocumentEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[3f212a0]"></a>_ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding</STRONG> (ARM, 592 bytes, Stack size 48 bytes, tinyxmlparser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN13TiXmlDocument5ParseEPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding &rArr; _ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding &rArr; _ZN11TiXmlString6assignEPKcj
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11TiXmlString6assignEPKcj
<LI><a href="#[3f21354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode8IdentifyEPKc13TiXmlEncoding
<LI><a href="#[3f21408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase11StringEqualEPKcS1_b13TiXmlEncoding
<LI><a href="#[3f21570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlBase14SkipWhiteSpaceEPKc13TiXmlEncoding
<LI><a href="#[3f24d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8SetErrorEiPKcP16TiXmlParsingData13TiXmlEncoding
<LI><a href="#[3f25f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNode12LinkEndChildEPS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
</UL>
<P><STRONG><a name="[3f1ea14]"></a>_Z13convert_errnoP20matrix_syscall_parami</STRONG> (ARM, 216 bytes, Stack size 0 bytes, PluginInterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[3f1e870]"></a>_Z12get_filenameii</STRONG> (ARM, 176 bytes, Stack size 32 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z12get_filenameii &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore (via BLX)
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask (via BLX)
<LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[3f1e834]"></a>_Z16filename_convertPKcPc</STRONG> (ARM, 120 bytes, Stack size 16 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z16filename_convertPKcPc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
<LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii
<LI><a href="#[3f1e7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_statPcP7FS_STAT
</UL>

<P><STRONG><a name="[3f1e7f8]"></a>_Z12wrapper_statPcP7FS_STAT</STRONG> (ARM, 152 bytes, Stack size 272 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 900<LI>Call Chain = _Z12wrapper_statPcP7FS_STAT &rArr; fsm_stat &rArr; fg_stat &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_stat (via BLX)
<LI><a href="#[3f1e438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getdrive (via BLX)
<LI><a href="#[3f1e4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_chdrive (via BLX)
<LI><a href="#[3f1e834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16filename_convertPKcPc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[3f1e7bc]"></a>_Z22filedescriptor_convertii</STRONG> (ARM, 172 bytes, Stack size 32 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z22filedescriptor_convertii &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore (via BLX)
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask (via BLX)
<LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
<LI><a href="#[3f1e708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13wrapper_writeiPvi
</UL>

<P><STRONG><a name="[3f1e780]"></a>_Z13flags_convertiPc</STRONG> (ARM, 164 bytes, Stack size 8 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z13flags_convertiPc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii
</UL>

<P><STRONG><a name="[3f1e744]"></a>_Z12wrapper_openPKcii</STRONG> (ARM, 276 bytes, Stack size 712 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = _Z12wrapper_openPKcii &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[38946b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfirst (via BLX)
<LI><a href="#[3f1e3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getfreespace (via BLX)
<LI><a href="#[3f1e438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getdrive (via BLX)
<LI><a href="#[3f1e474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findnext (via BLX)
<LI><a href="#[3f1e4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_chdrive (via BLX)
<LI><a href="#[3f1e780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13flags_convertiPc
<LI><a href="#[3f1e834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16filename_convertPKcPc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[3f1e708]"></a>_Z13wrapper_writeiPvi</STRONG> (ARM, 168 bytes, Stack size 16 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _Z13wrapper_writeiPvi &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3f1e7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22filedescriptor_convertii
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[3f1e6cc]"></a>_Z14matrix_syscallP20matrix_syscall_param</STRONG> (ARM, 1216 bytes, Stack size 344 bytes, PluginInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 46288 + Unknown Stack Size
<LI>Call Chain = _Z14matrix_syscallP20matrix_syscall_param &rArr; _Z26PluginDecoderProcessResultP12DecodeResult &rArr; _Z13ProcessResultiP13DecoderResult &rArr; _Z10showSudokuPhiiPc &rArr; _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2273fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2274028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[374f3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PluginDecoderMsTimerv
<LI><a href="#[374f3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PluginDecoderProcessResultP12DecodeResult
<LI><a href="#[374f42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PluginDecoderMayContinuev
<LI><a href="#[3757550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seek (via BLX)
<LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
<LI><a href="#[3f1e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_rename (via BLX)
<LI><a href="#[3f1e438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getdrive (via BLX)
<LI><a href="#[3f1e4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_delete (via BLX)
<LI><a href="#[3f1e4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_chdrive (via BLX)
<LI><a href="#[3f1e618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio9GpioWriteEii
<LI><a href="#[3f1e654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio8GpioReadEv
<LI><a href="#[3f1e690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio8GpioInitEii
<LI><a href="#[3f1e708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13wrapper_writeiPvi
<LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii
<LI><a href="#[3f1e7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22filedescriptor_convertii
<LI><a href="#[3f1e7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_statPcP7FS_STAT
<LI><a href="#[3f1e834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16filename_convertPKcPc
<LI><a href="#[3f1e870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12get_filenameii
<LI><a href="#[3f1ea14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13convert_errnoP20matrix_syscall_parami
<LI><a href="#[3f24a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_tell (via BLX)
<LI><a href="#[3f24aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getlasterror (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PluginInterface.o(.data)
</UL>
<P><STRONG><a name="[3f1d5ec]"></a>_Z16ReportConfigFilev</STRONG> (ARM, 396 bytes, Stack size 24 bytes, PluginMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = _Z16ReportConfigFilev &rArr; _ZN22HONPluginConfiguration23HONPluginDumpConfigFileEv &rArr; _Z21SendStringToInterfacePKcib
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[3a1ccfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginDumpConfigFileEv
<LI><a href="#[3f1d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PluginMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3f1d5b0]"></a>_Z16PluginDeleteFilev</STRONG> (ARM, 124 bytes, Stack size 1072 bytes, PluginMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = _Z16PluginDeleteFilev &rArr; _ZN7HSTRINGC1EPS_bb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b981c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9EraseFilePKc
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PluginMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3f1d574]"></a>_Z19PluginShowDirectoryv</STRONG> (ARM, 284 bytes, Stack size 640 bytes, PluginMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38946b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfirst (via BLX)
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[3f1e474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findnext (via BLX)
</UL>

<P><STRONG><a name="[3f1d538]"></a>_Z14PluginCopyFilev</STRONG> (ARM, 252 bytes, Stack size 336 bytes, PluginMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2240 + Unknown Stack Size
<LI>Call Chain = _Z14PluginCopyFilev &rArr; _Z8CopyFilePKcS0_ &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PluginMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3f1d4fc]"></a>_Z25PluginDecodeEnableChangedv</STRONG> (ARM, 132 bytes, Stack size 40 bytes, PluginMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3a1d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration19RemoveDecodePluginsEv
<LI><a href="#[3a1d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadDecodePluginsEP7HSTRING
</UL>

<P><STRONG><a name="[3f1d4c0]"></a>_Z25PluginFormatEnableChangedv</STRONG> (ARM, 132 bytes, Stack size 40 bytes, PluginMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3a1d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration19RemoveFormatPluginsEv
<LI><a href="#[3a1d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadFormatPluginsEP7HSTRING
</UL>

<P><STRONG><a name="[3f1d484]"></a>_Z25PluginDecodeConfigChangedv</STRONG> (ARM, 168 bytes, Stack size 72 bytes, PluginMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3a1d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration19RemoveDecodePluginsEv
<LI><a href="#[3a1d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadDecodePluginsEP7HSTRING
<LI><a href="#[3f1d1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKS_b
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>

<P><STRONG><a name="[3f1d448]"></a>_Z25PluginFormatConfigChangedv</STRONG> (ARM, 168 bytes, Stack size 72 bytes, PluginMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3a1d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration19RemoveFormatPluginsEv
<LI><a href="#[3a1d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration17LoadFormatPluginsEP7HSTRING
<LI><a href="#[3f1d1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKS_b
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>

<P><STRONG><a name="[3f1d40c]"></a>_ZN20READER_CONFIGURATION24CreatePluginMenuSettingsEi</STRONG> (ARM, 724 bytes, Stack size 32 bytes, PluginMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = _ZN20READER_CONFIGURATION24CreatePluginMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_ &rArr; _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[3f1d6a0]"></a>_Z14PluginReadFilev</STRONG> (ARM, 208 bytes, Stack size 1072 bytes, PluginMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2944 + Unknown Stack Size
<LI>Call Chain = _Z14PluginReadFilev &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PluginMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3f1d628]"></a>_Z16PluginRenameFilev</STRONG> (ARM, 276 bytes, Stack size 336 bytes, PluginMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 980 + Unknown Stack Size
<LI>Call Chain = _Z16PluginRenameFilev &rArr; _Z10RenameFilePKcS0_ &rArr; fsm_move &rArr; fg_move &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[3f1d3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10RenameFilePKcS0_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PluginMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3f1d664]"></a>_Z15PluginDeleteAllv</STRONG> (ARM, 136 bytes, Stack size 624 bytes, PluginMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = _Z15PluginDeleteAllv &rArr; fsm_delete &rArr; fg_delete &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[38946b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfirst (via BLX)
<LI><a href="#[3f1e474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findnext (via BLX)
<LI><a href="#[3f1e4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_delete (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PluginMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3f1b954]"></a>_Z20PluginCommandProcessPKcii18HONPluginClassType</STRONG> (ARM, 192 bytes, Stack size 24 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z20PluginCommandProcessPKcii18HONPluginClassType
</UL>
<BR>[Called By]<UL><LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
</UL>

<P><STRONG><a name="[3f1b8dc]"></a>_Z22IsNormalPluginMenuCodePKciRiR18HONPluginClassType</STRONG> (ARM, 128 bytes, Stack size 8 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z22IsNormalPluginMenuCodePKciRiR18HONPluginClassType &rArr; _Z7HexAtoIPci
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1c9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7HexAtoIPci
</UL>
<BR>[Called By]<UL><LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
</UL>

<P><STRONG><a name="[3f1b8a0]"></a>_Z21IsPluginMenuEnterCodePKciRiR18HONPluginClassType</STRONG> (ARM, 156 bytes, Stack size 8 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z21IsPluginMenuEnterCodePKciRiR18HONPluginClassType &rArr; _Z7HexAtoIPci
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1c9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7HexAtoIPci
</UL>
<BR>[Called By]<UL><LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
</UL>

<P><STRONG><a name="[3f1b864]"></a>_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING</STRONG> (ARM, 728 bytes, Stack size 72 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _Z34PluginSerialMenuCommandProcess_ExtP7HSTRING &rArr; _ZN7HSTRING12InsertNumberEiij &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
<LI><a href="#[3f1b738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEiij
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[3f1b8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21IsPluginMenuEnterCodePKciRiR18HONPluginClassType
<LI><a href="#[3f1b8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22IsNormalPluginMenuCodePKciRiR18HONPluginClassType
<LI><a href="#[3f1b954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PluginCommandProcessPKcii18HONPluginClassType
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[3f1b828]"></a>_Z22IsLegacyPluginMenuCodePKciR18HONPluginClassType</STRONG> (ARM, 96 bytes, Stack size 0 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
</UL>

<P><STRONG><a name="[3f1b7ec]"></a>_Z10LockPlugini18HONPluginClassType</STRONG> (ARM, 120 bytes, Stack size 8 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z10LockPlugini18HONPluginClassType
</UL>
<BR>[Called By]<UL><LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
</UL>

<P><STRONG><a name="[3885658]"></a>_Z18SearchLockedPluginv</STRONG> (ARM, 72 bytes, Stack size 0 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[388552c]"></a>_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi</STRONG> (ARM, 1148 bytes, Stack size 96 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _Z30MultiPluginMenuBarcodesProcessP7HSTRINGi &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
<LI><a href="#[3f1b7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10LockPlugini18HONPluginClassType
<LI><a href="#[3f1b828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22IsLegacyPluginMenuCodePKciR18HONPluginClassType
<LI><a href="#[3f1b8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21IsPluginMenuEnterCodePKciRiR18HONPluginClassType
<LI><a href="#[3f1b8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22IsNormalPluginMenuCodePKciRiR18HONPluginClassType
<LI><a href="#[3f1b954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PluginCommandProcessPKcii18HONPluginClassType
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[38855a4]"></a>_Z26AbstractPluginMenuCommandsP7HSTRING</STRONG> (ARM, 356 bytes, Stack size 40 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _Z26AbstractPluginMenuCommandsP7HSTRING &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[3885568]"></a>_Z26AbstractSystemMenuCommandsP7HSTRING</STRONG> (ARM, 328 bytes, Stack size 40 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _Z26AbstractSystemMenuCommandsP7HSTRING &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[3ea4a64]"></a>_Z17DecodeWithPluginsPh</STRONG> (ARM, 1320 bytes, Stack size 232 bytes, PluginProcessDecoding.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3832 + Unknown Stack Size
<LI>Call Chain = _Z17DecodeWithPluginsPh &rArr; _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16DecodeForMenuingPh
<LI><a href="#[374f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6decodePh
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[3f1b300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FusionImageDataPhPmS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[3ea03d8]"></a>_Z27DoesPluginHaveControlofNFRBv</STRONG> (ARM, 48 bytes, Stack size 8 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z27DoesPluginHaveControlofNFRBv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[5300c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ConnectFLOtoExternalv
<LI><a href="#[5301b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18GPIO3_Service_IRQ1Pv
</UL>

<P><STRONG><a name="[375a37c]"></a>_Z32DoesPluginHaveControlofCSPI1_SS0v</STRONG> (ARM, 48 bytes, Stack size 8 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
<LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[375ae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepOffv
<LI><a href="#[375ae80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32ConfigurePWMtoGPIOForBeepConvertv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
<LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
</UL>

<P><STRONG><a name="[388066c]"></a>_Z31DoesPluginHaveControlofKPP_ROW1v</STRONG> (ARM, 48 bytes, Stack size 8 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z31DoesPluginHaveControlofKPP_ROW1v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[38832b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GoInToPowerDownModev
</UL>

<P><STRONG><a name="[38806a8]"></a>_Z31DoesPluginHaveControlofKPP_COL2v</STRONG> (ARM, 48 bytes, Stack size 8 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z31DoesPluginHaveControlofKPP_COL2v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[4144270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger11IsHwTriggerEv (via BLX)
</UL>

<P><STRONG><a name="[3e9f85c]"></a>_ZN14COemPluginGpioC1Ev</STRONG> (ARM, 216 bytes, Stack size 0 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a1cb1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio16CreatePluginGpioEv
</UL>

<P><STRONG><a name="[3e9f820]"></a>_ZN14COemPluginGpioC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, PluginGpioInterface.o(.text), UNUSED)

<P><STRONG><a name="[3a1cb1c]"></a>_ZN11CPluginGpio16CreatePluginGpioEv</STRONG> (ARM, 120 bytes, Stack size 16 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CPluginGpio16CreatePluginGpioEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[3e9f85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14COemPluginGpioC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
</UL>

<P><STRONG><a name="[3e9f7e4]"></a>_ZN14COemPluginGpio18TakeControlofGPIO8Eb</STRONG> (ARM, 248 bytes, Stack size 20 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN14COemPluginGpio18TakeControlofGPIO8Eb
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio8GpioInitEii
</UL>

<P><STRONG><a name="[3f1e690]"></a>_ZN11CPluginGpio8GpioInitEii</STRONG> (ARM, 2828 bytes, Stack size 40 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN11CPluginGpio8GpioInitEii &rArr; _ZN14COemPluginGpio18TakeControlofGPIO8Eb
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[3e9f7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14COemPluginGpio18TakeControlofGPIO8Eb
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[3f1e654]"></a>_ZN11CPluginGpio8GpioReadEv</STRONG> (ARM, 336 bytes, Stack size 24 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CPluginGpio8GpioReadEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[3f1e618]"></a>_ZN11CPluginGpio9GpioWriteEii</STRONG> (ARM, 576 bytes, Stack size 40 bytes, PluginGpioInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN11CPluginGpio9GpioWriteEii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
</UL>

<P><STRONG><a name="[36b990c]"></a>_Z4MenuPjPh</STRONG> (ARM, 40 bytes, Stack size 8 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128 + Unknown Stack Size
<LI>Call Chain = _Z4MenuPjPh &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
</UL>

<P><STRONG><a name="[36b9948]"></a>_Z36IndicateCustomDefaultProgrammingModev</STRONG> (ARM, 132 bytes, Stack size 8 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z36IndicateCustomDefaultProgrammingModev &rArr; _Z27BlinkCustomDefaultIndicatorv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[375aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27BlinkCustomDefaultIndicatorv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[3e9cdf0]"></a>_Z23CheckSubTagQueryCommandPcb</STRONG> (ARM, 220 bytes, Stack size 56 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _Z23CheckSubTagQueryCommandPcb &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3885130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20FindCharacterForwardEhjPi
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
</UL>
<BR>[Called By]<UL><LI><a href="#[388570c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EnterScannedMenuPjPh
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[3e9cdb4]"></a>_Z22ForwardPrefixedCommandbPKhjPb</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[3e9cd78]"></a>_Z25ProcessScannedMenuCommandPjPh</STRONG> (ARM, 1292 bytes, Stack size 88 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = _Z25ProcessScannedMenuCommandPjPh &rArr; _Z28LoadWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18AutoCable_StrIndexPhS_
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[388525c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CurrentWorkTableForScannedMenuEv
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[3e9caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
</UL>
<BR>[Called By]<UL><LI><a href="#[388570c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EnterScannedMenuPjPh
</UL>

<P><STRONG><a name="[388570c]"></a>_Z16EnterScannedMenuPjPh</STRONG> (ARM, 620 bytes, Stack size 40 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320 + Unknown Stack Size
<LI>Call Chain = _Z16EnterScannedMenuPjPh &rArr; _Z25ProcessScannedMenuCommandPjPh &rArr; _Z28LoadWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9c9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stricmp
<LI><a href="#[3e9cb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE22ValidatePartialCommandEPKcPb
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[3e9cdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23CheckSubTagQueryCommandPcb
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[3e9cd3c]"></a>_Z26TerminateAddHexStringBlockPKc</STRONG> (ARM, 268 bytes, Stack size 32 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _Z26TerminateAddHexStringBlockPKc &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cc88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27TerminateCodePreferredBlockv
<LI><a href="#[3e9ccc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26TerminateNonPreferredBlockv
<LI><a href="#[3e9cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17TerminateSeqBlockv
</UL>

<P><STRONG><a name="[3e9cd00]"></a>_Z17TerminateSeqBlockv</STRONG> (ARM, 48 bytes, Stack size 16 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _Z17TerminateSeqBlockv &rArr; _Z26TerminateAddHexStringBlockPKc &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26TerminateAddHexStringBlockPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3e9ccc4]"></a>_Z26TerminateNonPreferredBlockv</STRONG> (ARM, 48 bytes, Stack size 16 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _Z26TerminateNonPreferredBlockv &rArr; _Z26TerminateAddHexStringBlockPKc &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26TerminateAddHexStringBlockPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3e9cc88]"></a>_Z27TerminateCodePreferredBlockv</STRONG> (ARM, 48 bytes, Stack size 16 bytes, Menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _Z27TerminateCodePreferredBlockv &rArr; _Z26TerminateAddHexStringBlockPKc &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26TerminateAddHexStringBlockPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3e9b554]"></a>_ZN15CMenuGlueDriver10GetSettingEtPwj</STRONG> (ARM, 1272 bytes, Stack size 96 bytes, MenuGlueDriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
</UL>
<BR>[Called By]<UL><LI><a href="#[4333a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan12InternalOpenEsPKw
</UL>

<P><STRONG><a name="[3e9b4a0]"></a>_ZN15CMenuGlueDriver14GetProductNameEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, MenuGlueDriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4940220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base19CustomizeUsbStringsEv
</UL>

<P><STRONG><a name="[3e9b464]"></a>_ZN15CMenuGlueDriver15GetSerNumStringEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, MenuGlueDriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4940220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base19CustomizeUsbStringsEv
</UL>

<P><STRONG><a name="[3e9b428]"></a>_ZN15CMenuGlueDriver9GetUsbPIDEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, MenuGlueDriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
</UL>

<P><STRONG><a name="[3e9b3ec]"></a>_ZN15CMenuGlueDriver9GetUsbVIDEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, MenuGlueDriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
</UL>

<P><STRONG><a name="[3e9b3b0]"></a>_ZN15CMenuGlueDriver9GetUsbGenEv</STRONG> (ARM, 132 bytes, Stack size 24 bytes, MenuGlueDriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CMenuGlueDriver9GetUsbGenEv
</UL>
<BR>[Called By]<UL><LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
</UL>

<P><STRONG><a name="[3e9b374]"></a>_ZN15CMenuGlueDriver9GetUsbLevEv</STRONG> (ARM, 128 bytes, Stack size 24 bytes, MenuGlueDriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CMenuGlueDriver9GetUsbLevEv
</UL>
<BR>[Called By]<UL><LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
</UL>

<P><STRONG><a name="[3e9cb98]"></a>_Z28SaveSettingChangeToTableZerov</STRONG> (ARM, 216 bytes, Stack size 40 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z28SaveSettingChangeToTableZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3e99e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20WorkingValuesUpdatedEv
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeTableSelSettingv
<LI><a href="#[52fe300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeKBWCableTablev
<LI><a href="#[52fe378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS485CableTablev
<LI><a href="#[52fe3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS232CableTablev
<LI><a href="#[52fe468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeUSBCableTablev
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
</UL>

<P><STRONG><a name="[3e9cc10]"></a>_Z27SaveSettingChangeToTableOnev</STRONG> (ARM, 200 bytes, Stack size 40 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z27SaveSettingChangeToTableOnev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3e99e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20WorkingValuesUpdatedEv
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeTableSelSettingv
<LI><a href="#[52fe300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeKBWCableTablev
<LI><a href="#[52fe378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS485CableTablev
<LI><a href="#[52fe3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS232CableTablev
<LI><a href="#[52fe468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeUSBCableTablev
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
</UL>

<P><STRONG><a name="[3e99f10]"></a>_Z32StoreProductConfigurationToFlashb</STRONG> (ARM, 116 bytes, Stack size 40 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z32StoreProductConfigurationToFlashb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
</UL>

<P><STRONG><a name="[3e99ed4]"></a>_Z32FlashProductConfigurationChangesb</STRONG> (ARM, 220 bytes, Stack size 40 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z32FlashProductConfigurationChangesb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE21WorkingValuesUpToDateEv
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3e99e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20WorkingValuesUpdatedEv
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
</UL>

<P><STRONG><a name="[36b9a38]"></a>_Z31FlashAndReSynchCustomerDefaultsv</STRONG> (ARM, 200 bytes, Stack size 40 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z31FlashAndReSynchCustomerDefaultsv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24CustomerDefaultsUpToDateEv
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3e99e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23CustomerDefaultsUpdatedEv
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
</UL>

<P><STRONG><a name="[36b9d44]"></a>_Z19FlashWorkingChangesv</STRONG> (ARM, 188 bytes, Stack size 40 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3e99e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20WorkingValuesUpdatedEv
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[5302e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DelayedResetv
</UL>

<P><STRONG><a name="[3e99e98]"></a>_Z35DeleteDefaultConfigurationFromFlashv</STRONG> (ARM, 24 bytes, Stack size 8 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z35DeleteDefaultConfigurationFromFlashv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b981c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9EraseFilePKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SystemMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[406e1e4]"></a>_Z15UpdateCodePagesv</STRONG> (ARM, 364 bytes, Stack size 616 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = _Z15UpdateCodePagesv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[389b118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet19CollectAllCodePagesEPii
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
</UL>

<P><STRONG><a name="[406e004]"></a>_Z23ConfigureSerialPolarityv</STRONG> (ARM, 128 bytes, Stack size 8 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z23ConfigureSerialPolarityv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
</UL>

<P><STRONG><a name="[36b9c90]"></a>_Z20ReconfigureInterfacev</STRONG> (ARM, 228 bytes, Stack size 144 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2552 + Unknown Stack Size
<LI>Call Chain = _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b990c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z4MenuPjPh
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[406dbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4OpenEsPKh
<LI><a href="#[406dc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4OpenEs
<LI><a href="#[406e004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ConfigureSerialPolarityv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
</UL>

<P><STRONG><a name="[406dfc8]"></a>_Z14ValidateTermIdi</STRONG> (ARM, 108 bytes, Stack size 0 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z14ValidateTermIdi &rArr; _ZN6CIoMan14QueryInterfaceEsm
</UL>
<BR>[Calls]<UL><LI><a href="#[406dc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan14QueryInterfaceEsm
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30CollectInterfaceUSBTerminalIdsPi
<LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
<LI><a href="#[406df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13UpdateTermIDsv
<LI><a href="#[406df8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30CollectAllInterfaceTerminalIdsiPi
<LI><a href="#[54e0b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBY_DFTv
<LI><a href="#[54e0bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayUSBGroupv
<LI><a href="#[54e0bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlay232Groupv
<LI><a href="#[54e0c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayC39CheckRequestv
<LI><a href="#[54e0c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayC39CheckNonev
<LI><a href="#[54e0cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearSuffixv
<LI><a href="#[54e0cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearPrefixv
<LI><a href="#[54e0d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddSuffixAsteriskv
<LI><a href="#[54e0d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayAddSuffixAsteriskCRv
<LI><a href="#[54e0da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddPrefixAsteriskv
<LI><a href="#[54e0ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatM81v
<LI><a href="#[54e0e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO81v
<LI><a href="#[54e0e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO72v
<LI><a href="#[54e0e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO71v
<LI><a href="#[54e0ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN81v
<LI><a href="#[54e0f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN72v
<LI><a href="#[54e0f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN71v
<LI><a href="#[54e0f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayBaudRate115200v
<LI><a href="#[54e0fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate38400v
<LI><a href="#[54e0ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate19200v
<LI><a href="#[54e1034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate9600v
<LI><a href="#[54e1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate2400v
<LI><a href="#[54e10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate1200v
<LI><a href="#[54e10e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate600v
<LI><a href="#[54e1124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate300v
<LI><a href="#[54e1160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBurningTestv
<LI><a href="#[54e119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayCRReplaceCommav
<LI><a href="#[54e11d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29PlugAndPlayCRReplaceSemicolonv
<LI><a href="#[54e1214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayImageRevertv
<LI><a href="#[54e1250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSBKBWv
<LI><a href="#[54e128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSB232v
<LI><a href="#[54e12c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PlugAndPlayAddCRLFv
<LI><a href="#[54e1304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddLFv
<LI><a href="#[54e1340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayAddTabv
<LI><a href="#[54e137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddCRv
<LI><a href="#[54e13b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayWinNixv
<LI><a href="#[54e13f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlayNCRv
<LI><a href="#[54e1430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayMagellanv
<LI><a href="#[54e146c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBioptiAuxPortv
<LI><a href="#[54e14a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayGilbarcov
<LI><a href="#[54e14e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayRubyv
<LI><a href="#[54e1994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayOPOSv
<LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
<LI><a href="#[54e1b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlay232v
<LI><a href="#[54e1ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUsbPosv
<LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
<LI><a href="#[54e209c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayC39CheckRequestXmitv
<LI><a href="#[54e2150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE81v
<LI><a href="#[54e218c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE72v
<LI><a href="#[54e21c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE71v
<LI><a href="#[54e2204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate57600v
<LI><a href="#[54e22b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlaySetToDefaultv
<LI><a href="#[54e2330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate4800v
<LI><a href="#[54e24d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBeatlev
</UL>

<P><STRONG><a name="[406df8c]"></a>_Z30CollectAllInterfaceTerminalIdsiPi</STRONG> (ARM, 72 bytes, Stack size 24 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z30CollectAllInterfaceTerminalIdsiPi &rArr; _Z14ValidateTermIdi &rArr; _ZN6CIoMan14QueryInterfaceEsm
</UL>
<BR>[Calls]<UL><LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[52fe738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Update232Lockv
</UL>

<P><STRONG><a name="[406df50]"></a>_Z13UpdateTermIDsv</STRONG> (ARM, 180 bytes, Stack size 1632 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1736<LI>Call Chain = _Z13UpdateTermIDsv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[406dd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmYoujie4600Ev
<LI><a href="#[406ddac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmIndustrialEv
<LI><a href="#[406dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTermialID15RemoveInterfaceEi
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
</UL>

<P><STRONG><a name="[36b9a74]"></a>_Z30CollectInterfaceUSBTerminalIdsPi</STRONG> (ARM, 56 bytes, Stack size 16 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z30CollectInterfaceUSBTerminalIdsPi &rArr; _Z14ValidateTermIdi &rArr; _ZN6CIoMan14QueryInterfaceEsm
</UL>
<BR>[Calls]<UL><LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[52fe738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Update232Lockv
</UL>

<P><STRONG><a name="[406df14]"></a>_Z17FillInProductNamev</STRONG> (ARM, 400 bytes, Stack size 56 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = _Z17FillInProductNamev &rArr; _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_ &rArr; _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
<LI><a href="#[406dd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmYoujie4600Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
</UL>

<P><STRONG><a name="[36b9c18]"></a>_Z21UpdateOpenInterfaceIDv</STRONG> (ARM, 120 bytes, Stack size 0 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = _Z21UpdateOpenInterfaceIDv &rArr; _Z29UpdateNumericListWorkingValuePKcS0_ &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[406de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29UpdateNumericListWorkingValuePKcS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b9b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25AutoCable_Ctl_Sys_Controlv
</UL>

<P><STRONG><a name="[36b9aec]"></a>_Z25UpdateDynamicMenuSettingsv</STRONG> (ARM, 320 bytes, Stack size 424 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2160 + Unknown Stack Size
<LI>Call Chain = _Z25UpdateDynamicMenuSettingsv &rArr; _Z13UpdateTermIDsv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36ba050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ExpandBaudRatesv
<LI><a href="#[406dd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmYoujie4600Ev
<LI><a href="#[406de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29UpdateNumericListWorkingValuePKcS0_
<LI><a href="#[406df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13UpdateTermIDsv
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
<LI><a href="#[406e1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15UpdateCodePagesv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[406ded8]"></a>_Z27UpdateImageTransferSettingsv</STRONG> (ARM, 68 bytes, Stack size 8 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z27UpdateImageTransferSettingsv &rArr; _ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[406dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv
</UL>

<P><STRONG><a name="[406de9c]"></a>_Z27AlertDriverOfSettingsChangev</STRONG> (ARM, 132 bytes, Stack size 16 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _Z27AlertDriverOfSettingsChangev &rArr; _ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[36b9b64]"></a>_Z23ReSynchWorkingAndActiveb</STRONG> (ARM, 336 bytes, Stack size 16 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2568 + Unknown Stack Size
<LI>Call Chain = _Z23ReSynchWorkingAndActiveb &rArr; _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22719f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15crank_up_clocksii
<LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b4fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CRemRouterHandler22OnChangedConfigurationEv
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci22OnChangedConfigurationEv
<LI><a href="#[36b9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE21WorkingValuesUpToDateEv
<LI><a href="#[36b927c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20ActiveValuesUpToDateEv
<LI><a href="#[36b99c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33DecodeIFaceOnChangedConfigurationv
<LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
<LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[38809f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ResetPowerTimeOutsv
<LI><a href="#[3e99e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20WorkingValuesUpdatedEv
<LI><a href="#[406dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE33AtLeastOneActiveValueWasDefaultedEv
<LI><a href="#[406dcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ActiveValuesUpdatedEv
<LI><a href="#[406dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv
<LI><a href="#[406dd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC26InitializeMainScriptTimersEv
<LI><a href="#[406de9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27AlertDriverOfSettingsChangev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
</UL>

<P><STRONG><a name="[406de60]"></a>_Z17IsHwTriggerPulledv</STRONG> (ARM, 48 bytes, Stack size 8 bytes, Interface_Support_Functions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z17IsHwTriggerPulledv
</UL>
<BR>[Called By]<UL><LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
</UL>

<P><STRONG><a name="[36b9e34]"></a>_Z18AutoCable_StrIndexPhS_</STRONG> (ARM, 128 bytes, Stack size 16 bytes, AutoCableSelect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z18AutoCable_StrIndexPhS_
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
</UL>

<P><STRONG><a name="[36b99fc]"></a>_Z32AutoCable_Ctl_Sys_Initializationv</STRONG> (ARM, 208 bytes, Stack size 16 bytes, AutoCableSelect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z32AutoCable_Ctl_Sys_Initializationv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[406bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken21IAmChargeOnlyBaseTypeEv
<LI><a href="#[406dd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmYoujie4600Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36b9984]"></a>_Z34ManualCable_Ctl_Sys_Initializationv</STRONG> (ARM, 40 bytes, Stack size 0 bytes, AutoCableSelect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36ba5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36CreateManualCableSelect_ProdSpecificv
</UL>

<P><STRONG><a name="[36b9b28]"></a>_Z25AutoCable_Ctl_Sys_Controlv</STRONG> (ARM, 104 bytes, Stack size 16 bytes, AutoCableSelect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = _Z25AutoCable_Ctl_Sys_Controlv &rArr; _Z21UpdateOpenInterfaceIDv &rArr; _Z29UpdateNumericListWorkingValuePKcS0_ &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
<LI><a href="#[36b9c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21UpdateOpenInterfaceIDv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[406de24]"></a>_Z29UpdateNumericListWorkingValuePKcS0_</STRONG> (ARM, 556 bytes, Stack size 80 bytes, AutoCableSelect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = _Z29UpdateNumericListWorkingValuePKcS0_ &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
<LI><a href="#[36b9c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21UpdateOpenInterfaceIDv
</UL>

<P><STRONG><a name="[406aa94]"></a>_Z9InitSpixxjPK11spiregs_tag</STRONG> (ARM, 268 bytes, Stack size 32 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z9InitSpixxjPK11spiregs_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[36b98d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7InitSpijP11spiregs_tag
</UL>

<P><STRONG><a name="[36b98d0]"></a>_Z7InitSpijP11spiregs_tag</STRONG> (ARM, 204 bytes, Stack size 24 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z7InitSpijP11spiregs_tag &rArr; _Z9InitSpixxjPK11spiregs_tag
</UL>
<BR>[Calls]<UL><LI><a href="#[406aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9InitSpixxjPK11spiregs_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[406aa58]"></a>_Z9MergeReadPj</STRONG> (ARM, 220 bytes, Stack size 4 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z9MergeReadPj
</UL>
<BR>[Called By]<UL><LI><a href="#[406a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10SpiReadDbljjPc
</UL>

<P><STRONG><a name="[406aa1c]"></a>_Z6SpiXfrjjPjjjPc</STRONG> (ARM, 360 bytes, Stack size 40 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Called By]<UL><LI><a href="#[36b7404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SpiWriteMemoryjjPc
<LI><a href="#[36b7440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SpiEraseSectorj
<LI><a href="#[36b747c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SpiMemVerifyjjPc
<LI><a href="#[406a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SpiEraseAllFlashv
<LI><a href="#[406b2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14WriteErasePollv
<LI><a href="#[406b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SpiWritePagejjPc
<LI><a href="#[5096fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_phy_nor_num_m25pxx (via BLX)
</UL>

<P><STRONG><a name="[406a9e0]"></a>_Z10SpiReadDbljjPc</STRONG> (ARM, 592 bytes, Stack size 48 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _Z10SpiReadDbljjPc &rArr; _Z9MergeReadPj
</UL>
<BR>[Calls]<UL><LI><a href="#[406aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9MergeReadPj
</UL>
<BR>[Called By]<UL><LI><a href="#[406a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10SpiMemReadjjPc
<LI><a href="#[5302ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Readspiflashv
</UL>

<P><STRONG><a name="[36b747c]"></a>_Z12SpiMemVerifyjjPc</STRONG> (ARM, 172 bytes, Stack size 40 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z12SpiMemVerifyjjPc &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[406aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6SpiXfrjjPjjjPc
</UL>
<BR>[Called By]<UL><LI><a href="#[508aeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11VerifyFlashPvllll (via BLX)
</UL>

<P><STRONG><a name="[406a9a4]"></a>_Z10SpiMemReadjjPc</STRONG> (ARM, 104 bytes, Stack size 16 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _Z10SpiMemReadjjPc &rArr; _Z10SpiReadDbljjPc &rArr; _Z9MergeReadPj
</UL>
<BR>[Calls]<UL><LI><a href="#[406a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10SpiReadDbljjPc
</UL>
<BR>[Called By]<UL><LI><a href="#[508ae7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ReadFlashPvlll (via BLX)
<LI><a href="#[51d1f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DumpSPIFlashv
</UL>

<P><STRONG><a name="[36b7440]"></a>_Z14SpiEraseSectorj</STRONG> (ARM, 196 bytes, Stack size 24 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z14SpiEraseSectorj &rArr; _Z14WriteErasePollv &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[406aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6SpiXfrjjPjjjPc
<LI><a href="#[406b2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14WriteErasePollv
</UL>
<BR>[Called By]<UL><LI><a href="#[508af30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10EraseFlashl (via BLX)
</UL>

<P><STRONG><a name="[406a968]"></a>_Z16SpiEraseAllFlashv</STRONG> (ARM, 108 bytes, Stack size 24 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z16SpiEraseAllFlashv &rArr; _Z14WriteErasePollv &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[406aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6SpiXfrjjPjjjPc
<LI><a href="#[406b2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14WriteErasePollv
</UL>
<BR>[Called By]<UL><LI><a href="#[5097140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EraseEntireFlashv
</UL>

<P><STRONG><a name="[36b7404]"></a>_Z14SpiWriteMemoryjjPc</STRONG> (ARM, 240 bytes, Stack size 40 bytes, mx25Spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[406aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6SpiXfrjjPjjjPc
<LI><a href="#[406b2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14WriteErasePollv
<LI><a href="#[406b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SpiWritePagejjPc
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[4068eb0]"></a>_ZN8I2C_Drvr7InitI2CEv</STRONG> (ARM, 128 bytes, Stack size 24 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr7InitI2CEv &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent
<LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr15Create_I2C_DrvrEv
</UL>

<P><STRONG><a name="[4068e74]"></a>_ZN8I2C_Drvr11ImagerSetupEv</STRONG> (ARM, 176 bytes, Stack size 4 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN8I2C_Drvr11ImagerSetupEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr15Create_I2C_DrvrEv
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
</UL>

<P><STRONG><a name="[36b8e44]"></a>_ZN8I2C_Drvr15Create_I2C_DrvrEv</STRONG> (ARM, 72 bytes, Stack size 8 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr15Create_I2C_DrvrEv &rArr; _ZN8I2C_Drvr7InitI2CEv &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4068e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr11ImagerSetupEv
<LI><a href="#[4068eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr7InitI2CEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
<LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
</UL>

<P><STRONG><a name="[4068e38]"></a>_ZN8I2C_Drvr10RecoverIICEj</STRONG> (ARM, 908 bytes, Stack size 168 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4068e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr11ImagerSetupEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4068c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr8Get_ByteEbb
<LI><a href="#[4068d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr14Generate_StartEv
<LI><a href="#[4068dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr9Send_ByteEhi
<LI><a href="#[4068dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr20Is_Transfer_CompleteEb
</UL>

<P><STRONG><a name="[4068dfc]"></a>_ZN8I2C_Drvr20Is_Transfer_CompleteEb</STRONG> (ARM, 108 bytes, Stack size 24 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _ZN8I2C_Drvr20Is_Transfer_CompleteEb &rArr; _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
<LI><a href="#[4068c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr8Get_ByteEbb
<LI><a href="#[4068dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr9Send_ByteEhi
</UL>

<P><STRONG><a name="[4068dc0]"></a>_ZN8I2C_Drvr9Send_ByteEhi</STRONG> (ARM, 204 bytes, Stack size 16 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _ZN8I2C_Drvr9Send_ByteEhi &rArr; _ZN8I2C_Drvr20Is_Transfer_CompleteEb &rArr; _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[4068dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr20Is_Transfer_CompleteEb
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
<LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
<LI><a href="#[4068c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr29Read_Request_w_Repeated_StartEh
<LI><a href="#[4068d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr12Read_RequestEh
</UL>

<P><STRONG><a name="[4068d84]"></a>_ZN8I2C_Drvr13Generate_StopEv</STRONG> (ARM, 104 bytes, Stack size 16 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN8I2C_Drvr13Generate_StopEv &rArr; MT_ResetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
<LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
<LI><a href="#[4068d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr14Generate_StartEv
</UL>

<P><STRONG><a name="[4068d48]"></a>_ZN8I2C_Drvr14Generate_StartEv</STRONG> (ARM, 316 bytes, Stack size 48 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _ZN8I2C_Drvr14Generate_StartEv &rArr; _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[4068d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr13Generate_StopEv
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
<LI><a href="#[4068d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr12Read_RequestEh
</UL>

<P><STRONG><a name="[4068d0c]"></a>_ZN8I2C_Drvr12Read_RequestEh</STRONG> (ARM, 164 bytes, Stack size 24 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _ZN8I2C_Drvr12Read_RequestEh &rArr; _ZN8I2C_Drvr14Generate_StartEv &rArr; _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[4068d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr14Generate_StartEv
<LI><a href="#[4068dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr9Send_ByteEhi
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
</UL>

<P><STRONG><a name="[4068cd0]"></a>_ZN8I2C_Drvr23Generate_Repeated_StartEv</STRONG> (ARM, 256 bytes, Stack size 24 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN8I2C_Drvr23Generate_Repeated_StartEv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4068c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr29Read_Request_w_Repeated_StartEh
</UL>

<P><STRONG><a name="[4068c94]"></a>_ZN8I2C_Drvr29Read_Request_w_Repeated_StartEh</STRONG> (ARM, 164 bytes, Stack size 24 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _ZN8I2C_Drvr29Read_Request_w_Repeated_StartEh &rArr; _ZN8I2C_Drvr9Send_ByteEhi &rArr; _ZN8I2C_Drvr20Is_Transfer_CompleteEb &rArr; _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[4068cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr23Generate_Repeated_StartEv
<LI><a href="#[4068dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr9Send_ByteEhi
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
</UL>

<P><STRONG><a name="[4068c58]"></a>_ZN8I2C_Drvr8Get_ByteEbb</STRONG> (ARM, 180 bytes, Stack size 16 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _ZN8I2C_Drvr8Get_ByteEbb &rArr; _ZN8I2C_Drvr20Is_Transfer_CompleteEb &rArr; _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[4068dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr20Is_Transfer_CompleteEb
<LI><a href="#[4068e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10RecoverIICEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
<LI><a href="#[4068c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10Dummy_ReadEb
</UL>

<P><STRONG><a name="[4068c1c]"></a>_ZN8I2C_Drvr10Dummy_ReadEb</STRONG> (ARM, 44 bytes, Stack size 8 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _ZN8I2C_Drvr10Dummy_ReadEb &rArr; _ZN8I2C_Drvr8Get_ByteEbb &rArr; _ZN8I2C_Drvr20Is_Transfer_CompleteEb &rArr; _ZN8I2C_Drvr10RecoverIICEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4068c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr8Get_ByteEbb
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
</UL>

<P><STRONG><a name="[4068be0]"></a>_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib</STRONG> (ARM, 512 bytes, Stack size 56 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
<LI><a href="#[4068d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr14Generate_StartEv
<LI><a href="#[4068d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr13Generate_StopEv
<LI><a href="#[4068dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr9Send_ByteEhi
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji
<LI><a href="#[4068b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii
<LI><a href="#[4068b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji
</UL>

<P><STRONG><a name="[4068ba4]"></a>_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib</STRONG> (ARM, 880 bytes, Stack size 56 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
<LI><a href="#[4068c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr10Dummy_ReadEb
<LI><a href="#[4068c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr8Get_ByteEbb
<LI><a href="#[4068c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr29Read_Request_w_Repeated_StartEh
<LI><a href="#[4068d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr12Read_RequestEh
<LI><a href="#[4068d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr13Generate_StopEv
<LI><a href="#[4068dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr9Send_ByteEhi
<LI><a href="#[4068dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr20Is_Transfer_CompleteEb
</UL>
<BR>[Called By]<UL><LI><a href="#[4068ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji
<LI><a href="#[4068af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr36Receive_Data_Bytes_W_Char_Buffer_I2CEhPhj
</UL>

<P><STRONG><a name="[4068b68]"></a>_ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji</STRONG> (ARM, 96 bytes, Stack size 56 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[406033c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12WriteIIC_BYDhPKtj
<LI><a href="#[4061f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShutDownThreadPv
</UL>

<P><STRONG><a name="[4068b2c]"></a>_ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii</STRONG> (ARM, 116 bytes, Stack size 64 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1968 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
</UL>

<P><STRONG><a name="[4068af0]"></a>_ZN8I2C_Drvr36Receive_Data_Bytes_W_Char_Buffer_I2CEhPhj</STRONG> (ARM, 80 bytes, Stack size 56 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr36Receive_Data_Bytes_W_Char_Buffer_I2CEhPhj &rArr; _ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
</UL>

<P><STRONG><a name="[4068ab4]"></a>_ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji</STRONG> (ARM, 196 bytes, Stack size 80 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = _ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji &rArr; _ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
<LI><a href="#[4068ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib
<LI><a href="#[4068be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[4060300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ReadIIC_BYDhPtj
<LI><a href="#[4149694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ReadRegisterBYDv
</UL>

<P><STRONG><a name="[375a340]"></a>_Z8PWM_Init8PWM_BASE12PWM_PIN_NAMEs</STRONG> (ARM, 1532 bytes, Stack size 20 bytes, PWM_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z8PWM_Init8PWM_BASE12PWM_PIN_NAMEs
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
<LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
</UL>

<P><STRONG><a name="[375a2c8]"></a>_Z9PWM_Start8PWM_BASE</STRONG> (ARM, 208 bytes, Stack size 4 bytes, PWM_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Called By]<UL><LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
<LI><a href="#[4147f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21enterHi2dCurrentLevelj
<LI><a href="#[4148104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12turnon_flash20ScanAimerIllumMode_tb
</UL>

<P><STRONG><a name="[375a304]"></a>_Z8PWM_Stop8PWM_BASE</STRONG> (ARM, 224 bytes, Stack size 4 bytes, PWM_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z8PWM_Stop8PWM_BASE
</UL>
<BR>[Called By]<UL><LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
<LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[375ae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepOffv
<LI><a href="#[4147f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28Ill_Ctl_Sys_StateChangeToOFFv
<LI><a href="#[41480c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13turnoff_flash20ScanAimerIllumMode_tb
<LI><a href="#[4148104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12turnon_flash20ScanAimerIllumMode_tb
</UL>

<P><STRONG><a name="[375a868]"></a>_Z10PWM_Period8PWM_BASEi</STRONG> (ARM, 216 bytes, Stack size 4 bytes, PWM_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z10PWM_Period8PWM_BASEi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
</UL>

<P><STRONG><a name="[375a82c]"></a>_Z10PWM_Sample8PWM_BASEi</STRONG> (ARM, 240 bytes, Stack size 8 bytes, PWM_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[375a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9PWM_Start8PWM_BASE
<LI><a href="#[375a304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Stop8PWM_BASE
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
<LI><a href="#[4147f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28Ill_Ctl_Sys_StateChangeToOFFv
<LI><a href="#[4147f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21enterHi2dCurrentLevelj
<LI><a href="#[41480c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13turnoff_flash20ScanAimerIllumMode_tb
<LI><a href="#[4148104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12turnon_flash20ScanAimerIllumMode_tb
</UL>

<P><STRONG><a name="[375a4e4]"></a>_Z20ROV_Interrupt_Enable8PWM_BASEb</STRONG> (ARM, 152 bytes, Stack size 4 bytes, PWM_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z20ROV_Interrupt_Enable8PWM_BASEb
</UL>
<BR>[Called By]<UL><LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
</UL>

<P><STRONG><a name="[375a3f4]"></a>_Z26Clear_ROV_Interrupt_Signal8PWM_BASE</STRONG> (ARM, 36 bytes, Stack size 0 bytes, PWM_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
<LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[375a46c]"></a>_Z25Read_ROV_Interrupt_Signal8PWM_BASE</STRONG> (ARM, 60 bytes, Stack size 0 bytes, PWM_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[375a55c]"></a>_Z20CMP_Interrupt_Enable8PWM_BASEb</STRONG> (ARM, 152 bytes, Stack size 4 bytes, PWM_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z20CMP_Interrupt_Enable8PWM_BASEb
</UL>
<BR>[Called By]<UL><LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
</UL>

<P><STRONG><a name="[375a430]"></a>_Z26Clear_CMP_Interrupt_Signal8PWM_BASE</STRONG> (ARM, 36 bytes, Stack size 0 bytes, PWM_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
<LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[375a4a8]"></a>_Z25Read_CMP_Interrupt_Signal8PWM_BASE</STRONG> (ARM, 60 bytes, Stack size 0 bytes, PWM_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[3880630]"></a>_Z7ZeroRTCv</STRONG> (ARM, 76 bytes, Stack size 0 bytes, RTC_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>

<P><STRONG><a name="[3880888]"></a>_Z10PrepareRTCm</STRONG> (ARM, 288 bytes, Stack size 4 bytes, RTC_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z10PrepareRTCm
</UL>
<BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>

<P><STRONG><a name="[38805f4]"></a>_Z8ClearRTCv</STRONG> (ARM, 76 bytes, Stack size 0 bytes, RTC_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>

<P><STRONG><a name="[3880720]"></a>_Z21GetRTC_ALM_ISR_Statusv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, RTC_Driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>

<P><STRONG><a name="[375a5d4]"></a>_Z18Init_IndicatorLEDsv</STRONG> (ARM, 124 bytes, Stack size 4 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z18Init_IndicatorLEDsv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
</UL>

<P><STRONG><a name="[375a688]"></a>_Z14GoodReadLedOffv</STRONG> (ARM, 76 bytes, Stack size 4 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z14GoodReadLedOffv
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
</UL>

<P><STRONG><a name="[375a7f0]"></a>_Z11ErrorLedOffv</STRONG> (ARM, 92 bytes, Stack size 8 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z11ErrorLedOffv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
</UL>

<P><STRONG><a name="[375a700]"></a>_Z13GoodReadLedOnv</STRONG> (ARM, 92 bytes, Stack size 4 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z13GoodReadLedOnv
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
</UL>

<P><STRONG><a name="[375a8a4]"></a>_Z10ErrorLedOnv</STRONG> (ARM, 104 bytes, Stack size 8 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z10ErrorLedOnv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
</UL>

<P><STRONG><a name="[375a7b4]"></a>_Z12IsErrorLedOnv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[375a778]"></a>_Z12IsGoodReadOnv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[375a64c]"></a>_Z15Force_Green_LEDb</STRONG> (ARM, 68 bytes, Stack size 4 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z15Force_Green_LEDb
</UL>
<BR>[Called By]<UL><LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
<LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[375a73c]"></a>_Z13Force_Red_LEDb</STRONG> (ARM, 88 bytes, Stack size 16 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z13Force_Red_LEDb
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
<LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
</UL>

<P><STRONG><a name="[375a6c4]"></a>_Z14BeeperLockLEDSv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
</UL>

<P><STRONG><a name="[375a610]"></a>_Z16BeeperUnLockLEDSv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, IndicatorLEDs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
</UL>

<P><STRONG><a name="[40651fc]"></a>_ZN14CHardwareToken17InitHardwareTokenEv</STRONG> (ARM, 272 bytes, Stack size 4 bytes, HardwareToken.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN14CHardwareToken17InitHardwareTokenEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b96f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken19CreateHardwareTokenEv
</UL>

<P><STRONG><a name="[36b96f0]"></a>_ZN14CHardwareToken19CreateHardwareTokenEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, HardwareToken.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN14CHardwareToken19CreateHardwareTokenEv &rArr; _ZN14CHardwareToken17InitHardwareTokenEv
</UL>
<BR>[Calls]<UL><LI><a href="#[40651fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken17InitHardwareTokenEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[406bca0]"></a>_ZN14CHardwareToken21IAmChargeOnlyBaseTypeEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b99fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32AutoCable_Ctl_Sys_Initializationv
</UL>

<P><STRONG><a name="[4065058]"></a>_ZN14CHardwareToken32IAmThreeLevelIllumination_NonOemEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41f7d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SetLightsCommoniiii
</UL>

<P><STRONG><a name="[36b96b4]"></a>_ZN14CHardwareToken6IAmOEMEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
<LI><a href="#[36b99fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32AutoCable_Ctl_Sys_Initializationv
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[36ba0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14Init_PowerPinsv
<LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
<LI><a href="#[375a37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32DoesPluginHaveControlofCSPI1_SS0v
<LI><a href="#[375a73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Force_Red_LEDb
<LI><a href="#[375a7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ErrorLedOffv
<LI><a href="#[375a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ErrorLedOnv
<LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[375ae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepOffv
<LI><a href="#[375ae80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32ConfigurePWMtoGPIOForBeepConvertv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
<LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
<LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
<LI><a href="#[388066c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31DoesPluginHaveControlofKPP_ROW1v
<LI><a href="#[38806a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31DoesPluginHaveControlofKPP_COL2v
<LI><a href="#[388093c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Prepare_System_for_Suspendv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[3883204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9Wake_Ctrlb
<LI><a href="#[38832b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GoInToPowerDownModev
<LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
<LI><a href="#[3a1cb1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio16CreatePluginGpioEv
<LI><a href="#[3ea03d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27DoesPluginHaveControlofNFRBv
<LI><a href="#[3f1e618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio9GpioWriteEii
<LI><a href="#[3f1e654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio8GpioReadEv
<LI><a href="#[3f1e690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio8GpioInitEii
<LI><a href="#[406dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[406e004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ConfigureSerialPolarityv
<LI><a href="#[413dd30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger24SetTempManualTriggerModeEv
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14OpticalTriggerEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[4144234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger13SetUpHardwareEv (via BLX)
<LI><a href="#[4144270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger11IsHwTriggerEv (via BLX)
<LI><a href="#[41442ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger16UnPrepareForStopEv (via BLX)
<LI><a href="#[41442e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger14PrepareForStopEv (via BLX)
<LI><a href="#[41f7d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SetLightsCommoniiii
<LI><a href="#[4407058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart20ReadCtsIoPinFromGpioEv
<LI><a href="#[4407094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart18SetCtsIoPinsToGpioEv
<LI><a href="#[4407274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase15DeviceIoControlE11IoControl_tlj
<LI><a href="#[44072b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase14PostSendActionEv
<LI><a href="#[4407328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase13PreSendActionEv
<LI><a href="#[4407364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase12StartSendingEv
<LI><a href="#[4407580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver10WaitForCtsEmi
<LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
<LI><a href="#[45289f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart10SetCTSModeEi
<LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
<LI><a href="#[4528bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468316PrepareIoFor4683Ev
<LI><a href="#[452f640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468320Start4683TransmitterEv
<LI><a href="#[452f6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468312Transmit4683Ev
<LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
<LI><a href="#[477bc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal32PrepareCableInterfaceforUSBPowerEv
<LI><a href="#[477bcd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal17PrepareIoForWedgeEv
<LI><a href="#[477bd10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal21MakeInterfaceIoBenignEv
<LI><a href="#[4938b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmC1EP7CRxFifoP15CThreadRealTimeb
<LI><a href="#[4938cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14InitUSBEndpDesEv
<LI><a href="#[4ecdb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52fe288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15Enter232Standbyv
<LI><a href="#[52fe738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Update232Lockv
<LI><a href="#[5300c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ConnectFLOtoExternalv
<LI><a href="#[5366b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
</UL>

<P><STRONG><a name="[375a1d8]"></a>_ZN14CHardwareToken15IAmOEMPrototypeEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
<LI><a href="#[36ba0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14Init_PowerPinsv
<LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[375ae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepOffv
<LI><a href="#[375ae80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32ConfigurePWMtoGPIOForBeepConvertv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
<LI><a href="#[375d388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PWM_Interrupt_Initv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[3883204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9Wake_Ctrlb
<LI><a href="#[3a1cb1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CPluginGpio16CreatePluginGpioEv
</UL>

<P><STRONG><a name="[36b972c]"></a>_ZN14CHardwareToken10IAmOEMJadeEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b9498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv
<LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
<LI><a href="#[477bc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal32PrepareCableInterfaceforUSBPowerEv
<LI><a href="#[4e5dc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm
<LI><a href="#[52ff908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ForceAllLightsOffv
<LI><a href="#[52ff944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceLedOffv
<LI><a href="#[52ff980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceLedOnv
<LI><a href="#[52ff9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceAimOnv
<LI><a href="#[52ffae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceAimOffv
<LI><a href="#[5300970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36GetEngineFirmwareRevisionInformationv
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
<LI><a href="#[5300a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ShowEngineFirmwareSettingListv
<LI><a href="#[5300a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ShowEngineFirmwareFullReportv
<LI><a href="#[5300a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ShowEngineFirmwareChecksumv
<LI><a href="#[5300ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26WriteDefaultEngineFirmwarev
<LI><a href="#[5300b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23WriteEngineFirmwareFilev
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
<LI><a href="#[5300cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18EngineWriteRamToEEv
<LI><a href="#[570a3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ModifyImagePhS_PiS0_S0_S0_S0_bbbiiiiiibb
</UL>

<P><STRONG><a name="[406501c]"></a>_ZN14CHardwareToken14InterfaceTokenEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
</UL>

<P><STRONG><a name="[4064fe0]"></a>_ZN14CHardwareToken23IAmTwoLevelIlluminationEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[4146ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj
<LI><a href="#[4146f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetILL_FlashModej
<LI><a href="#[4147ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToAIMONv
<LI><a href="#[4147f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToILLONv
<LI><a href="#[4147f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28Ill_Ctl_Sys_StateChangeToOFFv
<LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
</UL>

<P><STRONG><a name="[406ddac]"></a>_ZN14CHardwareToken13IAmIndustrialEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b97e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger15CreateHWTriggerEv (via BLX)
<LI><a href="#[406df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13UpdateTermIDsv
<LI><a href="#[494034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachConDescriptorsEPhj
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[5366afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION29CreatePlugAndPlayMenuSettingsEi
</UL>

<P><STRONG><a name="[375a214]"></a>_ZN14CHardwareToken14IAmVoyager1400Ev</STRONG> (ARM, 16 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b9ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Ill_Ctl_Sys_Init_Threadv
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[36ba0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14Init_PowerPinsv
<LI><a href="#[375aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25SoundBadPsocCommunicationv
<LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[413b120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GrabFramev
<LI><a href="#[413dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18PrepareForScanningEv
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[4146f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetILL_FlashModej
<LI><a href="#[4147f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToILLONv
<LI><a href="#[4147f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28Ill_Ctl_Sys_StateChangeToOFFv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52ff908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ForceAllLightsOffv
<LI><a href="#[52ff944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceLedOffv
<LI><a href="#[52ff980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceLedOnv
<LI><a href="#[52ff9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceAimOnv
<LI><a href="#[52ffae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceAimOffv
<LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5366b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj
<LI><a href="#[54e14e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayRubyv
</UL>

<P><STRONG><a name="[406dd70]"></a>_ZN14CHardwareToken13IAmYoujie4600Ev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HardwareToken.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b99fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32AutoCable_Ctl_Sys_Initializationv
<LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[406df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13UpdateTermIDsv
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
</UL>

<P><STRONG><a name="[36ba1b8]"></a>_Z11Timer3_Initv</STRONG> (ARM, 384 bytes, Stack size 24 bytes, Timer3_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z11Timer3_Initv &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[4064860]"></a>_Z23Timer3_MicroSecondDelayj</STRONG> (ARM, 840 bytes, Stack size 24 bytes, Timer3_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[45fa9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15MT_Driver_SleepEl
<LI><a href="#[49384f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh
</UL>

<P><STRONG><a name="[36b9768]"></a>_ZN12IndicatorTfb8CondInitEv</STRONG> (ARM, 72 bytes, Stack size 0 bytes, IndicatorTfb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[375a28c]"></a>_ZN12IndicatorTfb6CondOnEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, IndicatorTfb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12IndicatorTfb6CondOnEv
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
</UL>

<P><STRONG><a name="[375a250]"></a>_ZN12IndicatorTfb7CondOffEv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, IndicatorTfb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12IndicatorTfb7CondOffEv
</UL>
<BR>[Calls]<UL><LI><a href="#[352d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21translate_ticks_to_msj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
</UL>

<P><STRONG><a name="[40606fc]"></a>_Z12IsROIChangedv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41494b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EnableVsyncProcessingBYDv
</UL>

<P><STRONG><a name="[40604e0]"></a>_Z43GetRegisterSettingsForHHPExposureControlBYDPPK18BYDRegisterEntry_t</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[40604a4]"></a>_Z15GetScanWidthBYDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060468]"></a>_Z16GetScanHeightBYDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[36b9d80]"></a>_Z18UseCachedMemoryBYDb</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> OS_Start.o(.text)
</UL>
<P><STRONG><a name="[406042c]"></a>_Z28AllocatePhysicalScanSpaceBYDv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _Z28AllocatePhysicalScanSpaceBYDv &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[40603f0]"></a>_Z24FreePhysicalScanSpaceBYDm</STRONG> (ARM, 36 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = _Z24FreePhysicalScanSpaceBYDm &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[40603b4]"></a>_Z36BindPhysicalMemoryToVirtualMemoryBYDmPv</STRONG> (ARM, 60 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z36BindPhysicalMemoryToVirtualMemoryBYDmPv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060378]"></a>_Z40UnbindPhysicalMemoryFromVirtualMemoryBYDmPv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[406033c]"></a>_Z12WriteIIC_BYDhPKtj</STRONG> (ARM, 80 bytes, Stack size 16 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = _Z12WriteIIC_BYDhPKtj &rArr; _ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4068b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji
</UL>
<BR>[Called By]<UL><LI><a href="#[4060648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16WriteRegisterBYDv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060300]"></a>_Z11ReadIIC_BYDhPtj</STRONG> (ARM, 80 bytes, Stack size 16 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = _Z11ReadIIC_BYDhPtj &rArr; _ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji &rArr; _ZN8I2C_Drvr19Receive_Message_I2CEhhhPhPtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4068ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji
</UL>
<BR>[Called By]<UL><LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[40602c4]"></a>_Z27IsPsocInterfaceSupportedBYDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e67a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoDetectBYDv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060288]"></a>_Z41GetFrequencyPerFrameOfLineDataCallbackBYDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[406024c]"></a>_Z23ImagerIdlePowerLevelBYDv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060210]"></a>_Z18ImagerIsPoweredBYDv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[40601d4]"></a>_Z24ResetTransferHardwareBYDv</STRONG> (ARM, 328 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060198]"></a>_Z16ImagerPowerUpBYDv</STRONG> (ARM, 404 bytes, Stack size 40 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944 + Unknown Stack Size
<LI>Call Chain = _Z16ImagerPowerUpBYDv &rArr; _ZN8I2C_Drvr15Create_I2C_DrvrEv &rArr; _ZN8I2C_Drvr7InitI2CEv &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36b8e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr15Create_I2C_DrvrEv
<LI><a href="#[40601d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ResetTransferHardwareBYDv
<LI><a href="#[4061ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ConfigureBYDPinsv
</UL>
<BR>[Called By]<UL><LI><a href="#[4060648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16WriteRegisterBYDv
<LI><a href="#[4149694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ReadRegisterBYDv
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[406015c]"></a>_Z18ImagerPowerDownBYDv</STRONG> (ARM, 152 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z18ImagerPowerDownBYDv
</UL>
<BR>[Called By]<UL><LI><a href="#[4060648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16WriteRegisterBYDv
<LI><a href="#[414952c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnableImageLineDataProcessingBYDv
<LI><a href="#[4149694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ReadRegisterBYDv
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060120]"></a>_Z19WaitMillisecondsBYDm</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z19WaitMillisecondsBYDm &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[40600e4]"></a>_Z14InitCaptureBYDmm</STRONG> (ARM, 188 bytes, Stack size 12 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z14InitCaptureBYDmm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[40600a8]"></a>_Z18LoadCaptureInfoBYDv</STRONG> (ARM, 528 bytes, Stack size 12 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z18LoadCaptureInfoBYDv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[406006c]"></a>_Z31RequestSynchronizedPowerDownBYDhPKtj</STRONG> (ARM, 108 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060030]"></a>_Z15WaitForVsyncBYDv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149a54]"></a>_Z18LedControlStateBYDj</STRONG> (ARM, 16 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _Z18LedControlStateBYDj &rArr; _Z18SetLedControlStatej &rArr; _Z28Ill_Ctl_Sys_StateChangeToOFFv &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5de78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10LedControlhb
</UL>

<P><STRONG><a name="[4149a18]"></a>_Z10AimIsOnBYDv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41499dc]"></a>_Z8AimOnBYDv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z8AimOnBYDv &rArr; _Z14SetAIM_ONStateb &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[414934c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SetAIM_ONStateb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41499a0]"></a>_Z9AimOffBYDv</STRONG> (ARM, 32 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z9AimOffBYDv &rArr; _Z14SetAIM_ONStateb &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[414934c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SetAIM_ONStateb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149964]"></a>_Z12AimConfigBYDm</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5dc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm
<LI><a href="#[4e5dd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HW_light_control_MT9V02214setHwLightModeEmmmm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149928]"></a>_Z12IllumIsOnBYDv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41498ec]"></a>_Z10IllumOnBYDv</STRONG> (ARM, 32 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z10IllumOnBYDv &rArr; _Z14SetILL_ONStateb &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[4149310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SetILL_ONStateb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41498b0]"></a>_Z11IllumOffBYDv</STRONG> (ARM, 32 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z11IllumOffBYDv &rArr; _Z14SetILL_ONStateb &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[4149310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SetILL_ONStateb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149874]"></a>_Z14IllumConfigBYDm</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5dc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm
<LI><a href="#[4e5dd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HW_light_control_MT9V02214setHwLightModeEmmmm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149838]"></a>_Z21LightsLowPowerModeBYDv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41497fc]"></a>_Z16IllumOffTimerBYDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41497c0]"></a>_Z16CheckDmaCompletev</STRONG> (ARM, 120 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[406204c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15VsyncServiceBYDPv
</UL>

<P><STRONG><a name="[4149784]"></a>_Z12DisableRxDmav</STRONG> (ARM, 100 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[406204c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15VsyncServiceBYDPv
</UL>

<P><STRONG><a name="[4149748]"></a>_Z28RegisterVsyncNotificationBYDPFvvE</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[414970c]"></a>_Z35RegisterSofPsocWriteNotificationBYDPFvvE</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41496d0]"></a>_Z20ConvertHexCharactersh</STRONG> (ARM, 112 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z20ConvertHexCharactersh &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[4060648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16WriteRegisterBYDv
<LI><a href="#[4149694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ReadRegisterBYDv
</UL>

<P><STRONG><a name="[4149694]"></a>_Z15ReadRegisterBYDv</STRONG> (ARM, 888 bytes, Stack size 104 bytes, Hi704A.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[38855e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKci
<LI><a href="#[406015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerPowerDownBYDv
<LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
<LI><a href="#[4068ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr57Write_Setup_Then_Receive_Data_W_Short_W_Dual_Reg_Size_I2CEhhPtji
<LI><a href="#[41496d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ConvertHexCharactersh
</UL>

<P><STRONG><a name="[4149658]"></a>_Z28InitializeVsyncProcessingBYDv</STRONG> (ARM, 864 bytes, Stack size 24 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _Z28InitializeVsyncProcessingBYDv &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent_Ex
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[3531dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeDriverThread
<LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
<LI><a href="#[4061ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ConfigureBYDPinsv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[414961c]"></a>_Z30DeinitializeVsyncProcessingBYDv</STRONG> (ARM, 168 bytes, Stack size 16 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _Z30DeinitializeVsyncProcessingBYDv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
<LI><a href="#[3531e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseDriverThread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41495e0]"></a>_Z36RegisterImageLineDataNotificationBYDPFvvE</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41495a4]"></a>_Z36InitializeImageLineDataProcessingBYDv</STRONG> (ARM, 76 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _Z36InitializeImageLineDataProcessingBYDv &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent_Ex
<LI><a href="#[3531dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeDriverThread
<LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149568]"></a>_Z38DeinitializeImageLineDataProcessingBYDv</STRONG> (ARM, 80 bytes, Stack size 16 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _Z38DeinitializeImageLineDataProcessingBYDv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
<LI><a href="#[3531e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseDriverThread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[414952c]"></a>_Z32EnableImageLineDataProcessingBYDv</STRONG> (ARM, 576 bytes, Stack size 32 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z32EnableImageLineDataProcessingBYDv &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[406015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerPowerDownBYDv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41494f0]"></a>_Z33DisableImageLineDataProcessingBYDv</STRONG> (ARM, 160 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z33DisableImageLineDataProcessingBYDv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41494b4]"></a>_Z24EnableVsyncProcessingBYDv</STRONG> (ARM, 272 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z24EnableVsyncProcessingBYDv &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[40606fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12IsROIChangedv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149478]"></a>_Z25DisableVsyncProcessingBYDv</STRONG> (ARM, 64 bytes, Stack size 4 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z25DisableVsyncProcessingBYDv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[414943c]"></a>_Z23GetNumberOfValidRowsBYDv</STRONG> (ARM, 56 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149400]"></a>_Z22GetImagerPropertiesBYDPKmPmm</STRONG> (ARM, 172 bytes, Stack size 4 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z22GetImagerPropertiesBYDPKmPmm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[41493c4]"></a>_Z27SetImagerModeToGrayscaleBYDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4149388]"></a>_Z29UnSetImagerModeToGrayscaleBYDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[4060648]"></a>_Z16WriteRegisterBYDv</STRONG> (ARM, 768 bytes, Stack size 288 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2264 + Unknown Stack Size
<LI>Call Chain = _Z16WriteRegisterBYDv &rArr; _Z12WriteIIC_BYDhPKtj &rArr; _ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[406015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerPowerDownBYDv
<LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
<LI><a href="#[406033c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12WriteIIC_BYDhPKtj
<LI><a href="#[41496d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ConvertHexCharactersh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Hi704A.o(.text)
</UL>
<P><STRONG><a name="[4147024]"></a>_Z18get_HI2D_illum_crlv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[413b120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GrabFramev
<LI><a href="#[413dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18PrepareForScanningEv
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18GoToReducedImagingEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[413e294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger17GoToNormalImagingEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[500ba8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13calc_exposureEv
<LI><a href="#[500bb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN26Exposure_control_cellphone13calc_exposureEv
<LI><a href="#[52ff944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceLedOffv
<LI><a href="#[52ff980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceLedOnv
<LI><a href="#[52ff9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceAimOnv
<LI><a href="#[52ffae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceAimOffv
</UL>

<P><STRONG><a name="[4146f70]"></a>_Z16SetILL_FlashModej</STRONG> (ARM, 136 bytes, Stack size 24 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _Z16SetILL_FlashModej &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[4064fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken23IAmTwoLevelIlluminationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[4146ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllTestModebb
<LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
</UL>

<P><STRONG><a name="[4146f34]"></a>_Z16GetILL_FlashModev</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>

<P><STRONG><a name="[41492d4]"></a>_Z18SetLedControlStatej</STRONG> (ARM, 612 bytes, Stack size 40 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _Z18SetLedControlStatej &rArr; _Z28Ill_Ctl_Sys_StateChangeToOFFv &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[4064fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken23IAmTwoLevelIlluminationEv
<LI><a href="#[4146f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetILL_FlashModej
<LI><a href="#[4147f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToILLONv
<LI><a href="#[4147f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28Ill_Ctl_Sys_StateChangeToOFFv
</UL>
<BR>[Called By]<UL><LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[4149a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18LedControlStateBYDj
<LI><a href="#[52ff908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ForceAllLightsOffv
</UL>

<P><STRONG><a name="[375a598]"></a>_Z19Ill_HW_Enable_Aimerb</STRONG> (ARM, 56 bytes, Stack size 0 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z19Ill_HW_Enable_Aimerb &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[4146ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj
</UL>

<P><STRONG><a name="[375a3b8]"></a>_Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb</STRONG> (ARM, 292 bytes, Stack size 24 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
</UL>
<BR>[Calls]<UL><LI><a href="#[375a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Is_PWM_Signal_State_Highv
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[375d3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM2_Service_IRQPv
<LI><a href="#[375d400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PWM1_Service_IRQPv
<LI><a href="#[4146ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj
</UL>

<P><STRONG><a name="[375a520]"></a>_Z20Ill_HW_Disable_Aimerb</STRONG> (ARM, 176 bytes, Stack size 4 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z20Ill_HW_Disable_Aimerb
</UL>
<BR>[Called By]<UL><LI><a href="#[375ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ServiceBeeperv
<LI><a href="#[3880798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Disable_Boostv
<LI><a href="#[4146ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj
</UL>

<P><STRONG><a name="[4146ef8]"></a>_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj</STRONG> (ARM, 692 bytes, Stack size 32 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[375a3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
<LI><a href="#[375a520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Ill_HW_Disable_Aimerb
<LI><a href="#[375a598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Ill_HW_Enable_Aimerb
<LI><a href="#[4064fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken23IAmTwoLevelIlluminationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
</UL>

<P><STRONG><a name="[3880810]"></a>_Z12Enable_Boostv</STRONG> (ARM, 120 bytes, Stack size 8 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z12Enable_Boostv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
</UL>

<P><STRONG><a name="[36b9ba0]"></a>_Z23Ill_Ctl_Sys_Init_Threadv</STRONG> (ARM, 1496 bytes, Stack size 48 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1952 + Unknown Stack Size
<LI>Call Chain = _Z23Ill_Ctl_Sys_Init_Threadv &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3531cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent_Ex
<LI><a href="#[3531dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeDriverThread
<LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375a340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Init8PWM_BASE12PWM_PIN_NAMEs
<LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
<LI><a href="#[375a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Period8PWM_BASEi
<LI><a href="#[4064fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken23IAmTwoLevelIlluminationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
</UL>

<P><STRONG><a name="[3880798]"></a>_Z13Disable_Boostv</STRONG> (ARM, 120 bytes, Stack size 8 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z13Disable_Boostv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[375a520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Ill_HW_Disable_Aimerb
</UL>
<BR>[Called By]<UL><LI><a href="#[388093c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Prepare_System_for_Suspendv
</UL>

<P><STRONG><a name="[414934c]"></a>_Z14SetAIM_ONStateb</STRONG> (ARM, 32 bytes, Stack size 0 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z14SetAIM_ONStateb &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[41499a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9AimOffBYDv
<LI><a href="#[41499dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8AimOnBYDv
</UL>

<P><STRONG><a name="[4149310]"></a>_Z14SetILL_ONStateb</STRONG> (ARM, 32 bytes, Stack size 0 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z14SetILL_ONStateb &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[41498b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllumOffBYDv
<LI><a href="#[41498ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10IllumOnBYDv
</UL>

<P><STRONG><a name="[4146ebc]"></a>_Z11IllTestModebb</STRONG> (ARM, 92 bytes, Stack size 16 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z11IllTestModebb &rArr; _Z16SetILL_FlashModej &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[4146f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetILL_FlashModej
</UL>
<BR>[Called By]<UL><LI><a href="#[52ff908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ForceAllLightsOffv
<LI><a href="#[52ff944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceLedOffv
<LI><a href="#[52ff980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceLedOnv
<LI><a href="#[52ff9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceAimOnv
<LI><a href="#[52ffae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceAimOffv
</UL>

<P><STRONG><a name="[36b97e0]"></a>_ZN10CHWTrigger15CreateHWTriggerEv</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, HWTrigger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CHWTrigger15CreateHWTriggerEv
</UL>
<BR>[Calls]<UL><LI><a href="#[406ddac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmIndustrialEv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv (via BLX)
</UL>

<P><STRONG><a name="[414439c]"></a>_ZN10CHWTrigger10DoDebounceEv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, HWTrigger.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.text)
</UL>
<P><STRONG><a name="[4144360]"></a>_ZN10CHWTrigger15IsTriggerPulledEv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, HWTrigger.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.constdata__ZTV10CHWTrigger)
</UL>
<P><STRONG><a name="[4144324]"></a>_ZN10CHWTrigger14ReadReedSwitchEv</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, HWTrigger.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.constdata__ZTV10CHWTrigger)
</UL>
<P><STRONG><a name="[41442e8]"></a>_ZN10CHWTrigger14PrepareForStopEv</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, HWTrigger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CHWTrigger14PrepareForStopEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv (via BLX)
<LI><a href="#[4143f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16RemoveGpioVectorv (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.constdata__ZTV10CHWTrigger)
</UL>
<P><STRONG><a name="[41442ac]"></a>_ZN10CHWTrigger16UnPrepareForStopEv</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, HWTrigger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CHWTrigger16UnPrepareForStopEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.constdata__ZTV10CHWTrigger)
</UL>
<P><STRONG><a name="[4144270]"></a>_ZN10CHWTrigger11IsHwTriggerEv</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, HWTrigger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CHWTrigger11IsHwTriggerEv &rArr; _Z31DoesPluginHaveControlofKPP_COL2v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv (via BLX)
<LI><a href="#[38806a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31DoesPluginHaveControlofKPP_COL2v (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.constdata__ZTV10CHWTrigger)
</UL>
<P><STRONG><a name="[4144234]"></a>_ZN10CHWTrigger13SetUpHardwareEv</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, HWTrigger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CHWTrigger13SetUpHardwareEv &rArr; _Z17RegisterOneMsTaskPFvvE
</UL>
<BR>[Calls]<UL><LI><a href="#[226daac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17RegisterOneMsTaskPFvvE (via BLX)
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.constdata__ZTV10CHWTrigger)
</UL>
<P><STRONG><a name="[41441f8]"></a>_ZN10CHWTrigger21DebounceTriggerButtonEv</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, HWTrigger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CHWTrigger21DebounceTriggerButtonEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HWTrigger.o(.constdata__ZTV10CHWTrigger)
</UL>
<P><STRONG><a name="[413eca8]"></a>_Z33ShallIUntriggerBasedOnEdgeHistoryibb</STRONG> (ARM, 248 bytes, Stack size 24 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z33ShallIUntriggerBasedOnEdgeHistoryibb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[36b8e80]"></a>_ZN8CTriggerC1Ev</STRONG> (ARM, 772 bytes, Stack size 48 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN8CTriggerC1Ev &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
<LI><a href="#[38809f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ResetPowerTimeOutsv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
</UL>

<P><STRONG><a name="[413e438]"></a>_ZN8CTriggerC2Ev</STRONG> (ARM, 0 bytes, Stack size 48 bytes, Trigger_5_5.o(.text), UNUSED)

<P><STRONG><a name="[413e3fc]"></a>_ZN8CTrigger13TriggerSerialEv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN8CTrigger13TriggerSerialEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[413e3c0]"></a>_ZN8CTrigger15UnTriggerSerialEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[413e384]"></a>_ZN8CTrigger12ForceAimerOnEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52ff9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceAimOnv
</UL>

<P><STRONG><a name="[413e348]"></a>_ZN8CTrigger18SetReReadTimeout2DEv</STRONG> (ARM, 84 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN8CTrigger18SetReReadTimeout2DEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[413e1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23UnTriggerAllignmentModeEv
</UL>

<P><STRONG><a name="[413e30c]"></a>_ZN8CTrigger14AreWeUsbTermIdEv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
<LI><a href="#[413dd30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger24SetTempManualTriggerModeEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
</UL>

<P><STRONG><a name="[413e2d0]"></a>_ZN8CTrigger19AreWeLightBarEngineEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[413b2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetImagingLightsbii
</UL>

<P><STRONG><a name="[413e294]"></a>_ZN8CTrigger17GoToNormalImagingEv</STRONG> (ARM, 348 bytes, Stack size 24 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _ZN8CTrigger17GoToNormalImagingEv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[413e000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14OpticalTriggerEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
</UL>

<P><STRONG><a name="[413e258]"></a>_ZN8CTrigger23SetSerialTriggerTimeoutEv</STRONG> (ARM, 84 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN8CTrigger23SetSerialTriggerTimeoutEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[413e1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23UnTriggerAllignmentModeEv
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
<LI><a href="#[5014420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes25InsertMessageIntoSequenceER12CBarcodeData
</UL>

<P><STRONG><a name="[413e21c]"></a>_ZN8CTrigger13ForceAimerOffEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52ff908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ForceAllLightsOffv
<LI><a href="#[52ffae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceAimOffv
</UL>

<P><STRONG><a name="[413e1e0]"></a>_ZN8CTrigger23UnTriggerAllignmentModeEv</STRONG> (ARM, 148 bytes, Stack size 24 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN8CTrigger23UnTriggerAllignmentModeEv &rArr; _ZN8CTrigger23SetSerialTriggerTimeoutEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[413e258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23SetSerialTriggerTimeoutEv
<LI><a href="#[413e348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18SetReReadTimeout2DEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
</UL>

<P><STRONG><a name="[413e1a4]"></a>_ZN8CTrigger14SetTriggerModeEi</STRONG> (ARM, 2284 bytes, Stack size 200 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = _ZN8CTrigger14SetTriggerModeEi &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[38807d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12StartImagingv
<LI><a href="#[388084c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StopImagingv
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413e1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23UnTriggerAllignmentModeEv
<LI><a href="#[413e258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23SetSerialTriggerTimeoutEv
<LI><a href="#[413e294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger17GoToNormalImagingEv
<LI><a href="#[413e30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14AreWeUsbTermIdEv
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413dd30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger24SetTempManualTriggerModeEv
<LI><a href="#[413df88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv
<LI><a href="#[413dfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEv
</UL>

<P><STRONG><a name="[413e168]"></a>_ZN8CTrigger15GetLowPowPixValEPj</STRONG> (ARM, 396 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN8CTrigger15GetLowPowPixValEPj
</UL>
<BR>[Calls]<UL><LI><a href="#[374f030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13GetImageWidthv
<LI><a href="#[374f06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17CheckForScanStandPhPj
<LI><a href="#[3885a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GetImageHeightv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[413e12c]"></a>_ZN8CTrigger29WaitForHeatMitigationCoolDownEjj</STRONG> (ARM, 376 bytes, Stack size 64 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN8CTrigger29WaitForHeatMitigationCoolDownEjj &rArr; _Z17ManageSystemPowerv &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[413dcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13InBatchedModev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413e0f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger26SetHeatMitigationScanStandEiibbb
</UL>

<P><STRONG><a name="[413e0f0]"></a>_ZN8CTrigger26SetHeatMitigationScanStandEiibbb</STRONG> (ARM, 136 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN8CTrigger26SetHeatMitigationScanStandEiibbb &rArr; _ZN8CTrigger29WaitForHeatMitigationCoolDownEjj &rArr; _Z17ManageSystemPowerv &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413e12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger29WaitForHeatMitigationCoolDownEjj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[413e0b4]"></a>_ZN8CTrigger20NeedToChangeToManualEv</STRONG> (ARM, 228 bytes, Stack size 24 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN8CTrigger20NeedToChangeToManualEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[413dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes17IsSequenceStartedEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[413e078]"></a>_ZN8CTrigger10CountEdgesEiiPh</STRONG> (ARM, 476 bytes, Stack size 36 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN8CTrigger10CountEdgesEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[413e03c]"></a>_ZN8CTrigger18GoToReducedImagingEv</STRONG> (ARM, 420 bytes, Stack size 88 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _ZN8CTrigger18GoToReducedImagingEv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[413e000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14OpticalTriggerEv
</UL>

<P><STRONG><a name="[413e000]"></a>_ZN8CTrigger14OpticalTriggerEv</STRONG> (ARM, 2884 bytes, Stack size 1144 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1848<LI>Call Chain = _ZN8CTrigger14OpticalTriggerEv &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413e03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18GoToReducedImagingEv
<LI><a href="#[413e294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger17GoToNormalImagingEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[413dfc4]"></a>_ZN8CTrigger14SetTriggerModeEv</STRONG> (ARM, 112 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = _ZN8CTrigger14SetTriggerModeEv &rArr; _ZN8CTrigger14SetTriggerModeEi &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[413df88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv
</UL>

<P><STRONG><a name="[413df88]"></a>_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv</STRONG> (ARM, 400 bytes, Stack size 56 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2160 + Unknown Stack Size
<LI>Call Chain = _ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv &rArr; _Z18SetImageParametersiiiii &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[374f0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResetIqScoringv
<LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
<LI><a href="#[3885928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeGet
<LI><a href="#[413dfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[36b8ef8]"></a>_ZN8CTrigger19UpdateTriggerStatusEv</STRONG> (ARM, 5552 bytes, Stack size 168 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3768 + Unknown Stack Size
<LI>Call Chain = _ZN8CTrigger19UpdateTriggerStatusEv &rArr; _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[374f06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17CheckForScanStandPhPj
<LI><a href="#[374f0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ClearDecoderWorkspacev
<LI><a href="#[374f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16DecodeForMenuingPh
<LI><a href="#[374f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30FillDecoderWindowCenteringMenuv
<LI><a href="#[374f51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22WasLastSymbolScanStandv
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[38807d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12StartImagingv
<LI><a href="#[388084c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StopImagingv
<LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413dc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8GetImagev
<LI><a href="#[413dcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17NewImageAvailablev
<LI><a href="#[413dcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13InBatchedModev
<LI><a href="#[413df88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv
<LI><a href="#[413dfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEv
<LI><a href="#[413e000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14OpticalTriggerEv
<LI><a href="#[413e078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger10CountEdgesEiiPh
<LI><a href="#[413e0b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger20NeedToChangeToManualEv
<LI><a href="#[413e0f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger26SetHeatMitigationScanStandEiibbb
<LI><a href="#[413e12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger29WaitForHeatMitigationCoolDownEjj
<LI><a href="#[413e168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15GetLowPowPixValEPj
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[413e30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14AreWeUsbTermIdEv
<LI><a href="#[413eca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ShallIUntriggerBasedOnEdgeHistoryibb
<LI><a href="#[4146f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetILL_FlashModej
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
</UL>

<P><STRONG><a name="[413df4c]"></a>_ZN8CTrigger20SetSkipDecodeTimeoutEv</STRONG> (ARM, 44 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN8CTrigger20SetSkipDecodeTimeoutEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecdb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv
</UL>

<P><STRONG><a name="[413df10]"></a>_ZN8CTrigger14FinishScanningEv</STRONG> (ARM, 504 bytes, Stack size 64 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _ZN8CTrigger14FinishScanningEv &rArr; _Z11StopImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[388084c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StopImagingv
<LI><a href="#[4146f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetILL_FlashModej
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[413ded4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[413ded4]"></a>_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv</STRONG> (ARM, 136 bytes, Stack size 24 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = _ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv &rArr; _ZN8CTrigger14FinishScanningEv &rArr; _Z11StopImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[4ecdaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9DoShotgunER12CBarcodeData
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[36b8ebc]"></a>_ZN8CTrigger22OnChangedConfigurationEv</STRONG> (ARM, 1376 bytes, Stack size 80 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + In Cycle
<LI>Call Chain = _ZN8CTrigger22OnChangedConfigurationEv &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413ded4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv
<LI><a href="#[413dfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEv
<LI><a href="#[413e1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23UnTriggerAllignmentModeEv
<LI><a href="#[413e258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23SetSerialTriggerTimeoutEv
<LI><a href="#[413e348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18SetReReadTimeout2DEv
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
<LI><a href="#[388093c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Prepare_System_for_Suspendv
</UL>

<P><STRONG><a name="[413de98]"></a>_ZN8CTrigger16WaitForScanStandEv</STRONG> (ARM, 80 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN8CTrigger16WaitForScanStandEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[3884f8c]"></a>_ZN8CTrigger21IsWaitingForScanStandEv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[413de5c]"></a>_ZN8CTrigger21IsLowpowerTriggerModeEv</STRONG> (ARM, 40 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[3885004]"></a>_ZN8CTrigger15IsUnitTriggeredEv</STRONG> (ARM, 240 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3784 + Unknown Stack Size
<LI>Call Chain = _ZN8CTrigger15IsUnitTriggeredEv &rArr; _ZN8CTrigger19UpdateTriggerStatusEv &rArr; _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[413e30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14AreWeUsbTermIdEv
</UL>
<BR>[Called By]<UL><LI><a href="#[374f42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PluginDecoderMayContinuev
<LI><a href="#[3753f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SD_CB_Progressi
<LI><a href="#[4ecd738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC10TriggerHitEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[36b8f34]"></a>_ZN8CTrigger16IsHWorSerialTrigEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN8CTrigger16IsHWorSerialTrigEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
</UL>

<P><STRONG><a name="[413de20]"></a>_ZN8CTrigger11ForceLEDsOnEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[52ff980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ForceLedOnv
</UL>

<P><STRONG><a name="[413dde4]"></a>_ZN8CTrigger12ForceLEDsOffEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52ff908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ForceAllLightsOffv
<LI><a href="#[52ff944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ForceLedOffv
</UL>

<P><STRONG><a name="[413dda8]"></a>_ZN8CTrigger18PrepareForScanningEv</STRONG> (ARM, 392 bytes, Stack size 24 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = _ZN8CTrigger18PrepareForScanningEv &rArr; _Z12StartImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[38807d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12StartImagingv
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
</UL>

<P><STRONG><a name="[413dd6c]"></a>_ZN8CTrigger11GetNextScanEmPPh</STRONG> (ARM, 152 bytes, Stack size 24 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = _ZN8CTrigger11GetNextScanEmPPh &rArr; _Z15GetBestNewImagePPh &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[374f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15GetBestNewImagePPh
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[3884fc8]"></a>_ZN8CTrigger19PrsModesPDFdetectedEv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[374f198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SetVigorEtAliPiS_S_
</UL>

<P><STRONG><a name="[3885040]"></a>_ZN8CTrigger14GetShotgunModeEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[4ecdaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9DoShotgunER12CBarcodeData
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[413dd30]"></a>_ZN8CTrigger24SetTempManualTriggerModeEv</STRONG> (ARM, 112 bytes, Stack size 16 bytes, Trigger_5_5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = _ZN8CTrigger24SetTempManualTriggerModeEv &rArr; _ZN8CTrigger14SetTriggerModeEi &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[413e30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14AreWeUsbTermIdEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4882fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base4OpenEsPKw
</UL>

<P><STRONG><a name="[3884f50]"></a>_ZN8CTrigger25IsPresentationTypeTriggerEv</STRONG> (ARM, 88 bytes, Stack size 0 bytes, Trigger_5_5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[374f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30FillDecoderWindowCenteringMenuv
<LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
</UL>

<P><STRONG><a name="[413b2c4]"></a>_Z16SetImagingLightsbii</STRONG> (ARM, 140 bytes, Stack size 32 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = _Z16SetImagingLightsbii &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413e2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19AreWeLightBarEngineEv
</UL>
<BR>[Called By]<UL><LI><a href="#[413b0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SimulateDecodingi
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[413b120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GrabFramev
</UL>

<P><STRONG><a name="[413b198]"></a>_Z29HandleOriginalLightsDutyCyclei</STRONG> (ARM, 140 bytes, Stack size 16 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = _Z29HandleOriginalLightsDutyCyclei &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[41fe6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GetLightsi
</UL>
<BR>[Called By]<UL><LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
</UL>

<P><STRONG><a name="[413b15c]"></a>_Z14ShowExpoReportv</STRONG> (ARM, 160 bytes, Stack size 48 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _Z14ShowExpoReportv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Called By]<UL><LI><a href="#[413b0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SimulateDecodingi
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[413b120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GrabFramev
</UL>

<P><STRONG><a name="[413b120]"></a>_Z9GrabFramev</STRONG> (ARM, 760 bytes, Stack size 152 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = _Z9GrabFramev &rArr; _Z16SetImagingLightsbii &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413b15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowExpoReportv
<LI><a href="#[413b2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetImagingLightsbii
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Called By]<UL><LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
</UL>

<P><STRONG><a name="[413b0e4]"></a>_Z9TakePhotov</STRONG> (ARM, 1304 bytes, Stack size 216 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = _Z9TakePhotov &rArr; _Z16SetImagingLightsbii &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan11IsAnyRxDataEv
<LI><a href="#[2277fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8get_charv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413b15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowExpoReportv
<LI><a href="#[413b2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetImagingLightsbii
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
<LI><a href="#[414934c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SetAIM_ONStateb
</UL>
<BR>[Called By]<UL><LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[41fe838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13TakeTwoImagesv
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
</UL>

<P><STRONG><a name="[413b0a8]"></a>_Z16SimulateDecodingi</STRONG> (ARM, 604 bytes, Stack size 72 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _Z16SimulateDecodingi &rArr; _Z16SetImagingLightsbii &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[413b15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowExpoReportv
<LI><a href="#[413b2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetImagingLightsbii
</UL>
<BR>[Called By]<UL><LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
</UL>

<P><STRONG><a name="[413b06c]"></a>_Z20ParseImageSnapHeaderPcj</STRONG> (ARM, 748 bytes, Stack size 56 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z20ParseImageSnapHeaderPcj
</UL>
<BR>[Called By]<UL><LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
</UL>

<P><STRONG><a name="[413b030]"></a>_Z23ImageSnapWithParametersPPcPj</STRONG> (ARM, 548 bytes, Stack size 136 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = _Z23ImageSnapWithParametersPPcPj &rArr; _Z9TakePhotov &rArr; _Z16SetImagingLightsbii &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[375acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundGoodReadBeepv
<LI><a href="#[413b06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ParseImageSnapHeaderPcj
<LI><a href="#[413b0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SimulateDecodingi
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[413b120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GrabFramev
<LI><a href="#[413b198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29HandleOriginalLightsDutyCyclei
<LI><a href="#[413dfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[41fea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ImageSnapv
</UL>

<P><STRONG><a name="[41fea54]"></a>_Z9ImageSnapv</STRONG> (ARM, 104 bytes, Stack size 200 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = _Z9ImageSnapv &rArr; _Z23ImageSnapWithParametersPPcPj &rArr; _Z9TakePhotov &rArr; _Z16SetImagingLightsbii &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fea18]"></a>_Z18LittleEndien4bytesjPh</STRONG> (ARM, 32 bytes, Stack size 0 bytes, imaging.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41fe9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SendSalaciousImageiiPh
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
</UL>

<P><STRONG><a name="[41fe9dc]"></a>_Z15SendChasteImageiiPh</STRONG> (ARM, 880 bytes, Stack size 1304 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = _Z15SendChasteImageiiPh &rArr; _ZN12CBarcodeData16GetSaveNewBufferERPhRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36b4e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEP12CBarcodeData
<LI><a href="#[387c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPhRj
<LI><a href="#[41fea18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18LittleEndien4bytesjPh
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13TakeTwoImagesv
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
</UL>

<P><STRONG><a name="[41fe9a0]"></a>_Z18SendSalaciousImageiiPh</STRONG> (ARM, 708 bytes, Stack size 184 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _Z18SendSalaciousImageiiPh &rArr; _ZN12CBarcodeData16GetSaveNewBufferERPhRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36b4e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEP12CBarcodeData
<LI><a href="#[387c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPhRj
<LI><a href="#[41fea18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18LittleEndien4bytesjPh
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
</UL>

<P><STRONG><a name="[41fe964]"></a>_Z21RawImageShipWithParami</STRONG> (ARM, 904 bytes, Stack size 136 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2128 + Unknown Stack Size
<LI>Call Chain = _Z21RawImageShipWithParami &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
<LI><a href="#[41fe9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SendSalaciousImageiiPh
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12RawImageShipv
</UL>

<P><STRONG><a name="[41fe928]"></a>_Z12RawImageShipv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2128 + Unknown Stack Size
<LI>Call Chain = _Z12RawImageShipv &rArr; _Z21RawImageShipWithParami &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fe8ec]"></a>_Z28ProcessImageShipStyleCommandPhiib</STRONG> (ARM, 1196 bytes, Stack size 424 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28648 + Unknown Stack Size
<LI>Call Chain = _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[2277fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8xputcharh
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
<LI><a href="#[41fe4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGED1Ev
<LI><a href="#[41fe4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1Ev
<LI><a href="#[41fe52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1EPhii
<LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
<LI><a href="#[41fe5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG20SetParameterDefaultsEv
<LI><a href="#[41fe5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19ReportAllParametersEb
<LI><a href="#[41fe61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_b
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ModifyImageP7HSTRINGPiS1_S1_S1_S1_bbbiiiiiibb
</UL>
<BR>[Called By]<UL><LI><a href="#[3885748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10showSudokuPhiiPc
<LI><a href="#[41f90cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoCropImagev
<LI><a href="#[41fe7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ImageTestv
<LI><a href="#[41fe8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ImageShipv
</UL>

<P><STRONG><a name="[41fe8b0]"></a>_Z9ImageShipv</STRONG> (ARM, 240 bytes, Stack size 48 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28696 + Unknown Stack Size
<LI>Call Chain = _Z9ImageShipv &rArr; _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fe874]"></a>_Z16ImageSnapAndShipv</STRONG> (ARM, 480 bytes, Stack size 40 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28264 + Unknown Stack Size
<LI>Call Chain = _Z16ImageSnapAndShipv &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[375acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundGoodReadBeepv
<LI><a href="#[413b0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SimulateDecodingi
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[413b120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GrabFramev
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[41fe838]"></a>_Z13TakeTwoImagesv</STRONG> (ARM, 320 bytes, Stack size 40 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _Z13TakeTwoImagesv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fe7fc]"></a>_Z9ImageTestv</STRONG> (ARM, 180 bytes, Stack size 32 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28680 + Unknown Stack Size
<LI>Call Chain = _Z9ImageTestv &rArr; _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fe7c0]"></a>_Z17ImageRegisterReadv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z17ImageRegisterReadv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fe784]"></a>_Z18ImageRegisterWritev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z18ImageRegisterWritev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fe748]"></a>_Z17RowNoiseReductionv</STRONG> (ARM, 804 bytes, Stack size 64 bytes, imaging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936 + Unknown Stack Size
<LI>Call Chain = _Z17RowNoiseReductionv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41fe694]"></a>_Z9SendImageP6HIMAGEPhiibb</STRONG> (ARM, 2808 bytes, Stack size 240 bytes, Image_Send_Binarize_Himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28224 + Unknown Stack Size
<LI>Call Chain = _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[41fa92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM8TransmitEP7HSTRINGS1_bbj
<LI><a href="#[41fa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE9SmoothingEv
<LI><a href="#[41fa9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE8RowNoiseEii
<LI><a href="#[41fa9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE22AdaptiveUltraTextImageEv
<LI><a href="#[41faa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE19InfinityFilterImageEv
<LI><a href="#[41faa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE16EdgeSharpenImageEi
<LI><a href="#[41faa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14UltraTextImageEv
<LI><a href="#[41faad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14SubsampleImageEi
<LI><a href="#[41fab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14ImageRotateRGBEi
<LI><a href="#[41fab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14HistogramImageEv
<LI><a href="#[41fab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE13FlySpeckImageEv
<LI><a href="#[41fabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12StretchImageEv
<LI><a href="#[41fabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FlattenImageEv
<LI><a href="#[41fac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FissionImageEv
<LI><a href="#[41fac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11ImageRotateEi
<LI><a href="#[41facb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FusionImageEv
<LI><a href="#[41facec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE10GammaImageEi
<LI><a href="#[41fad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18ValidateParametersEv
<LI><a href="#[41fad64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG14CopyParametersEPS_
<LI><a href="#[41fada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13NonMenuHModemD1Ev
<LI><a href="#[41faddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13NonMenuHModemC1Ev
<LI><a href="#[41fe4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGED1Ev
<LI><a href="#[41fe52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1EPhii
<LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
<LI><a href="#[41fe5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19ReportAllParametersEb
<LI><a href="#[41fe61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_b
<LI><a href="#[41fe70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ModifyImageP7HSTRINGPiS1_S1_S1_S1_bbbiiiiiibb
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[41faff8]"></a>_ZN15BINARIZE_HIMAGE11BinaryImageEPhPmiii</STRONG> (ARM, 992 bytes, Stack size 80 bytes, Image_Send_Binarize_Himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1952 + Unknown Stack Size
<LI>Call Chain = _ZN15BINARIZE_HIMAGE11BinaryImageEPhPmiii &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[41fafbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15BINARIZE_HIMAGE8BinarizeEP9BITSTRINGS1_iib
</UL>

<P><STRONG><a name="[41fafbc]"></a>_ZN15BINARIZE_HIMAGE8BinarizeEP9BITSTRINGS1_iib</STRONG> (ARM, 300 bytes, Stack size 48 bytes, Image_Send_Binarize_Himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = _ZN15BINARIZE_HIMAGE8BinarizeEP9BITSTRINGS1_iib &rArr; _ZN15BINARIZE_HIMAGE11BinaryImageEPhPmiii &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[41fa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING13MaximumLengthEv
<LI><a href="#[41faff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15BINARIZE_HIMAGE11BinaryImageEPhPmiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
</UL>
<P><STRONG><a name="[38856d0]"></a>_Z17ComputeImageScorePhiiii</STRONG> (ARM, 656 bytes, Stack size 80 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z17ComputeImageScorePhiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[374f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessLinearScanPh
<LI><a href="#[374f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15GetBestNewImagePPh
</UL>

<P><STRONG><a name="[41f9180]"></a>_Z20BiCubicInterpolationPhiiiii</STRONG> (ARM, 308 bytes, Stack size 44 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z20BiCubicInterpolationPhiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TransmutePhS_iiiiiiiiiiiii
</UL>

<P><STRONG><a name="[41f9144]"></a>_Z9TransmutePhS_iiiiiiiiiiiii</STRONG> (ARM, 596 bytes, Stack size 104 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _Z9TransmutePhS_iiiiiiiiiiiii &rArr; _Z20BiCubicInterpolationPhiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[41f9180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20BiCubicInterpolationPhiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f90cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoCropImagev
</UL>

<P><STRONG><a name="[41f9108]"></a>_Z10DoAutoCropPhiiiP5PointS1_S1_S1_</STRONG> (ARM, 4068 bytes, Stack size 1848 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4136 + Unknown Stack Size
<LI>Call Chain = _Z10DoAutoCropPhiiiP5PointS1_S1_S1_ &rArr; _Z10ImgOutLineP9Workspace5PointS1_ &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[41f9db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7SetRailP4Rail5PointS1_
<LI><a href="#[41f9ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ClosestPntP4Rail5PointS1_S1_
<LI><a href="#[41f9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ImgOutLineP9Workspace5PointS1_
<LI><a href="#[41f9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13LoResBinarizeP9Workspaceii
<LI><a href="#[41fa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10EglOutLineP9Workspace5PointS1_
<LI><a href="#[41fa0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SampleImageP9Workspace
<LI><a href="#[41fa0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9Transform5Pointii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f90cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoCropImagev
</UL>

<P><STRONG><a name="[41f90cc]"></a>_Z13AutoCropImagev</STRONG> (ARM, 740 bytes, Stack size 128 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28776 + Unknown Stack Size
<LI>Call Chain = _Z13AutoCropImagev &rArr; _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[41f9054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11FixRowNoisePhiiiii
<LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
<LI><a href="#[41f9144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TransmutePhS_iiiiiiiiiiiii
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41f9090]"></a>_Z16HistogramStretchPhiiii</STRONG> (ARM, 320 bytes, Stack size 1056 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = _Z16HistogramStretchPhiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[3885748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10showSudokuPhiiPc
</UL>

<P><STRONG><a name="[3885748]"></a>_Z10showSudokuPhiiPc</STRONG> (ARM, 1412 bytes, Stack size 152 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28800 + Unknown Stack Size
<LI>Call Chain = _Z10showSudokuPhiiPc &rArr; _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[41f9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16HistogramStretchPhiiii
<LI><a href="#[41fa080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11PointSpreadP5PointS0_iii
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[41f7d58]"></a>_Z15SetLightsCommoniiii</STRONG> (ARM, 676 bytes, Stack size 168 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4065058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken32IAmThreeLevelIllumination_NonOemEv
</UL>
<BR>[Called By]<UL><LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
</UL>

<P><STRONG><a name="[413dc40]"></a>_Z9SetLightsiiii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[41f7d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SetLightsCommoniiii
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413b198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29HandleOriginalLightsDutyCyclei
<LI><a href="#[413b2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SetImagingLightsbii
<LI><a href="#[413e000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14OpticalTriggerEv
<LI><a href="#[413e0f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger26SetHeatMitigationScanStandEiibbb
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv
</UL>

<P><STRONG><a name="[41fe6d0]"></a>_Z9GetLightsi</STRONG> (ARM, 228 bytes, Stack size 96 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = _Z9GetLightsi &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[413b198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29HandleOriginalLightsDutyCyclei
</UL>

<P><STRONG><a name="[413dcf4]"></a>_Z13InBatchedModev</STRONG> (ARM, 52 bytes, Stack size 0 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[413e12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger29WaitForHeatMitigationCoolDownEjj
</UL>

<P><STRONG><a name="[413dcb8]"></a>_Z17NewImageAvailablev</STRONG> (ARM, 112 bytes, Stack size 16 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _Z17NewImageAvailablev &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[38807d4]"></a>_Z12StartImagingv</STRONG> (ARM, 112 bytes, Stack size 16 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _Z12StartImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[413dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18PrepareForScanningEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
</UL>

<P><STRONG><a name="[388084c]"></a>_Z11StopImagingv</STRONG> (ARM, 52 bytes, Stack size 16 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _Z11StopImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[388093c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Prepare_System_for_Suspendv
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
</UL>

<P><STRONG><a name="[413dc7c]"></a>_Z8GetImagev</STRONG> (ARM, 316 bytes, Stack size 32 bytes, ScanDriverImagingInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = _Z8GetImagev &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
</UL>

<P><STRONG><a name="[41f6bc4]"></a>_Z19ParseImageBoxHeaderP7HSTRINGP6HIMAGEPi</STRONG> (ARM, 720 bytes, Stack size 48 bytes, sigcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _Z19ParseImageBoxHeaderP7HSTRINGP6HIMAGEPi &rArr; _ZN7HSTRING15ConvertToNumberEiPi &rArr; _ZN7HSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
<LI><a href="#[41f6a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPj
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
</UL>

<P><STRONG><a name="[41f6b88]"></a>_Z3pnt5pointS_i</STRONG> (ARM, 96 bytes, Stack size 32 bytes, sigcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z3pnt5pointS_i
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
</UL>

<P><STRONG><a name="[41f6b4c]"></a>_Z11pntPDFlin_x5pointS_i</STRONG> (ARM, 96 bytes, Stack size 32 bytes, sigcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z11pntPDFlin_x5pointS_i
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
</UL>

<P><STRONG><a name="[41f6b10]"></a>_Z11pntPDFlin_y5pointS_i</STRONG> (ARM, 96 bytes, Stack size 32 bytes, sigcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z11pntPDFlin_y5pointS_i
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
</UL>

<P><STRONG><a name="[41f6ad4]"></a>_Z10DumpImgBoxv</STRONG> (ARM, 1876 bytes, Stack size 448 bytes, sigcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28672 + Unknown Stack Size
<LI>Call Chain = _Z10DumpImgBoxv &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[41f6a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8subpixelPvll
<LI><a href="#[41f6a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20GetBestSymbolCornersP7tagRect
<LI><a href="#[41f6b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11pntPDFlin_y5pointS_i
<LI><a href="#[41f6b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11pntPDFlin_x5pointS_i
<LI><a href="#[41f6b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z3pnt5pointS_i
<LI><a href="#[41f6bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ParseImageBoxHeaderP7HSTRINGP6HIMAGEPi
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
<LI><a href="#[41fe4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGED1Ev
<LI><a href="#[41fe4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1Ev
<LI><a href="#[41fe5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG20SetParameterDefaultsEv
<LI><a href="#[41fe5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19ReportAllParametersEb
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[41f51fc]"></a>_Z13IntersectionS5PointS_S_S_Pi</STRONG> (ARM, 224 bytes, Stack size 56 bytes, sigcaptureut.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z13IntersectionS5PointS_S_S_Pi
</UL>
<BR>[Called By]<UL><LI><a href="#[41f5058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DefineCornersPv
</UL>

<P><STRONG><a name="[41f5094]"></a>_Z17linear_regressionPiS_i</STRONG> (ARM, 288 bytes, Stack size 56 bytes, sigcaptureut.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z17linear_regressionPiS_i
</UL>
<BR>[Called By]<UL><LI><a href="#[41f5058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DefineCornersPv
</UL>

<P><STRONG><a name="[41f5058]"></a>_Z13DefineCornersPv</STRONG> (ARM, 3944 bytes, Stack size 12584 bytes, sigcaptureut.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12640<LI>Call Chain = _Z13DefineCornersPv &rArr; _Z17linear_regressionPiS_i
</UL>
<BR>[Calls]<UL><LI><a href="#[41f5094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17linear_regressionPiS_i
<LI><a href="#[41f51fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13IntersectionS5PointS_S_S_Pi
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20GetBestSymbolCornersP7tagRect
</UL>

<P><STRONG><a name="[41f6a98]"></a>_Z20GetBestSymbolCornersP7tagRect</STRONG> (ARM, 868 bytes, Stack size 88 bytes, sigcaptureut.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12728<LI>Call Chain = _Z20GetBestSymbolCornersP7tagRect &rArr; _Z13DefineCornersPv &rArr; _Z17linear_regressionPiS_i
</UL>
<BR>[Calls]<UL><LI><a href="#[41f5058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DefineCornersPv
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
</UL>

<P><STRONG><a name="[41f6a5c]"></a>_Z8subpixelPvll</STRONG> (ARM, 100 bytes, Stack size 12 bytes, sigcaptureut.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z8subpixelPvll
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
</UL>

<P><STRONG><a name="[36ba08c]"></a>_Z14PSOC_Port_Initv</STRONG> (ARM, 108 bytes, Stack size 0 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36ba230]"></a>_Z10reset_psocv</STRONG> (ARM, 236 bytes, Stack size 24 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z10reset_psocv
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[433bfc8]"></a>_Z14EngSetComLinesj</STRONG> (ARM, 236 bytes, Stack size 4 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z14EngSetComLinesj
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
</UL>

<P><STRONG><a name="[433bf8c]"></a>_Z12EngResetPsocv</STRONG> (ARM, 236 bytes, Stack size 24 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z12EngResetPsocv
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
<LI><a href="#[433bde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14EngAcquirePsocv
</UL>

<P><STRONG><a name="[433bf50]"></a>_Z22EngWaitForSdataLowPsocv</STRONG> (ARM, 540 bytes, Stack size 20 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z22EngWaitForSdataLowPsocv
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
<LI><a href="#[433bd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EngVerifyIdPsocv
<LI><a href="#[433bdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EraseEnginePsocv
<LI><a href="#[433bde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14EngAcquirePsocv
<LI><a href="#[433be24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19EngProgramFlashPsocv
<LI><a href="#[433be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngVerifyFlashChecksumPsocv
</UL>

<P><STRONG><a name="[433bf14]"></a>_Z24EngSend22bitStreamToPsocj</STRONG> (ARM, 352 bytes, Stack size 12 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z24EngSend22bitStreamToPsocj
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
<LI><a href="#[433bdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EraseEnginePsocv
<LI><a href="#[433bde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14EngAcquirePsocv
<LI><a href="#[433be24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19EngProgramFlashPsocv
<LI><a href="#[433be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngVerifyFlashChecksumPsocv
<LI><a href="#[433bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSendVectorArrayToPsocPKj
</UL>

<P><STRONG><a name="[433bed8]"></a>_Z24EngSendVectorArrayToPsocPKj</STRONG> (ARM, 180 bytes, Stack size 16 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z24EngSendVectorArrayToPsocPKj &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[433bf14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSend22bitStreamToPsocj
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
<LI><a href="#[433bd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EngVerifyIdPsocv
<LI><a href="#[433bdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EraseEnginePsocv
<LI><a href="#[433be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngVerifyFlashChecksumPsocv
</UL>

<P><STRONG><a name="[433be9c]"></a>_Z26EngWaitForSdataLowPsocSlowv</STRONG> (ARM, 672 bytes, Stack size 32 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z26EngWaitForSdataLowPsocSlowv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[433be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngVerifyFlashChecksumPsocv
</UL>

<P><STRONG><a name="[433be60]"></a>_Z26EngVerifyFlashChecksumPsocv</STRONG> (ARM, 960 bytes, Stack size 168 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _Z26EngVerifyFlashChecksumPsocv &rArr; _Z26EngWaitForSdataLowPsocSlowv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[433be9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngWaitForSdataLowPsocSlowv
<LI><a href="#[433bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSendVectorArrayToPsocPKj
<LI><a href="#[433bf14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSend22bitStreamToPsocj
<LI><a href="#[433bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EngWaitForSdataLowPsocv
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
</UL>

<P><STRONG><a name="[433be24]"></a>_Z19EngProgramFlashPsocv</STRONG> (ARM, 484 bytes, Stack size 40 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z19EngProgramFlashPsocv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[433bf14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSend22bitStreamToPsocj
<LI><a href="#[433bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EngWaitForSdataLowPsocv
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
</UL>

<P><STRONG><a name="[433bde8]"></a>_Z14EngAcquirePsocv</STRONG> (ARM, 396 bytes, Stack size 32 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z14EngAcquirePsocv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[433bf14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSend22bitStreamToPsocj
<LI><a href="#[433bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EngWaitForSdataLowPsocv
<LI><a href="#[433bf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EngResetPsocv
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
<LI><a href="#[433bdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EraseEnginePsocv
</UL>

<P><STRONG><a name="[433bdac]"></a>_Z15EraseEnginePsocv</STRONG> (ARM, 404 bytes, Stack size 40 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _Z15EraseEnginePsocv &rArr; _Z14EngAcquirePsocv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[433bde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14EngAcquirePsocv
<LI><a href="#[433bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSendVectorArrayToPsocPKj
<LI><a href="#[433bf14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSend22bitStreamToPsocj
<LI><a href="#[433bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EngWaitForSdataLowPsocv
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
</UL>

<P><STRONG><a name="[433bd70]"></a>_Z15EngVerifyIdPsocv</STRONG> (ARM, 136 bytes, Stack size 16 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z15EngVerifyIdPsocv &rArr; _Z24EngSendVectorArrayToPsocPKj &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[433bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSendVectorArrayToPsocPKj
<LI><a href="#[433bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EngWaitForSdataLowPsocv
</UL>
<BR>[Called By]<UL><LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
</UL>

<P><STRONG><a name="[433bd34]"></a>_Z15FlashEnginePsocPKhj</STRONG> (ARM, 944 bytes, Stack size 152 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _Z15FlashEnginePsocPKhj &rArr; _Z26EngVerifyFlashChecksumPsocv &rArr; _Z26EngWaitForSdataLowPsocSlowv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[433bd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EngVerifyIdPsocv
<LI><a href="#[433bdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EraseEnginePsocv
<LI><a href="#[433bde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14EngAcquirePsocv
<LI><a href="#[433be24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19EngProgramFlashPsocv
<LI><a href="#[433be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26EngVerifyFlashChecksumPsocv
<LI><a href="#[433bed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSendVectorArrayToPsocPKj
<LI><a href="#[433bf14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24EngSend22bitStreamToPsocj
<LI><a href="#[433bf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EngWaitForSdataLowPsocv
<LI><a href="#[433bf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EngResetPsocv
<LI><a href="#[433bfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14EngSetComLinesj
</UL>
<BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
</UL>

<P><STRONG><a name="[3885694]"></a>_Z18ImageEngineHasPsocv</STRONG> (ARM, 60 bytes, Stack size 16 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _Z18ImageEngineHasPsocv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
</UL>

<P><STRONG><a name="[4339430]"></a>_Z19GetNextPsocHexDigitPKhPiPj</STRONG> (ARM, 160 bytes, Stack size 12 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z19GetNextPsocHexDigitPKhPiPj
</UL>
<BR>[Called By]<UL><LI><a href="#[43393f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Psoc5100GetHexDataPKhtP20PSoC_5100_HEX_RECORD
</UL>

<P><STRONG><a name="[43393f4]"></a>_Z18Psoc5100GetHexDataPKhtP20PSoC_5100_HEX_RECORD</STRONG> (ARM, 420 bytes, Stack size 36 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z18Psoc5100GetHexDataPKhtP20PSoC_5100_HEX_RECORD &rArr; _Z19GetNextPsocHexDigitPKhPiPj
</UL>
<BR>[Calls]<UL><LI><a href="#[4339430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GetNextPsocHexDigitPKhPiPj
</UL>
<BR>[Called By]<UL><LI><a href="#[43391d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100CalculateDnldChecksumtt
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
<LI><a href="#[4339610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocCompareFirmwareVersionv
</UL>

<P><STRONG><a name="[43393b8]"></a>_Z23Psoc5100DelayInMilliSeci</STRONG> (ARM, 128 bytes, Stack size 24 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z23Psoc5100DelayInMilliSeci
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[4339124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100SaveToEEpromv
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
</UL>

<P><STRONG><a name="[433937c]"></a>_Z20Psoc5100ProgramBlocktj</STRONG> (ARM, 436 bytes, Stack size 200 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2168 + Unknown Stack Size
<LI>Call Chain = _Z20Psoc5100ProgramBlocktj &rArr; _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[4060120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitMillisecondsBYDm
<LI><a href="#[406015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerPowerDownBYDv
<LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
<LI><a href="#[4060210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerIsPoweredBYDv
<LI><a href="#[4068af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr36Receive_Data_Bytes_W_Char_Buffer_I2CEhPhj
<LI><a href="#[4068b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii
<LI><a href="#[43393b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Psoc5100DelayInMilliSeci
<LI><a href="#[43393f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Psoc5100GetHexDataPKhtP20PSoC_5100_HEX_RECORD
</UL>
<BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
</UL>

<P><STRONG><a name="[4339340]"></a>_Z19Psoc5100SendCommandhbj</STRONG> (ARM, 188 bytes, Stack size 56 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024 + Unknown Stack Size
<LI>Call Chain = _Z19Psoc5100SendCommandhbj &rArr; _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4060120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitMillisecondsBYDm
<LI><a href="#[406015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerPowerDownBYDv
<LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
<LI><a href="#[4060210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerIsPoweredBYDv
<LI><a href="#[4068af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr36Receive_Data_Bytes_W_Char_Buffer_I2CEhPhj
<LI><a href="#[4068b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii
<LI><a href="#[43393b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Psoc5100DelayInMilliSeci
</UL>
<BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
</UL>

<P><STRONG><a name="[4339304]"></a>_Z12Psoc5100ReadiPci</STRONG> (ARM, 64 bytes, Stack size 32 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = _Z12Psoc5100ReadiPci &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
</UL>

<P><STRONG><a name="[388561c]"></a>_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE</STRONG> (ARM, 464 bytes, Stack size 56 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = _Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[43392c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21GetEnginePSOCRevisionPjS_
<LI><a href="#[4339610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocCompareFirmwareVersionv
<LI><a href="#[5300a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ShowEngineFirmwareSettingListv
<LI><a href="#[5300a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ShowEngineFirmwareFullReportv
<LI><a href="#[5300a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ShowEngineFirmwareChecksumv
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
</UL>

<P><STRONG><a name="[43392c8]"></a>_Z21GetEnginePSOCRevisionPjS_</STRONG> (ARM, 124 bytes, Stack size 80 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = _Z21GetEnginePSOCRevisionPjS_ &rArr; _Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
</UL>
<BR>[Called By]<UL><LI><a href="#[4339250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnginePSOCValidateRevisionUpdatePKhjbbb
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
<LI><a href="#[4339610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocCompareFirmwareVersionv
<LI><a href="#[5300970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36GetEngineFirmwareRevisionInformationv
</UL>

<P><STRONG><a name="[433928c]"></a>_Z22EnginePSOCFindRevisionPKhjPjS1_</STRONG> (ARM, 312 bytes, Stack size 112 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _Z22EnginePSOCFindRevisionPKhjPjS1_ &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[4339034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11HexToBinaryEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4339250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnginePSOCValidateRevisionUpdatePKhjbbb
<LI><a href="#[4339610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocCompareFirmwareVersionv
</UL>

<P><STRONG><a name="[4339250]"></a>_Z32EnginePSOCValidateRevisionUpdatePKhjbbb</STRONG> (ARM, 492 bytes, Stack size 56 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = _Z32EnginePSOCValidateRevisionUpdatePKhjbbb &rArr; _Z21GetEnginePSOCRevisionPjS_ &rArr; _Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[433928c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EnginePSOCFindRevisionPKhjPjS1_
<LI><a href="#[43392c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21GetEnginePSOCRevisionPjS_
</UL>
<BR>[Called By]<UL><LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
</UL>

<P><STRONG><a name="[4339214]"></a>_Z24Psoc5100FlashNewFirmwarebbb</STRONG> (ARM, 2656 bytes, Stack size 6256 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8424 + Unknown Stack Size
<LI>Call Chain = _Z24Psoc5100FlashNewFirmwarebbb &rArr; _Z20Psoc5100ProgramBlocktj &rArr; _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[4060120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitMillisecondsBYDm
<LI><a href="#[406015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerPowerDownBYDv
<LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
<LI><a href="#[4060210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImagerIsPoweredBYDv
<LI><a href="#[4068af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr36Receive_Data_Bytes_W_Char_Buffer_I2CEhPhj
<LI><a href="#[4068b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii
<LI><a href="#[4339250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnginePSOCValidateRevisionUpdatePKhjbbb
<LI><a href="#[4339340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19Psoc5100SendCommandhbj
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
<LI><a href="#[43393b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Psoc5100DelayInMilliSeci
<LI><a href="#[43393f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Psoc5100GetHexDataPKhtP20PSoC_5100_HEX_RECORD
<LI><a href="#[433bd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FlashEnginePsocPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[433919c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100LoadFirmwareDataPhibb
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
</UL>

<P><STRONG><a name="[43391d8]"></a>_Z29Psoc5100CalculateDnldChecksumtt</STRONG> (ARM, 420 bytes, Stack size 120 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = _Z29Psoc5100CalculateDnldChecksumtt &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[43393f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Psoc5100GetHexDataPKhtP20PSoC_5100_HEX_RECORD
</UL>
<BR>[Called By]<UL><LI><a href="#[433919c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100LoadFirmwareDataPhibb
</UL>

<P><STRONG><a name="[433919c]"></a>_Z24Psoc5100LoadFirmwareDataPhibb</STRONG> (ARM, 344 bytes, Stack size 48 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8472 + Unknown Stack Size
<LI>Call Chain = _Z24Psoc5100LoadFirmwareDataPhibb &rArr; _Z24Psoc5100FlashNewFirmwarebbb &rArr; _Z20Psoc5100ProgramBlocktj &rArr; _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[43391d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100CalculateDnldChecksumtt
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
</UL>
<BR>[Called By]<UL><LI><a href="#[5300b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23WriteEngineFirmwareFilev
</UL>

<P><STRONG><a name="[4339160]"></a>_Z13Psoc5100WritePKci</STRONG> (ARM, 72 bytes, Stack size 24 bytes, ScanEnginePSOC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
</UL>

<P><STRONG><a name="[4339124]"></a>_Z20Psoc5100SaveToEEpromv</STRONG> (ARM, 84 bytes, Stack size 24 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _Z20Psoc5100SaveToEEpromv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[43393b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Psoc5100DelayInMilliSeci
</UL>
<BR>[Called By]<UL><LI><a href="#[5300cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18EngineWriteRamToEEv
</UL>

<P><STRONG><a name="[43390e8]"></a>_Z13Psoc5100WriteiPhi</STRONG> (ARM, 60 bytes, Stack size 32 bytes, ScanEnginePSOC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
</UL>

<P><STRONG><a name="[4339610]"></a>_Z26PsocCompareFirmwareVersionv</STRONG> (ARM, 360 bytes, Stack size 208 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = _Z26PsocCompareFirmwareVersionv &rArr; _Z21GetEnginePSOCRevisionPjS_ &rArr; _Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[433928c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EnginePSOCFindRevisionPKhjPjS1_
<LI><a href="#[43392c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21GetEnginePSOCRevisionPjS_
<LI><a href="#[43393f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Psoc5100GetHexDataPKhtP20PSoC_5100_HEX_RECORD
</UL>
<BR>[Called By]<UL><LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
</UL>

<P><STRONG><a name="[433955c]"></a>_Z29Psoc5100VerifyFirmwareVersionb</STRONG> (ARM, 1448 bytes, Stack size 80 bytes, ScanEnginePSOC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8504 + Unknown Stack Size
<LI>Call Chain = _Z29Psoc5100VerifyFirmwareVersionb &rArr; _Z24Psoc5100FlashNewFirmwarebbb &rArr; _Z20Psoc5100ProgramBlocktj &rArr; _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[43392c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21GetEnginePSOCRevisionPjS_
<LI><a href="#[4339610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocCompareFirmwareVersionv
</UL>
<BR>[Called By]<UL><LI><a href="#[5300ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26WriteDefaultEngineFirmwarev
</UL>

<P><STRONG><a name="[4337edc]"></a>_ZN11CDriverBaseC2Ejj</STRONG> (ARM, 148 bytes, Stack size 24 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[38853c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoC1Ej
<LI><a href="#[4337810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifoC1Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[4337018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16CreateNullDriverv
<LI><a href="#[440eee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverC1Ejj
<LI><a href="#[440ffc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadC1EP6Uart_T15vector_number_t
</UL>

<P><STRONG><a name="[4337ea0]"></a>_ZN11CDriverBaseD1Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, driverbase.o(.text), UNUSED)

<P><STRONG><a name="[4337e64]"></a>_ZN11CDriverBaseD2Ev</STRONG> (ARM, 84 bytes, Stack size 16 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CDriverBaseD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[432fa34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CNullDriverD0Ev
<LI><a href="#[440edf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD0Ev
<LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
<LI><a href="#[440fde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadD0Ev
<LI><a href="#[440fe60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driverbase.o(.constdata__ZTV11CDriverBase)
</UL>
<P><STRONG><a name="[4337e28]"></a>_ZN11CDriverBaseD0Ev</STRONG> (ARM, 88 bytes, Stack size 16 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CDriverBaseD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driverbase.o(.constdata__ZTV11CDriverBase)
</UL>
<P><STRONG><a name="[4337dec]"></a>_ZN11CDriverBase13AutoTranslateEP12CBarcodeData</STRONG> (ARM, 16 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _ZN11CDriverBase13AutoTranslateEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
</UL>
<BR>[Called By]<UL><LI><a href="#[4528ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835WriteEP12CBarcodeData
</UL>

<P><STRONG><a name="[4337db0]"></a>_ZN11CDriverBase5WriteEP12CBarcodeData</STRONG> (ARM, 44 bytes, Stack size 16 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = _ZN11CDriverBase5WriteEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
<LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[440ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5WriteEP12CBarcodeData
<LI><a href="#[440fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread5WriteEP12CBarcodeData
<LI><a href="#[46d0e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamily5WriteEP12CBarcodeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driverbase.o(.constdata__ZTV11CDriverBase)
</UL>
<P><STRONG><a name="[4337d74]"></a>_ZN11CDriverBase5WriteEPKhj</STRONG> (ARM, 88 bytes, Stack size 24 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN11CDriverBase5WriteEPKhj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[38854f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[440e9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5WriteEPKhj
<LI><a href="#[440fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread5WriteEPKhj
<LI><a href="#[4528aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835WriteEPKhj
<LI><a href="#[46d0d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamily5WriteEPKhj
<LI><a href="#[4882da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base5WriteEPKhj
<LI><a href="#[49f69a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos5WriteEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driverbase.o(.constdata__ZTV11CDriverBase)
</UL>
<P><STRONG><a name="[4337d38]"></a>_ZN11CDriverBase5WriteEPKwj</STRONG> (ARM, 76 bytes, Stack size 16 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _ZN11CDriverBase5WriteEPKwj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKwj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[4337978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKwj
</UL>
<BR>[Called By]<UL><LI><a href="#[4528a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835WriteEPKwj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driverbase.o(.constdata__ZTV11CDriverBase)
</UL>
<P><STRONG><a name="[4337cfc]"></a>_ZN11CDriverBase11DirectWriteEiPh</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR>[Address Reference Count : 15]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> driverbase.o(.constdata__ZTV11CDriverBase)
<LI> nulldriver.o(.constdata__ZTV11CNullDriver)
<LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4337cc0]"></a>_ZN11CDriverBase4ReadEPhj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN11CDriverBase4ReadEPhj &rArr; _ZN7CRxFifo4ReadEPhj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[433784c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo4ReadEPhj
</UL>
<BR>[Address Reference Count : 14]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> driverbase.o(.constdata__ZTV11CDriverBase)
<LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4337c84]"></a>_ZN11CDriverBase4PeekEPhj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN11CDriverBase4PeekEPhj &rArr; _ZN7CRxFifo4PeekEPhj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4337888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo4PeekEPhj
</UL>
<BR>[Address Reference Count : 14]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> driverbase.o(.constdata__ZTV11CDriverBase)
<LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4337c48]"></a>_ZN11CDriverBase11IsAnyRxDataEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN11CDriverBase11IsAnyRxDataEv &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Address Reference Count : 14]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> driverbase.o(.constdata__ZTV11CDriverBase)
<LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4337c0c]"></a>_ZN11CDriverBase4OpenEsPKw</STRONG> (ARM, 28 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
<LI><a href="#[440fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread4OpenEsPKw
</UL>

<P><STRONG><a name="[4337bd0]"></a>_ZN11CDriverBase11SentBarcodeEv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN11CDriverBase11SentBarcodeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[44072b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase14PostSendActionEv
<LI><a href="#[440ff14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread13SimpleSendISREv
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[4882e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base12StartSendingEv
<LI><a href="#[4b44e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem12StartSendingEv
<LI><a href="#[4b4cba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd12StartSendingEv
</UL>

<P><STRONG><a name="[4337b94]"></a>_ZN11CDriverBase16GetBarcodeToSendEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CDriverBase16GetBarcodeToSendEv &rArr; _ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Calls]<UL><LI><a href="#[433793c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4407364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase12StartSendingEv
<LI><a href="#[4407490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver12StartSendingEv
<LI><a href="#[44074cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver8SendSlowEv
<LI><a href="#[440ff14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread13SimpleSendISREv
<LI><a href="#[440ff50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread12StartSendingEv
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[4882e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base12StartSendingEv
<LI><a href="#[4b44e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem12StartSendingEv
<LI><a href="#[4b4cba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd12StartSendingEv
</UL>

<P><STRONG><a name="[4337b58]"></a>_ZNK11CDriverBase13AnyDataToSendEv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZNK11CDriverBase13AnyDataToSendEv &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440eab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver10ThreadLoopEv
<LI><a href="#[440ff14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread13SimpleSendISREv
<LI><a href="#[440ff50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread12StartSendingEv
<LI><a href="#[45fa6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15SendLabelThreadEv
<LI><a href="#[4882f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base10ThreadLoopEv
<LI><a href="#[49f69e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos10ThreadLoopEv
<LI><a href="#[4b4cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd10ThreadLoopEv
</UL>

<P><STRONG><a name="[4337b1c]"></a>_ZN11CDriverBase11FlushTxFifoEv</STRONG> (ARM, 232 bytes, Stack size 24 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
<LI><a href="#[433793c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Called By]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[4333aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan7TxFlushEv
<LI><a href="#[4337ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5CloseEv
<LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
<LI><a href="#[4b44e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem15DeviceIoControlE11IoControl_tlj
</UL>

<P><STRONG><a name="[4337ae0]"></a>_ZN11CDriverBase5CloseEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN11CDriverBase5CloseEv &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
<LI><a href="#[440fd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread5CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driverbase.o(.constdata__ZTV11CDriverBase)
</UL>
<P><STRONG><a name="[4337aa4]"></a>_ZN11CDriverBase15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 104 bytes, Stack size 8 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440eccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj
<LI><a href="#[440fcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driverbase.o(.constdata__ZTV11CDriverBase)
</UL>
<P><STRONG><a name="[4337a68]"></a>_ZN11CDriverBase18GetTxFifoFillLevelEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN11CDriverBase18GetTxFifoFillLevelEv &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Address Reference Count : 14]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> driverbase.o(.constdata__ZTV11CDriverBase)
<LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4337a2c]"></a>_ZN11CDriverBase17GetInterCharDelayEw</STRONG> (ARM, 44 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
<LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
</UL>

<P><STRONG><a name="[43379f0]"></a>_ZN11CDriverBase20IsAnyCharacterDelaysEv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, driverbase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4407490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver12StartSendingEv
<LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[43379b4]"></a>_ZN11CDriverBase17ExtractParametersEPKw</STRONG> (ARM, 356 bytes, Stack size 24 bytes, driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN11CDriverBase17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwS1_RVm &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[43378c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVm
<LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi
</UL>
<BR>[Address Reference Count : 14]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> driverbase.o(.constdata__ZTV11CDriverBase)
<LI> nulldriver.o(.constdata__ZTV11CNullDriver)
<LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4333fd0]"></a>_ZN6CIoMan15IsPortAvailableEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessEngineDatav
<LI><a href="#[55e2f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm5WriteEPci
</UL>

<P><STRONG><a name="[2277c28]"></a>_Z18IsInterfaceRunningv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[2277f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKh
<LI><a href="#[2277f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKhi
<LI><a href="#[2277fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8xputcharh
<LI><a href="#[2277fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8get_charv
<LI><a href="#[2278024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5kbhitv
<LI><a href="#[2278060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25poll_getchar_from_rx_fifov
<LI><a href="#[38855e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKci
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[530a5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKc
<LI><a href="#[535bfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ReportMaximumMessageSizev
<LI><a href="#[55e2f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm5WriteEPci
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
</UL>

<P><STRONG><a name="[4333b98]"></a>_Z23DoesInterfaceDoSimpleIOv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55e2f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm5WriteEPci
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
</UL>

<P><STRONG><a name="[36af394]"></a>_ZN6CIoMan15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 360 bytes, Stack size 24 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Called By]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[36af8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit20GetSizeAndEditStringEP13PREFIX_SUFFIXiRP7HSTRING
<LI><a href="#[36af970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit7AddXfixEP12CBarcodeDataPwjP7HSTRING
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci22OnChangedConfigurationEv
<LI><a href="#[36b9ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Restore_System_from_Suspendv
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
<LI><a href="#[36b9ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ManageSystemPowerv
<LI><a href="#[36b9f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SoundPowerupBeepv
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
<LI><a href="#[388093c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Prepare_System_for_Suspendv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
<LI><a href="#[38852d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[406de9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27AlertDriverOfSettingsChangev
<LI><a href="#[406ded8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UpdateImageTransferSettingsv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[4333a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan12InternalOpenEsPKw
<LI><a href="#[4333a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan17OpenOnlyIfChangedEsPKw
<LI><a href="#[4333b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z44IntercharacterReceiveTimeoutForThisInterfacev
<LI><a href="#[4882f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base5CloseEv
<LI><a href="#[4882fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base4OpenEsPKw
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
<LI><a href="#[4ecde7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
</UL>

<P><STRONG><a name="[4333b5c]"></a>_Z44IntercharacterReceiveTimeoutForThisInterfacev</STRONG> (ARM, 72 bytes, Stack size 8 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z44IntercharacterReceiveTimeoutForThisInterfacev &rArr; _ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Called By]<UL><LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
</UL>

<P><STRONG><a name="[4333b20]"></a>_ZN6CIoManC1Ev</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan19CreateStdInterfacesEv
</UL>

<P><STRONG><a name="[4333ae4]"></a>_ZN6CIoManC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ioman.o(.text), UNUSED)

<P><STRONG><a name="[4333aa8]"></a>_ZN6CIoMan7TxFlushEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN6CIoMan7TxFlushEv &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
</UL>
<BR>[Called By]<UL><LI><a href="#[55e3130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm16FlushWriteBufferEv
</UL>

<P><STRONG><a name="[2277b74]"></a>_ZN6CIoMan13WaitUntilSentEmb</STRONG> (ARM, 212 bytes, Stack size 32 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
</UL>
<BR>[Called By]<UL><LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[406bc64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5CloseEv
<LI><a href="#[4333a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan17OpenOnlyIfChangedEsPKw
</UL>

<P><STRONG><a name="[406bc64]"></a>_ZN6CIoMan5CloseEv</STRONG> (ARM, 120 bytes, Stack size 16 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN6CIoMan5CloseEv &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
</UL>
<BR>[Called By]<UL><LI><a href="#[4333a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan12InternalOpenEsPKw
</UL>

<P><STRONG><a name="[36b9060]"></a>_ZN6CIoMan19CreateStdInterfacesEv</STRONG> (ARM, 156 bytes, Stack size 8 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN6CIoMan19CreateStdInterfacesEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4333b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoManC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[2277ac0]"></a>_ZN6CIoMan5WriteEPKhj</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2277f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKh
<LI><a href="#[2277f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKhi
<LI><a href="#[2277fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8xputcharh
<LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b4fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CRemRouterLob13RouteImageLobEiPK7HSTRINGS2_
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[38855e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKci
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[41fe9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SendSalaciousImageiiPh
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
<LI><a href="#[51d1f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DumpSPIFlashv
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[53031fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskReadFilev
<LI><a href="#[53032ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7DbgEchov
<LI><a href="#[530a5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKc
<LI><a href="#[55e2f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm5WriteEPci
</UL>

<P><STRONG><a name="[2277afc]"></a>_ZN6CIoMan5WriteEPKh</STRONG> (ARM, 60 bytes, Stack size 16 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Called By]<UL><LI><a href="#[2277f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKh
<LI><a href="#[36af9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendDataFormatCommandsv
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[530301c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpFourBytesv
<LI><a href="#[5303058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11DumpOneBytev
<LI><a href="#[5303094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15DumpMemoryBlockv
<LI><a href="#[53030d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23DumpMemoryConfigurationv
<LI><a href="#[5303670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DumpTwoBytesv
</UL>

<P><STRONG><a name="[36b4e0c]"></a>_ZN6CIoMan5WriteEP12CBarcodeData</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b5028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CRemRouterLob15RouteBarcodeLobEP12CBarcodeDataPKwi
<LI><a href="#[41fe9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SendSalaciousImageiiPh
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[51d2a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING
</UL>

<P><STRONG><a name="[36b4dd0]"></a>_ZN6CIoMan5WriteEPK7HSTRING</STRONG> (ARM, 32 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b4fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CRemRouterLob13RouteImageLobEiPK7HSTRINGS2_
</UL>

<P><STRONG><a name="[3758b58]"></a>_ZN6CIoMan6printfEPKcz</STRONG> (ARM, 236 bytes, Stack size 56 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[387c79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj12IoDataType_t
<LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
<LI><a href="#[4333940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData18StoreNonBarcodeIdsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[374f24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10FastDecodePhi
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[3758c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpUsageInfov
<LI><a href="#[389612c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin16InitializePluginEv
<LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc
<LI><a href="#[38961e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin17PluginSanityCheckEv
<LI><a href="#[389621c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12LoadSectionsEv
<LI><a href="#[3896294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin14LayoutSectionsEv
<LI><a href="#[38962d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin15SimplifySymbolsEv
<LI><a href="#[389630c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin12DoRelocationEv
<LI><a href="#[3896348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin13ApplyRelocateEP10Elf32_ShdrPKcjjPS_
<LI><a href="#[3896384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin19VerifyExportSymbolsEv
<LI><a href="#[3a1cd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration30HONPluginCreateLoadingSequenceEv
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param
<LI><a href="#[3f1e708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13wrapper_writeiPvi
<LI><a href="#[413b15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowExpoReportv
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[433919c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100LoadFirmwareDataPhibb
<LI><a href="#[43391d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100CalculateDnldChecksumtt
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32EnginePSOCValidateRevisionUpdatePKhjbbb
<LI><a href="#[433937c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100ProgramBlocktj
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
<LI><a href="#[4ecd9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC8LogErrorEPKc
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecde7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv
<LI><a href="#[52fe2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeTableSelSettingv
<LI><a href="#[52fe33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17CheckKBWCableModev
<LI><a href="#[52fe3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CheckRS485CableModev
<LI><a href="#[52fe42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CheckRS232CableModev
<LI><a href="#[52fe4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17CheckUSBCableModev
<LI><a href="#[52fe7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CheckTableSelSettingv
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[5302ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Readspiflashv
<LI><a href="#[53032ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7DbgEchov
<LI><a href="#[5303364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10MallocTestv
<LI><a href="#[53035f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ShowInvalidFramesv
</UL>

<P><STRONG><a name="[2277b38]"></a>_ZN6CIoMan4ReadEPhj</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2277fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8get_charv
<LI><a href="#[36b9eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessEngineDatav
<LI><a href="#[5303328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8EchoReadPhii
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
</UL>

<P><STRONG><a name="[2277bb0]"></a>_ZN6CIoMan11IsAnyRxDataEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2278024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5kbhitv
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[5303328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8EchoReadPhii
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
</UL>

<P><STRONG><a name="[4333a6c]"></a>_ZN6CIoMan17OpenOnlyIfChangedEsPKw</STRONG> (ARM, 144 bytes, Stack size 24 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN6CIoMan17OpenOnlyIfChangedEsPKw &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan13WaitUntilSentEmb
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Called By]<UL><LI><a href="#[4333a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan12InternalOpenEsPKw
</UL>

<P><STRONG><a name="[4333a30]"></a>_ZN6CIoMan12InternalOpenEsPKw</STRONG> (ARM, 276 bytes, Stack size 640 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[3e9b554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver10GetSettingEtPwj
<LI><a href="#[406bc64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5CloseEv
<LI><a href="#[43339b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTermialID10GetDetailsEsmRtPPFP11CDriverBasevE
<LI><a href="#[4333a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan17OpenOnlyIfChangedEsPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[406dbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4OpenEsPKh
<LI><a href="#[406dc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4OpenEs
</UL>

<P><STRONG><a name="[406dc08]"></a>_ZN6CIoMan4OpenEs</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = _ZN6CIoMan4OpenEs &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4333a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan12InternalOpenEsPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
</UL>

<P><STRONG><a name="[406dbcc]"></a>_ZN6CIoMan4OpenEsPKh</STRONG> (ARM, 136 bytes, Stack size 616 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2408 + Unknown Stack Size
<LI>Call Chain = _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DEBUG_putsPKc
<LI><a href="#[4333a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan12InternalOpenEsPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ReconfigureInterfacev
</UL>

<P><STRONG><a name="[406dc44]"></a>_ZN6CIoMan14QueryInterfaceEsm</STRONG> (ARM, 20 bytes, Stack size 8 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN6CIoMan14QueryInterfaceEsm
</UL>
<BR>[Calls]<UL><LI><a href="#[433397c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTermialID14QueryInterfaceEsm
</UL>
<BR>[Called By]<UL><LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>

<P><STRONG><a name="[43339f4]"></a>_ZN6CIoMan11StuffRxBuffEPKhj</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ioman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN6CIoMan11StuffRxBuffEPKhj &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[5303274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22StuffRxBuffFromTheMenuv
</UL>

<P><STRONG><a name="[4337900]"></a>_ZN12CParseHelper7ExtractEPKwS1_RVi</STRONG> (ARM, 68 bytes, Stack size 24 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN12CParseHelper7ExtractEPKwS1_RVi &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
<LI><a href="#[5dd3978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcsstr (via BLX)
<LI><a href="#[5dd5a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcstol (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[43315a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParm17ExtractParametersEPKw
<LI><a href="#[43379b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase17ExtractParametersEPKw
<LI><a href="#[4531b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468317ExtractParametersEPKw
<LI><a href="#[46018d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase17ExtractParametersEPKw
<LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[4332e78]"></a>_ZN12CParseHelper7ExtractEPKwS1_RVb</STRONG> (ARM, 88 bytes, Stack size 24 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN12CParseHelper7ExtractEPKwS1_RVb &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
<LI><a href="#[5dd3978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcsstr (via BLX)
<LI><a href="#[5dd5a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcstol (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4531b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468317ExtractParametersEPKw
<LI><a href="#[49388b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm17ExtractParametersEPKw
<LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
<LI><a href="#[49f3924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ExtractParametersEPKw
<LI><a href="#[4b49360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd17ExtractParametersEPKw
<LI><a href="#[4b4cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd4OpenEsPKw
</UL>

<P><STRONG><a name="[43378c4]"></a>_ZN12CParseHelper7ExtractEPKwS1_RVm</STRONG> (ARM, 68 bytes, Stack size 24 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN12CParseHelper7ExtractEPKwS1_RVm &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
<LI><a href="#[5dd3978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcsstr (via BLX)
<LI><a href="#[5dd5a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcstol (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[43315a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParm17ExtractParametersEPKw
<LI><a href="#[43379b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase17ExtractParametersEPKw
<LI><a href="#[4b49360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[4332e3c]"></a>_ZN12CParseHelper7ExtractEPKwiRVi</STRONG> (ARM, 116 bytes, Stack size 32 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN12CParseHelper7ExtractEPKwiRVi &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcschr (via BLX)
<LI><a href="#[5dd5a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcstol (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[43315a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParm17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[4332e00]"></a>_ZN12CParseHelper7ExtractEPKwiRS1_</STRONG> (ARM, 76 bytes, Stack size 24 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CParseHelper7ExtractEPKwiRS1_
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcschr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[43315a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParm17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[4332dc4]"></a>_ZN12CParseHelper7ExtractEPKhS1_RVm</STRONG> (ARM, 60 bytes, Stack size 24 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN12CParseHelper7ExtractEPKhS1_RVm &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
<LI><a href="#[5dd41e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr (via BLX)
<LI><a href="#[5dd5c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4407274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase15DeviceIoControlE11IoControl_tlj
<LI><a href="#[49f0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ParseMenuResponseEPh
</UL>

<P><STRONG><a name="[4332d88]"></a>_ZN12CParseHelper7ExtractEPKhS1_RVb</STRONG> (ARM, 80 bytes, Stack size 24 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
<LI><a href="#[5dd41e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr (via BLX)
<LI><a href="#[5dd5c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4402ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh
<LI><a href="#[49f0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhS1_Rhh
<LI><a href="#[49f0abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhPS1_iRhh
</UL>

<P><STRONG><a name="[4332d4c]"></a>_ZN12CParseHelper7ExtractEPKhS1_RVi</STRONG> (ARM, 60 bytes, Stack size 24 bytes, parsehelper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN12CParseHelper7ExtractEPKhS1_RVi &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
<LI><a href="#[5dd41e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr (via BLX)
<LI><a href="#[5dd5d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4532afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseAEPh
<LI><a href="#[4532b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseBEPh
<LI><a href="#[49f0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos21ParseMenuResponse_intEPKhS1_Rhh
</UL>

<P><STRONG><a name="[4337810]"></a>_ZN7CRxFifoC1Ej</STRONG> (ARM, 44 bytes, Stack size 16 bytes, rxfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN7CRxFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[43320e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBaseC1Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[4337edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseC2Ejj
<LI><a href="#[4531c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683C1Ec
</UL>

<P><STRONG><a name="[4332284]"></a>_ZN7CRxFifoC2Ej</STRONG> (ARM, 0 bytes, Stack size 16 bytes, rxfifo.o(.text), UNUSED)

<P><STRONG><a name="[4332248]"></a>_ZN7CRxFifoD1Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, rxfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN7CRxFifoD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[43320a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rxfifo.o(.constdata__ZTV7CRxFifo)
</UL>
<P><STRONG><a name="[433220c]"></a>_ZN7CRxFifoD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rxfifo.o(.text), UNUSED)

<P><STRONG><a name="[43321d0]"></a>_ZN7CRxFifoD0Ev</STRONG> (ARM, 40 bytes, Stack size 8 bytes, rxfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN7CRxFifoD0Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[43320a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rxfifo.o(.constdata__ZTV7CRxFifo)
</UL>
<P><STRONG><a name="[4333850]"></a>_ZN7CRxFifo5WriteEPKhj</STRONG> (ARM, 144 bytes, Stack size 24 bytes, rxfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4332158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase14SpaceAvailableEv
<LI><a href="#[4332194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase11BumpPointerERVii
</UL>
<BR>[Called By]<UL><LI><a href="#[43339f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan11StuffRxBuffEPKhj
<LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
<LI><a href="#[452df0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320Translate4680CommandEPh
<LI><a href="#[4532a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18TalkToReaderConfigEi
<LI><a href="#[4933f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CUsbRem12HandleRxDataEPKhiP7CRxFifo
<LI><a href="#[4940130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base38StuffInputBufferAndWaitForMenuResponseEPKh
<LI><a href="#[49401a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKh
<LI><a href="#[49401e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKhj
</UL>

<P><STRONG><a name="[433784c]"></a>_ZN7CRxFifo4ReadEPhj</STRONG> (ARM, 140 bytes, Stack size 24 bytes, rxfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN7CRxFifo4ReadEPhj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4332194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase11BumpPointerERVii
<LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4337cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase4ReadEPhj
</UL>

<P><STRONG><a name="[4337888]"></a>_ZN7CRxFifo4PeekEPhj</STRONG> (ARM, 164 bytes, Stack size 24 bytes, rxfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN7CRxFifo4PeekEPhj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4337c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase4PeekEPhj
</UL>

<P><STRONG><a name="[4331618]"></a>_ZN8CSerParmC1Ev</STRONG> (ARM, 56 bytes, Stack size 0 bytes, serialparameter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[440fb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartC1EP6Uart_T
</UL>

<P><STRONG><a name="[43315dc]"></a>_ZN8CSerParmC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, serialparameter.o(.text), UNUSED)

<P><STRONG><a name="[43315a0]"></a>_ZN8CSerParm17ExtractParametersEPKw</STRONG> (ARM, 516 bytes, Stack size 32 bytes, serialparameter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN8CSerParm17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwiRVi &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwiRS1_
<LI><a href="#[4332e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwiRVi
<LI><a href="#[43378c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVm
<LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi
</UL>
<BR>[Called By]<UL><LI><a href="#[440fc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[4331564]"></a>_ZN8CSerParm16GetCharacterTimeEv</STRONG> (ARM, 48 bytes, Stack size 0 bytes, serialparameter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[433397c]"></a>_ZN10CTermialID14QueryInterfaceEsm</STRONG> (ARM, 132 bytes, Stack size 0 bytes, termid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[406dc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan14QueryInterfaceEsm
</UL>

<P><STRONG><a name="[43339b8]"></a>_ZN10CTermialID10GetDetailsEsmRtPPFP11CDriverBasevE</STRONG> (ARM, 172 bytes, Stack size 8 bytes, termid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CTermialID10GetDetailsEsmRtPPFP11CDriverBasevE
</UL>
<BR>[Called By]<UL><LI><a href="#[4333a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan12InternalOpenEsPKw
</UL>

<P><STRONG><a name="[406dde8]"></a>_ZN10CTermialID15RemoveInterfaceEi</STRONG> (ARM, 56 bytes, Stack size 0 bytes, termid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[406df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13UpdateTermIDsv
</UL>

<P><STRONG><a name="[4337018]"></a>_Z16CreateNullDriverv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, nulldriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z16CreateNullDriverv &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[4337edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseC2Ejj
</UL>
<BR>[Address Reference Count : 2]<UL><LI> if_table.o(.data)
<LI> if_custom.o(.data)
</UL>
<P><STRONG><a name="[432fc8c]"></a>_ZN11CNullDriver15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 16 bytes, Stack size 0 bytes, nulldriver.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[440ffc8]"></a>_ZN21CSerialSimpleNoThreadC1EP6Uart_T15vector_number_t</STRONG> (ARM, 120 bytes, Stack size 16 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN21CSerialSimpleNoThreadC1EP6Uart_T15vector_number_t &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[226ea9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CIrqVectorC1Ev
<LI><a href="#[4337edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseC2Ejj
<LI><a href="#[440fb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartC1EP6Uart_T
</UL>
<BR>[Called By]<UL><LI><a href="#[4336eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26CreateSerialSimpleNoThreadv
</UL>

<P><STRONG><a name="[440ff8c]"></a>_ZN21CSerialSimpleNoThreadC2EP6Uart_T15vector_number_t</STRONG> (ARM, 0 bytes, Stack size 16 bytes, drvsimpleserialnothread.o(.text), UNUSED)

<P><STRONG><a name="[4336eec]"></a>_Z26CreateSerialSimpleNoThreadv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z26CreateSerialSimpleNoThreadv &rArr; _ZN21CSerialSimpleNoThreadC1EP6Uart_T15vector_number_t &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[440ffc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadC1EP6Uart_T15vector_number_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[440ff50]"></a>_ZN21CSerialSimpleNoThread12StartSendingEv</STRONG> (ARM, 152 bytes, Stack size 16 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN21CSerialSimpleNoThread12StartSendingEv &rArr; _ZN11CDriverBase16GetBarcodeToSendEv &rArr; _ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
<LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread5WriteEP12CBarcodeData
</UL>

<P><STRONG><a name="[440ff14]"></a>_ZN21CSerialSimpleNoThread13SimpleSendISREv</STRONG> (ARM, 252 bytes, Stack size 16 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN21CSerialSimpleNoThread13SimpleSendISREv &rArr; _ZN11CDriverBase11SentBarcodeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
<LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[4337bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11SentBarcodeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440fe9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread13SimpleRxTxISREv
</UL>

<P><STRONG><a name="[440fed8]"></a>_ZN21CSerialSimpleNoThread16SimpleReceiveISREv</STRONG> (ARM, 172 bytes, Stack size 12 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN21CSerialSimpleNoThread16SimpleReceiveISREv
</UL>
<BR>[Called By]<UL><LI><a href="#[440fe9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread13SimpleRxTxISREv
</UL>

<P><STRONG><a name="[440fe9c]"></a>_ZN21CSerialSimpleNoThread13SimpleRxTxISREv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN21CSerialSimpleNoThread13SimpleRxTxISREv &rArr; _ZN21CSerialSimpleNoThread13SimpleSendISREv &rArr; _ZN11CDriverBase11SentBarcodeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440fed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread16SimpleReceiveISREv
<LI><a href="#[440ff14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread13SimpleSendISREv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata)
</UL>
<P><STRONG><a name="[440fe60]"></a>_ZN21CSerialSimpleNoThreadD1Ev</STRONG> (ARM, 56 bytes, Stack size 8 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN21CSerialSimpleNoThreadD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4337e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseD2Ev
<LI><a href="#[440fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
</UL>
<P><STRONG><a name="[440fe24]"></a>_ZN21CSerialSimpleNoThreadD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvsimpleserialnothread.o(.text), UNUSED)

<P><STRONG><a name="[440fde8]"></a>_ZN21CSerialSimpleNoThreadD0Ev</STRONG> (ARM, 60 bytes, Stack size 8 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN21CSerialSimpleNoThreadD0Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4337e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseD2Ev
<LI><a href="#[440fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
</UL>
<P><STRONG><a name="[440fdac]"></a>_ZN21CSerialSimpleNoThread5WriteEP12CBarcodeData</STRONG> (ARM, 40 bytes, Stack size 16 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = _ZN21CSerialSimpleNoThread5WriteEP12CBarcodeData &rArr; _ZN11CDriverBase5WriteEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEP12CBarcodeData
<LI><a href="#[440ff50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread12StartSendingEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
</UL>
<P><STRONG><a name="[440fd70]"></a>_ZN21CSerialSimpleNoThread4OpenEsPKw</STRONG> (ARM, 208 bytes, Stack size 16 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN21CSerialSimpleNoThread4OpenEsPKw &rArr; _ZN5CUart17ExtractParametersEPKw &rArr; _ZN8CSerParm17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwiRVi &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4337c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase4OpenEsPKw
<LI><a href="#[440fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart9SetIoPinsEv
<LI><a href="#[440fc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart17ExtractParametersEPKw
<LI><a href="#[440fc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart13SetupHardwareEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
</UL>
<P><STRONG><a name="[440fd34]"></a>_ZN21CSerialSimpleNoThread5CloseEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN21CSerialSimpleNoThread5CloseEv &rArr; _ZN11CDriverBase5CloseEv &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5CloseEv
<LI><a href="#[440fbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart5CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
</UL>
<P><STRONG><a name="[440fcf8]"></a>_ZN21CSerialSimpleNoThread15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 52 bytes, Stack size 16 bytes, drvsimpleserialnothread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN21CSerialSimpleNoThread15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4337aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
</UL>
<P><STRONG><a name="[440eee8]"></a>_ZN15CThreadedDriverC1Ejj</STRONG> (ARM, 40 bytes, Stack size 8 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN15CThreadedDriverC1Ejj &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[4337edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseC2Ejj
</UL>
<BR>[Called By]<UL><LI><a href="#[4337144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CreateUsbRemv
<LI><a href="#[4407184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseC1ENS_12UartNumber_tE
<LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
<LI><a href="#[46d279c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriverC1Ev
<LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
</UL>

<P><STRONG><a name="[440eeac]"></a>_ZN15CThreadedDriverC2Ejj</STRONG> (ARM, 0 bytes, Stack size 8 bytes, threadeddriver.o(.text), UNUSED)

<P><STRONG><a name="[440ee70]"></a>_ZN15CThreadedDriverD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4337e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4404790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseD0Ev
<LI><a href="#[4407148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseD1Ev
<LI><a href="#[4528c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683D0Ev
<LI><a href="#[4528c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683D1Ev
<LI><a href="#[46d2670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriverD0Ev
<LI><a href="#[46d26e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriverD1Ev
<LI><a href="#[4883000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD0Ev
<LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
<LI><a href="#[4b44dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRemD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
</UL>
<P><STRONG><a name="[440ee34]"></a>_ZN15CThreadedDriverD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, threadeddriver.o(.text), UNUSED)

<P><STRONG><a name="[440edf8]"></a>_ZN15CThreadedDriverD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CThreadedDriverD0Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4337e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
</UL>
<P><STRONG><a name="[440edbc]"></a>_ZN15CThreadedDriver6SignalEm</STRONG> (ARM, 80 bytes, Stack size 16 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN15CThreadedDriver6SignalEm &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_AddMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[44072ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase13SimpleSendISREv
<LI><a href="#[4407418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver17ReceiveAckNackISREv
<LI><a href="#[452f67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468311Receive4683Ev
<LI><a href="#[49f35a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22EPRxHandleReceivedDataEj
<LI><a href="#[49f36cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos25EP0_FlashOutReportHandlerEv
<LI><a href="#[49f37bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos16OutReportHandlerEv
</UL>

<P><STRONG><a name="[440ed80]"></a>_ZN15CThreadedDriver5WriteEP12CBarcodeData</STRONG> (ARM, 100 bytes, Stack size 24 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _ZN15CThreadedDriver5WriteEP12CBarcodeData &rArr; _ZN11CDriverBase5WriteEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_AddMailbox
<LI><a href="#[4337db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[4882ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base5WriteEP12CBarcodeData
</UL>
<BR>[Address Reference Count : 5]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[440ed44]"></a>_ZN15CThreadedDriver4OpenEsPKw</STRONG> (ARM, 104 bytes, Stack size 16 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMailbox
<LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
<LI><a href="#[4337c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase4OpenEsPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[44071fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase4OpenEsPKw
<LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
<LI><a href="#[46d2634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriver4OpenEsPKw
<LI><a href="#[4882fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base4OpenEsPKw
<LI><a href="#[4b44ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem4OpenEsPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
</UL>
<P><STRONG><a name="[440ed08]"></a>_ZN15CThreadedDriver5CloseEv</STRONG> (ARM, 64 bytes, Stack size 16 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_DeleteMailbox
<LI><a href="#[3531e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseDriverThread
<LI><a href="#[4337ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5CloseEv
</UL>
<BR>[Called By]<UL><LI><a href="#[44071c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase5CloseEv
<LI><a href="#[4528b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835CloseEv
<LI><a href="#[46d25f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriver5CloseEv
<LI><a href="#[4882f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base5CloseEv
<LI><a href="#[4b44eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem5CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
</UL>
<P><STRONG><a name="[440eccc]"></a>_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 28 bytes, Stack size 8 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4337aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Called By]<UL><LI><a href="#[4407274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase15DeviceIoControlE11IoControl_tlj
<LI><a href="#[4528b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468315DeviceIoControlE11IoControl_tlj
<LI><a href="#[46d25bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriver15DeviceIoControlE11IoControl_tlj
<LI><a href="#[4882f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj
<LI><a href="#[4b44e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
</UL>
<P><STRONG><a name="[440ec90]"></a>_ZN15CThreadedDriver9RunThreadEv</STRONG> (ARM, 40 bytes, Stack size 0 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN15CThreadedDriver9RunThreadEv &rArr; WakeDriverThread
</UL>
<BR>[Calls]<UL><LI><a href="#[3531dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeDriverThread
</UL>
<BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
<LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
<LI><a href="#[46d2634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriver4OpenEsPKw
<LI><a href="#[4882fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base4OpenEsPKw
<LI><a href="#[4b44ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem4OpenEsPKw
</UL>

<P><STRONG><a name="[440ec54]"></a>_ZN15CThreadedDriver13PreSendActionEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, threadeddriver.o(.text))
<BR>[Address Reference Count : 10]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[440ec18]"></a>_ZN15CThreadedDriver12StartSendingEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, threadeddriver.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[440ebdc]"></a>_ZN15CThreadedDriver14PostSendActionEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, threadeddriver.o(.text))
<BR>[Address Reference Count : 10]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[440eba0]"></a>_ZN15CThreadedDriver12InitInstanceEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, threadeddriver.o(.text))
<BR>[Address Reference Count : 7]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[440eb64]"></a>_ZN15CThreadedDriver20PrepareWaitForSignalEm</STRONG> (ARM, 60 bytes, Stack size 4 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN15CThreadedDriver20PrepareWaitForSignalEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4407364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase12StartSendingEv
<LI><a href="#[44074cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver8SendSlowEv
<LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
<LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
<LI><a href="#[4882f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base10ThreadLoopEv
<LI><a href="#[49f69e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos10ThreadLoopEv
<LI><a href="#[4b4cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd10ThreadLoopEv
</UL>

<P><STRONG><a name="[440eb28]"></a>_ZN15CThreadedDriver16WaitForAnySignalEm</STRONG> (ARM, 136 bytes, Stack size 24 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN15CThreadedDriver16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[4407364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase12StartSendingEv
<LI><a href="#[44074cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver8SendSlowEv
<LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
<LI><a href="#[4882f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base10ThreadLoopEv
<LI><a href="#[49f69e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos10ThreadLoopEv
<LI><a href="#[4b4cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd10ThreadLoopEv
</UL>

<P><STRONG><a name="[440eaec]"></a>_ZN15CThreadedDriver19DoInterMessageDelayEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN15CThreadedDriver19DoInterMessageDelayEv &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4882f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base10ThreadLoopEv
</UL>

<P><STRONG><a name="[440eab0]"></a>_ZN15CThreadedDriver10ThreadLoopEv</STRONG> (ARM, 312 bytes, Stack size 40 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN15CThreadedDriver10ThreadLoopEv &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMailbox
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
</UL>
<BR>[Address Reference Count : 4]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[440ea74]"></a>_ZN15CThreadedDriver38WaitUntilCurrentTransmittionIsCompleteEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, threadeddriver.o(.text))
<BR>[Address Reference Count : 12]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[440ea38]"></a>_ZN15CThreadedDriver16WaitForAnySignalEmm</STRONG> (ARM, 44 bytes, Stack size 8 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN15CThreadedDriver16WaitForAnySignalEmm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
<LI><a href="#[4b4cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd10ThreadLoopEv
</UL>

<P><STRONG><a name="[440e9fc]"></a>_ZN15CThreadedDriver12DriverThreadEv</STRONG> (ARM, 96 bytes, Stack size 16 bytes, threadeddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CThreadedDriver12DriverThreadEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threadeddriver.o(.constdata)
</UL>
<P><STRONG><a name="[440cda0]"></a>_ZN15CThreadRealTime5SleepEm</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Threadrealtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN15CThreadRealTime5SleepEm &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[49f6930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22FlashCommandDispatcherEv
</UL>

<P><STRONG><a name="[440c224]"></a>_ZN13CThreadSimpleC1Ej</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ThreadSimple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[493d1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[440c1e8]"></a>_ZN13CThreadSimpleC2Ej</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ThreadSimple.o(.text), UNUSED)

<P><STRONG><a name="[440c1ac]"></a>_ZN13CThreadSimpleD1Ev</STRONG> (ARM, 40 bytes, Stack size 8 bytes, ThreadSimple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseDriverThread
</UL>
<BR>[Called By]<UL><LI><a href="#[493431c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD0Ev
<LI><a href="#[493d19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD2Ev
</UL>

<P><STRONG><a name="[440c170]"></a>_ZN13CThreadSimpleD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, ThreadSimple.o(.text), UNUSED)

<P><STRONG><a name="[440c134]"></a>_ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator</STRONG> (ARM, 60 bytes, Stack size 8 bytes, ThreadSimple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
</UL>
<BR>[Called By]<UL><LI><a href="#[493d1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[440b090]"></a>_ZN14CFlatBedParser19CreateFlatBedParserEv</STRONG> (ARM, 104 bytes, Stack size 8 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CFlatBedParser19CreateFlatBedParserEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4336fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateSerialDriverv
</UL>

<P><STRONG><a name="[440af64]"></a>_ZN14CFlatBedParser20DestroyFlatBedParserEv</STRONG> (ARM, 32 bytes, Stack size 8 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CFlatBedParser20DestroyFlatBedParserEv
</UL>
<BR>[Called By]<UL><LI><a href="#[44076ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriverD0Ev
<LI><a href="#[4407724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriverD1Ev
</UL>

<P><STRONG><a name="[440af28]"></a>_ZN14CFlatBedParser7CalcLrcEPhjjj</STRONG> (ARM, 148 bytes, Stack size 8 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CFlatBedParser7CalcLrcEPhjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
</UL>

<P><STRONG><a name="[440aeec]"></a>_ZN14CFlatBedParser16ParseMultiPacketEv</STRONG> (ARM, 576 bytes, Stack size 28 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN14CFlatBedParser16ParseMultiPacketEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
</UL>

<P><STRONG><a name="[440aeb0]"></a>_ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData</STRONG> (ARM, 336 bytes, Stack size 56 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData &rArr; _ZN12CBarcodeData9MakeSpaceERPhjj &rArr; _ZN12CBarcodeData9MakeSpaceEjj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38854b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPhRj
<LI><a href="#[440ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceERPhjj
</UL>
<BR>[Called By]<UL><LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
</UL>

<P><STRONG><a name="[440ae74]"></a>_ZN14CFlatBedParser13SelectAuxModeEv</STRONG> (ARM, 184 bytes, Stack size 8 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CFlatBedParser13SelectAuxModeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
</UL>

<P><STRONG><a name="[440ae38]"></a>_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj</STRONG> (ARM, 500 bytes, Stack size 24 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = _ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj &rArr; _ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData &rArr; _ZN12CBarcodeData9MakeSpaceERPhjj &rArr; _ZN12CBarcodeData9MakeSpaceEjj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData22FinalizeAddingElementsEj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
<LI><a href="#[36af5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12CopyTypeInfoERKS_
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[387c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPhRj
<LI><a href="#[387c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData10MoveBufferERS_
<LI><a href="#[38854b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPhRj
<LI><a href="#[440ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceERPhjj
<LI><a href="#[440adc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetAddrOfElementERPhj
<LI><a href="#[440ae74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser13SelectAuxModeEv
<LI><a href="#[440aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData
<LI><a href="#[440aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser16ParseMultiPacketEv
<LI><a href="#[440af28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser7CalcLrcEPhjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[44074cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver8SendSlowEv
</UL>

<P><STRONG><a name="[440adfc]"></a>_ZN14CFlatBedParser17GetTermPacketCharEv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, MLFlatbedSerialParser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
</UL>

<P><STRONG><a name="[4336fa0]"></a>_Z18CreateSerialDriverv</STRONG> (ARM, 84 bytes, Stack size 8 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z18CreateSerialDriverv &rArr; _ZN11CSerialBaseC1ENS_12UartNumber_tE &rArr; _ZN15CThreadedDriverC1Ejj &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[4407184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseC1ENS_12UartNumber_tE
<LI><a href="#[440b090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser19CreateFlatBedParserEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4407724]"></a>_ZN13CSerialDriverD1Ev</STRONG> (ARM, 32 bytes, Stack size 8 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN13CSerialDriverD1Ev &rArr; _ZN11CSerialBaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4407148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseD1Ev
<LI><a href="#[440af64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser20DestroyFlatBedParserEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[44076e8]"></a>_ZN13CSerialDriverD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvserialstd.o(.text), UNUSED)

<P><STRONG><a name="[44076ac]"></a>_ZN13CSerialDriverD0Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN13CSerialDriverD0Ev &rArr; _ZN11CSerialBaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4407148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseD1Ev
<LI><a href="#[440af64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser20DestroyFlatBedParserEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[4407670]"></a>_ZN13CSerialDriver13SetIrqVectorsEv</STRONG> (ARM, 140 bytes, Stack size 0 bytes, drvserialstd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[4407634]"></a>_ZN13CSerialDriver4OpenEsPKw</STRONG> (ARM, 252 bytes, Stack size 16 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = _ZN13CSerialDriver4OpenEsPKw &rArr; _ZN11CSerialBase4OpenEsPKw &rArr; _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[4331564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParm16GetCharacterTimeEv
<LI><a href="#[43379f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase20IsAnyCharacterDelaysEv
<LI><a href="#[440701c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart21SetRtsCtsIoPinsToGPIOEv
<LI><a href="#[4407094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart18SetCtsIoPinsToGpioEv
<LI><a href="#[44070d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart17SetCtsIoPinsToRtsEv
<LI><a href="#[440710c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart12EnableIrqAICEv
<LI><a href="#[44071fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase4OpenEsPKw
<LI><a href="#[4407670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver13SetIrqVectorsEv
<LI><a href="#[440ec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver9RunThreadEv
<LI><a href="#[440fc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart13SetupHardwareEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[44075f8]"></a>_ZN13CSerialDriver5CloseEv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN13CSerialDriver5CloseEv &rArr; _ZN11CSerialBase5CloseEv &rArr; _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44071c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase5CloseEv
<LI><a href="#[440fbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart5CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[44075bc]"></a>_ZN13CSerialDriver11EnsureDelayEm</STRONG> (ARM, 292 bytes, Stack size 32 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN13CSerialDriver11EnsureDelayEm &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
</UL>

<P><STRONG><a name="[4407580]"></a>_ZN13CSerialDriver10WaitForCtsEmi</STRONG> (ARM, 568 bytes, Stack size 48 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN13CSerialDriver10WaitForCtsEmi &rArr; _ZN5CUart20ReadCtsIoPinFromGpioEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[4407058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart20ReadCtsIoPinFromGpioEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4407490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver12StartSendingEv
<LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
</UL>

<P><STRONG><a name="[4407544]"></a>_ZN13CSerialDriver19WaitForTxToCompleteEm</STRONG> (ARM, 264 bytes, Stack size 24 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN13CSerialDriver19WaitForTxToCompleteEm &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4407058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart20ReadCtsIoPinFromGpioEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
</UL>

<P><STRONG><a name="[4407508]"></a>_ZN13CSerialDriver19SendWithPollingModeEv</STRONG> (ARM, 952 bytes, Stack size 56 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN13CSerialDriver19SendWithPollingModeEv &rArr; _ZN13CSerialDriver11EnsureDelayEm &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4337a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase17GetInterCharDelayEw
<LI><a href="#[4407544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19WaitForTxToCompleteEm
<LI><a href="#[4407580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver10WaitForCtsEmi
<LI><a href="#[44075bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver11EnsureDelayEm
<LI><a href="#[440adfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17GetTermPacketCharEv
<LI><a href="#[440ea38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEmm
<LI><a href="#[440eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver20PrepareWaitForSignalEm
</UL>
<BR>[Called By]<UL><LI><a href="#[44074cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver8SendSlowEv
</UL>

<P><STRONG><a name="[44074cc]"></a>_ZN13CSerialDriver8SendSlowEv</STRONG> (ARM, 180 bytes, Stack size 32 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _ZN13CSerialDriver8SendSlowEv &rArr; _ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj &rArr; _ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData &rArr; _ZN12CBarcodeData9MakeSpaceERPhjj &rArr; _ZN12CBarcodeData9MakeSpaceEjj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[4407508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19SendWithPollingModeEv
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[440eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEm
<LI><a href="#[440eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver20PrepareWaitForSignalEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4407490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver12StartSendingEv
</UL>

<P><STRONG><a name="[4407490]"></a>_ZN13CSerialDriver12StartSendingEv</STRONG> (ARM, 196 bytes, Stack size 8 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _ZN13CSerialDriver12StartSendingEv &rArr; _ZN13CSerialDriver8SendSlowEv &rArr; _ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj &rArr; _ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData &rArr; _ZN12CBarcodeData9MakeSpaceERPhjj &rArr; _ZN12CBarcodeData9MakeSpaceEjj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43379f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase20IsAnyCharacterDelaysEv
<LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[4407364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase12StartSendingEv
<LI><a href="#[44074cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver8SendSlowEv
<LI><a href="#[4407580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver10WaitForCtsEmi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[4407454]"></a>_ZN13CSerialDriver17ReceiveXonXoffISREv</STRONG> (ARM, 252 bytes, Stack size 12 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN13CSerialDriver17ReceiveXonXoffISREv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata)
</UL>
<P><STRONG><a name="[4407418]"></a>_ZN13CSerialDriver17ReceiveAckNackISREv</STRONG> (ARM, 232 bytes, Stack size 16 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN13CSerialDriver17ReceiveAckNackISREv &rArr; _ZN15CThreadedDriver6SignalEm &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[440edbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver6SignalEm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata)
</UL>
<P><STRONG><a name="[44073dc]"></a>_ZN13CSerialDriver13SendAckNakISREv</STRONG> (ARM, 100 bytes, Stack size 0 bytes, drvserialstd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata)
</UL>
<P><STRONG><a name="[44073a0]"></a>_ZN13CSerialDriver10handleISRsEv</STRONG> (ARM, 192 bytes, Stack size 8 bytes, drvserialstd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN13CSerialDriver10handleISRsEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[4407184]"></a>_ZN11CSerialBaseC1ENS_12UartNumber_tE</STRONG> (ARM, 104 bytes, Stack size 16 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN11CSerialBaseC1ENS_12UartNumber_tE &rArr; _ZN15CThreadedDriverC1Ejj &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[440eee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverC1Ejj
<LI><a href="#[440fb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartC1EP6Uart_T
</UL>
<BR>[Called By]<UL><LI><a href="#[4336fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateSerialDriverv
</UL>

<P><STRONG><a name="[4404808]"></a>_ZN11CSerialBaseC2ENS_12UartNumber_tE</STRONG> (ARM, 0 bytes, Stack size 16 bytes, serialbase.o(.text), UNUSED)

<P><STRONG><a name="[4407148]"></a>_ZN11CSerialBaseD1Ev</STRONG> (ARM, 28 bytes, Stack size 8 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CSerialBaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
<LI><a href="#[440fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[44076ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriverD0Ev
<LI><a href="#[4407724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriverD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
</UL>
<P><STRONG><a name="[44047cc]"></a>_ZN11CSerialBaseD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, serialbase.o(.text), UNUSED)

<P><STRONG><a name="[4404790]"></a>_ZN11CSerialBaseD0Ev</STRONG> (ARM, 32 bytes, Stack size 8 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CSerialBaseD0Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
<LI><a href="#[440fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
</UL>
<P><STRONG><a name="[4404754]"></a>_ZN11CSerialBase20Set_OE_ForRxTxRtsCtsEi</STRONG> (ARM, 228 bytes, Stack size 8 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11CSerialBase20Set_OE_ForRxTxRtsCtsEi
</UL>
<BR>[Called By]<UL><LI><a href="#[44071fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase4OpenEsPKw
</UL>

<P><STRONG><a name="[44071fc]"></a>_ZN11CSerialBase4OpenEsPKw</STRONG> (ARM, 140 bytes, Stack size 24 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944 + Unknown Stack Size
<LI>Call Chain = _ZN11CSerialBase4OpenEsPKw &rArr; _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4404754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase20Set_OE_ForRxTxRtsCtsEi
<LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
<LI><a href="#[440fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart9SetIoPinsEv
<LI><a href="#[440fc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart17ExtractParametersEPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
</UL>
<P><STRONG><a name="[44071c0]"></a>_ZN11CSerialBase5CloseEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN11CSerialBase5CloseEv &rArr; _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
<LI><a href="#[440fbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart5CloseEv
</UL>
<BR>[Called By]<UL><LI><a href="#[44075f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver5CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
</UL>
<P><STRONG><a name="[4407274]"></a>_ZN11CSerialBase15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 520 bytes, Stack size 24 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN11CSerialBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVm &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[4332dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVm
<LI><a href="#[440eccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 2]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[4404718]"></a>_ZN11CSerialBase13SimpleRxTxISREv</STRONG> (ARM, 24 bytes, Stack size 8 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11CSerialBase13SimpleRxTxISREv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata)
</UL>
<P><STRONG><a name="[4407328]"></a>_ZN11CSerialBase13PreSendActionEv</STRONG> (ARM, 84 bytes, Stack size 8 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11CSerialBase13PreSendActionEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[4407364]"></a>_ZN11CSerialBase12StartSendingEv</STRONG> (ARM, 364 bytes, Stack size 32 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CSerialBase12StartSendingEv &rArr; _ZN15CThreadedDriver16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[440eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEm
<LI><a href="#[440eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver20PrepareWaitForSignalEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4407490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver12StartSendingEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
</UL>
<P><STRONG><a name="[44072b0]"></a>_ZN11CSerialBase14PostSendActionEv</STRONG> (ARM, 96 bytes, Stack size 8 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN11CSerialBase14PostSendActionEv &rArr; _ZN11CDriverBase11SentBarcodeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[4337bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11SentBarcodeEv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
</UL>
<P><STRONG><a name="[44072ec]"></a>_ZN11CSerialBase13SimpleSendISREv</STRONG> (ARM, 148 bytes, Stack size 0 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN11CSerialBase13SimpleSendISREv &rArr; _ZN15CThreadedDriver6SignalEm &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[440edbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver6SignalEm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata)
</UL>
<P><STRONG><a name="[4407238]"></a>_ZN11CSerialBase16SimpleReceiveISREv</STRONG> (ARM, 300 bytes, Stack size 16 bytes, serialbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CSerialBase16SimpleReceiveISREv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvserialstd.o(.constdata)
</UL>
<P><STRONG><a name="[4404010]"></a>_Z12MX25USB2_runv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, usb2resu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
</UL>

<P><STRONG><a name="[4403fd4]"></a>_Z15MX25USB2_resumev</STRONG> (ARM, 72 bytes, Stack size 0 bytes, usb2resu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4882d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base12RemoteWakeUpEv
<LI><a href="#[4934010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18Susp_Resume_ThreadEv
<LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[51d1edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GoInToStopModev
</UL>

<P><STRONG><a name="[4403f98]"></a>_Z16MX25USB2_suspendv</STRONG> (ARM, 52 bytes, Stack size 0 bytes, usb2resu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[51d1edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14GoInToStopModev
</UL>

<P><STRONG><a name="[4403098]"></a>_ZN13DrvMenuConfigC1Ev</STRONG> (ARM, 16 bytes, Stack size 0 bytes, DrvMenuConfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45331c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserC1EP7CRxFifo
</UL>

<P><STRONG><a name="[440305c]"></a>_ZN13DrvMenuConfigC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, DrvMenuConfig.o(.text), UNUSED)

<P><STRONG><a name="[4403020]"></a>_ZN13DrvMenuConfigD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, DrvMenuConfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45330d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserD0Ev
<LI><a href="#[4533150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserD1Ev
</UL>

<P><STRONG><a name="[4402fe4]"></a>_ZN13DrvMenuConfigD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, DrvMenuConfig.o(.text), UNUSED)

<P><STRONG><a name="[4402fa8]"></a>_ZN13DrvMenuConfig16FreeMenuResponseEv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, DrvMenuConfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN13DrvMenuConfig16FreeMenuResponseEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4532a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18TalkToReaderConfigEi
<LI><a href="#[453309c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData
</UL>

<P><STRONG><a name="[4402f6c]"></a>_ZN13DrvMenuConfig15SetMenuResponseEP12CBarcodeData</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DrvMenuConfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[453309c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData
</UL>

<P><STRONG><a name="[4402f30]"></a>_ZN13DrvMenuConfig18AppendToMenuBufferEPKhz</STRONG> (ARM, 64 bytes, Stack size 24 bytes, DrvMenuConfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN13DrvMenuConfig18AppendToMenuBufferEPKhz &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b21548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsnprintf (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4532a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18QueryScannerConfigEv
<LI><a href="#[4532fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22DIO_SendConfigurationAEPhi
<LI><a href="#[4533024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22DIO_SendConfigurationBEPhi
<LI><a href="#[4533060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser30IbmEnableAdditionalSymbologiesEPh
</UL>

<P><STRONG><a name="[4402ef4]"></a>_ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh</STRONG> (ARM, 76 bytes, Stack size 16 bytes, DrvMenuConfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVb
</UL>
<BR>[Called By]<UL><LI><a href="#[4532afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseAEPh
<LI><a href="#[4532b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseBEPh
</UL>

<P><STRONG><a name="[45337e0]"></a>_Z14TF_ResetValuesv</STRONG> (ARM, 68 bytes, Stack size 8 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z14TF_ResetValuesv
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
<LI><a href="#[4532d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser19TF_EnterTrickleFeedEv
<LI><a href="#[4532dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22TF_ActivateNewFirmwareEv
</UL>

<P><STRONG><a name="[4533204]"></a>_Z19TF_GetIntFromBufferPhi</STRONG> (ARM, 36 bytes, Stack size 0 bytes, DirectIoParser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4532d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22TF_TrickleFeedCompleteEv
<LI><a href="#[4532f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser16DIO_UpdateDeviceEv
</UL>

<P><STRONG><a name="[45331c8]"></a>_ZN14DirectIoParserC1EP7CRxFifo</STRONG> (ARM, 104 bytes, Stack size 16 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN14DirectIoParserC1EP7CRxFifo &rArr; MT_CreateEvent &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent
<LI><a href="#[4403098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfigC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4531c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683C1Ec
<LI><a href="#[49f68b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb
</UL>

<P><STRONG><a name="[453318c]"></a>_ZN14DirectIoParserC2EP7CRxFifo</STRONG> (ARM, 0 bytes, Stack size 16 bytes, DirectIoParser.o(.text), UNUSED)

<P><STRONG><a name="[4533150]"></a>_ZN14DirectIoParserD1Ev</STRONG> (ARM, 60 bytes, Stack size 8 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14DirectIoParserD1Ev &rArr; MT_CloseEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
<LI><a href="#[4403020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfigD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.constdata__ZTV14DirectIoParser)
</UL>
<P><STRONG><a name="[4533114]"></a>_ZN14DirectIoParserD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, DirectIoParser.o(.text), UNUSED)

<P><STRONG><a name="[45330d8]"></a>_ZN14DirectIoParserD0Ev</STRONG> (ARM, 64 bytes, Stack size 8 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14DirectIoParserD0Ev &rArr; MT_CloseEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
<LI><a href="#[4403020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfigD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.constdata__ZTV14DirectIoParser)
</UL>
<P><STRONG><a name="[453309c]"></a>_ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData</STRONG> (ARM, 44 bytes, Stack size 16 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData &rArr; _ZN13DrvMenuConfig16FreeMenuResponseEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[4402f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig15SetMenuResponseEP12CBarcodeData
<LI><a href="#[4402fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig16FreeMenuResponseEv
</UL>
<BR>[Called By]<UL><LI><a href="#[453183c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468317StoreMenuResponseEP12CBarcodeData
<LI><a href="#[49f3834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17StoreMenuResponseEP12CBarcodeData
</UL>

<P><STRONG><a name="[4533060]"></a>_ZN14DirectIoParser30IbmEnableAdditionalSymbologiesEPh</STRONG> (ARM, 396 bytes, Stack size 24 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN14DirectIoParser30IbmEnableAdditionalSymbologiesEPh &rArr; _ZN13DrvMenuConfig18AppendToMenuBufferEPKhz &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4402f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig18AppendToMenuBufferEPKhz
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4533024]"></a>_ZN14DirectIoParser22DIO_SendConfigurationBEPhi</STRONG> (ARM, 676 bytes, Stack size 16 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN14DirectIoParser22DIO_SendConfigurationBEPhi &rArr; _ZN13DrvMenuConfig18AppendToMenuBufferEPKhz &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4402f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig18AppendToMenuBufferEPKhz
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532fe8]"></a>_ZN14DirectIoParser22DIO_SendConfigurationAEPhi</STRONG> (ARM, 1640 bytes, Stack size 24 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN14DirectIoParser22DIO_SendConfigurationAEPhi &rArr; _ZN13DrvMenuConfig18AppendToMenuBufferEPKhz &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4402f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig18AppendToMenuBufferEPKhz
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532fac]"></a>_ZN14DirectIoParser13DIO_FlashDataEPhi</STRONG> (ARM, 192 bytes, Stack size 8 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14DirectIoParser13DIO_FlashDataEPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532f70]"></a>_ZN14DirectIoParser16DIO_UpdateDeviceEv</STRONG> (ARM, 568 bytes, Stack size 88 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN14DirectIoParser16DIO_UpdateDeviceEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4533204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19TF_GetIntFromBufferPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532f34]"></a>_ZN14DirectIoParser24DIO_EraseSelectedSectionEv</STRONG> (ARM, 204 bytes, Stack size 4 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN14DirectIoParser24DIO_EraseSelectedSectionEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532ef8]"></a>_ZN14DirectIoParser14Generate_CRC32EmPhm</STRONG> (ARM, 112 bytes, Stack size 1048 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Called By]<UL><LI><a href="#[4532d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser19TF_EnterTrickleFeedEv
<LI><a href="#[4532d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22TF_TrickleFeedCompleteEv
<LI><a href="#[4532d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser19TF_PauseTrickleFeedEv
<LI><a href="#[4532dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22TF_ActivateNewFirmwareEv
<LI><a href="#[4532ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser12DIO_GetCRC32Ev
</UL>

<P><STRONG><a name="[4532ebc]"></a>_ZN14DirectIoParser12DIO_GetCRC32Ev</STRONG> (ARM, 220 bytes, Stack size 16 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = _ZN14DirectIoParser12DIO_GetCRC32Ev &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4532ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532e80]"></a>_ZN14DirectIoParser12DIO_GetCRC16Ev</STRONG> (ARM, 276 bytes, Stack size 536 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _ZN14DirectIoParser12DIO_GetCRC16Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532e44]"></a>_ZN14DirectIoParser23GenerateFirmwareVersionEPc</STRONG> (ARM, 104 bytes, Stack size 0 bytes, DirectIoParser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
<LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
<LI><a href="#[4532c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser19DIO_FWVersionReportEv
<LI><a href="#[4532ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_0H0CommandEv
</UL>

<P><STRONG><a name="[4532e08]"></a>_ZN14DirectIoParser18DIO_EnterFlashModeEv</STRONG> (ARM, 260 bytes, Stack size 24 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14DirectIoParser18DIO_EnterFlashModeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532dcc]"></a>_ZN14DirectIoParser22TF_ActivateNewFirmwareEv</STRONG> (ARM, 288 bytes, Stack size 8 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = _ZN14DirectIoParser22TF_ActivateNewFirmwareEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4532ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14Generate_CRC32EmPhm
<LI><a href="#[45337e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14TF_ResetValuesv
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532d90]"></a>_ZN14DirectIoParser19TF_PauseTrickleFeedEv</STRONG> (ARM, 116 bytes, Stack size 8 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = _ZN14DirectIoParser19TF_PauseTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4532ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532d54]"></a>_ZN14DirectIoParser22TF_TrickleFeedCompleteEv</STRONG> (ARM, 168 bytes, Stack size 8 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = _ZN14DirectIoParser22TF_TrickleFeedCompleteEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4532ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14Generate_CRC32EmPhm
<LI><a href="#[4533204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19TF_GetIntFromBufferPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532d18]"></a>_ZN14DirectIoParser19TF_EnterTrickleFeedEv</STRONG> (ARM, 244 bytes, Stack size 16 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4532ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14Generate_CRC32EmPhm
<LI><a href="#[45337e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14TF_ResetValuesv
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532cdc]"></a>_ZN14DirectIoParser20GenerateSerialNumberEPc</STRONG> (ARM, 132 bytes, Stack size 40 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _ZN14DirectIoParser20GenerateSerialNumberEPc &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[45329d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14InsertFillCharEij
</UL>
<BR>[Called By]<UL><LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
<LI><a href="#[4532ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_0H0CommandEv
</UL>

<P><STRONG><a name="[4532ca0]"></a>_ZN14DirectIoParser14DIO_0H0CommandEv</STRONG> (ARM, 240 bytes, Stack size 280 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _ZN14DirectIoParser14DIO_0H0CommandEv &rArr; _ZN14DirectIoParser20GenerateSerialNumberEPc &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4532cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser20GenerateSerialNumberEPc
<LI><a href="#[4532e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser23GenerateFirmwareVersionEPc
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532c64]"></a>_ZN14DirectIoParser19DIO_FWVersionReportEv</STRONG> (ARM, 168 bytes, Stack size 272 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _ZN14DirectIoParser19DIO_FWVersionReportEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4532e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser23GenerateFirmwareVersionEPc
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532c28]"></a>_ZN14DirectIoParser14DIO_FullUnitIDEv</STRONG> (ARM, 308 bytes, Stack size 312 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = _ZN14DirectIoParser14DIO_FullUnitIDEv &rArr; _ZN14DirectIoParser20GenerateSerialNumberEPc &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[4532994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4MoveEjjj
<LI><a href="#[4532cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser20GenerateSerialNumberEPc
<LI><a href="#[4532e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser23GenerateFirmwareVersionEPc
</UL>
<BR>[Called By]<UL><LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>

<P><STRONG><a name="[4532bec]"></a>_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi</STRONG> (ARM, 1452 bytes, Stack size 288 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352 + Unknown Stack Size
<LI>Call Chain = _ZN14DirectIoParser22ExecuteDirectIOCommandEPhi &rArr; _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[375ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundStandardBeepj
<LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
<LI><a href="#[4532c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser19DIO_FWVersionReportEv
<LI><a href="#[4532ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_0H0CommandEv
<LI><a href="#[4532d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser19TF_EnterTrickleFeedEv
<LI><a href="#[4532d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22TF_TrickleFeedCompleteEv
<LI><a href="#[4532d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser19TF_PauseTrickleFeedEv
<LI><a href="#[4532dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22TF_ActivateNewFirmwareEv
<LI><a href="#[4532e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18DIO_EnterFlashModeEv
<LI><a href="#[4532e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser23GenerateFirmwareVersionEPc
<LI><a href="#[4532e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser12DIO_GetCRC16Ev
<LI><a href="#[4532ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser12DIO_GetCRC32Ev
<LI><a href="#[4532f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser24DIO_EraseSelectedSectionEv
<LI><a href="#[4532f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser16DIO_UpdateDeviceEv
<LI><a href="#[4532fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser13DIO_FlashDataEPhi
<LI><a href="#[4532fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22DIO_SendConfigurationAEPhi
<LI><a href="#[4533024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22DIO_SendConfigurationBEPhi
<LI><a href="#[4533060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser30IbmEnableAdditionalSymbologiesEPh
<LI><a href="#[45337e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14TF_ResetValuesv
</UL>
<BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
<LI><a href="#[49f0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[4532bb0]"></a>_ZN14DirectIoParser24GetExpectingMenuResponseEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DirectIoParser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4531878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468324GetExpectingMenuResponseEv
<LI><a href="#[49f3834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17StoreMenuResponseEP12CBarcodeData
</UL>

<P><STRONG><a name="[4532b74]"></a>_ZN14DirectIoParser11GetResponseEPPh</STRONG> (ARM, 16 bytes, Stack size 0 bytes, DirectIoParser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
<LI><a href="#[49f0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[4532b38]"></a>_ZN14DirectIoParser18ParseMenuResponseBEPh</STRONG> (ARM, 624 bytes, Stack size 32 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN14DirectIoParser18ParseMenuResponseBEPh &rArr; _ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4332d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVi
<LI><a href="#[4402ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh
</UL>
<BR>[Called By]<UL><LI><a href="#[4532ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser17ParseMenuResponseEPh
</UL>

<P><STRONG><a name="[4532afc]"></a>_ZN14DirectIoParser18ParseMenuResponseAEPh</STRONG> (ARM, 1788 bytes, Stack size 32 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN14DirectIoParser18ParseMenuResponseAEPh &rArr; _ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4332d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVi
<LI><a href="#[4402ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh
</UL>
<BR>[Called By]<UL><LI><a href="#[4532ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser17ParseMenuResponseEPh
</UL>

<P><STRONG><a name="[4532ac0]"></a>_ZN14DirectIoParser17ParseMenuResponseEPh</STRONG> (ARM, 40 bytes, Stack size 16 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _ZN14DirectIoParser17ParseMenuResponseEPh &rArr; _ZN14DirectIoParser18ParseMenuResponseAEPh &rArr; _ZN13DrvMenuConfig22ParseMenuResponse_boolEPKhS1_Rhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4532afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseAEPh
<LI><a href="#[4532b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseBEPh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.constdata__ZTV14DirectIoParser)
</UL>
<P><STRONG><a name="[4532a84]"></a>_ZN14DirectIoParser18TalkToReaderConfigEi</STRONG> (ARM, 356 bytes, Stack size 32 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN14DirectIoParser18TalkToReaderConfigEi &rArr; _ZN13DrvMenuConfig16FreeMenuResponseEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
<LI><a href="#[4402fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig16FreeMenuResponseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.constdata__ZTV14DirectIoParser)
</UL>
<P><STRONG><a name="[4532a48]"></a>_ZN14DirectIoParser18QueryScannerConfigEv</STRONG> (ARM, 64 bytes, Stack size 16 bytes, DirectIoParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN14DirectIoParser18QueryScannerConfigEv &rArr; _ZN13DrvMenuConfig18AppendToMenuBufferEPKhz &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4402f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig18AppendToMenuBufferEPKhz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.constdata__ZTV14DirectIoParser)
</UL>
<P><STRONG><a name="[4531c74]"></a>_ZN18CommandHandler4683C1Ec</STRONG> (ARM, 360 bytes, Stack size 16 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN18CommandHandler4683C1Ec &rArr; _ZN14DirectIoParserC1EP7CRxFifo &rArr; MT_CreateEvent &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[38853c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoC1Ej
<LI><a href="#[4337810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifoC1Ej
<LI><a href="#[453174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataC1Ej
<LI><a href="#[45331c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserC1EP7CRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
</UL>

<P><STRONG><a name="[4531c38]"></a>_ZN18CommandHandler4683C2Ec</STRONG> (ARM, 0 bytes, Stack size 16 bytes, CommandHandler4683.o(.text), UNUSED)

<P><STRONG><a name="[4531bfc]"></a>_ZN18CommandHandler4683D1Ev</STRONG> (ARM, 136 bytes, Stack size 16 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN18CommandHandler4683D1Ev &rArr; _ZN12CBarcodeDataD1Ev &rArr; _ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4531710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4528c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683D0Ev
<LI><a href="#[4528c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683D1Ev
</UL>

<P><STRONG><a name="[4531bc0]"></a>_ZN18CommandHandler4683D2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, CommandHandler4683.o(.text), UNUSED)

<P><STRONG><a name="[4531b84]"></a>_ZN18CommandHandler468315InitStatusBytesEv</STRONG> (ARM, 324 bytes, Stack size 8 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN18CommandHandler468315InitStatusBytesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320ProcessRetailMessageEPhi
<LI><a href="#[4531b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310InitializeEv
</UL>

<P><STRONG><a name="[4531b48]"></a>_ZN18CommandHandler468310InitializeEv</STRONG> (ARM, 120 bytes, Stack size 16 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN18CommandHandler468310InitializeEv &rArr; _ZN18CommandHandler468315InitStatusBytesEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[4531698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468322ResetSendReceiveCountsEv
<LI><a href="#[45316d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468313ClearTxBufferEv
<LI><a href="#[4531b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468315InitStatusBytesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
<LI><a href="#[452caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320SimulateScannerResetEv
</UL>

<P><STRONG><a name="[4531b0c]"></a>_ZN18CommandHandler468317ExtractParametersEPKw</STRONG> (ARM, 168 bytes, Stack size 24 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN18CommandHandler468317ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwS1_RVb &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb
<LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi
</UL>
<BR>[Called By]<UL><LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
</UL>

<P><STRONG><a name="[4531ad0]"></a>_ZN18CommandHandler468310GetAddressEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4528b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468315DeviceIoControlE11IoControl_tlj
<LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
<LI><a href="#[452f67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468311Receive4683Ev
</UL>

<P><STRONG><a name="[4531a94]"></a>_ZN18CommandHandler468316GetTxFrameLengthEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
</UL>

<P><STRONG><a name="[4531a58]"></a>_ZN18CommandHandler468312GetTxMessageEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
<LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
</UL>

<P><STRONG><a name="[4531a1c]"></a>_ZN18CommandHandler46839GetRxFifoEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4528b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468315DeviceIoControlE11IoControl_tlj
<LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
</UL>

<P><STRONG><a name="[45319e0]"></a>_ZN18CommandHandler468316IsBeepingEnabledEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN18CommandHandler468316IsBeepingEnabledEv
</UL>
<BR>[Calls]<UL><LI><a href="#[453165c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839AmIPort6xEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4528b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468315DeviceIoControlE11IoControl_tlj
</UL>

<P><STRONG><a name="[45319a4]"></a>_ZN18CommandHandler468316SetProhibitCloseEb</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4528b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468315DeviceIoControlE11IoControl_tlj
</UL>

<P><STRONG><a name="[4531968]"></a>_ZN18CommandHandler468316GetProhibitCloseEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4528b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835CloseEv
</UL>

<P><STRONG><a name="[453192c]"></a>_ZN18CommandHandler468314GetBarcodeFifoEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4528b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468315DeviceIoControlE11IoControl_tlj
<LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
</UL>

<P><STRONG><a name="[45318f0]"></a>_ZN18CommandHandler468316GetBarcodeToSendEv</STRONG> (ARM, 52 bytes, Stack size 8 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN18CommandHandler468316GetBarcodeToSendEv &rArr; _ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Calls]<UL><LI><a href="#[433793c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GotPolledEv
</UL>

<P><STRONG><a name="[45318b4]"></a>_ZN18CommandHandler468311SentBarcodeEv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN18CommandHandler468311SentBarcodeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GotPolledEv
</UL>

<P><STRONG><a name="[4531878]"></a>_ZN18CommandHandler468324GetExpectingMenuResponseEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4532bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser24GetExpectingMenuResponseEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4528ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835WriteEP12CBarcodeData
</UL>

<P><STRONG><a name="[453183c]"></a>_ZN18CommandHandler468317StoreMenuResponseEP12CBarcodeData</STRONG> (ARM, 16 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN18CommandHandler468317StoreMenuResponseEP12CBarcodeData &rArr; _ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData &rArr; _ZN13DrvMenuConfig16FreeMenuResponseEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[453309c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[4528ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835WriteEP12CBarcodeData
</UL>

<P><STRONG><a name="[4531800]"></a>_ZN18CommandHandler468323DirectIOCommandAcceptedEb</STRONG> (ARM, 36 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
</UL>

<P><STRONG><a name="[45317c4]"></a>_ZN18CommandHandler468324DirectIOCommandUndefinedEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
</UL>

<P><STRONG><a name="[4531788]"></a>_ZN18CommandHandler468325DirectIOCommandNotAllowedEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, CommandHandler4683.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
</UL>

<P><STRONG><a name="[452f730]"></a>_ZN11CSerial468310ThreadLoopEv</STRONG> (ARM, 540 bytes, Stack size 40 bytes, 4683isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456 + Unknown Stack Size
<LI>Call Chain = _ZN11CSerial468310ThreadLoopEv &rArr; _ZN18CommandHandler468320ProcessRetailMessageEPhi &rArr; _ZN18CommandHandler468314ExecuteCommandEPhi &rArr; _ZN14DirectIoParser22ExecuteDirectIOCommandEPhi &rArr; _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[440eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEm
<LI><a href="#[440eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver20PrepareWaitForSignalEm
<LI><a href="#[452f550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GotPolledEv
<LI><a href="#[452f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320ProcessRetailMessageEPhi
<LI><a href="#[452f5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46839SendFrameEv
<LI><a href="#[452f604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46837CalcCrcEPhi
<LI><a href="#[4531a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468312GetTxMessageEv
<LI><a href="#[4531a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316GetTxFrameLengthEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[452f6b8]"></a>_ZN11CSerial468312Transmit4683Ev</STRONG> (ARM, 568 bytes, Stack size 24 bytes, 4683isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CSerial468312Transmit4683Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4528a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468313SimpleRxTxISREv
</UL>

<P><STRONG><a name="[452f67c]"></a>_ZN11CSerial468311Receive4683Ev</STRONG> (ARM, 660 bytes, Stack size 16 bytes, 4683isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN11CSerial468311Receive4683Ev &rArr; _ZN15CThreadedDriver6SignalEm &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[440edbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver6SignalEm
<LI><a href="#[4531ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310GetAddressEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4528a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468313SimpleRxTxISREv
</UL>

<P><STRONG><a name="[452f640]"></a>_ZN11CSerial468320Start4683TransmitterEv</STRONG> (ARM, 292 bytes, Stack size 16 bytes, 4683isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CSerial468320Start4683TransmitterEv
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46839SendFrameEv
</UL>

<P><STRONG><a name="[45316d4]"></a>_ZN18CommandHandler468313ClearTxBufferEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, 4683tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320SimulateScannerResetEv
<LI><a href="#[452df0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320Translate4680CommandEPh
<LI><a href="#[452f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320ProcessRetailMessageEPhi
<LI><a href="#[4531b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310InitializeEv
</UL>

<P><STRONG><a name="[452e8a8]"></a>_ZN18CommandHandler468315ClearStatusBitsEv</STRONG> (ARM, 160 bytes, Stack size 0 bytes, 4683tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452e77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468315SendRetailFrameEPh
</UL>

<P><STRONG><a name="[452e86c]"></a>_ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData</STRONG> (ARM, 904 bytes, Stack size 48 bytes, 4683tx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData &rArr; _ZN18CommandHandler468315SendRetailFrameEPh
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[452e77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468315SendRetailFrameEPh
<LI><a href="#[452e7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314CanITransmit6xEv
<LI><a href="#[452e7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ExecuteRetailPDFv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GotPolledEv
</UL>

<P><STRONG><a name="[452f5c8]"></a>_ZN11CSerial46839SendFrameEv</STRONG> (ARM, 84 bytes, Stack size 16 bytes, 4683tx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN11CSerial46839SendFrameEv &rArr; _ZN11CSerial46837CalcCrcEPhi
</UL>
<BR>[Calls]<UL><LI><a href="#[452f604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46837CalcCrcEPhi
<LI><a href="#[452f640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468320Start4683TransmitterEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
</UL>

<P><STRONG><a name="[452df0c]"></a>_ZN18CommandHandler468320Translate4680CommandEPh</STRONG> (ARM, 768 bytes, Stack size 136 bytes, 4683xlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _ZN18CommandHandler468320Translate4680CommandEPh &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
<LI><a href="#[45316d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468313ClearTxBufferEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
<LI><a href="#[452f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320ProcessRetailMessageEPhi
</UL>

<P><STRONG><a name="[453165c]"></a>_ZN18CommandHandler46839AmIPort6xEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, 4683pro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45319e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316IsBeepingEnabledEv
</UL>

<P><STRONG><a name="[452e77c]"></a>_ZN18CommandHandler468315SendRetailFrameEPh</STRONG> (ARM, 208 bytes, Stack size 8 bytes, 4683pro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN18CommandHandler468315SendRetailFrameEPh
</UL>
<BR>[Calls]<UL><LI><a href="#[452e8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468315ClearStatusBitsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452e86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData
<LI><a href="#[452f550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GotPolledEv
</UL>

<P><STRONG><a name="[452f550]"></a>_ZN18CommandHandler46839GotPolledEv</STRONG> (ARM, 440 bytes, Stack size 32 bytes, 4683pro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN18CommandHandler46839GotPolledEv &rArr; _ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData &rArr; _ZN18CommandHandler468315SendRetailFrameEPh
</UL>
<BR>[Calls]<UL><LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
<LI><a href="#[452e77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468315SendRetailFrameEPh
<LI><a href="#[452e86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData
<LI><a href="#[45318b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468311SentBarcodeEv
<LI><a href="#[45318f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316GetBarcodeToSendEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
</UL>

<P><STRONG><a name="[452cae4]"></a>_ZN18CommandHandler468313AcceptCommandEPh</STRONG> (ARM, 192 bytes, Stack size 0 bytes, 4683pro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
</UL>

<P><STRONG><a name="[4531698]"></a>_ZN18CommandHandler468322ResetSendReceiveCountsEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, 4683pro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4531b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310InitializeEv
</UL>

<P><STRONG><a name="[452caa8]"></a>_ZN18CommandHandler468320SimulateScannerResetEv</STRONG> (ARM, 92 bytes, Stack size 16 bytes, 4683pro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN18CommandHandler468320SimulateScannerResetEv &rArr; _Z16SoundPowerupBeepv &rArr; _ZN6CIoMan15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SoundPowerupBeepv
<LI><a href="#[375ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14IsBeepQueEmptyv
<LI><a href="#[45316d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468313ClearTxBufferEv
<LI><a href="#[4531b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310InitializeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
<LI><a href="#[452f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320ProcessRetailMessageEPhi
</UL>

<P><STRONG><a name="[452ca6c]"></a>_ZN18CommandHandler468314ExecuteCommandEPhi</STRONG> (ARM, 1668 bytes, Stack size 32 bytes, 4683pro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384 + Unknown Stack Size
<LI>Call Chain = _ZN18CommandHandler468314ExecuteCommandEPhi &rArr; _ZN14DirectIoParser22ExecuteDirectIOCommandEPhi &rArr; _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
<LI><a href="#[452caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320SimulateScannerResetEv
<LI><a href="#[452cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468313AcceptCommandEPh
<LI><a href="#[452df0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320Translate4680CommandEPh
<LI><a href="#[4531788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468325DirectIOCommandNotAllowedEv
<LI><a href="#[45317c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468324DirectIOCommandUndefinedEv
<LI><a href="#[4531800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468323DirectIOCommandAcceptedEb
<LI><a href="#[4532b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser11GetResponseEPPh
<LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[452f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320ProcessRetailMessageEPhi
</UL>

<P><STRONG><a name="[452ca30]"></a>_ZN18CommandHandler468316CheckRetailFrameEv</STRONG> (ARM, 184 bytes, Stack size 0 bytes, 4683pro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320ProcessRetailMessageEPhi
</UL>

<P><STRONG><a name="[452f58c]"></a>_ZN18CommandHandler468320ProcessRetailMessageEPhi</STRONG> (ARM, 404 bytes, Stack size 32 bytes, 4683pro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = _ZN18CommandHandler468320ProcessRetailMessageEPhi &rArr; _ZN18CommandHandler468314ExecuteCommandEPhi &rArr; _ZN14DirectIoParser22ExecuteDirectIOCommandEPhi &rArr; _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[452ca30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316CheckRetailFrameEv
<LI><a href="#[452ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314ExecuteCommandEPhi
<LI><a href="#[452caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320SimulateScannerResetEv
<LI><a href="#[452df0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468320Translate4680CommandEPh
<LI><a href="#[45316d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468313ClearTxBufferEv
<LI><a href="#[4531b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468315InitStatusBytesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
</UL>

<P><STRONG><a name="[452e7b8]"></a>_ZN18CommandHandler468314CanITransmit6xEv</STRONG> (ARM, 56 bytes, Stack size 0 bytes, 4683pro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452e86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData
</UL>

<P><STRONG><a name="[452f604]"></a>_ZN11CSerial46837CalcCrcEPhi</STRONG> (ARM, 152 bytes, Stack size 16 bytes, crc4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CSerial46837CalcCrcEPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[452f5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46839SendFrameEv
<LI><a href="#[452f730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468310ThreadLoopEv
</UL>

<P><STRONG><a name="[4528d04]"></a>_ZN11CSerial4683C1EP6Uart_T</STRONG> (ARM, 364 bytes, Stack size 16 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN11CSerial4683C1EP6Uart_T &rArr; _ZN18CommandHandler4683C1Ec &rArr; _ZN14DirectIoParserC1EP7CRxFifo &rArr; MT_CreateEvent &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[440eee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverC1Ejj
<LI><a href="#[440fb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartC1EP6Uart_T
<LI><a href="#[453192c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314GetBarcodeFifoEv
<LI><a href="#[4531a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GetRxFifoEv
<LI><a href="#[4531c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683C1Ec
</UL>
<BR>[Called By]<UL><LI><a href="#[4336fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16CreateSerial4683v
</UL>

<P><STRONG><a name="[4528cc8]"></a>_ZN11CSerial4683C2EP6Uart_T</STRONG> (ARM, 0 bytes, Stack size 16 bytes, DrvSerial4683.o(.text), UNUSED)

<P><STRONG><a name="[4336fdc]"></a>_Z16CreateSerial4683v</STRONG> (ARM, 24 bytes, Stack size 8 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z16CreateSerial4683v &rArr; _ZN11CSerial4683C1EP6Uart_T &rArr; _ZN18CommandHandler4683C1Ec &rArr; _ZN14DirectIoParserC1EP7CRxFifo &rArr; MT_CreateEvent &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4528c8c]"></a>_ZN11CSerial4683D1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN11CSerial4683D1Ev &rArr; _ZN18CommandHandler4683D1Ev &rArr; _ZN12CBarcodeDataD1Ev &rArr; _ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
<LI><a href="#[440fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartD1Ev
<LI><a href="#[4531bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683D1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528c50]"></a>_ZN11CSerial4683D2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, DrvSerial4683.o(.text), UNUSED)

<P><STRONG><a name="[4528c14]"></a>_ZN11CSerial4683D0Ev</STRONG> (ARM, 52 bytes, Stack size 8 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN11CSerial4683D0Ev &rArr; _ZN18CommandHandler4683D1Ev &rArr; _ZN12CBarcodeDataD1Ev &rArr; _ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
<LI><a href="#[440fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUartD1Ev
<LI><a href="#[4531bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683D1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528bd8]"></a>_ZN11CSerial468316PrepareIoFor4683Ev</STRONG> (ARM, 304 bytes, Stack size 16 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN11CSerial468316PrepareIoFor4683Ev &rArr; _ZN5CUart10SetCTSModeEi
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[45289f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart10SetCTSModeEi
</UL>
<BR>[Called By]<UL><LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
</UL>

<P><STRONG><a name="[4528b9c]"></a>_ZN11CSerial46834OpenEsPKw</STRONG> (ARM, 780 bytes, Stack size 32 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1952 + Unknown Stack Size
<LI>Call Chain = _ZN11CSerial46834OpenEsPKw &rArr; _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
<LI><a href="#[440ec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver9RunThreadEv
<LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
<LI><a href="#[440fc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart13SetupHardwareEv
<LI><a href="#[4528bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468316PrepareIoFor4683Ev
<LI><a href="#[4531a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468312GetTxMessageEv
<LI><a href="#[4531ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310GetAddressEv
<LI><a href="#[4531b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468317ExtractParametersEPKw
<LI><a href="#[4531b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310InitializeEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528b60]"></a>_ZN11CSerial46835CloseEv</STRONG> (ARM, 104 bytes, Stack size 16 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN11CSerial46835CloseEv &rArr; _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
<LI><a href="#[440fbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart5CloseEv
<LI><a href="#[4531968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316GetProhibitCloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528b24]"></a>_ZN11CSerial468315DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 256 bytes, Stack size 16 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN11CSerial468315DeviceIoControlE11IoControl_tlj &rArr; _ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[440eccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj
<LI><a href="#[453192c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468314GetBarcodeFifoEv
<LI><a href="#[45319a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316SetProhibitCloseEb
<LI><a href="#[45319e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316IsBeepingEnabledEv
<LI><a href="#[4531a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GetRxFifoEv
<LI><a href="#[4531ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468310GetAddressEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528ae8]"></a>_ZN11CSerial46835WriteEP12CBarcodeData</STRONG> (ARM, 140 bytes, Stack size 16 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = _ZN11CSerial46835WriteEP12CBarcodeData &rArr; _ZN11CDriverBase13AutoTranslateEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
<LI><a href="#[4337dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase13AutoTranslateEP12CBarcodeData
<LI><a href="#[453183c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468317StoreMenuResponseEP12CBarcodeData
<LI><a href="#[4531878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468324GetExpectingMenuResponseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528aac]"></a>_ZN11CSerial46835WriteEPKhj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN11CSerial46835WriteEPKhj &rArr; _ZN11CDriverBase5WriteEPKhj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528a70]"></a>_ZN11CSerial46835WriteEPKwj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _ZN11CSerial46835WriteEPKwj &rArr; _ZN11CDriverBase5WriteEPKwj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKwj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKwj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata__ZTV11CSerial4683)
</UL>
<P><STRONG><a name="[4528a34]"></a>_ZN11CSerial468313SimpleRxTxISREv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, DrvSerial4683.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN11CSerial468313SimpleRxTxISREv &rArr; _ZN11CSerial468311Receive4683Ev &rArr; _ZN15CThreadedDriver6SignalEm &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[452f67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468311Receive4683Ev
<LI><a href="#[452f6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468312Transmit4683Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DrvSerial4683.o(.constdata)
</UL>
<P><STRONG><a name="[4601d08]"></a>_ZN15CWedgeEngineIBMC1EP15CThreadedDriverPK14CWedgeTerminaljP10CBitBanger</STRONG> (ARM, 32 bytes, Stack size 8 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN15CWedgeEngineIBMC1EP15CThreadedDriverPK14CWedgeTerminaljP10CBitBanger &rArr; _ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger &rArr; _ZN13CBitBangerISR13CreateMailBoxEv &rArr; MT_CreateMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[460172c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger
</UL>
<BR>[Called By]<UL><LI><a href="#[46d0e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamilyC1EPK14CWedgeTerminalj
</UL>

<P><STRONG><a name="[4601ccc]"></a>_ZN15CWedgeEngineIBMC2EP15CThreadedDriverPK14CWedgeTerminaljP10CBitBanger</STRONG> (ARM, 0 bytes, Stack size 8 bytes, Wedgeengineibm.o(.text), UNUSED)

<P><STRONG><a name="[4601c90]"></a>_ZN15CWedgeEngineIBMD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CWedgeEngineIBMD1Ev &rArr; _ZN12CWedgeEngineD1Ev &rArr; _ZN12CWedgeThreadD2Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46016f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
</UL>
<P><STRONG><a name="[4601c54]"></a>_ZN15CWedgeEngineIBMD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, Wedgeengineibm.o(.text), UNUSED)

<P><STRONG><a name="[4601c18]"></a>_ZN15CWedgeEngineIBMD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN15CWedgeEngineIBMD0Ev &rArr; _ZN12CWedgeEngineD1Ev &rArr; _ZN12CWedgeThreadD2Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46016f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
</UL>
<P><STRONG><a name="[4601bdc]"></a>_ZN15CWedgeEngineIBM18WaitForClkDataHighEj</STRONG> (ARM, 128 bytes, Stack size 24 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN15CWedgeEngineIBM18WaitForClkDataHighEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4601600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7ReadBitENS_5PortsE
</UL>
<BR>[Called By]<UL><LI><a href="#[4601ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv
<LI><a href="#[4601b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM21OpenKeyboardEmulationEv
<LI><a href="#[4601ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM5WriteEj
</UL>

<P><STRONG><a name="[4601ba0]"></a>_ZN15CWedgeEngineIBM5WriteEj</STRONG> (ARM, 56 bytes, Stack size 16 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN15CWedgeEngineIBM5WriteEj &rArr; _ZN15CWedgeEngineIBM18WaitForClkDataHighEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4601bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18WaitForClkDataHighEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4601ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv
<LI><a href="#[4601aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18DoStatusIndicatorsEv
<LI><a href="#[4601b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM11GetNextByteEPh
<LI><a href="#[4601b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM21OpenKeyboardEmulationEv
</UL>

<P><STRONG><a name="[4601b64]"></a>_ZN15CWedgeEngineIBM21OpenKeyboardEmulationEv</STRONG> (ARM, 60 bytes, Stack size 8 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN15CWedgeEngineIBM21OpenKeyboardEmulationEv &rArr; _ZN15CWedgeEngineIBM5WriteEj &rArr; _ZN15CWedgeEngineIBM18WaitForClkDataHighEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4601ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM5WriteEj
<LI><a href="#[4601bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18WaitForClkDataHighEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
</UL>
<P><STRONG><a name="[4601b28]"></a>_ZN15CWedgeEngineIBM11GetNextByteEPh</STRONG> (ARM, 148 bytes, Stack size 32 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN15CWedgeEngineIBM11GetNextByteEPh &rArr; _ZN15CWedgeEngineIBM5WriteEj &rArr; _ZN15CWedgeEngineIBM18WaitForClkDataHighEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4601600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7ReadBitENS_5PortsE
<LI><a href="#[4601ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM5WriteEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4601ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv
<LI><a href="#[4601aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18DoStatusIndicatorsEv
</UL>

<P><STRONG><a name="[4601aec]"></a>_ZN15CWedgeEngineIBM18DoStatusIndicatorsEv</STRONG> (ARM, 164 bytes, Stack size 16 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN15CWedgeEngineIBM18DoStatusIndicatorsEv &rArr; _ZN15CWedgeEngineIBM11GetNextByteEPh &rArr; _ZN15CWedgeEngineIBM5WriteEj &rArr; _ZN15CWedgeEngineIBM18WaitForClkDataHighEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4601b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM11GetNextByteEPh
<LI><a href="#[4601ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM5WriteEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4601ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv
</UL>

<P><STRONG><a name="[4601ab0]"></a>_ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv</STRONG> (ARM, 652 bytes, Stack size 24 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv &rArr; _ZN15CWedgeEngineIBM18DoStatusIndicatorsEv &rArr; _ZN15CWedgeEngineIBM11GetNextByteEPh &rArr; _ZN15CWedgeEngineIBM5WriteEj &rArr; _ZN15CWedgeEngineIBM18WaitForClkDataHighEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4601600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7ReadBitENS_5PortsE
<LI><a href="#[4601aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18DoStatusIndicatorsEv
<LI><a href="#[4601b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM11GetNextByteEPh
<LI><a href="#[4601ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM5WriteEj
<LI><a href="#[4601bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18WaitForClkDataHighEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
</UL>
<P><STRONG><a name="[4601a74]"></a>_ZN15CWedgeEngineIBM25PrepareIoForWedgeHardwareEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, Wedgeengineibm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
</UL>
<P><STRONG><a name="[4601a38]"></a>_ZN15CWedgeEngineIBM14EnableKeyboardEv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN15CWedgeEngineIBM14EnableKeyboardEv &rArr; _ZN9CWedgeHal14KeyboardEnableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4601678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal14KeyboardEnableEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
</UL>
<P><STRONG><a name="[46019fc]"></a>_ZN15CWedgeEngineIBM15DisableKeyboardEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Wedgeengineibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN15CWedgeEngineIBM15DisableKeyboardEv &rArr; _ZN9CWedgeHal15KeyboardDisableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[460163c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal15KeyboardDisableEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
</UL>
<P><STRONG><a name="[460172c]"></a>_ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger</STRONG> (ARM, 44 bytes, Stack size 16 bytes, Wedgeengine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger &rArr; _ZN13CBitBangerISR13CreateMailBoxEv &rArr; MT_CreateMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fff44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR13CreateMailBoxEv
<LI><a href="#[45ffff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabelC2EP15CThreadedDriverPK14CWedgeTerminal
</UL>
<BR>[Called By]<UL><LI><a href="#[4601d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBMC1EP15CThreadedDriverPK14CWedgeTerminaljP10CBitBanger
<LI><a href="#[4778fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CWedgeEngineUsbHidC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger
</UL>

<P><STRONG><a name="[46001d8]"></a>_ZN12CWedgeEngineC2EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger</STRONG> (ARM, 0 bytes, Stack size 16 bytes, Wedgeengine.o(.text), UNUSED)

<P><STRONG><a name="[46016f0]"></a>_ZN12CWedgeEngineD1Ev</STRONG> (ARM, 56 bytes, Stack size 8 bytes, Wedgeengine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CWedgeEngineD1Ev &rArr; _ZN12CWedgeThreadD2Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[45fff80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThreadD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4601c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBMD0Ev
<LI><a href="#[4601c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBMD1Ev
<LI><a href="#[4778ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CWedgeEngineUsbHidD0Ev
<LI><a href="#[4778f5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CWedgeEngineUsbHidD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
</UL>
<P><STRONG><a name="[460019c]"></a>_ZN12CWedgeEngineD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, Wedgeengine.o(.text), UNUSED)

<P><STRONG><a name="[4600160]"></a>_ZN12CWedgeEngineD0Ev</STRONG> (ARM, 64 bytes, Stack size 8 bytes, Wedgeengine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CWedgeEngineD0Ev &rArr; _ZN12CWedgeThreadD2Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[45fff80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThreadD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
</UL>
<P><STRONG><a name="[46017a4]"></a>_ZN12CWedgeEngine5CloseEv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, Wedgeengine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12CWedgeEngine5CloseEv
</UL>
<BR>[Calls]<UL><LI><a href="#[45fffbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThread5CloseEv
</UL>
<BR>[Address Reference Count : 3]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[46017e0]"></a>_ZN12CWedgeEngine10BitBangOutEjj</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Wedgeengine.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4601768]"></a>_ZN12CWedgeEngine9BitBangInERj</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Wedgeengine.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4600124]"></a>_ZN12CWedgeEngine21OpenKeyboardEmulationEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Wedgeengine.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[46000e8]"></a>_ZN12CWedgeEngine22CheckKeyboardEmulationEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Wedgeengine.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[45fefcc]"></a>_ZN12CWedgeThreadC2EP15CThreadedDriverPK14CWedgeTerminal</STRONG> (ARM, 20 bytes, Stack size 8 bytes, wedgethread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 756 + Unknown Stack Size
<LI>Call Chain = _ZN12CWedgeThreadC2EP15CThreadedDriverPK14CWedgeTerminal &rArr; _ZN14CWedgeMultiKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN19CWedgeInternationalC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _Z14LoadProkeyFilev &rArr; _Z16ReadAndCloseFilePKcjPPh &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[45fee64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKeyC2EP11CDriverBasePK14CWedgeTerminal
</UL>
<BR>[Called By]<UL><LI><a href="#[45ffff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabelC2EP15CThreadedDriverPK14CWedgeTerminal
</UL>

<P><STRONG><a name="[45fef90]"></a>_ZN12CWedgeThreadD1Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, wedgethread.o(.text), UNUSED)

<P><STRONG><a name="[45fff80]"></a>_ZN12CWedgeThreadD2Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgethread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN12CWedgeThreadD2Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[45feedc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBaseD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4600160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineD0Ev
<LI><a href="#[46016f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
</UL>
<P><STRONG><a name="[45fef54]"></a>_ZN12CWedgeThreadD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, wedgethread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CWedgeThreadD0Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[45feedc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
</UL>
<P><STRONG><a name="[46016b4]"></a>_ZN12CWedgeThread4OpenEsPKw</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgethread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN12CWedgeThread4OpenEsPKw &rArr; _ZN14CWedgeMultiKey4OpenEsPKw &rArr; _ZN12CWedgeProKey18ProkeyReplacementsEv &rArr; _ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[4778ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CWedgeEngineUsbHid4OpenEsPKw
</UL>
<BR>[Address Reference Count : 4]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
</UL>
<P><STRONG><a name="[45fffbc]"></a>_ZN12CWedgeThread5CloseEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgethread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45fef18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase5CloseEv
</UL>
<BR>[Called By]<UL><LI><a href="#[46017a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngine5CloseEv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
</UL>
<P><STRONG><a name="[45ffff8]"></a>_ZN11CWedgeLabelC2EP15CThreadedDriverPK14CWedgeTerminal</STRONG> (ARM, 20 bytes, Stack size 8 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = _ZN11CWedgeLabelC2EP15CThreadedDriverPK14CWedgeTerminal &rArr; _ZN12CWedgeThreadC2EP15CThreadedDriverPK14CWedgeTerminal &rArr; _ZN14CWedgeMultiKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN19CWedgeInternationalC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _Z14LoadProkeyFilev &rArr; _Z16ReadAndCloseFilePKcjPPh &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[45fefcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThreadC2EP15CThreadedDriverPK14CWedgeTerminal
</UL>
<BR>[Called By]<UL><LI><a href="#[460172c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger
</UL>

<P><STRONG><a name="[45fa9f4]"></a>_ZN11CWedgeLabel15MT_Driver_SleepEl</STRONG> (ARM, 132 bytes, Stack size 16 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4064860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Timer3_MicroSecondDelayj
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15SendLabelThreadEv
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15OpenStyleKeyEmuEv
<LI><a href="#[45fa8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18WaitUntilLEDsValidEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>

<P><STRONG><a name="[45fa9b8]"></a>_ZN11CWedgeLabel12SendCommandsEv</STRONG> (ARM, 328 bytes, Stack size 32 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN11CWedgeLabel12SendCommandsEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd13GetParameterWEv
<LI><a href="#[45fa094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd13GetParameterLEv
<LI><a href="#[45fa0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd13AddEndCommandEv
<LI><a href="#[45fa10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd12PrepareWriteEv
<LI><a href="#[45fa184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd10GetCommandEv
<LI><a href="#[45fa9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15MT_Driver_SleepEl
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel17OpenStyleAutoCapsEv
<LI><a href="#[45fa7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv
<LI><a href="#[45fa814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15OpenStyleKeyEmuEv
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
<LI><a href="#[45fa88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18OpenStyleKbdAltNumEv
</UL>

<P><STRONG><a name="[45fa97c]"></a>_ZN11CWedgeLabel19Add_PressNumLockKeyEv</STRONG> (ARM, 72 bytes, Stack size 16 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _ZN11CWedgeLabel19Add_PressNumLockKeyEv &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20GetModifierKeyNumberEi
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv
<LI><a href="#[45fa814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15OpenStyleKeyEmuEv
<LI><a href="#[45fa88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18OpenStyleKbdAltNumEv
</UL>

<P><STRONG><a name="[45fa940]"></a>_ZN11CWedgeLabel16Add_PressCapsKeyEv</STRONG> (ARM, 72 bytes, Stack size 16 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _ZN11CWedgeLabel16Add_PressCapsKeyEv &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20GetModifierKeyNumberEi
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel17OpenStyleAutoCapsEv
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
</UL>

<P><STRONG><a name="[45fa904]"></a>_ZN11CWedgeLabel20TranslateEscSequenceEww</STRONG> (ARM, 392 bytes, Stack size 24 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = _ZN11CWedgeLabel20TranslateEscSequenceEww &rArr; _ZN14CWedgeMultiKey9TranslateEw &rArr; _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd13AddEndCommandEv
<LI><a href="#[45fa148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd11AddScancodeEtt
<LI><a href="#[45fa1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CKeyC1Ehh
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate14HandleModifierEPK4CKey
<LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
<LI><a href="#[45fa3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey28InitializeCtrlASCIIKeyLookupEv
<LI><a href="#[45fa4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase19TurnOffControlAsciiEv
<LI><a href="#[45fa544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase18TurnOnControlAsciiEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
</UL>

<P><STRONG><a name="[45fa8c8]"></a>_ZN11CWedgeLabel18WaitUntilLEDsValidEv</STRONG> (ARM, 60 bytes, Stack size 16 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN11CWedgeLabel18WaitUntilLEDsValidEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15MT_Driver_SleepEl
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
<LI><a href="#[45fa79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel17OpenStyleAutoCapsEv
<LI><a href="#[45fa7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv
<LI><a href="#[45fa814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15OpenStyleKeyEmuEv
<LI><a href="#[45fa88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18OpenStyleKbdAltNumEv
</UL>

<P><STRONG><a name="[45fa88c]"></a>_ZN11CWedgeLabel18OpenStyleKbdAltNumEv</STRONG> (ARM, 120 bytes, Stack size 8 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN11CWedgeLabel18OpenStyleKbdAltNumEv &rArr; _ZN11CWedgeLabel12SendCommandsEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase12IsAutoKeyEmuEv
<LI><a href="#[45fa8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18WaitUntilLEDsValidEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
</UL>

<P><STRONG><a name="[45fa850]"></a>_ZN11CWedgeLabel15TurnCapsLockOffEv</STRONG> (ARM, 84 bytes, Stack size 8 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN11CWedgeLabel15TurnCapsLockOffEv &rArr; _ZN11CWedgeLabel12SendCommandsEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20GetModifierKeyNumberEi
<LI><a href="#[45fa940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel16Add_PressCapsKeyEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
<LI><a href="#[45fa7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv
<LI><a href="#[45fa814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15OpenStyleKeyEmuEv
</UL>

<P><STRONG><a name="[45fa814]"></a>_ZN11CWedgeLabel15OpenStyleKeyEmuEv</STRONG> (ARM, 144 bytes, Stack size 8 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CWedgeLabel15OpenStyleKeyEmuEv &rArr; _ZN11CWedgeLabel15TurnCapsLockOffEv &rArr; _ZN11CWedgeLabel12SendCommandsEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20GetModifierKeyNumberEi
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
<LI><a href="#[45fa8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18WaitUntilLEDsValidEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
<LI><a href="#[45fa9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15MT_Driver_SleepEl
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
</UL>

<P><STRONG><a name="[45fa7d8]"></a>_ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv</STRONG> (ARM, 196 bytes, Stack size 8 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv &rArr; _ZN11CWedgeLabel15TurnCapsLockOffEv &rArr; _ZN11CWedgeLabel12SendCommandsEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase12IsAutoKeyEmuEv
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
<LI><a href="#[45fa8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18WaitUntilLEDsValidEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
</UL>

<P><STRONG><a name="[45fa79c]"></a>_ZN11CWedgeLabel17OpenStyleAutoCapsEv</STRONG> (ARM, 156 bytes, Stack size 8 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN11CWedgeLabel17OpenStyleAutoCapsEv &rArr; _ZN11CWedgeLabel12SendCommandsEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase12IsAutoKeyEmuEv
<LI><a href="#[45fa8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18WaitUntilLEDsValidEv
<LI><a href="#[45fa940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel16Add_PressCapsKeyEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
</UL>

<P><STRONG><a name="[45fa760]"></a>_ZN11CWedgeLabel14OpenLockStylesEv</STRONG> (ARM, 168 bytes, Stack size 8 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN11CWedgeLabel14OpenLockStylesEv &rArr; _ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv &rArr; _ZN11CWedgeLabel15TurnCapsLockOffEv &rArr; _ZN11CWedgeLabel12SendCommandsEv &rArr; _ZN11CWedgeLabel15MT_Driver_SleepEl &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase32IsKbdStyleAutoCapsLockViaNumLockEv
<LI><a href="#[45fa490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase22IsKbdStyleAutoCapsLockEv
<LI><a href="#[45fa508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase19IsKbdStyleShiftLockEv
<LI><a href="#[45fa580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase16IsKbdStyleKeyEmuEv
<LI><a href="#[45fa5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase12IsAutoKeyEmuEv
<LI><a href="#[45fa79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel17OpenStyleAutoCapsEv
<LI><a href="#[45fa7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv
<LI><a href="#[45fa814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15OpenStyleKeyEmuEv
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
<LI><a href="#[45fa8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18WaitUntilLEDsValidEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
</UL>

<P><STRONG><a name="[45fa724]"></a>_ZN11CWedgeLabel9SendLabelEv</STRONG> (ARM, 644 bytes, Stack size 40 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = _ZN11CWedgeLabel9SendLabelEv &rArr; _ZN11CWedgeLabel20TranslateEscSequenceEww &rArr; _ZN14CWedgeMultiKey9TranslateEw &rArr; _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[4337bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11SentBarcodeEv
<LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd13AddEndCommandEv
<LI><a href="#[45fa10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd12PrepareWriteEv
<LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
<LI><a href="#[45fa3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData22BeginnReadingTotalDataEv
<LI><a href="#[45fa418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17ReadNextTotalDataEjRw
<LI><a href="#[45fa5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase12IsTransAltNpEv
<LI><a href="#[45fa5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase12IsAutoKeyEmuEv
<LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
<LI><a href="#[45fa88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18OpenStyleKbdAltNumEv
<LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
<LI><a href="#[45fa940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel16Add_PressCapsKeyEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
<LI><a href="#[45fa9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15MT_Driver_SleepEl
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15SendLabelThreadEv
<LI><a href="#[4b4cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd19SendLabelToKeyboardEP12CBarcodeData
</UL>

<P><STRONG><a name="[45fa6e8]"></a>_ZN11CWedgeLabel15SendLabelThreadEv</STRONG> (ARM, 188 bytes, Stack size 16 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = _ZN11CWedgeLabel15SendLabelThreadEv &rArr; _ZN11CWedgeLabel9SendLabelEv &rArr; _ZN11CWedgeLabel20TranslateEscSequenceEww &rArr; _ZN14CWedgeMultiKey9TranslateEw &rArr; _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15MT_Driver_SleepEl
</UL>
<BR>[Called By]<UL><LI><a href="#[46d2580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriver10ThreadLoopEv
</UL>

<P><STRONG><a name="[460181c]"></a>_ZN11CWedgeLabel22Add_CloseLabelCommandsEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wedgelabel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN11CWedgeLabel22Add_CloseLabelCommandsEv &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey
</UL>
<BR>[Address Reference Count : 4]<UL><LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[45fee64]"></a>_ZN14CWedgeMultiKeyC2EP11CDriverBasePK14CWedgeTerminal</STRONG> (ARM, 20 bytes, Stack size 8 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = _ZN14CWedgeMultiKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN19CWedgeInternationalC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _Z14LoadProkeyFilev &rArr; _Z16ReadAndCloseFilePKcjPPh &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[45f6638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CWedgeInternationalC2EP11CDriverBasePK14CWedgeTerminal
</UL>
<BR>[Called By]<UL><LI><a href="#[45fefcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThreadC2EP15CThreadedDriverPK14CWedgeTerminal
</UL>

<P><STRONG><a name="[45feea0]"></a>_ZN14CWedgeMultiKey4OpenEsPKw</STRONG> (ARM, 140 bytes, Stack size 16 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN14CWedgeMultiKey4OpenEsPKw &rArr; _ZN12CWedgeProKey18ProkeyReplacementsEv &rArr; _ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[45f6674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi
<LI><a href="#[45f6764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber10InitializeEPK9CChar2Key
<LI><a href="#[45f67a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey18ProkeyReplacementsEv
<LI><a href="#[45f67dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase4OpenEsPKw
<LI><a href="#[45f6818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase22HandleNumbersViaNumPadEPK9CChar2Key
<LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
<LI><a href="#[45f6890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase14HandleCapsLockEv
<LI><a href="#[45f68cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase13HandleKbdModeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[46016b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThread4OpenEsPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
</UL>
<P><STRONG><a name="[45f6aac]"></a>_ZN14CWedgeMultiKey13SendAltNumPadEPKwj</STRONG> (ARM, 268 bytes, Stack size 64 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45f65fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9CChar2Key19GetNumPadKeyDetailsEwRhS0_
<LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CKeyC1Ev
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20GetModifierKeyNumberEi
</UL>
<BR>[Called By]<UL><LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
</UL>

<P><STRONG><a name="[45f6a70]"></a>_ZN14CWedgeMultiKey10TryDeadKeyEw</STRONG> (ARM, 292 bytes, Stack size 24 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _ZN14CWedgeMultiKey10TryDeadKeyEw &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f66ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber6GetKeyEw
</UL>
<BR>[Called By]<UL><LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
</UL>

<P><STRONG><a name="[45f6a34]"></a>_ZN14CWedgeMultiKey8MultiKeyEw</STRONG> (ARM, 620 bytes, Stack size 40 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[387e7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode14GetDOSCodepageEi
<LI><a href="#[387e830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode14GetWinCodepageEi
<LI><a href="#[387e8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CTransCode19UnicodeToSingleByteEhwRh
<LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f66ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber6GetKeyEw
<LI><a href="#[45f6a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey10TryDeadKeyEw
<LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
</UL>

<P><STRONG><a name="[45f69f8]"></a>_ZN14CWedgeMultiKey15TryNonPrintCharEh</STRONG> (ARM, 196 bytes, Stack size 16 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN14CWedgeMultiKey15TryNonPrintCharEh &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f66ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber6GetKeyEw
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
</UL>

<P><STRONG><a name="[45f69bc]"></a>_ZN14CWedgeMultiKey15SendInHexFormatEw</STRONG> (ARM, 252 bytes, Stack size 32 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _ZN14CWedgeMultiKey15SendInHexFormatEw &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f66ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber6GetKeyEw
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
</UL>

<P><STRONG><a name="[45fa364]"></a>_ZN14CWedgeMultiKey9TranslateEw</STRONG> (ARM, 252 bytes, Stack size 16 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = _ZN14CWedgeMultiKey9TranslateEw &rArr; _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f66ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber6GetKeyEw
<LI><a href="#[45f69bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey15SendInHexFormatEw
<LI><a href="#[45f69f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey15TryNonPrintCharEh
<LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
<LI><a href="#[45fa0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd13AddEndCommandEv
<LI><a href="#[45fa10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd12PrepareWriteEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
</UL>

<P><STRONG><a name="[45fa3a0]"></a>_ZN14CWedgeMultiKey28InitializeCtrlASCIIKeyLookupEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, wedgemultikey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN14CWedgeMultiKey28InitializeCtrlASCIIKeyLookupEv &rArr; _ZN12CWedgeProKey18ProkeyReplacementsEv &rArr; _ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[45f6728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber19InitializeCtrlASCIIEPK9CChar2Key
<LI><a href="#[45f67a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey18ProkeyReplacementsEv
<LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
</UL>

<P><STRONG><a name="[45f5468]"></a>_ZN19CWedgeInternational18IsCountrySupportedEi</STRONG> (ARM, 44 bytes, Stack size 0 bytes, wedgeinternational.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46d25bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriver15DeviceIoControlE11IoControl_tlj
</UL>

<P><STRONG><a name="[45f6638]"></a>_ZN19CWedgeInternationalC2EP11CDriverBasePK14CWedgeTerminal</STRONG> (ARM, 20 bytes, Stack size 8 bytes, wedgeinternational.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 740 + Unknown Stack Size
<LI>Call Chain = _ZN19CWedgeInternationalC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _Z14LoadProkeyFilev &rArr; _Z16ReadAndCloseFilePKcjPPh &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[45f533c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal
</UL>
<BR>[Called By]<UL><LI><a href="#[45fee64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKeyC2EP11CDriverBasePK14CWedgeTerminal
</UL>

<P><STRONG><a name="[45f6674]"></a>_ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi</STRONG> (ARM, 148 bytes, Stack size 16 bytes, wedgeinternational.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = _ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi &rArr;  _ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f5300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber8StoreKeyEwhh
<LI><a href="#[45f6674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi
</UL>
<BR>[Called By]<UL><LI><a href="#[45f6674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi
<LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>

<P><STRONG><a name="[46d93a8]"></a>_ZN15CWedgeTranslate13CopyBreakCodeEhttl</STRONG> (ARM, 188 bytes, Stack size 24 bytes, wedgetranslate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd11AddScancodeEtt
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
</UL>

<P><STRONG><a name="[45fa274]"></a>_ZN15CWedgeTranslate6DoMakeEht</STRONG> (ARM, 284 bytes, Stack size 24 bytes, wedgetranslate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN15CWedgeTranslate6DoMakeEht &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd11AddScancodeEtt
<LI><a href="#[46d91c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK10CScancodes15GetScancodeTypeEh
<LI><a href="#[46d9204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK10CScancodes11GetSequenceEh
</UL>
<BR>[Called By]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
<LI><a href="#[45fa2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
<LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
<LI><a href="#[45fa940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel16Add_PressCapsKeyEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
<LI><a href="#[46d927c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate19HandleModifierMakesEPK4CKey
</UL>

<P><STRONG><a name="[45fa238]"></a>_ZN15CWedgeTranslate7DoBreakEhtl</STRONG> (ARM, 304 bytes, Stack size 32 bytes, wedgetranslate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd11AddScancodeEtt
<LI><a href="#[46d91c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK10CScancodes15GetScancodeTypeEh
<LI><a href="#[46d9204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK10CScancodes11GetSequenceEh
<LI><a href="#[46d93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate13CopyBreakCodeEhttl
</UL>
<BR>[Called By]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
<LI><a href="#[45fa2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey
<LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
<LI><a href="#[45fa940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel16Add_PressCapsKeyEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
<LI><a href="#[46d927c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate19HandleModifierMakesEPK4CKey
</UL>

<P><STRONG><a name="[45fa2ec]"></a>_ZN15CWedgeTranslate20GetModifierKeyNumberEi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgetranslate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
<LI><a href="#[45fa814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15OpenStyleKeyEmuEv
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
<LI><a href="#[45fa940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel16Add_PressCapsKeyEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
</UL>

<P><STRONG><a name="[46d927c]"></a>_ZN15CWedgeTranslate19HandleModifierMakesEPK4CKey</STRONG> (ARM, 228 bytes, Stack size 32 bytes, wedgetranslate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN15CWedgeTranslate19HandleModifierMakesEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
</UL>
<BR>[Called By]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45fa328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate14HandleModifierEPK4CKey
</UL>

<P><STRONG><a name="[45fa2b0]"></a>_ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey</STRONG> (ARM, 172 bytes, Stack size 32 bytes, wedgetranslate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
</UL>
<BR>[Called By]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45fa328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate14HandleModifierEPK4CKey
<LI><a href="#[460181c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel22Add_CloseLabelCommandsEv
</UL>

<P><STRONG><a name="[45fa328]"></a>_ZN15CWedgeTranslate14HandleModifierEPK4CKey</STRONG> (ARM, 32 bytes, Stack size 16 bytes, wedgetranslate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _ZN15CWedgeTranslate14HandleModifierEPK4CKey &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey
<LI><a href="#[46d927c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate19HandleModifierMakesEPK4CKey
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
</UL>

<P><STRONG><a name="[45f66b0]"></a>_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw</STRONG> (ARM, 148 bytes, Stack size 24 bytes, wedgetranslate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[4337a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase17GetInterCharDelayEw
<LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey
<LI><a href="#[46d9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey14ProkeySequenceEw
<LI><a href="#[46d927c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate19HandleModifierMakesEPK4CKey
</UL>
<BR>[Called By]<UL><LI><a href="#[45f69bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey15SendInHexFormatEw
<LI><a href="#[45f69f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey15TryNonPrintCharEh
<LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
<LI><a href="#[45f6a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey10TryDeadKeyEw
<LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
<LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
</UL>

<P><STRONG><a name="[45f533c]"></a>_ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal</STRONG> (ARM, 36 bytes, Stack size 8 bytes, wedgeprokey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 732 + Unknown Stack Size
<LI>Call Chain = _ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal &rArr; _Z14LoadProkeyFilev &rArr; _Z16ReadAndCloseFilePKcjPPh &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[46d78b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBaseC2EP11CDriverBasePK14CWedgeTerminal
<LI><a href="#[46d78f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoadProkeyFilev
</UL>
<BR>[Called By]<UL><LI><a href="#[45f6638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CWedgeInternationalC2EP11CDriverBasePK14CWedgeTerminal
</UL>

<P><STRONG><a name="[46d7a94]"></a>_ZN12CWedgeProKey23SearchCharacterSequenceEPKhwRi</STRONG> (ARM, 132 bytes, Stack size 20 bytes, wedgeprokey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN12CWedgeProKey23SearchCharacterSequenceEPKhwRi
</UL>
<BR>[Called By]<UL><LI><a href="#[46d9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey14ProkeySequenceEw
</UL>

<P><STRONG><a name="[46d7a58]"></a>_ZN12CWedgeProKey30SearchTermCountrySequenceTableEhh</STRONG> (ARM, 112 bytes, Stack size 8 bytes, wedgeprokey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12CWedgeProKey30SearchTermCountrySequenceTableEhh
</UL>
<BR>[Called By]<UL><LI><a href="#[46d9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey14ProkeySequenceEw
</UL>

<P><STRONG><a name="[46d9240]"></a>_ZN12CWedgeProKey14ProkeySequenceEw</STRONG> (ARM, 252 bytes, Stack size 24 bytes, wedgeprokey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN12CWedgeProKey14ProkeySequenceEw &rArr; _ZN12CWedgeProKey23SearchCharacterSequenceEPKhwRi
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd11AddScancodeEtt
<LI><a href="#[46d7878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK10CScancodes23IsCommunicationScancodeEh
<LI><a href="#[46d7a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey30SearchTermCountrySequenceTableEhh
<LI><a href="#[46d7a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey23SearchCharacterSequenceEPKhwRi
</UL>
<BR>[Called By]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
</UL>

<P><STRONG><a name="[46d7a1c]"></a>_ZN12CWedgeProKey16CopyReplacementsEPKhi</STRONG> (ARM, 88 bytes, Stack size 32 bytes, wedgeprokey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[45f5300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber8StoreKeyEwhh
</UL>
<BR>[Called By]<UL><LI><a href="#[45f67a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey18ProkeyReplacementsEv
</UL>

<P><STRONG><a name="[46d79e0]"></a>_ZN12CWedgeProKey22SearchReplacementTableEhhRi</STRONG> (ARM, 108 bytes, Stack size 8 bytes, wedgeprokey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12CWedgeProKey22SearchReplacementTableEhhRi
</UL>
<BR>[Called By]<UL><LI><a href="#[45f67a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey18ProkeyReplacementsEv
</UL>

<P><STRONG><a name="[45f67a0]"></a>_ZN12CWedgeProKey18ProkeyReplacementsEv</STRONG> (ARM, 212 bytes, Stack size 24 bytes, wedgeprokey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN12CWedgeProKey18ProkeyReplacementsEv &rArr; _ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[46d79e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey22SearchReplacementTableEhhRi
<LI><a href="#[46d7a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey28InitializeCtrlASCIIKeyLookupEv
<LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>

<P><STRONG><a name="[46d70f8]"></a>_ZN9CWedgeCmdC1Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, wedgecmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _ZN9CWedgeCmdC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[46d78b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBaseC2EP11CDriverBasePK14CWedgeTerminal
</UL>

<P><STRONG><a name="[46d70bc]"></a>_ZN9CWedgeCmdC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, wedgecmd.o(.text), UNUSED)

<P><STRONG><a name="[46d7080]"></a>_ZN9CWedgeCmd10AddCommandEhtt</STRONG> (ARM, 100 bytes, Stack size 4 bytes, wedgecmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd15AddDelayCommandEl
<LI><a href="#[45fa148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd11AddScancodeEtt
</UL>

<P><STRONG><a name="[45fa0d0]"></a>_ZN9CWedgeCmd13AddEndCommandEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, wedgecmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>

<P><STRONG><a name="[45fa10c]"></a>_ZN9CWedgeCmd12PrepareWriteEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wedgecmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>

<P><STRONG><a name="[45fa01c]"></a>_ZN9CWedgeCmd15AddDelayCommandEl</STRONG> (ARM, 88 bytes, Stack size 0 bytes, wedgecmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[46d7080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Called By]<UL><LI><a href="#[45f66b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw
<LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
<LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15TurnCapsLockOffEv
<LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
<LI><a href="#[45fa940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel16Add_PressCapsKeyEv
<LI><a href="#[45fa97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel19Add_PressNumLockKeyEv
<LI><a href="#[46d9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey14ProkeySequenceEw
<LI><a href="#[46d927c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate19HandleModifierMakesEPK4CKey
<LI><a href="#[46d93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate13CopyBreakCodeEhttl
</UL>

<P><STRONG><a name="[45fa148]"></a>_ZN9CWedgeCmd11AddScancodeEtt</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgecmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9CWedgeCmd11AddScancodeEtt &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[46d7080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
<LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
<LI><a href="#[46d9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey14ProkeySequenceEw
<LI><a href="#[46d93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate13CopyBreakCodeEhttl
</UL>

<P><STRONG><a name="[45fa184]"></a>_ZN9CWedgeCmd10GetCommandEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgecmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>

<P><STRONG><a name="[45fa058]"></a>_ZN9CWedgeCmd13GetParameterWEv</STRONG> (ARM, 40 bytes, Stack size 0 bytes, wedgecmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>

<P><STRONG><a name="[45fa094]"></a>_ZN9CWedgeCmd13GetParameterLEv</STRONG> (ARM, 80 bytes, Stack size 0 bytes, wedgecmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel12SendCommandsEv
</UL>

<P><STRONG><a name="[46d78b4]"></a>_ZN10CWedgeBaseC2EP11CDriverBasePK14CWedgeTerminal</STRONG> (ARM, 116 bytes, Stack size 16 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _ZN10CWedgeBaseC2EP11CDriverBasePK14CWedgeTerminal &rArr; _ZN15CWedgeKeyNumberC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46d40b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumberC1Ev
<LI><a href="#[46d70f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmdC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[45f533c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal
</UL>

<P><STRONG><a name="[46d4290]"></a>_ZN10CWedgeBaseD1Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, wedgebase.o(.text), UNUSED)

<P><STRONG><a name="[45feedc]"></a>_ZN10CWedgeBaseD2Ev</STRONG> (ARM, 24 bytes, Stack size 8 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46d4074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[45fef54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThreadD0Ev
<LI><a href="#[45fff80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThreadD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[46d4254]"></a>_ZN10CWedgeBaseD0Ev</STRONG> (ARM, 28 bytes, Stack size 8 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CWedgeBaseD0Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46d4074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[46d4218]"></a>_ZN10CWedgeBase15StoreAutoKeyEmuEb</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4778ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CWedgeEngineUsbHid4OpenEsPKw
</UL>

<P><STRONG><a name="[45fa580]"></a>_ZN10CWedgeBase16IsKbdStyleKeyEmuEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
<LI><a href="#[46d25bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriver15DeviceIoControlE11IoControl_tlj
</UL>

<P><STRONG><a name="[45f67dc]"></a>_ZN10CWedgeBase4OpenEsPKw</STRONG> (ARM, 200 bytes, Stack size 16 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CWedgeBase4OpenEsPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>
<BR>[Address Reference Count : 3]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[45fef18]"></a>_ZN10CWedgeBase5CloseEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fffbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThread5CloseEv
</UL>
<BR>[Address Reference Count : 4]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[46d41dc]"></a>_ZN10CWedgeBase13StoreKbdStyleEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4778ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CWedgeEngineUsbHid4OpenEsPKw
</UL>

<P><STRONG><a name="[45fa5f8]"></a>_ZN10CWedgeBase12IsAutoKeyEmuEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
<LI><a href="#[45fa79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel17OpenStyleAutoCapsEv
<LI><a href="#[45fa7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel27OpenStyleAutoCapsViaNumLockEv
<LI><a href="#[45fa88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel18OpenStyleKbdAltNumEv
</UL>

<P><STRONG><a name="[46d41a0]"></a>_ZN10CWedgeBase12IsCntrlASCIIEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>

<P><STRONG><a name="[46d4164]"></a>_ZN10CWedgeBase16IsCntrlASCII_WinEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>

<P><STRONG><a name="[45fa5bc]"></a>_ZN10CWedgeBase12IsTransAltNpEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
</UL>

<P><STRONG><a name="[46d4128]"></a>_ZN10CWedgeBase18IsKbdStyleCapsLockEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase14HandleCapsLockEv
</UL>

<P><STRONG><a name="[45fa508]"></a>_ZN10CWedgeBase19IsKbdStyleShiftLockEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
</UL>

<P><STRONG><a name="[45fa490]"></a>_ZN10CWedgeBase22IsKbdStyleAutoCapsLockEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
</UL>

<P><STRONG><a name="[45fa454]"></a>_ZN10CWedgeBase32IsKbdStyleAutoCapsLockViaNumLockEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel14OpenLockStylesEv
</UL>

<P><STRONG><a name="[46d40ec]"></a>_ZN10CWedgeBase11SetupDelaysEv</STRONG> (ARM, 264 bytes, Stack size 24 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CWedgeBase11SetupDelaysEv
</UL>
<BR>[Called By]<UL><LI><a href="#[46018d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[46018d0]"></a>_ZN10CWedgeBase17ExtractParametersEPKw</STRONG> (ARM, 864 bytes, Stack size 24 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN10CWedgeBase17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwS1_RVi &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi
<LI><a href="#[46d40ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase11SetupDelaysEv
</UL>
<BR>[Address Reference Count : 9]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4601894]"></a>_ZN10CWedgeBase18NotifyOutTermDelayEm</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR>[Address Reference Count : 8]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[4601858]"></a>_ZN10CWedgeBase9OpenLabelEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR>[Address Reference Count : 9]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
<LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[460190c]"></a>_ZN10CWedgeBase15FinalCloseLabelEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR>[Address Reference Count : 8]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> Wedgeengineibm.o(.constdata__ZTV15CWedgeEngineIBM)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[4600034]"></a>_ZN10CWedgeBase25PrepareIoForWedgeHardwareEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR>[Address Reference Count : 7]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[45f6818]"></a>_ZN10CWedgeBase22HandleNumbersViaNumPadEPK9CChar2Key</STRONG> (ARM, 112 bytes, Stack size 24 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CWedgeBase22HandleNumbersViaNumPadEPK9CChar2Key
</UL>
<BR>[Calls]<UL><LI><a href="#[45f5300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber8StoreKeyEwhh
<LI><a href="#[45f65fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9CChar2Key19GetNumPadKeyDetailsEwRhS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>

<P><STRONG><a name="[45fa544]"></a>_ZN10CWedgeBase18TurnOnControlAsciiEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CWedgeBase18TurnOnControlAsciiEv &rArr; _ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>
<BR>[Calls]<UL><LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
</UL>

<P><STRONG><a name="[45fa4cc]"></a>_ZN10CWedgeBase19TurnOffControlAsciiEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CWedgeBase19TurnOffControlAsciiEv &rArr; _ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>
<BR>[Calls]<UL><LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
</UL>

<P><STRONG><a name="[46000ac]"></a>_ZN10CWedgeBase14EnableKeyboardEv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CWedgeBase14EnableKeyboardEv &rArr; _ZN9CWedgeHal14KeyboardEnableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4601678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal14KeyboardEnableEv
</UL>
<BR>[Address Reference Count : 7]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[4600070]"></a>_ZN10CWedgeBase15DisableKeyboardEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CWedgeBase15DisableKeyboardEv &rArr; _ZN9CWedgeHal15KeyboardDisableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[460163c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal15KeyboardDisableEv
</UL>
<BR>[Address Reference Count : 7]<UL><LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> Wedgeengine.o(.constdata__ZTV12CWedgeEngine)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
</UL>
<P><STRONG><a name="[46d78f0]"></a>_Z14LoadProkeyFilev</STRONG> (ARM, 148 bytes, Stack size 56 bytes, prokeytb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = _Z14LoadProkeyFilev &rArr; _Z16ReadAndCloseFilePKcjPPh &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[46d38b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKhjbb
</UL>
<BR>[Called By]<UL><LI><a href="#[45f533c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKeyC2EP11CDriverBasePK14CWedgeTerminal
</UL>

<P><STRONG><a name="[46d279c]"></a>_ZN12CWedgeDriverC1Ev</STRONG> (ARM, 44 bytes, Stack size 8 bytes, drvwedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN12CWedgeDriverC1Ev &rArr; _ZN15CThreadedDriverC1Ejj &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[440eee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverC1Ejj
</UL>
<BR>[Called By]<UL><LI><a href="#[46d0e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamilyC1EPK14CWedgeTerminalj
</UL>

<P><STRONG><a name="[46d2724]"></a>_ZN12CWedgeDriverC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvwedgebase.o(.text), UNUSED)

<P><STRONG><a name="[46d26e8]"></a>_ZN12CWedgeDriverD1Ev</STRONG> (ARM, 56 bytes, Stack size 8 bytes, drvwedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CWedgeDriverD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[46d0d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamilyD0Ev
<LI><a href="#[46d0dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamilyD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
</UL>
<P><STRONG><a name="[46d26ac]"></a>_ZN12CWedgeDriverD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvwedgebase.o(.text), UNUSED)

<P><STRONG><a name="[46d2670]"></a>_ZN12CWedgeDriverD0Ev</STRONG> (ARM, 64 bytes, Stack size 8 bytes, drvwedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CWedgeDriverD0Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
</UL>
<P><STRONG><a name="[46d2634]"></a>_ZN12CWedgeDriver4OpenEsPKw</STRONG> (ARM, 80 bytes, Stack size 24 bytes, drvwedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944 + Unknown Stack Size
<LI>Call Chain = _ZN12CWedgeDriver4OpenEsPKw &rArr; _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440ec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver9RunThreadEv
<LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
</UL>
<BR>[Address Reference Count : 2]<UL><LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[46d25f8]"></a>_ZN12CWedgeDriver5CloseEv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, drvwedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN12CWedgeDriver5CloseEv &rArr; _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[46d25bc]"></a>_ZN12CWedgeDriver15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 144 bytes, Stack size 24 bytes, drvwedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN12CWedgeDriver15DeviceIoControlE11IoControl_tlj &rArr; _ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[440eccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj
<LI><a href="#[45f5468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CWedgeInternational18IsCountrySupportedEi
<LI><a href="#[45fa580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase16IsKbdStyleKeyEmuEv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[46d2580]"></a>_ZN12CWedgeDriver10ThreadLoopEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, drvwedgebase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = _ZN12CWedgeDriver10ThreadLoopEv &rArr; _ZN11CWedgeLabel15SendLabelThreadEv &rArr; _ZN11CWedgeLabel9SendLabelEv &rArr; _ZN11CWedgeLabel20TranslateEscSequenceEww &rArr; _ZN14CWedgeMultiKey9TranslateEw &rArr; _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[45fa6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel15SendLabelThreadEv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[46d0e88]"></a>_ZN15CWedgeIBMFamilyC1EPK14CWedgeTerminalj</STRONG> (ARM, 88 bytes, Stack size 24 bytes, drvwedgeibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944 + Unknown Stack Size
<LI>Call Chain = _ZN15CWedgeIBMFamilyC1EPK14CWedgeTerminalj &rArr; _ZN15CWedgeEngineIBMC1EP15CThreadedDriverPK14CWedgeTerminaljP10CBitBanger &rArr; _ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger &rArr; _ZN13CBitBangerISR13CreateMailBoxEv &rArr; MT_CreateMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4601d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBMC1EP15CThreadedDriverPK14CWedgeTerminaljP10CBitBanger
<LI><a href="#[46d0b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBMC1Ev
<LI><a href="#[46d279c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriverC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[43371bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CreateIBM_ATv
</UL>

<P><STRONG><a name="[46d0e4c]"></a>_ZN15CWedgeIBMFamilyC2EPK14CWedgeTerminalj</STRONG> (ARM, 0 bytes, Stack size 24 bytes, drvwedgeibm.o(.text), UNUSED)

<P><STRONG><a name="[43371bc]"></a>_Z12CreateIBM_ATv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, drvwedgeibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1952 + Unknown Stack Size
<LI>Call Chain = _Z12CreateIBM_ATv &rArr; _ZN15CWedgeIBMFamilyC1EPK14CWedgeTerminalj &rArr; _ZN15CWedgeEngineIBMC1EP15CThreadedDriverPK14CWedgeTerminaljP10CBitBanger &rArr; _ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger &rArr; _ZN13CBitBangerISR13CreateMailBoxEv &rArr; MT_CreateMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46d0e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamilyC1EPK14CWedgeTerminalj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[46d0e10]"></a>_ZN15CWedgeIBMFamily5WriteEP12CBarcodeData</STRONG> (ARM, 4 bytes, Stack size 0 bytes, drvwedgeibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = _ZN15CWedgeIBMFamily5WriteEP12CBarcodeData &rArr; _ZN11CDriverBase5WriteEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEP12CBarcodeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[46d0dd4]"></a>_ZN15CWedgeIBMFamilyD1Ev</STRONG> (ARM, 56 bytes, Stack size 8 bytes, drvwedgeibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN15CWedgeIBMFamilyD1Ev &rArr; _ZN12CWedgeDriverD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46d26e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriverD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[46d0d98]"></a>_ZN15CWedgeIBMFamilyD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvwedgeibm.o(.text), UNUSED)

<P><STRONG><a name="[46d0d5c]"></a>_ZN15CWedgeIBMFamilyD0Ev</STRONG> (ARM, 64 bytes, Stack size 8 bytes, drvwedgeibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN15CWedgeIBMFamilyD0Ev &rArr; _ZN12CWedgeDriverD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46d26e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeDriverD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[46d7878]"></a>_ZNK10CScancodes23IsCommunicationScancodeEh</STRONG> (ARM, 88 bytes, Stack size 4 bytes, wedgescancode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZNK10CScancodes23IsCommunicationScancodeEh
</UL>
<BR>[Called By]<UL><LI><a href="#[46d9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey14ProkeySequenceEw
</UL>

<P><STRONG><a name="[46d91c8]"></a>_ZNK10CScancodes15GetScancodeTypeEh</STRONG> (ARM, 84 bytes, Stack size 0 bytes, wedgescancode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
</UL>

<P><STRONG><a name="[46d9204]"></a>_ZNK10CScancodes11GetSequenceEh</STRONG> (ARM, 88 bytes, Stack size 0 bytes, wedgescancode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate7DoBreakEhtl
<LI><a href="#[45fa274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeTranslate6DoMakeEht
</UL>

<P><STRONG><a name="[45fa1c0]"></a>_ZN4CKeyC1Ev</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgekey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
<LI><a href="#[45fddfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___14_wedgelabel_cpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgekeynumber.o(.text)
</UL>
<P><STRONG><a name="[46cfe20]"></a>_ZN4CKeyC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, wedgekey.o(.text), UNUSED)

<P><STRONG><a name="[45fa1fc]"></a>_ZN4CKeyC1Ehh</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wedgekey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel20TranslateEscSequenceEww
</UL>

<P><STRONG><a name="[46cfde4]"></a>_ZN4CKeyC2Ehh</STRONG> (ARM, 0 bytes, Stack size 0 bytes, wedgekey.o(.text), UNUSED)

<P><STRONG><a name="[46d40b0]"></a>_ZN15CWedgeKeyNumberC1Ev</STRONG> (ARM, 44 bytes, Stack size 8 bytes, wedgekeynumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN15CWedgeKeyNumberC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[46d78b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBaseC2EP11CDriverBasePK14CWedgeTerminal
</UL>

<P><STRONG><a name="[46cf5b0]"></a>_ZN15CWedgeKeyNumberC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, wedgekeynumber.o(.text), UNUSED)

<P><STRONG><a name="[46d4074]"></a>_ZN15CWedgeKeyNumberD1Ev</STRONG> (ARM, 32 bytes, Stack size 8 bytes, wedgekeynumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[45feedc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBaseD2Ev
<LI><a href="#[46d4254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBaseD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgekeynumber.o(.constdata__ZTV15CWedgeKeyNumber)
</UL>
<P><STRONG><a name="[46cf574]"></a>_ZN15CWedgeKeyNumberD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, wedgekeynumber.o(.text), UNUSED)

<P><STRONG><a name="[46cf538]"></a>_ZN15CWedgeKeyNumberD0Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, wedgekeynumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN15CWedgeKeyNumberD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgekeynumber.o(.constdata__ZTV15CWedgeKeyNumber)
</UL>
<P><STRONG><a name="[45f5300]"></a>_ZN15CWedgeKeyNumber8StoreKeyEwhh</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wedgekeynumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CWedgeInternational22DoInternationalSupportEPK10CKeyFixupsi
<LI><a href="#[45f6818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase22HandleNumbersViaNumPadEPK9CChar2Key
<LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
<LI><a href="#[45f6890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase14HandleCapsLockEv
<LI><a href="#[45f68cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase13HandleKbdModeEv
<LI><a href="#[46d7a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>

<P><STRONG><a name="[45f6764]"></a>_ZN15CWedgeKeyNumber10InitializeEPK9CChar2Key</STRONG> (ARM, 188 bytes, Stack size 40 bytes, wedgekeynumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN15CWedgeKeyNumber10InitializeEPK9CChar2Key
</UL>
<BR>[Calls]<UL><LI><a href="#[46cf4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9CChar2Key13GetKeyDetailsEwRhS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>

<P><STRONG><a name="[45f6728]"></a>_ZN15CWedgeKeyNumber19InitializeCtrlASCIIEPK9CChar2Key</STRONG> (ARM, 136 bytes, Stack size 40 bytes, wedgekeynumber.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN15CWedgeKeyNumber19InitializeCtrlASCIIEPK9CChar2Key
</UL>
<BR>[Calls]<UL><LI><a href="#[46cf4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9CChar2Key13GetKeyDetailsEwRhS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey28InitializeCtrlASCIIKeyLookupEv
</UL>

<P><STRONG><a name="[45f66ec]"></a>_ZN15CWedgeKeyNumber6GetKeyEw</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wedgekeynumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase14HandleCapsLockEv
<LI><a href="#[45f68cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase13HandleKbdModeEv
<LI><a href="#[45f69bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey15SendInHexFormatEw
<LI><a href="#[45f69f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey15TryNonPrintCharEh
<LI><a href="#[45f6a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey8MultiKeyEw
<LI><a href="#[45f6a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey10TryDeadKeyEw
<LI><a href="#[45fa364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey9TranslateEw
</UL>

<P><STRONG><a name="[46cf4fc]"></a>_ZN15CWedgeKeyNumber12GetKeyNumberEw</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wedgekeynumber.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>

<P><STRONG><a name="[46cf4c0]"></a>_ZNK9CChar2Key13GetKeyDetailsEwRhS0_</STRONG> (ARM, 44 bytes, Stack size 0 bytes, wedgechar2key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber19InitializeCtrlASCIIEPK9CChar2Key
<LI><a href="#[45f6764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber10InitializeEPK9CChar2Key
</UL>

<P><STRONG><a name="[45f65fc]"></a>_ZNK9CChar2Key19GetNumPadKeyDetailsEwRhS0_</STRONG> (ARM, 56 bytes, Stack size 0 bytes, wedgechar2key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f6818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase22HandleNumbersViaNumPadEPK9CChar2Key
<LI><a href="#[45f6aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey13SendAltNumPadEPKwj
</UL>

<P><STRONG><a name="[45f6854]"></a>_ZN10CWedgeBase20HandleCntrlPlusAsciiEv</STRONG> (ARM, 308 bytes, Stack size 24 bytes, wedgecntrlkeys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CWedgeBase20HandleCntrlPlusAsciiEv
</UL>
<BR>[Calls]<UL><LI><a href="#[45f5300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber8StoreKeyEwhh
<LI><a href="#[46cf4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber12GetKeyNumberEw
<LI><a href="#[46d4164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase16IsCntrlASCII_WinEv
<LI><a href="#[46d41a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase12IsCntrlASCIIEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45fa3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey28InitializeCtrlASCIIKeyLookupEv
<LI><a href="#[45fa4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase19TurnOffControlAsciiEv
<LI><a href="#[45fa544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase18TurnOnControlAsciiEv
<LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>

<P><STRONG><a name="[477dcb4]"></a>_ZN5CGpioC1EP10GpioPort_t</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[477bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHalC1Ev
</UL>

<P><STRONG><a name="[477dc78]"></a>_ZN5CGpioC2EP10GpioPort_t</STRONG> (ARM, 0 bytes, Stack size 0 bytes, Gpio.o(.text), UNUSED)

<P><STRONG><a name="[477dc3c]"></a>_ZN5CGpio21Get2BitMaskFromNumberE12bit_number_ti</STRONG> (ARM, 44 bytes, Stack size 0 bytes, Gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[477be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb
</UL>

<P><STRONG><a name="[477dc00]"></a>_ZN5CGpio16GetIrqConfigAddrE12bit_number_t</STRONG> (ARM, 20 bytes, Stack size 0 bytes, Gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[477be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb
</UL>

<P><STRONG><a name="[477be3c]"></a>_ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb</STRONG> (ARM, 168 bytes, Stack size 16 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb
</UL>
<BR>[Calls]<UL><LI><a href="#[477dc00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CGpio16GetIrqConfigAddrE12bit_number_t
<LI><a href="#[477dc3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CGpio21Get2BitMaskFromNumberE12bit_number_ti
</UL>
<BR>[Called By]<UL><LI><a href="#[477bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHalC1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WedgeHal.o(.constdata__ZTV9CWedgeHal)
</UL>
<P><STRONG><a name="[477bd88]"></a>_ZN9CWedgeHalC1Ev</STRONG> (ARM, 636 bytes, Stack size 16 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN9CWedgeHalC1Ev &rArr; _ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb
</UL>
<BR>[Calls]<UL><LI><a href="#[477be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb
<LI><a href="#[477dcb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CGpioC1EP10GpioPort_t
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal14CreateWedgeHalEv
</UL>

<P><STRONG><a name="[477bd4c]"></a>_ZN9CWedgeHalC2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, WedgeHal.o(.text), UNUSED)

<P><STRONG><a name="[36b8dcc]"></a>_ZN9CWedgeHal14CreateWedgeHalEv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN9CWedgeHal14CreateWedgeHalEv &rArr; _ZN9CWedgeHalC1Ev &rArr; _ZN9CWedgeHal9SetupPortENS_5PortsER5CGpio12bit_number_tb
</UL>
<BR>[Calls]<UL><LI><a href="#[477bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHalC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[477bd10]"></a>_ZN9CWedgeHal21MakeInterfaceIoBenignEv</STRONG> (ARM, 356 bytes, Stack size 32 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN9CWedgeHal21MakeInterfaceIoBenignEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WedgeHal.o(.constdata__ZTV9CWedgeHal)
</UL>
<P><STRONG><a name="[4601678]"></a>_ZN9CWedgeHal14KeyboardEnableEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN9CWedgeHal14KeyboardEnableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[477bba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CPortDetails9DoSetPortEv
</UL>
<BR>[Called By]<UL><LI><a href="#[46000ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase14EnableKeyboardEv
<LI><a href="#[4601a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM14EnableKeyboardEv
</UL>

<P><STRONG><a name="[477bcd4]"></a>_ZN9CWedgeHal17PrepareIoForWedgeEv</STRONG> (ARM, 220 bytes, Stack size 24 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9CWedgeHal17PrepareIoForWedgeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[477bba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CPortDetails9DoSetPortEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WedgeHal.o(.constdata__ZTV9CWedgeHal)
</UL>
<P><STRONG><a name="[477bc98]"></a>_ZN9CWedgeHal7BitInfoENS_5PortsERb</STRONG> (ARM, 44 bytes, Stack size 0 bytes, WedgeHal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4889dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12WhilePortLowEN9CWedgeHal5PortsE
<LI><a href="#[4889f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger22TermDat_ReadShiftRightEm
<LI><a href="#[488a260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger21KbdDat_ReadShiftRightEm
<LI><a href="#[488a440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13WaitForBitLowEN9CWedgeHal5PortsEm
<LI><a href="#[488a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm
<LI><a href="#[488a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm
<LI><a href="#[488a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm
<LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
<LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>

<P><STRONG><a name="[460163c]"></a>_ZN9CWedgeHal15KeyboardDisableEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN9CWedgeHal15KeyboardDisableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[477bbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CPortDetails9DoClrPortEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4600070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase15DisableKeyboardEv
<LI><a href="#[46019fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM15DisableKeyboardEv
</UL>

<P><STRONG><a name="[4601600]"></a>_ZN9CWedgeHal7ReadBitENS_5PortsE</STRONG> (ARM, 16 bytes, Stack size 0 bytes, WedgeHal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[477bc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CPortDetails8IsBitSetEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4601ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM22CheckKeyboardEmulationEv
<LI><a href="#[4601b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM11GetNextByteEPh
<LI><a href="#[4601bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeEngineIBM18WaitForClkDataHighEj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[477bc5c]"></a>_ZN9CWedgeHal32PrepareCableInterfaceforUSBPowerEv</STRONG> (ARM, 492 bytes, Stack size 32 bytes, WedgeHal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN9CWedgeHal32PrepareCableInterfaceforUSBPowerEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WedgeHal.o(.constdata__ZTV9CWedgeHal)
</UL>
<P><STRONG><a name="[477bb6c]"></a>_ZN12CPortDetailsC1Ev</STRONG> (ARM, 56 bytes, Stack size 0 bytes, Portdetails.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> WedgeHal.o(.text)
</UL>
<P><STRONG><a name="[477add4]"></a>_ZN12CPortDetailsC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, Portdetails.o(.text), UNUSED)

<P><STRONG><a name="[477bbe4]"></a>_ZN12CPortDetails9DoClrPortEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, Portdetails.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[460163c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal15KeyboardDisableEv
</UL>

<P><STRONG><a name="[477bba8]"></a>_ZN12CPortDetails9DoSetPortEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, Portdetails.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4601678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal14KeyboardEnableEv
<LI><a href="#[477bcd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal17PrepareIoForWedgeEv
</UL>

<P><STRONG><a name="[477bc20]"></a>_ZN12CPortDetails8IsBitSetEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, Portdetails.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4601600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7ReadBitENS_5PortsE
</UL>

<P><STRONG><a name="[45f6890]"></a>_ZN10CWedgeBase14HandleCapsLockEv</STRONG> (ARM, 144 bytes, Stack size 24 bytes, Wedgecapslock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CWedgeBase14HandleCapsLockEv
</UL>
<BR>[Calls]<UL><LI><a href="#[45f5300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber8StoreKeyEwhh
<LI><a href="#[45f66ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber6GetKeyEw
<LI><a href="#[46d4128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase18IsKbdStyleCapsLockEv
</UL>
<BR>[Called By]<UL><LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>

<P><STRONG><a name="[45f68cc]"></a>_ZN10CWedgeBase13HandleKbdModeEv</STRONG> (ARM, 232 bytes, Stack size 24 bytes, Wedgecapslock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CWedgeBase13HandleKbdModeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[45f5300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber8StoreKeyEwhh
<LI><a href="#[45f66ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeKeyNumber6GetKeyEw
</UL>
<BR>[Called By]<UL><LI><a href="#[45feea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CWedgeMultiKey4OpenEsPKw
</UL>

<P><STRONG><a name="[4778fd4]"></a>_ZN18CWedgeEngineUsbHidC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger</STRONG> (ARM, 20 bytes, Stack size 8 bytes, wedgeengineusb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN18CWedgeEngineUsbHidC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger &rArr; _ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger &rArr; _ZN13CBitBangerISR13CreateMailBoxEv &rArr; MT_CreateMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[460172c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh
</UL>

<P><STRONG><a name="[4778f98]"></a>_ZN18CWedgeEngineUsbHidC2EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger</STRONG> (ARM, 0 bytes, Stack size 8 bytes, wedgeengineusb.o(.text), UNUSED)

<P><STRONG><a name="[4778f5c]"></a>_ZN18CWedgeEngineUsbHidD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgeengineusb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN18CWedgeEngineUsbHidD1Ev &rArr; _ZN12CWedgeEngineD1Ev &rArr; _ZN12CWedgeThreadD2Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46016f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4778f20]"></a>_ZN18CWedgeEngineUsbHidD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, wedgeengineusb.o(.text), UNUSED)

<P><STRONG><a name="[4778ee4]"></a>_ZN18CWedgeEngineUsbHidD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, wedgeengineusb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN18CWedgeEngineUsbHidD0Ev &rArr; _ZN12CWedgeEngineD1Ev &rArr; _ZN12CWedgeThreadD2Ev &rArr; _ZN10CWedgeBaseD2Ev &rArr; _ZN15CWedgeKeyNumberD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[46016f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4778ea8]"></a>_ZN18CWedgeEngineUsbHid4OpenEsPKw</STRONG> (ARM, 68 bytes, Stack size 16 bytes, wedgeengineusb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN18CWedgeEngineUsbHid4OpenEsPKw &rArr; _ZN12CWedgeThread4OpenEsPKw &rArr; _ZN14CWedgeMultiKey4OpenEsPKw &rArr; _ZN12CWedgeProKey18ProkeyReplacementsEv &rArr; _ZN12CWedgeProKey16CopyReplacementsEPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[46016b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeThread4OpenEsPKw
<LI><a href="#[46d41dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase13StoreKbdStyleEi
<LI><a href="#[46d4218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CWedgeBase15StoreAutoKeyEmuEb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4778e6c]"></a>_ZN18CWedgeEngineUsbHid18NotifyOutTermDelayEm</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wedgeengineusb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4778e30]"></a>_ZN18CWedgeEngineUsbHid15FinalCloseLabelEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wedgeengineusb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4778df4]"></a>_ZN18CWedgeEngineUsbHid25PrepareIoForWedgeHardwareEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgeengineusb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4778db8]"></a>_ZN18CWedgeEngineUsbHid14EnableKeyboardEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgeengineusb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[4778d7c]"></a>_ZN18CWedgeEngineUsbHid15DisableKeyboardEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wedgeengineusb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wedgeengineusb.o(.constdata__ZTV18CWedgeEngineUsbHid)
</UL>
<P><STRONG><a name="[488b0e8]"></a>_ZN10CBitBanger13ResetCommandsEv</STRONG> (ARM, 88 bytes, Stack size 8 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CBitBanger13ResetCommandsEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4889c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangCmd5StoreEmP12CPortDetailsm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a878]"></a>_ZN10CBitBangerC2Ej</STRONG> (ARM, 120 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _ZN10CBitBangerC2Ej &rArr; _ZN13CBitBangerISRC1Ej &rArr; _Z16UseFastInterrupt15vector_number_t
</UL>
<BR>[Calls]<UL><LI><a href="#[4889b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISRC1Ej
<LI><a href="#[4889c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangCmd5StoreEmP12CPortDetailsm
</UL>
<BR>[Called By]<UL><LI><a href="#[46d0b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBMC1Ev
<LI><a href="#[4b4ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2KbdC1EPK14CWedgeTerminalP11CUsb2HidKbd
</UL>

<P><STRONG><a name="[488a83c]"></a>_ZN10CBitBangerD1Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, Bitbanger.o(.text), UNUSED)

<P><STRONG><a name="[488a800]"></a>_ZN10CBitBangerD2Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN10CBitBangerD2Ev &rArr; _ZN13CBitBangerISRD1Ev &rArr; MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4889ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISRD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4888dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBMD0Ev
<LI><a href="#[4b47218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2KbdD0Ev
<LI><a href="#[4b47290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2KbdD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
</UL>
<P><STRONG><a name="[488a7c4]"></a>_ZN10CBitBangerD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN10CBitBangerD0Ev &rArr; _ZN13CBitBangerISRD1Ev &rArr; MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4889ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISRD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
</UL>
<P><STRONG><a name="[488a788]"></a>_ZN10CBitBanger13BitBangInTermERj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
<LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[488a74c]"></a>_ZN10CBitBanger13BitBangOutKbdEjj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
<LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[488a710]"></a>_ZN10CBitBanger12BitBangInKbdERj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
<LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[488a6d4]"></a>_ZN10CBitBanger18NotifyOutTermDelayEm</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
<LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
</UL>
<P><STRONG><a name="[488a698]"></a>_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm</STRONG> (ARM, 100 bytes, Stack size 8 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[4889c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangCmd5StoreEmP12CPortDetailsm
</UL>
<BR>[Called By]<UL><LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
<LI><a href="#[4889d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger8SetAbortEv
<LI><a href="#[4889db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger8EndWhileEv
<LI><a href="#[4889dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12WhilePortLowEN9CWedgeHal5PortsE
<LI><a href="#[4889edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15CheckForSilenceEm
<LI><a href="#[4889f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger21PrepareWaitForSilenceEm
<LI><a href="#[4889f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger22TermDat_ReadShiftRightEm
<LI><a href="#[488a260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger21KbdDat_ReadShiftRightEm
<LI><a href="#[488a440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13WaitForBitLowEN9CWedgeHal5PortsEm
<LI><a href="#[488a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm
<LI><a href="#[488a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm
<LI><a href="#[488a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm
<LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
<LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>

<P><STRONG><a name="[488a65c]"></a>_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm</STRONG> (ARM, 68 bytes, Stack size 24 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4889e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14EnableKeyboardEm
<LI><a href="#[488a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12TermDat_HighEm
<LI><a href="#[488a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermDat_OutputEm
<LI><a href="#[488a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_HighOcEm
<LI><a href="#[488a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_OutputEm
<LI><a href="#[488a2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdDat_HighOcEm
<LI><a href="#[488a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11KbdDat_HighEm
<LI><a href="#[488a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdDat_OutputEm
<LI><a href="#[488a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdClk_OutputEm
</UL>

<P><STRONG><a name="[488a620]"></a>_ZN10CBitBanger13KbdClk_OutputEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger13KbdClk_OutputEm &rArr; _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a5e4]"></a>_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm</STRONG> (ARM, 68 bytes, Stack size 24 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4889ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15DisableKeyboardEm
<LI><a href="#[488a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13TermDat_HighZEm
<LI><a href="#[488a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11TermDat_LowEm
<LI><a href="#[488a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_HighOcEm
<LI><a href="#[488a1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13TermClk_HighZEm
<LI><a href="#[488a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11TermClk_LowEm
<LI><a href="#[488a2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdDat_HighOcEm
<LI><a href="#[488a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdDat_HighZEm
<LI><a href="#[488a38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10KbdDat_LowEm
<LI><a href="#[488a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdClk_HighZEm
<LI><a href="#[488a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10KbdClk_LowEm
</UL>

<P><STRONG><a name="[488a5a8]"></a>_ZN10CBitBanger10KbdClk_LowEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger10KbdClk_LowEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a56c]"></a>_ZN10CBitBanger12KbdClk_HighZEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger12KbdClk_HighZEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a530]"></a>_ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm</STRONG> (ARM, 68 bytes, Stack size 24 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4889fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17TermDat_CheckHighEm
<LI><a href="#[488a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17TermClk_CheckHighEm
</UL>

<P><STRONG><a name="[488a4f4]"></a>_ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm</STRONG> (ARM, 68 bytes, Stack size 24 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4889f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger16TermDat_CheckLowEm
<LI><a href="#[488a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15KbdDat_CheckLowEm
</UL>

<P><STRONG><a name="[488a4b8]"></a>_ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm</STRONG> (ARM, 100 bytes, Stack size 24 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[488a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger16TermClk_WaitHighEm
<LI><a href="#[488a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15KbdClk_WaitHighEm
</UL>

<P><STRONG><a name="[488a47c]"></a>_ZN10CBitBanger15KbdClk_WaitHighEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger15KbdClk_WaitHighEm &rArr; _ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a440]"></a>_ZN10CBitBanger13WaitForBitLowEN9CWedgeHal5PortsEm</STRONG> (ARM, 100 bytes, Stack size 24 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger13WaitForBitLowEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[488a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14KbdClk_WaitLowEm
</UL>

<P><STRONG><a name="[488a404]"></a>_ZN10CBitBanger14KbdClk_WaitLowEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger14KbdClk_WaitLowEm &rArr; _ZN10CBitBanger13WaitForBitLowEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13WaitForBitLowEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a3c8]"></a>_ZN10CBitBanger13KbdDat_OutputEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger13KbdDat_OutputEm &rArr; _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a38c]"></a>_ZN10CBitBanger10KbdDat_LowEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger10KbdDat_LowEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a350]"></a>_ZN10CBitBanger11KbdDat_HighEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger11KbdDat_HighEm &rArr; _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a314]"></a>_ZN10CBitBanger12KbdDat_HighZEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger12KbdDat_HighZEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a2d8]"></a>_ZN10CBitBanger13KbdDat_HighOcEm</STRONG> (ARM, 44 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN10CBitBanger13KbdDat_HighOcEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
<LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a29c]"></a>_ZN10CBitBanger15KbdDat_CheckLowEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger15KbdDat_CheckLowEm &rArr; _ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
</UL>

<P><STRONG><a name="[488a260]"></a>_ZN10CBitBanger21KbdDat_ReadShiftRightEm</STRONG> (ARM, 68 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CBitBanger21KbdDat_ReadShiftRightEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
</UL>

<P><STRONG><a name="[488a224]"></a>_ZN10CBitBanger14TermClk_OutputEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger14TermClk_OutputEm &rArr; _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
<LI><a href="#[4888f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14PulseClockTermEv
</UL>

<P><STRONG><a name="[488a1e8]"></a>_ZN10CBitBanger11TermClk_LowEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger11TermClk_LowEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
<LI><a href="#[4888f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14PulseClockTermEv
</UL>

<P><STRONG><a name="[488a1ac]"></a>_ZN10CBitBanger13TermClk_HighZEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger13TermClk_HighZEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a170]"></a>_ZN10CBitBanger14TermClk_HighOcEm</STRONG> (ARM, 44 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN10CBitBanger14TermClk_HighOcEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
<LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
<LI><a href="#[4888f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14PulseClockTermEv
</UL>

<P><STRONG><a name="[488a134]"></a>_ZN10CBitBanger17TermClk_CheckHighEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger17TermClk_CheckHighEm &rArr; _ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
<LI><a href="#[4888f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14PulseClockTermEv
</UL>

<P><STRONG><a name="[488a0f8]"></a>_ZN10CBitBanger16TermClk_WaitHighEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger16TermClk_WaitHighEm &rArr; _ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14WaitForBitHighEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a0bc]"></a>_ZN10CBitBanger14TermDat_OutputEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger14TermDat_OutputEm &rArr; _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a080]"></a>_ZN10CBitBanger11TermDat_LowEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger11TermDat_LowEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a044]"></a>_ZN10CBitBanger12TermDat_HighEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger12TermDat_HighEm &rArr; _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[488a008]"></a>_ZN10CBitBanger13TermDat_HighZEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger13TermDat_HighZEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889fcc]"></a>_ZN10CBitBanger17TermDat_CheckHighEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger17TermDat_CheckHighEm &rArr; _ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12CheckBitHighEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889f90]"></a>_ZN10CBitBanger16TermDat_CheckLowEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger16TermDat_CheckLowEm &rArr; _ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11CheckBitLowEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[4889f54]"></a>_ZN10CBitBanger22TermDat_ReadShiftRightEm</STRONG> (ARM, 68 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CBitBanger22TermDat_ReadShiftRightEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[4889f18]"></a>_ZN10CBitBanger21PrepareWaitForSilenceEm</STRONG> (ARM, 52 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CBitBanger21PrepareWaitForSilenceEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889edc]"></a>_ZN10CBitBanger15CheckForSilenceEm</STRONG> (ARM, 52 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CBitBanger15CheckForSilenceEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889ea0]"></a>_ZN10CBitBanger15DisableKeyboardEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger15DisableKeyboardEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889e64]"></a>_ZN10CBitBanger14EnableKeyboardEm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN10CBitBanger14EnableKeyboardEm &rArr; _ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger6SetBitEN9CWedgeHal5PortsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889e28]"></a>_ZN10CBitBanger17OnAbortResumeHereEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CBitBanger17OnAbortResumeHereEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4889c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangCmd5StoreEmP12CPortDetailsm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889dec]"></a>_ZN10CBitBanger12WhilePortLowEN9CWedgeHal5PortsE</STRONG> (ARM, 72 bytes, Stack size 16 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10CBitBanger12WhilePortLowEN9CWedgeHal5PortsE &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[477bc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7BitInfoENS_5PortsERb
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[4889db0]"></a>_ZN10CBitBanger8EndWhileEv</STRONG> (ARM, 84 bytes, Stack size 8 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10CBitBanger8EndWhileEv &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[4889c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangCmd5StoreEmP12CPortDetailsm
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[4889d74]"></a>_ZN10CBitBanger8SetAbortEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10CBitBanger8SetAbortEv &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[4889d38]"></a>_ZN10CBitBanger12RunBigBangerEv</STRONG> (ARM, 72 bytes, Stack size 8 bytes, Bitbanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN10CBitBanger12RunBigBangerEv &rArr; _ZN13CBitBangerISR16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4889bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR20PrepareWaitForSignalEm
<LI><a href="#[4889c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR19SwitchToFastIrqModeEv
<LI><a href="#[4889c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CBitBangerISR16WaitForAnySignalEm
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangOutKbdEjj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4889cfc]"></a>_ZN10CBitBanger19GetReceivedPortDataEN9CWedgeHal5PortsE</STRONG> (ARM, 24 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[4889cc0]"></a>_ZN10CBitBanger14CheckOddParityEmi</STRONG> (ARM, 52 bytes, Stack size 0 bytes, Bitbanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4888e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM12BitBangInKbdERj
<LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
</UL>

<P><STRONG><a name="[46d0b04]"></a>_ZN11CBitBangIBMC1Ev</STRONG> (ARM, 24 bytes, Stack size 8 bytes, bbibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN11CBitBangIBMC1Ev &rArr; _ZN10CBitBangerC2Ej &rArr; _ZN13CBitBangerISRC1Ej &rArr; _Z16UseFastInterrupt15vector_number_t
</UL>
<BR>[Calls]<UL><LI><a href="#[488a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerC2Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[46d0e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CWedgeIBMFamilyC1EPK14CWedgeTerminalj
</UL>

<P><STRONG><a name="[4888f64]"></a>_ZN11CBitBangIBMC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, bbibm.o(.text), UNUSED)

<P><STRONG><a name="[4888f28]"></a>_ZN11CBitBangIBM14PulseClockTermEv</STRONG> (ARM, 56 bytes, Stack size 8 bytes, bbibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN11CBitBangIBM14PulseClockTermEv &rArr; _ZN10CBitBanger14TermClk_HighOcEm &rArr; _ZN10CBitBanger6ClrBitEN9CWedgeHal5PortsEm &rArr; _ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
</UL>
<BR>[Calls]<UL><LI><a href="#[488a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17TermClk_CheckHighEm
<LI><a href="#[488a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_HighOcEm
<LI><a href="#[488a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11TermClk_LowEm
<LI><a href="#[488a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_OutputEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4888eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM13BitBangInTermERj
<LI><a href="#[4888eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4888eec]"></a>_ZN11CBitBangIBM14BitBangOutTermEjj</STRONG> (ARM, 384 bytes, Stack size 24 bytes, bbibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CBitBangIBM14BitBangOutTermEjj &rArr; _ZN10CBitBanger12RunBigBangerEv &rArr; _ZN13CBitBangerISR16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4888f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14PulseClockTermEv
<LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
<LI><a href="#[4889e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17OnAbortResumeHereEv
<LI><a href="#[4889e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14EnableKeyboardEm
<LI><a href="#[4889ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15DisableKeyboardEm
<LI><a href="#[4889edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15CheckForSilenceEm
<LI><a href="#[4889f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger21PrepareWaitForSilenceEm
<LI><a href="#[4889fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17TermDat_CheckHighEm
<LI><a href="#[488a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13TermDat_HighZEm
<LI><a href="#[488a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12TermDat_HighEm
<LI><a href="#[488a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11TermDat_LowEm
<LI><a href="#[488a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermDat_OutputEm
<LI><a href="#[488a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger16TermClk_WaitHighEm
<LI><a href="#[488a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17TermClk_CheckHighEm
<LI><a href="#[488a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_HighOcEm
<LI><a href="#[488a1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13TermClk_HighZEm
<LI><a href="#[488a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11TermClk_LowEm
<LI><a href="#[488a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_OutputEm
<LI><a href="#[488a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdClk_HighZEm
<LI><a href="#[488a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10KbdClk_LowEm
<LI><a href="#[488a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdClk_OutputEm
<LI><a href="#[488b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13ResetCommandsEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
</UL>
<P><STRONG><a name="[4888eb0]"></a>_ZN11CBitBangIBM13BitBangInTermERj</STRONG> (ARM, 372 bytes, Stack size 24 bytes, bbibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CBitBangIBM13BitBangInTermERj &rArr; _ZN10CBitBanger12RunBigBangerEv &rArr; _ZN13CBitBangerISR16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4601600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeHal7ReadBitENS_5PortsE
<LI><a href="#[4888f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBM14PulseClockTermEv
<LI><a href="#[4889cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14CheckOddParityEmi
<LI><a href="#[4889cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger19GetReceivedPortDataEN9CWedgeHal5PortsE
<LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
<LI><a href="#[4889d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger8SetAbortEv
<LI><a href="#[4889db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger8EndWhileEv
<LI><a href="#[4889dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12WhilePortLowEN9CWedgeHal5PortsE
<LI><a href="#[4889e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17OnAbortResumeHereEv
<LI><a href="#[4889f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger22TermDat_ReadShiftRightEm
<LI><a href="#[4889f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger16TermDat_CheckLowEm
<LI><a href="#[488a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13TermDat_HighZEm
<LI><a href="#[488a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11TermDat_LowEm
<LI><a href="#[488a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermDat_OutputEm
<LI><a href="#[488a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger16TermClk_WaitHighEm
<LI><a href="#[488a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17TermClk_CheckHighEm
<LI><a href="#[488a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_HighOcEm
<LI><a href="#[488a1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13TermClk_HighZEm
<LI><a href="#[488a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11TermClk_LowEm
<LI><a href="#[488a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14TermClk_OutputEm
<LI><a href="#[488a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdClk_HighZEm
<LI><a href="#[488a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10KbdClk_LowEm
<LI><a href="#[488a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdClk_OutputEm
<LI><a href="#[488b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13ResetCommandsEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
</UL>
<P><STRONG><a name="[4888e74]"></a>_ZN11CBitBangIBM13BitBangOutKbdEjj</STRONG> (ARM, 360 bytes, Stack size 24 bytes, bbibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CBitBangIBM13BitBangOutKbdEjj &rArr; _ZN10CBitBanger12RunBigBangerEv &rArr; _ZN13CBitBangerISR16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
<LI><a href="#[4889e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17OnAbortResumeHereEv
<LI><a href="#[488a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15KbdDat_CheckLowEm
<LI><a href="#[488a2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdDat_HighOcEm
<LI><a href="#[488a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdDat_HighZEm
<LI><a href="#[488a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger11KbdDat_HighEm
<LI><a href="#[488a38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10KbdDat_LowEm
<LI><a href="#[488a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdDat_OutputEm
<LI><a href="#[488a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14KbdClk_WaitLowEm
<LI><a href="#[488a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15KbdClk_WaitHighEm
<LI><a href="#[488a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdClk_HighZEm
<LI><a href="#[488a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10KbdClk_LowEm
<LI><a href="#[488a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdClk_OutputEm
<LI><a href="#[488b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13ResetCommandsEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
</UL>
<P><STRONG><a name="[4888e38]"></a>_ZN11CBitBangIBM12BitBangInKbdERj</STRONG> (ARM, 208 bytes, Stack size 24 bytes, bbibm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CBitBangIBM12BitBangInKbdERj &rArr; _ZN10CBitBanger12RunBigBangerEv &rArr; _ZN13CBitBangerISR16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4889cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14CheckOddParityEmi
<LI><a href="#[4889cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger19GetReceivedPortDataEN9CWedgeHal5PortsE
<LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
<LI><a href="#[4889e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17OnAbortResumeHereEv
<LI><a href="#[488a260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger21KbdDat_ReadShiftRightEm
<LI><a href="#[488a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdDat_HighZEm
<LI><a href="#[488a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13KbdDat_OutputEm
<LI><a href="#[488a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger14KbdClk_WaitLowEm
<LI><a href="#[488a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger15KbdClk_WaitHighEm
<LI><a href="#[488a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12KbdClk_HighZEm
<LI><a href="#[488a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10KbdClk_LowEm
<LI><a href="#[488b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13ResetCommandsEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
</UL>
<P><STRONG><a name="[4889c84]"></a>_ZN11CBitBangCmd5StoreEmP12CPortDetailsm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4889db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger8EndWhileEv
<LI><a href="#[4889e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger17OnAbortResumeHereEv
<LI><a href="#[488a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger10AddCommandEN13CBitBangerISR8CommandsEmm
<LI><a href="#[488a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerC2Ej
<LI><a href="#[488b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger13ResetCommandsEv
</UL>

<P><STRONG><a name="[4889b1c]"></a>_ZN13CBitBangerISRC1Ej</STRONG> (ARM, 188 bytes, Stack size 32 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN13CBitBangerISRC1Ej &rArr; _Z16UseFastInterrupt15vector_number_t
</UL>
<BR>[Calls]<UL><LI><a href="#[226ea9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CIrqVectorC1Ev
<LI><a href="#[226ead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16UseFastInterrupt15vector_number_t
</UL>
<BR>[Called By]<UL><LI><a href="#[488a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerC2Ej
</UL>

<P><STRONG><a name="[4885850]"></a>_ZN13CBitBangerISRC2Ej</STRONG> (ARM, 0 bytes, Stack size 32 bytes, bitbangerisr.o(.text), UNUSED)

<P><STRONG><a name="[4889ae0]"></a>_ZN13CBitBangerISRD1Ev</STRONG> (ARM, 56 bytes, Stack size 16 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN13CBitBangerISRD1Ev &rArr; MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_DeleteMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[488a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerD0Ev
<LI><a href="#[488a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata__ZTV13CBitBangerISR)
</UL>
<P><STRONG><a name="[4885814]"></a>_ZN13CBitBangerISRD2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, bitbangerisr.o(.text), UNUSED)

<P><STRONG><a name="[48857d8]"></a>_ZN13CBitBangerISRD0Ev</STRONG> (ARM, 60 bytes, Stack size 16 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN13CBitBangerISRD0Ev &rArr; MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_DeleteMailbox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata__ZTV13CBitBangerISR)
</UL>
<P><STRONG><a name="[45fff44]"></a>_ZN13CBitBangerISR13CreateMailBoxEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN13CBitBangerISR13CreateMailBoxEv &rArr; MT_CreateMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[460172c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CWedgeEngineC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger
</UL>

<P><STRONG><a name="[4889b94]"></a>_ZN13CBitBangerISR21ExecuteUserDefCommandEP12CPortDetails</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
<LI> bitbangerisr.o(.constdata__ZTV13CBitBangerISR)
<LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
<LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[4889b58]"></a>_ZN13CBitBangerISR5CloseEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
<LI> bitbangerisr.o(.constdata__ZTV13CBitBangerISR)
<LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
<LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[488579c]"></a>_ZN13CBitBangerISR17DecodeNextCommandEv</STRONG> (ARM, 244 bytes, Stack size 24 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN13CBitBangerISR17DecodeNextCommandEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4889c0c]"></a>_ZN13CBitBangerISR19SwitchToFastIrqModeEv</STRONG> (ARM, 108 bytes, Stack size 4 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN13CBitBangerISR19SwitchToFastIrqModeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
</UL>

<P><STRONG><a name="[4885760]"></a>_ZN13CBitBangerISR12DoIllegalCmdEP12CPortDetails</STRONG> (ARM, 64 bytes, Stack size 8 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN13CBitBangerISR12DoIllegalCmdEP12CPortDetails &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_AddMailbox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885724]"></a>_ZN13CBitBangerISR12DoEndCommandEP12CPortDetails</STRONG> (ARM, 56 bytes, Stack size 8 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN13CBitBangerISR12DoEndCommandEP12CPortDetails &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_AddMailbox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48856e8]"></a>_ZN13CBitBangerISR7DoDelayEP12CPortDetails</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48856ac]"></a>_ZN13CBitBangerISR10DoSetAbortEP12CPortDetails</STRONG> (ARM, 12 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885670]"></a>_ZN13CBitBangerISR9DoSetPortEP12CPortDetails</STRONG> (ARM, 24 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885634]"></a>_ZN13CBitBangerISR9DoClrPortEP12CPortDetails</STRONG> (ARM, 24 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48855f8]"></a>_ZN13CBitBangerISR12DoTogglePortEP12CPortDetails</STRONG> (ARM, 24 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48855bc]"></a>_ZN13CBitBangerISR18DoPreparePortCheckEP12CPortDetails</STRONG> (ARM, 8 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885580]"></a>_ZN13CBitBangerISR23DoCheckPortHighDurationEP12CPortDetails</STRONG> (ARM, 64 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885544]"></a>_ZN13CBitBangerISR22DoCheckPortLowDurationEP12CPortDetails</STRONG> (ARM, 60 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885508]"></a>_ZN13CBitBangerISR15DoCheckPortHighEP12CPortDetails</STRONG> (ARM, 48 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48854cc]"></a>_ZN13CBitBangerISR14DoCheckPortLowEP12CPortDetails</STRONG> (ARM, 48 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885490]"></a>_ZN13CBitBangerISR21DoPreparePortWaitHighEP12CPortDetails</STRONG> (ARM, 176 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885454]"></a>_ZN13CBitBangerISR20DoPreparePortWaitLowEP12CPortDetails</STRONG> (ARM, 176 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885418]"></a>_ZN13CBitBangerISR19DoWaitUntilPortHighEP12CPortDetails</STRONG> (ARM, 96 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48853dc]"></a>_ZN13CBitBangerISR18DoWaitUntilPortLowEP12CPortDetails</STRONG> (ARM, 96 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48853a0]"></a>_ZN13CBitBangerISR23DoPreparePortRisingEdgeEP12CPortDetails</STRONG> (ARM, 120 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885364]"></a>_ZN13CBitBangerISR20DoPrepareFallingEdgeEP12CPortDetails</STRONG> (ARM, 120 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885328]"></a>_ZN13CBitBangerISR19DoPrepareForSilenceEP12CPortDetails</STRONG> (ARM, 8 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48852ec]"></a>_ZN13CBitBangerISR17DoCheckForSilenceEP12CPortDetails</STRONG> (ARM, 80 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48852b0]"></a>_ZN13CBitBangerISR13DoPrepareReadEP12CPortDetails</STRONG> (ARM, 40 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885274]"></a>_ZN13CBitBangerISR19DoReadHighShiftLeftEP12CPortDetails</STRONG> (ARM, 40 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885238]"></a>_ZN13CBitBangerISR20DoReadHighShiftRightEP12CPortDetails</STRONG> (ARM, 40 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48851fc]"></a>_ZN13CBitBangerISR18DoReadLowShiftLeftEP12CPortDetails</STRONG> (ARM, 44 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[48851c0]"></a>_ZN13CBitBangerISR19DoReadLowShiftRightEP12CPortDetails</STRONG> (ARM, 44 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885184]"></a>_ZN13CBitBangerISR15DoWhilePortHighEP12CPortDetails</STRONG> (ARM, 52 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4885148]"></a>_ZN13CBitBangerISR14DoWhilePortLowEP12CPortDetails</STRONG> (ARM, 52 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[488510c]"></a>_ZN13CBitBangerISR16DoUserDefCommandEP12CPortDetails</STRONG> (ARM, 12 bytes, Stack size 0 bytes, bitbangerisr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4889bd0]"></a>_ZN13CBitBangerISR20PrepareWaitForSignalEm</STRONG> (ARM, 60 bytes, Stack size 4 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN13CBitBangerISR20PrepareWaitForSignalEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
</UL>

<P><STRONG><a name="[4889c48]"></a>_ZN13CBitBangerISR16WaitForAnySignalEm</STRONG> (ARM, 136 bytes, Stack size 24 bytes, bitbangerisr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN13CBitBangerISR16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[4889d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBanger12RunBigBangerEv
</UL>

<P><STRONG><a name="[48830f0]"></a>_ZN15CDriverUsb2BaseC1Ejj</STRONG> (ARM, 100 bytes, Stack size 24 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN15CDriverUsb2BaseC1Ejj &rArr; _ZN15CThreadedDriverC1Ejj &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[440eee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverC1Ejj
</UL>
<BR>[Called By]<UL><LI><a href="#[4336f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateUsbSurePosTTv
<LI><a href="#[4336f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateUsbSurePosHHv
<LI><a href="#[43370cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateUsbComEmuv
<LI><a href="#[4337180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CreateUsbPosv
<LI><a href="#[4b4cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh
</UL>

<P><STRONG><a name="[48830b4]"></a>_ZN15CDriverUsb2BaseC2Ejj</STRONG> (ARM, 0 bytes, Stack size 24 bytes, usb2driverbase.o(.text), UNUSED)

<P><STRONG><a name="[4883078]"></a>_ZN15CDriverUsb2BaseD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[49371c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2ComEmuD0Ev
<LI><a href="#[4937238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2ComEmuD1Ev
<LI><a href="#[49f6a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePosD0Ev
<LI><a href="#[49f6b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePosD1Ev
<LI><a href="#[49fa56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2PosD0Ev
<LI><a href="#[49fa5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2PosD1Ev
<LI><a href="#[4b4cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdD0Ev
<LI><a href="#[4b4cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
</UL>
<P><STRONG><a name="[488303c]"></a>_ZN15CDriverUsb2BaseD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, usb2driverbase.o(.text), UNUSED)

<P><STRONG><a name="[4883000]"></a>_ZN15CDriverUsb2BaseD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CDriverUsb2BaseD0Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
</UL>
<P><STRONG><a name="[4882fc4]"></a>_ZN15CDriverUsb2Base4OpenEsPKw</STRONG> (ARM, 404 bytes, Stack size 40 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = _ZN15CDriverUsb2Base4OpenEsPKw &rArr; _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[413dd30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger24SetTempManualTriggerModeEv
<LI><a href="#[440ec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver9RunThreadEv
<LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd4OpenEsPKw
</UL>
<BR>[Address Reference Count : 4]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[4882f88]"></a>_ZN15CDriverUsb2Base5CloseEv</STRONG> (ARM, 396 bytes, Stack size 8 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN15CDriverUsb2Base5CloseEv &rArr; _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd5CloseEv
</UL>
<BR>[Address Reference Count : 4]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[4882f4c]"></a>_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 312 bytes, Stack size 16 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj &rArr; _ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[440eccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj
<LI><a href="#[4882cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16IsRemoteWakeUpEnEv
<LI><a href="#[4882d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base12RemoteWakeUpEv
</UL>
<BR>[Called By]<UL><LI><a href="#[49fa530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Pos15DeviceIoControlE11IoControl_tlj
<LI><a href="#[4b4cc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 3]<UL><LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[4882f10]"></a>_ZN15CDriverUsb2Base10ThreadLoopEv</STRONG> (ARM, 112 bytes, Stack size 8 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN15CDriverUsb2Base10ThreadLoopEv &rArr; _ZN15CThreadedDriver16WaitForAnySignalEm &rArr; MT_WaitMailbox &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
<LI><a href="#[440eaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver19DoInterMessageDelayEv
<LI><a href="#[440eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEm
<LI><a href="#[440eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver20PrepareWaitForSignalEm
</UL>
<BR>[Address Reference Count : 3]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[4882ed4]"></a>_ZN15CDriverUsb2Base5WriteEP12CBarcodeData</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _ZN15CDriverUsb2Base5WriteEP12CBarcodeData &rArr; _ZN15CThreadedDriver5WriteEP12CBarcodeData &rArr; _ZN11CDriverBase5WriteEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5WriteEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[49f6a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos5WriteEP12CBarcodeData
</UL>
<BR>[Address Reference Count : 4]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4882e98]"></a>_ZN15CDriverUsb2Base12InitInstanceEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN15CDriverUsb2Base12InitInstanceEv &rArr; _ZN9CUsb2Base24WaitUntilWeAreConfiguredEv &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4882cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base24WaitUntilWeAreConfiguredEv
</UL>
<BR>[Called By]<UL><LI><a href="#[49f6a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos12InitInstanceEv
</UL>
<BR>[Address Reference Count : 4]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4882e5c]"></a>_ZN15CDriverUsb2Base12StartSendingEv</STRONG> (ARM, 56 bytes, Stack size 16 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN15CDriverUsb2Base12StartSendingEv &rArr; _ZN11CDriverBase11SentBarcodeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[4337bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11SentBarcodeEv
</UL>
<BR>[Address Reference Count : 4]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[4882e20]"></a>_ZN15CDriverUsb2Base17SetInterfaceErrorEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2driverbase.o(.text))
<BR>[Address Reference Count : 5]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4882de4]"></a>_ZN15CDriverUsb2Base36PrepareCableInterfaceforUSBPowerSaveEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, usb2driverbase.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[49405e0]"></a>_ZN9CUsb2Base20SetQueuesToNonCachedEv</STRONG> (ARM, 152 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4940568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[4940568]"></a>_ZN9CUsb2BaseC2EP7CRxFifoP15CThreadRealTime</STRONG> (ARM, 452 bytes, Stack size 32 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9CUsb2BaseC2EP7CRxFifoP15CThreadRealTime &rArr; MT_CreateEvent &rArr; MT_CreateEvent_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent
<LI><a href="#[493fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CUsbRem4InitEv
<LI><a href="#[49405e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20SetQueuesToNonCachedEv
</UL>
<BR>[Called By]<UL><LI><a href="#[493d1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[494052c]"></a>_ZN9CUsb2BaseD1Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, usb2base.o(.text), UNUSED)

<P><STRONG><a name="[49404f0]"></a>_ZN9CUsb2BaseD2Ev</STRONG> (ARM, 96 bytes, Stack size 8 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CUsb2BaseD2Ev &rArr; MT_CloseEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[493431c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD0Ev
<LI><a href="#[493d19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2base.o(.constdata__ZTV9CUsb2Base)
</UL>
<P><STRONG><a name="[49404b4]"></a>_ZN9CUsb2BaseD0Ev</STRONG> (ARM, 100 bytes, Stack size 8 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CUsb2BaseD0Ev &rArr; MT_CloseEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2base.o(.constdata__ZTV9CUsb2Base)
</UL>
<P><STRONG><a name="[4882cb8]"></a>_ZN9CUsb2Base24WaitUntilWeAreConfiguredEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9CUsb2Base24WaitUntilWeAreConfiguredEv &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4882e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base12InitInstanceEv
</UL>

<P><STRONG><a name="[4940478]"></a>_ZN9CUsb2Base32AdjustThisConfigDescriptorForRemEP18ConfigDescriptor_tPVj</STRONG> (ARM, 116 bytes, Stack size 16 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CUsb2Base32AdjustThisConfigDescriptorForRemEP18ConfigDescriptor_tPVj
</UL>
<BR>[Called By]<UL><LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[494043c]"></a>_ZN9CUsb2Base17ExtractParametersEPKw</STRONG> (ARM, 484 bytes, Stack size 40 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN9CUsb2Base17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwS1_RVb &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb
<LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi
<LI><a href="#[493fc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue6RemoveEi
<LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi
<LI><a href="#[4940478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base32AdjustThisConfigDescriptorForRemEP18ConfigDescriptor_tPVj
</UL>
<BR>[Called By]<UL><LI><a href="#[49388b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm17ExtractParametersEPKw
<LI><a href="#[49f3924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ExtractParametersEPKw
<LI><a href="#[49f8604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos17ExtractParametersEPKw
<LI><a href="#[4b49360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd17ExtractParametersEPKw
</UL>
<BR>[Address Reference Count : 5]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[4882d30]"></a>_ZN9CUsb2Base12RemoteWakeUpEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4403fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15MX25USB2_resumev
</UL>
<BR>[Called By]<UL><LI><a href="#[4882f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj
</UL>

<P><STRONG><a name="[4882cf4]"></a>_ZN9CUsb2Base16IsRemoteWakeUpEnEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4882f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj
</UL>

<P><STRONG><a name="[4940400]"></a>_ZN9CUsb2Base17StoreMenuResponseEP12CBarcodeData</STRONG> (ARM, 36 bytes, Stack size 16 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9CUsb2Base17StoreMenuResponseEP12CBarcodeData &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[49f3834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17StoreMenuResponseEP12CBarcodeData
</UL>

<P><STRONG><a name="[49403c4]"></a>_ZN9CUsb2Base15SetParentDriverEP15CThreadedDriver</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4336f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateUsbSurePosTTv
<LI><a href="#[4336f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateUsbSurePosHHv
</UL>

<P><STRONG><a name="[4940388]"></a>_ZN9CUsb2Base20AttachDevDescriptorsEPK22_USB_DEVICE_DESCRIPTORPK19HS_DEVICE_QUALIFIER</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4938cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14InitUSBEndpDesEv
<LI><a href="#[49f3ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14InitUSBEndpDesEb
<LI><a href="#[49f87a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos14InitUSBEndpDesEv
<LI><a href="#[4b49504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14InitUSBEndpDesEh
</UL>

<P><STRONG><a name="[494034c]"></a>_ZN9CUsb2Base20AttachConDescriptorsEPhj</STRONG> (ARM, 68 bytes, Stack size 16 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CUsb2Base20AttachConDescriptorsEPhj
</UL>
<BR>[Calls]<UL><LI><a href="#[406ddac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmIndustrialEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4938cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14InitUSBEndpDesEv
<LI><a href="#[49f3ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14InitUSBEndpDesEb
<LI><a href="#[49f87a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos14InitUSBEndpDesEv
<LI><a href="#[4b49504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14InitUSBEndpDesEh
</UL>

<P><STRONG><a name="[4940310]"></a>_ZN9CUsb2Base23AttachStringDescriptorsEPKhj</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4938cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14InitUSBEndpDesEv
<LI><a href="#[49f3ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14InitUSBEndpDesEb
<LI><a href="#[49f87a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos14InitUSBEndpDesEv
<LI><a href="#[4b49504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14InitUSBEndpDesEh
</UL>

<P><STRONG><a name="[49402d4]"></a>_ZN9CUsb2Base38AdjustAllDescriptorsForSimpleInterfaceEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR>[Address Reference Count : 9]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4940298]"></a>_ZN9CUsb2Base21EnableUsbSerialNumberEP22_USB_DEVICE_DESCRIPTORb</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49388b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[494025c]"></a>_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR</STRONG> (ARM, 100 bytes, Stack size 24 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR &rArr; _ZN15CMenuGlueDriver9GetUsbLevEv
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9b374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver9GetUsbLevEv
<LI><a href="#[3e9b3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver9GetUsbGenEv
<LI><a href="#[3e9b3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver9GetUsbVIDEv
<LI><a href="#[3e9b428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver9GetUsbPIDEv
</UL>
<BR>[Called By]<UL><LI><a href="#[49388b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm17ExtractParametersEPKw
<LI><a href="#[49f3924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ExtractParametersEPKw
<LI><a href="#[49f8604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos17ExtractParametersEPKw
<LI><a href="#[4b49360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[4940220]"></a>_ZN9CUsb2Base19CustomizeUsbStringsEv</STRONG> (ARM, 212 bytes, Stack size 16 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CUsb2Base19CustomizeUsbStringsEv
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9b464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver15GetSerNumStringEv
<LI><a href="#[3e9b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver14GetProductNameEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4938cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14InitUSBEndpDesEv
<LI><a href="#[49f3ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14InitUSBEndpDesEb
<LI><a href="#[49f87a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos14InitUSBEndpDesEv
<LI><a href="#[4b49504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14InitUSBEndpDesEh
</UL>

<P><STRONG><a name="[49401e4]"></a>_ZN9CUsb2Base16StuffInputBufferEPKhj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN9CUsb2Base16StuffInputBufferEPKhj &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[49385e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm22EPRxHandleReceivedDataEj
<LI><a href="#[49f6930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22FlashCommandDispatcherEv
<LI><a href="#[49fbb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj
<LI><a href="#[49fbbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper18EP0_Out1252HandlerEv
<LI><a href="#[49fbc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper17OutTriggerHandlerEj
</UL>

<P><STRONG><a name="[49401a8]"></a>_ZN9CUsb2Base16StuffInputBufferEPKh</STRONG> (ARM, 44 bytes, Stack size 16 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN9CUsb2Base16StuffInputBufferEPKh &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos20SurePosConfigScannerEP24SurePosOutReportBuffer_t
<LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[494016c]"></a>_ZN9CUsb2Base16FreeMenuResponseEv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN9CUsb2Base16FreeMenuResponseEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[4940130]"></a>_ZN9CUsb2Base38StuffInputBufferAndWaitForMenuResponseEPKh</STRONG> (ARM, 72 bytes, Stack size 16 bytes, usb2base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9CUsb2Base38StuffInputBufferAndWaitForMenuResponseEPKh &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[493d868]"></a>_ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime</STRONG> (ARM, 20 bytes, Stack size 8 bytes, usb2enum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493d1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4932120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj
<LI><a href="#[4938b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmC1EP7CRxFifoP15CThreadRealTimeb
</UL>

<P><STRONG><a name="[493d82c]"></a>_ZN9CUsb2EnumD1Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, usb2enum.o(.text), UNUSED)

<P><STRONG><a name="[493d7f0]"></a>_ZN9CUsb2EnumD2Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2enum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493d19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[493206c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidD0Ev
<LI><a href="#[49320a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidD2Ev
<LI><a href="#[4938a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmD0Ev
<LI><a href="#[4938a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
</UL>
<P><STRONG><a name="[493d7b4]"></a>_ZN9CUsb2EnumD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, usb2enum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2EnumD0Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493d19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
</UL>
<P><STRONG><a name="[493d778]"></a>_ZN9CUsb2Enum13code_transmitEPKht</STRONG> (ARM, 48 bytes, Stack size 24 bytes, usb2enum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN9CUsb2Enum13code_transmitEPKht &rArr; _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh
<LI><a href="#[493d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip15DataStageEnableEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4932030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid22OnGetClassInterfaceReqEv
<LI><a href="#[493887c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14OnClassRequestEv
<LI><a href="#[49f3744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos15SendFlashStatusEhb
<LI><a href="#[49f37f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos18EP0_InEmptyHandlerEv
<LI><a href="#[49fbb74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper21EP0_PosInEmptyHandlerEv
<LI><a href="#[49fbca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper24FeatureInRedirectHandlerEv
<LI><a href="#[4b491f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd19EP0_InReportHandlerEv
</UL>

<P><STRONG><a name="[493d55c]"></a>_ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE</STRONG> (ARM, 152 bytes, Stack size 32 bytes, DescriptorQueues.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
</UL>
<BR>[Calls]<UL><LI><a href="#[406a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_12
</UL>
<BR>[Called By]<UL><LI><a href="#[493d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum14get_descriptorEv
<LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi
</UL>

<P><STRONG><a name="[493fcbc]"></a>_ZN16CDescriptorQueue3AddEiPKhi</STRONG> (ARM, 232 bytes, Stack size 32 bytes, DescriptorQueues.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN16CDescriptorQueue3AddEiPKhi &rArr; _ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
</UL>
<BR>[Calls]<UL><LI><a href="#[406a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_12
<LI><a href="#[493d55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
<LI><a href="#[5dd1650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znwj (via BLX)
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
<LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
<LI><a href="#[49f3ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14InitUSBEndpDesEb
<LI><a href="#[49f87a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos14InitUSBEndpDesEv
<LI><a href="#[4b49504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14InitUSBEndpDesEh
</UL>

<P><STRONG><a name="[493fc80]"></a>_ZN16CDescriptorQueue6RemoveEi</STRONG> (ARM, 224 bytes, Stack size 24 bytes, DescriptorQueues.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN16CDescriptorQueue6RemoveEi &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
</UL>

<P><STRONG><a name="[4938cf0]"></a>_ZN11CUsb2CdcAcm14InitUSBEndpDesEv</STRONG> (ARM, 212 bytes, Stack size 16 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN11CUsb2CdcAcm14InitUSBEndpDesEv &rArr; _ZN9CUsb2Base19CustomizeUsbStringsEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[4940220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base19CustomizeUsbStringsEv
<LI><a href="#[4940310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base23AttachStringDescriptorsEPKhj
<LI><a href="#[494034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachConDescriptorsEPhj
<LI><a href="#[4940388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachDevDescriptorsEPK22_USB_DEVICE_DESCRIPTORPK19HS_DEVICE_QUALIFIER
</UL>
<BR>[Called By]<UL><LI><a href="#[4938b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmC1EP7CRxFifoP15CThreadRealTimeb
</UL>

<P><STRONG><a name="[4938b10]"></a>_ZN11CUsb2CdcAcmC1EP7CRxFifoP15CThreadRealTimeb</STRONG> (ARM, 272 bytes, Stack size 24 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1968 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2CdcAcmC1EP7CRxFifoP15CThreadRealTimeb &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[4938cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14InitUSBEndpDesEv
<LI><a href="#[493d868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime
</UL>
<BR>[Called By]<UL><LI><a href="#[43370cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateUsbComEmuv
</UL>

<P><STRONG><a name="[4938ad4]"></a>_ZN11CUsb2CdcAcmC2EP7CRxFifoP15CThreadRealTimeb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, usb2cdcacm.o(.text), UNUSED)

<P><STRONG><a name="[4938a98]"></a>_ZN11CUsb2CdcAcmD1Ev</STRONG> (ARM, 64 bytes, Stack size 8 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2CdcAcmD1Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
<LI><a href="#[493d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[4938a5c]"></a>_ZN11CUsb2CdcAcmD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, usb2cdcacm.o(.text), UNUSED)

<P><STRONG><a name="[4938a20]"></a>_ZN11CUsb2CdcAcmD0Ev</STRONG> (ARM, 64 bytes, Stack size 8 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2CdcAcmD0Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
<LI><a href="#[493d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[49389e4]"></a>_ZN11CUsb2CdcAcm25WaitUntilNotificationSentEv</STRONG> (ARM, 120 bytes, Stack size 16 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN11CUsb2CdcAcm25WaitUntilNotificationSentEv &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4938480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Called By]<UL><LI><a href="#[49388f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData
<LI><a href="#[4938930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm20HandlePreSendActionsEv
</UL>

<P><STRONG><a name="[49389a8]"></a>_ZN11CUsb2CdcAcm15SendSerialStateEbb</STRONG> (ARM, 96 bytes, Stack size 16 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN11CUsb2CdcAcm15SendSerialStateEbb &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49384f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh
</UL>
<BR>[Called By]<UL><LI><a href="#[49388b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm17ExtractParametersEPKw
<LI><a href="#[49388f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData
<LI><a href="#[4938930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm20HandlePreSendActionsEv
</UL>

<P><STRONG><a name="[493896c]"></a>_ZN11CUsb2CdcAcm21SendResponseAvailableEj</STRONG> (ARM, 108 bytes, Stack size 16 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN11CUsb2CdcAcm21SendResponseAvailableEj &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49384f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh
</UL>
<BR>[Called By]<UL><LI><a href="#[49385ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm27OnChangeBandwithSavingsModeEb
<LI><a href="#[49388f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData
</UL>

<P><STRONG><a name="[4938930]"></a>_ZN11CUsb2CdcAcm20HandlePreSendActionsEv</STRONG> (ARM, 232 bytes, Stack size 16 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN11CUsb2CdcAcm20HandlePreSendActionsEv &rArr; _ZN11CUsb2CdcAcm15SendSerialStateEbb &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[49389a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm15SendSerialStateEbb
<LI><a href="#[49389e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm25WaitUntilNotificationSentEv
</UL>
<BR>[Called By]<UL><LI><a href="#[49388f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData
</UL>

<P><STRONG><a name="[49388f4]"></a>_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData</STRONG> (ARM, 340 bytes, Stack size 32 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData &rArr; _ZN11CUsb2CdcAcm20HandlePreSendActionsEv &rArr; _ZN11CUsb2CdcAcm15SendSerialStateEbb &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[49384f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh
<LI><a href="#[4938930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm20HandlePreSendActionsEv
<LI><a href="#[493896c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm21SendResponseAvailableEj
<LI><a href="#[49389a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm15SendSerialStateEbb
<LI><a href="#[49389e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm25WaitUntilNotificationSentEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[49388b8]"></a>_ZN11CUsb2CdcAcm17ExtractParametersEPKw</STRONG> (ARM, 332 bytes, Stack size 24 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN11CUsb2CdcAcm17ExtractParametersEPKw &rArr; _ZN11CUsb2CdcAcm15SendSerialStateEbb &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb
<LI><a href="#[49389a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm15SendSerialStateEbb
<LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
<LI><a href="#[4940298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base21EnableUsbSerialNumberEP22_USB_DEVICE_DESCRIPTORb
<LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[493887c]"></a>_ZN11CUsb2CdcAcm14OnClassRequestEv</STRONG> (ARM, 172 bytes, Stack size 0 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN11CUsb2CdcAcm14OnClassRequestEv &rArr; _ZN9CUsb2Enum13code_transmitEPKht &rArr; _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17StatusAcknowledgeEh
<LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[4938840]"></a>_ZN11CUsb2CdcAcm15OnVendorRequestEv</STRONG> (ARM, 88 bytes, Stack size 8 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN11CUsb2CdcAcm15OnVendorRequestEv &rArr; _ZN9CUsb2Chip17StatusAcknowledgeEh &rArr; _ZN9CUsb2Chip18MX25USB2_qu2ep_zlpEh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17StatusAcknowledgeEh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[4938804]"></a>_ZN11CUsb2CdcAcm12IsTxCompleteEv</STRONG> (ARM, 20 bytes, Stack size 8 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN11CUsb2CdcAcm12IsTxCompleteEv &rArr; _ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Calls]<UL><LI><a href="#[4938480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[49387c8]"></a>_ZN11CUsb2CdcAcm13IsCtsInActiveEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2cdcacm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[493878c]"></a>_ZN11CUsb2CdcAcm9SendToRemEPKhi</STRONG> (ARM, 28 bytes, Stack size 8 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _ZN11CUsb2CdcAcm9SendToRemEPKhi &rArr; _ZN7CUsbRem8SendDataEP9CUsb2ChipPKhi &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CUsbRem8SendDataEP9CUsb2ChipPKhi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[4938750]"></a>_ZN11CUsb2CdcAcm15IsRemTxCompleteEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2cdcacm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN11CUsb2CdcAcm15IsRemTxCompleteEv &rArr; _ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Calls]<UL><LI><a href="#[4938480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[43370cc]"></a>_Z15CreateUsbComEmuv</STRONG> (ARM, 84 bytes, Stack size 16 bytes, drvusb2comemu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = _Z15CreateUsbComEmuv &rArr; _ZN11CUsb2CdcAcmC1EP7CRxFifoP15CThreadRealTimeb &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
<LI><a href="#[4938b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmC1EP7CRxFifoP15CThreadRealTimeb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4937238]"></a>_ZN11CUsb2ComEmuD1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, drvusb2comemu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CUsb2ComEmuD1Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[49371fc]"></a>_ZN11CUsb2ComEmuD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvusb2comemu.o(.text), UNUSED)

<P><STRONG><a name="[49371c0]"></a>_ZN11CUsb2ComEmuD0Ev</STRONG> (ARM, 60 bytes, Stack size 8 bytes, drvusb2comemu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CUsb2ComEmuD0Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
</UL>
<P><STRONG><a name="[38806e4]"></a>_Z26reset_res_count_and_timoutv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
</UL>

<P><STRONG><a name="[388075c]"></a>_Z17is_ignore_suspendv</STRONG> (ARM, 40 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
</UL>

<P><STRONG><a name="[493d1d8]"></a>_ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime</STRONG> (ARM, 200 bytes, Stack size 24 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent
<LI><a href="#[3531dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeDriverThread
<LI><a href="#[440c134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator
<LI><a href="#[440c224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CThreadSimpleC1Ej
<LI><a href="#[4940568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseC2EP7CRxFifoP15CThreadRealTime
</UL>
<BR>[Called By]<UL><LI><a href="#[493d868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[4934448]"></a>_ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh</STRONG> (ARM, 464 bytes, Stack size 40 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[493440c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh
<LI><a href="#[49384f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh
</UL>

<P><STRONG><a name="[493440c]"></a>_ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh</STRONG> (ARM, 84 bytes, Stack size 24 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4934448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[49343d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh
<LI><a href="#[493d304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh
</UL>

<P><STRONG><a name="[49343d0]"></a>_ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh</STRONG> (ARM, 76 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493440c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
<LI><a href="#[4934394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip24MX25USB2_FlushAllBuffersEb
</UL>

<P><STRONG><a name="[4934394]"></a>_ZN9CUsb2Chip24MX25USB2_FlushAllBuffersEb</STRONG> (ARM, 104 bytes, Stack size 8 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN9CUsb2Chip24MX25USB2_FlushAllBuffersEb &rArr; _ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49343d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh
</UL>
<BR>[Called By]<UL><LI><a href="#[4934100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17MX25USB2_busresetEv
<LI><a href="#[493d3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14disconnect_USBEv
</UL>

<P><STRONG><a name="[493d3f4]"></a>_ZN9CUsb2Chip14disconnect_USBEv</STRONG> (ARM, 128 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2Chip14disconnect_USBEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4934394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip24MX25USB2_FlushAllBuffersEb
</UL>
<BR>[Called By]<UL><LI><a href="#[493431c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD0Ev
<LI><a href="#[493d19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2ChipD2Ev
</UL>
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4934358]"></a>_ZN9CUsb2ChipD1Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, usb2chip.o(.text), UNUSED)

<P><STRONG><a name="[493d19c]"></a>_ZN9CUsb2ChipD2Ev</STRONG> (ARM, 104 bytes, Stack size 8 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
<LI><a href="#[3880900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SystemSuspendStateb
<LI><a href="#[440c1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CThreadSimpleD1Ev
<LI><a href="#[493d3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14disconnect_USBEv
<LI><a href="#[49404f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[493d7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumD0Ev
<LI><a href="#[493d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493431c]"></a>_ZN9CUsb2ChipD0Ev</STRONG> (ARM, 108 bytes, Stack size 8 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2ChipD0Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseEvent
<LI><a href="#[3880900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SystemSuspendStateb
<LI><a href="#[440c1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CThreadSimpleD1Ev
<LI><a href="#[493d3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14disconnect_USBEv
<LI><a href="#[49404f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493d250]"></a>_ZN9CUsb2Chip5CloseEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[49342e0]"></a>_ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh</STRONG> (ARM, 336 bytes, Stack size 24 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[49340c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_qu2ep_zlpEh
<LI><a href="#[493d304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh
<LI><a href="#[493d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh
</UL>

<P><STRONG><a name="[493d340]"></a>_ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh</STRONG> (ARM, 76 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49342e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
<LI><a href="#[493d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum14get_descriptorEv
<LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>

<P><STRONG><a name="[493d304]"></a>_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh</STRONG> (ARM, 128 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49342e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
<LI><a href="#[493440c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[493422c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_eps_setupEb
<LI><a href="#[49384bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh
<LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
<LI><a href="#[49fea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid22OnSetClassInterfaceReqEv
</UL>

<P><STRONG><a name="[49342a4]"></a>_ZN9CUsb2Chip20MX25USB2_dr_ep_setupEhhh</STRONG> (ARM, 324 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
<LI><a href="#[493422c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_eps_setupEb
</UL>

<P><STRONG><a name="[4934268]"></a>_ZN9CUsb2Chip20MX25USB2_ep_qh_setupEhhhjjh</STRONG> (ARM, 112 bytes, Stack size 4 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9CUsb2Chip20MX25USB2_ep_qh_setupEhhhjjh
</UL>
<BR>[Called By]<UL><LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
<LI><a href="#[493422c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_eps_setupEb
</UL>

<P><STRONG><a name="[493422c]"></a>_ZN9CUsb2Chip18MX25USB2_eps_setupEb</STRONG> (ARM, 1200 bytes, Stack size 24 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN9CUsb2Chip18MX25USB2_eps_setupEb &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4934268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip20MX25USB2_ep_qh_setupEhhhjjh
<LI><a href="#[49342a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip20MX25USB2_dr_ep_setupEhhh
<LI><a href="#[493d304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh
</UL>
<BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
</UL>

<P><STRONG><a name="[49341f0]"></a>_ZN9CUsb2Chip14MX25USB2_SetupEv</STRONG> (ARM, 164 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2277e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11TraceOutputPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
</UL>

<P><STRONG><a name="[49341b4]"></a>_ZN9CUsb2Chip13Init_MX25USB2Ev</STRONG> (ARM, 412 bytes, Stack size 24 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN9CUsb2Chip13Init_MX25USB2Ev &rArr; _ZN9CUsb2Chip18MX25USB2_eps_setupEb &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2277e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11TraceOutputPKc
<LI><a href="#[4404010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12MX25USB2_runv
<LI><a href="#[49341f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip14MX25USB2_SetupEv
<LI><a href="#[493422c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_eps_setupEb
<LI><a href="#[4934268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip20MX25USB2_ep_qh_setupEhhhjjh
<LI><a href="#[49342a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip20MX25USB2_dr_ep_setupEhhh
<LI><a href="#[49343d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh
</UL>
<BR>[Called By]<UL><LI><a href="#[4934178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13connect_USBHwEv
<LI><a href="#[493d430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13SetupHardwareEv
</UL>

<P><STRONG><a name="[493d430]"></a>_ZN9CUsb2Chip13SetupHardwareEv</STRONG> (ARM, 84 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _ZN9CUsb2Chip13SetupHardwareEv &rArr; _ZN9CUsb2Chip13Init_MX25USB2Ev &rArr; _ZN9CUsb2Chip18MX25USB2_eps_setupEb &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
</UL>
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4934178]"></a>_ZN9CUsb2Chip13connect_USBHwEv</STRONG> (ARM, 148 bytes, Stack size 24 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN9CUsb2Chip13connect_USBHwEv &rArr; _ZN9CUsb2Chip13Init_MX25USB2Ev &rArr; _ZN9CUsb2Chip18MX25USB2_eps_setupEb &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[49341b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Init_MX25USB2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[493d214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip9ReconnectEv
<LI><a href="#[493d46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip11connect_USBEv
</UL>

<P><STRONG><a name="[493d214]"></a>_ZN9CUsb2Chip9ReconnectEv</STRONG> (ARM, 100 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ZN9CUsb2Chip9ReconnectEv &rArr; _ZN9CUsb2Chip13connect_USBHwEv &rArr; _ZN9CUsb2Chip13Init_MX25USB2Ev &rArr; _ZN9CUsb2Chip18MX25USB2_eps_setupEb &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[4934178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13connect_USBHwEv
</UL>
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493d46c]"></a>_ZN9CUsb2Chip11connect_USBEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN9CUsb2Chip11connect_USBEv &rArr; _ZN9CUsb2Chip13connect_USBHwEv &rArr; _ZN9CUsb2Chip13Init_MX25USB2Ev &rArr; _ZN9CUsb2Chip18MX25USB2_eps_setupEb &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4934178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13connect_USBHwEv
</UL>
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4938480]"></a>_ZN9CUsb2Chip9EpHasDataEh</STRONG> (ARM, 80 bytes, Stack size 4 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Called By]<UL><LI><a href="#[4938750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm15IsRemTxCompleteEv
<LI><a href="#[4938804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm12IsTxCompleteEv
<LI><a href="#[49389e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm25WaitUntilNotificationSentEv
<LI><a href="#[49fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid15IsRemTxCompleteEv
</UL>

<P><STRONG><a name="[493d4a8]"></a>_ZN9CUsb2Chip11TimeoutHackEhjb</STRONG> (ARM, 308 bytes, Stack size 40 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN9CUsb2Chip11TimeoutHackEhjb &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493413c]"></a>_ZN9CUsb2Chip11ResetDeviceEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos29TranslateSurePosSystemCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
<LI><a href="#[49f6930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22FlashCommandDispatcherEv
</UL>

<P><STRONG><a name="[49384f8]"></a>_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh</STRONG> (ARM, 204 bytes, Stack size 56 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4064860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Timer3_MicroSecondDelayj
<LI><a href="#[4934448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[4938570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CUsbRem8SendDataEP9CUsb2ChipPKhi
<LI><a href="#[49388f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData
<LI><a href="#[493896c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm21SendResponseAvailableEj
<LI><a href="#[49389a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm15SendSerialStateEbb
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>

<P><STRONG><a name="[4934100]"></a>_ZN9CUsb2Chip17MX25USB2_busresetEv</STRONG> (ARM, 188 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN9CUsb2Chip17MX25USB2_busresetEv &rArr; _ZN9CUsb2Chip24MX25USB2_FlushAllBuffersEb &rArr; _ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11TraceOutputPKc
<LI><a href="#[4934394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip24MX25USB2_FlushAllBuffersEb
</UL>
<BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
</UL>

<P><STRONG><a name="[493d3b8]"></a>_ZN9CUsb2Chip15DataStageEnableEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
<LI><a href="#[493d688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum14get_descriptorEv
<LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>

<P><STRONG><a name="[49340c4]"></a>_ZN9CUsb2Chip18MX25USB2_qu2ep_zlpEh</STRONG> (ARM, 76 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN9CUsb2Chip18MX25USB2_qu2ep_zlpEh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49342e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
<LI><a href="#[493d37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17StatusAcknowledgeEh
</UL>

<P><STRONG><a name="[493d37c]"></a>_ZN9CUsb2Chip17StatusAcknowledgeEh</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN9CUsb2Chip17StatusAcknowledgeEh &rArr; _ZN9CUsb2Chip18MX25USB2_qu2ep_zlpEh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49340c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_qu2ep_zlpEh
</UL>
<BR>[Called By]<UL><LI><a href="#[4938840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm15OnVendorRequestEv
<LI><a href="#[493887c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm14OnClassRequestEv
<LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
<LI><a href="#[49fea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid22OnSetClassInterfaceReqEv
</UL>

<P><STRONG><a name="[493d28c]"></a>_ZN9CUsb2Chip26MX25USB2_SetEndpointStatusEhh</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
</UL>

<P><STRONG><a name="[49384bc]"></a>_ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh</STRONG> (ARM, 80 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh
</UL>
<BR>[Called By]<UL><LI><a href="#[49385e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm22EPRxHandleReceivedDataEj
<LI><a href="#[49f35a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22EPRxHandleReceivedDataEj
<LI><a href="#[49fbb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj
<LI><a href="#[4b49234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14ReceiveKbdDataEj
</UL>

<P><STRONG><a name="[4938534]"></a>_ZN9CUsb2Chip16MX25USB2_eps_disEh</STRONG> (ARM, 240 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4938a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmD0Ev
<LI><a href="#[4938a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcmD1Ev
<LI><a href="#[49f399c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosD0Ev
<LI><a href="#[49f3a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosD1Ev
<LI><a href="#[49f86b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPosD0Ev
<LI><a href="#[49f8730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPosD1Ev
<LI><a href="#[4b49414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbdD0Ev
<LI><a href="#[4b4948c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbdD1Ev
</UL>

<P><STRONG><a name="[4934088]"></a>_ZN9CUsb2Chip15MX25USB2_EP0_RxEv</STRONG> (ARM, 160 bytes, Stack size 16 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9CUsb2Chip15MX25USB2_EP0_RxEv
</UL>
<BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
</UL>

<P><STRONG><a name="[493d2c8]"></a>_ZN9CUsb2Chip26MX25USB2_GetEndpointStatusEh</STRONG> (ARM, 120 bytes, Stack size 0 bytes, usb2chip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
</UL>

<P><STRONG><a name="[493404c]"></a>_ZN9CUsb2Chip13Usb_ExceptionEv</STRONG> (ARM, 1088 bytes, Stack size 48 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN9CUsb2Chip13Usb_ExceptionEv &rArr; _ZN9CUsb2Chip17MX25USB2_busresetEv &rArr; _ZN9CUsb2Chip24MX25USB2_FlushAllBuffersEb &rArr; _ZN9CUsb2Chip23MX25USB2_WriteEPs2bytesEh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11TraceOutputPKc
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[4403f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16MX25USB2_suspendv
<LI><a href="#[4403fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15MX25USB2_resumev
<LI><a href="#[4933f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CUsbRem12HandleRxDataEPKhiP7CRxFifo
<LI><a href="#[4934088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip15MX25USB2_EP0_RxEv
<LI><a href="#[49340c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_qu2ep_zlpEh
<LI><a href="#[4934100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17MX25USB2_busresetEv
<LI><a href="#[493422c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip18MX25USB2_eps_setupEb
<LI><a href="#[493d304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.constdata)
</UL>
<P><STRONG><a name="[4934010]"></a>_ZN9CUsb2Chip18Susp_Resume_ThreadEv</STRONG> (ARM, 256 bytes, Stack size 24 bytes, usb2chip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = _ZN9CUsb2Chip18Susp_Resume_ThreadEv &rArr; _Z26Prepare_System_for_Suspendv &rArr; _ZN8CTrigger22OnChangedConfigurationEv &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352c910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16InputPowerStatusv
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[375ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14IsBeepQueEmptyv
<LI><a href="#[3880900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SystemSuspendStateb
<LI><a href="#[388093c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Prepare_System_for_Suspendv
<LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[406de60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17IsHwTriggerPulledv
<LI><a href="#[4403fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15MX25USB2_resumev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.constdata)
</UL>
<P><STRONG><a name="[4932120]"></a>_ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj</STRONG> (ARM, 116 bytes, Stack size 16 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493d868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb
<LI><a href="#[49fbdcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[49320e4]"></a>_ZN8CUsb2HidD1Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, usb2hid.o(.text), UNUSED)

<P><STRONG><a name="[49320a8]"></a>_ZN8CUsb2HidD2Ev</STRONG> (ARM, 56 bytes, Stack size 16 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[49f399c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosD0Ev
<LI><a href="#[49f3a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosD1Ev
<LI><a href="#[49fbd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperD0Ev
<LI><a href="#[49fbd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
</UL>
<P><STRONG><a name="[493206c]"></a>_ZN8CUsb2HidD0Ev</STRONG> (ARM, 60 bytes, Stack size 16 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN8CUsb2HidD0Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493d7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2EnumD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
</UL>
<P><STRONG><a name="[4932030]"></a>_ZN8CUsb2Hid22OnGetClassInterfaceReqEv</STRONG> (ARM, 156 bytes, Stack size 0 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN8CUsb2Hid22OnGetClassInterfaceReqEv &rArr; _ZN9CUsb2Enum13code_transmitEPKht &rArr; _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>
<BR>[Called By]<UL><LI><a href="#[49fea18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid14OnClassRequestEv
</UL>

<P><STRONG><a name="[49fea54]"></a>_ZN8CUsb2Hid22OnSetClassInterfaceReqEv</STRONG> (ARM, 344 bytes, Stack size 16 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN8CUsb2Hid22OnSetClassInterfaceReqEv &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh
<LI><a href="#[493d37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17StatusAcknowledgeEh
</UL>
<BR>[Called By]<UL><LI><a href="#[49fea18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid14OnClassRequestEv
</UL>

<P><STRONG><a name="[49fea18]"></a>_ZN8CUsb2Hid14OnClassRequestEv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ZN8CUsb2Hid14OnClassRequestEv &rArr; _ZN8CUsb2Hid22OnSetClassInterfaceReqEv &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4932030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid22OnGetClassInterfaceReqEv
<LI><a href="#[49fea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid22OnSetClassInterfaceReqEv
</UL>
<BR>[Address Reference Count : 5]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[49fe9dc]"></a>_ZN8CUsb2Hid23GetScannerDisableStatusEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2hid.o(.text))
<BR>[Address Reference Count : 5]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[49fe9a0]"></a>_ZN8CUsb2Hid9SendToRemEPKhi</STRONG> (ARM, 28 bytes, Stack size 8 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _ZN8CUsb2Hid9SendToRemEPKhi &rArr; _ZN7CUsbRem8SendDataEP9CUsb2ChipPKhi &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CUsbRem8SendDataEP9CUsb2ChipPKhi
</UL>
<BR>[Address Reference Count : 5]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[49fe964]"></a>_ZN8CUsb2Hid15IsRemTxCompleteEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN8CUsb2Hid15IsRemTxCompleteEv &rArr; _ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Calls]<UL><LI><a href="#[4938480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip9EpHasDataEh
</UL>
<BR>[Address Reference Count : 5]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[49fe928]"></a>_ZN8CUsb2Hid18SendReportWithTestEiiPh</STRONG> (ARM, 64 bytes, Stack size 0 bytes, usb2hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49384f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23DirectIOCommandAcceptedEP23SurePosInReportBuffer_tb
<LI><a href="#[49f0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t
<LI><a href="#[49f3744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos15SendFlashStatusEhb
<LI><a href="#[49f3870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData
<LI><a href="#[49f38ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14SendLargeLabelEP12CBarcodeData
<LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
<LI><a href="#[49fbcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData
<LI><a href="#[4b49324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendKbdReportEb
<LI><a href="#[4b4cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendAllKeysUpEv
</UL>

<P><STRONG><a name="[49fbdcc]"></a>_ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime</STRONG> (ARM, 36 bytes, Stack size 8 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1968 + Unknown Stack Size
<LI>Call Chain = _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4932120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj
</UL>
<BR>[Called By]<UL><LI><a href="#[49fa4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPosC1EP7CRxFifoP15CThreadRealTime
<LI><a href="#[4b4ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh
</UL>

<P><STRONG><a name="[49fbd90]"></a>_ZN17CUsb2HidPosHelperD1Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, usb2hidhlp.o(.text), UNUSED)

<P><STRONG><a name="[49fbd54]"></a>_ZN17CUsb2HidPosHelperD2Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN17CUsb2HidPosHelperD2Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49320a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidD2Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[49f86b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPosD0Ev
<LI><a href="#[49f8730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPosD1Ev
<LI><a href="#[4b49414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbdD0Ev
<LI><a href="#[4b4948c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbdD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
</UL>
<P><STRONG><a name="[49fbd18]"></a>_ZN17CUsb2HidPosHelperD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN17CUsb2HidPosHelperD0Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49320a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
</UL>
<P><STRONG><a name="[49fbcdc]"></a>_ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData</STRONG> (ARM, 252 bytes, Stack size 64 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f8640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos9SendLabelEP12CBarcodeData
<LI><a href="#[4b4939c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd9SendLabelEP12CBarcodeData
</UL>

<P><STRONG><a name="[49fbca0]"></a>_ZN17CUsb2HidPosHelper24FeatureInRedirectHandlerEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN17CUsb2HidPosHelper24FeatureInRedirectHandlerEv &rArr; _ZN9CUsb2Enum13code_transmitEPKht &rArr; _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidhlp.o(.constdata)
</UL>
<P><STRONG><a name="[49fbc64]"></a>_ZN17CUsb2HidPosHelper25FeatureOutRedirectHandlerEv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, usb2hidhlp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidhlp.o(.constdata)
</UL>
<P><STRONG><a name="[49fbc28]"></a>_ZN17CUsb2HidPosHelper17OutTriggerHandlerEj</STRONG> (ARM, 180 bytes, Stack size 16 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN17CUsb2HidPosHelper17OutTriggerHandlerEj &rArr; _ZN9CUsb2Base16StuffInputBufferEPKhj &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[49401e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[49fbbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper21EP0_OutTriggerHandlerEv
</UL>

<P><STRONG><a name="[49fbbec]"></a>_ZN17CUsb2HidPosHelper21EP0_OutTriggerHandlerEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN17CUsb2HidPosHelper21EP0_OutTriggerHandlerEv &rArr; _ZN17CUsb2HidPosHelper17OutTriggerHandlerEj &rArr; _ZN9CUsb2Base16StuffInputBufferEPKhj &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[49fbc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper17OutTriggerHandlerEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidhlp.o(.constdata)
</UL>
<P><STRONG><a name="[49fbbb0]"></a>_ZN17CUsb2HidPosHelper18EP0_Out1252HandlerEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN17CUsb2HidPosHelper18EP0_Out1252HandlerEv &rArr; _ZN9CUsb2Base16StuffInputBufferEPKhj &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[49401e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidhlp.o(.constdata)
</UL>
<P><STRONG><a name="[49fbb74]"></a>_ZN17CUsb2HidPosHelper21EP0_PosInEmptyHandlerEv</STRONG> (ARM, 60 bytes, Stack size 16 bytes, usb2hidhlp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN17CUsb2HidPosHelper21EP0_PosInEmptyHandlerEv &rArr; _ZN9CUsb2Enum13code_transmitEPKht &rArr; _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidhlp.o(.constdata)
</UL>
<P><STRONG><a name="[4337180]"></a>_Z12CreateUsbPosv</STRONG> (ARM, 76 bytes, Stack size 8 bytes, drvusb2pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = _Z12CreateUsbPosv &rArr; _ZN11CUsb2HidPosC1EP7CRxFifoP15CThreadRealTime &rArr; _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
<LI><a href="#[49fa4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPosC1EP7CRxFifoP15CThreadRealTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[49fa5e4]"></a>_ZN14CDriverUsb2PosD1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, drvusb2pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14CDriverUsb2PosD1Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
</UL>
<P><STRONG><a name="[49fa5a8]"></a>_ZN14CDriverUsb2PosD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvusb2pos.o(.text), UNUSED)

<P><STRONG><a name="[49fa56c]"></a>_ZN14CDriverUsb2PosD0Ev</STRONG> (ARM, 60 bytes, Stack size 8 bytes, drvusb2pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14CDriverUsb2PosD0Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
</UL>
<P><STRONG><a name="[49fa530]"></a>_ZN14CDriverUsb2Pos15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 56 bytes, Stack size 16 bytes, drvusb2pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _ZN14CDriverUsb2Pos15DeviceIoControlE11IoControl_tlj &rArr; _ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj &rArr; _ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4882f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
</UL>
<P><STRONG><a name="[49f87a8]"></a>_ZN11CUsb2HidPos14InitUSBEndpDesEv</STRONG> (ARM, 160 bytes, Stack size 8 bytes, usb2hidpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN11CUsb2HidPos14InitUSBEndpDesEv &rArr; _ZN16CDescriptorQueue3AddEiPKhi &rArr; _ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
</UL>
<BR>[Calls]<UL><LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi
<LI><a href="#[4940220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base19CustomizeUsbStringsEv
<LI><a href="#[4940310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base23AttachStringDescriptorsEPKhj
<LI><a href="#[494034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachConDescriptorsEPhj
<LI><a href="#[4940388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachDevDescriptorsEPK22_USB_DEVICE_DESCRIPTORPK19HS_DEVICE_QUALIFIER
</UL>
<BR>[Called By]<UL><LI><a href="#[49fa4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPosC1EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[49fa4f4]"></a>_ZN11CUsb2HidPosC1EP7CRxFifoP15CThreadRealTime</STRONG> (ARM, 108 bytes, Stack size 16 bytes, usb2hidpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2HidPosC1EP7CRxFifoP15CThreadRealTime &rArr; _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49f87a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidPos14InitUSBEndpDesEv
<LI><a href="#[49fbdcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4337180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CreateUsbPosv
</UL>

<P><STRONG><a name="[49f876c]"></a>_ZN11CUsb2HidPosC2EP7CRxFifoP15CThreadRealTime</STRONG> (ARM, 0 bytes, Stack size 16 bytes, usb2hidpos.o(.text), UNUSED)

<P><STRONG><a name="[49f8730]"></a>_ZN11CUsb2HidPosD1Ev</STRONG> (ARM, 52 bytes, Stack size 8 bytes, usb2hidpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2HidPosD1Ev &rArr; _ZN17CUsb2HidPosHelperD2Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
<LI><a href="#[49fbd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f86f4]"></a>_ZN11CUsb2HidPosD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, usb2hidpos.o(.text), UNUSED)

<P><STRONG><a name="[49f86b8]"></a>_ZN11CUsb2HidPosD0Ev</STRONG> (ARM, 52 bytes, Stack size 8 bytes, usb2hidpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2HidPosD0Ev &rArr; _ZN17CUsb2HidPosHelperD2Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
<LI><a href="#[49fbd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f867c]"></a>_ZN11CUsb2HidPos13GetReportSizeEP15_device_request</STRONG> (ARM, 112 bytes, Stack size 0 bytes, usb2hidpos.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f8640]"></a>_ZN11CUsb2HidPos9SendLabelEP12CBarcodeData</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2hidpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _ZN11CUsb2HidPos9SendLabelEP12CBarcodeData &rArr; _ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49fbcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f8604]"></a>_ZN11CUsb2HidPos17ExtractParametersEPKw</STRONG> (ARM, 36 bytes, Stack size 16 bytes, usb2hidpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN11CUsb2HidPos17ExtractParametersEPKw &rArr; _ZN9CUsb2Base17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwS1_RVb &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
<LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[4336f64]"></a>_Z18CreateUsbSurePosHHv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, drvusb2surepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = _Z18CreateUsbSurePosHHv &rArr; _ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
<LI><a href="#[49403c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15SetParentDriverEP15CThreadedDriver
<LI><a href="#[49f68b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4336f28]"></a>_Z18CreateUsbSurePosTTv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, drvusb2surepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = _Z18CreateUsbSurePosTTv &rArr; _ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
<LI><a href="#[49403c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15SetParentDriverEP15CThreadedDriver
<LI><a href="#[49f68b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[49f6b10]"></a>_ZN18CDriverUsb2SurePosD1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, drvusb2surepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN18CDriverUsb2SurePosD1Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
</UL>
<P><STRONG><a name="[49f6ad4]"></a>_ZN18CDriverUsb2SurePosD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, drvusb2surepos.o(.text), UNUSED)

<P><STRONG><a name="[49f6a98]"></a>_ZN18CDriverUsb2SurePosD0Ev</STRONG> (ARM, 60 bytes, Stack size 8 bytes, drvusb2surepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN18CDriverUsb2SurePosD0Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
</UL>
<P><STRONG><a name="[49f6a5c]"></a>_ZN18CDriverUsb2SurePos5WriteEP12CBarcodeData</STRONG> (ARM, 44 bytes, Stack size 8 bytes, drvusb2surepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = _ZN18CDriverUsb2SurePos5WriteEP12CBarcodeData &rArr; _ZN15CDriverUsb2Base5WriteEP12CBarcodeData &rArr; _ZN15CThreadedDriver5WriteEP12CBarcodeData &rArr; _ZN11CDriverBase5WriteEP12CBarcodeData &rArr; _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai &rArr;  _ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4882ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base5WriteEP12CBarcodeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
</UL>
<P><STRONG><a name="[49f6a20]"></a>_ZN18CDriverUsb2SurePos12InitInstanceEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, drvusb2surepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN18CDriverUsb2SurePos12InitInstanceEv &rArr; _ZN15CDriverUsb2Base12InitInstanceEv &rArr; _ZN9CUsb2Base24WaitUntilWeAreConfiguredEv &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4882e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base12InitInstanceEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
</UL>
<P><STRONG><a name="[49f69e4]"></a>_ZN18CDriverUsb2SurePos10ThreadLoopEv</STRONG> (ARM, 168 bytes, Stack size 8 bytes, drvusb2surepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = _ZN18CDriverUsb2SurePos10ThreadLoopEv &rArr; _ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t &rArr; _ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t &rArr; _ZN14DirectIoParser22ExecuteDirectIOCommandEPhi &rArr; _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
<LI><a href="#[440eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEm
<LI><a href="#[440eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver20PrepareWaitForSignalEm
<LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
<LI><a href="#[49f6930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22FlashCommandDispatcherEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
</UL>
<P><STRONG><a name="[49f3ac8]"></a>_ZN15CUsb2HidSurePos14InitUSBEndpDesEb</STRONG> (ARM, 328 bytes, Stack size 24 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN15CUsb2HidSurePos14InitUSBEndpDesEb &rArr; _ZN16CDescriptorQueue3AddEiPKhi &rArr; _ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
</UL>
<BR>[Calls]<UL><LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi
<LI><a href="#[4940220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base19CustomizeUsbStringsEv
<LI><a href="#[4940310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base23AttachStringDescriptorsEPKhj
<LI><a href="#[494034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachConDescriptorsEPhj
<LI><a href="#[4940388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachDevDescriptorsEPK22_USB_DEVICE_DESCRIPTORPK19HS_DEVICE_QUALIFIER
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb
</UL>

<P><STRONG><a name="[49f68b8]"></a>_ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb</STRONG> (ARM, 308 bytes, Stack size 32 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = _ZN15CUsb2HidSurePosC1EP7CRxFifoP15CThreadRealTimeb &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45331c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParserC1EP7CRxFifo
<LI><a href="#[4932120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj
<LI><a href="#[49f3ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14InitUSBEndpDesEb
</UL>
<BR>[Called By]<UL><LI><a href="#[4336f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateUsbSurePosTTv
<LI><a href="#[4336f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18CreateUsbSurePosHHv
</UL>

<P><STRONG><a name="[49f3a50]"></a>_ZN15CUsb2HidSurePosC2EP7CRxFifoP15CThreadRealTimeb</STRONG> (ARM, 0 bytes, Stack size 32 bytes, usb2hidsurepos.o(.text), UNUSED)

<P><STRONG><a name="[49f3a14]"></a>_ZN15CUsb2HidSurePosD1Ev</STRONG> (ARM, 92 bytes, Stack size 8 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN15CUsb2HidSurePosD1Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49320a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidD2Ev
<LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f39d8]"></a>_ZN15CUsb2HidSurePosD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, usb2hidsurepos.o(.text), UNUSED)

<P><STRONG><a name="[49f399c]"></a>_ZN15CUsb2HidSurePosD0Ev</STRONG> (ARM, 96 bytes, Stack size 8 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN15CUsb2HidSurePosD0Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49320a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2HidD2Ev
<LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f3960]"></a>_ZN15CUsb2HidSurePos13GetReportSizeEP15_device_request</STRONG> (ARM, 224 bytes, Stack size 0 bytes, usb2hidsurepos.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f3924]"></a>_ZN15CUsb2HidSurePos17ExtractParametersEPKw</STRONG> (ARM, 296 bytes, Stack size 24 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN15CUsb2HidSurePos17ExtractParametersEPKw &rArr; _ZN9CUsb2Base17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwS1_RVb &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb
<LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
<LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f38e8]"></a>_ZN15CUsb2HidSurePos16TranslateIntoBCDEP23SurePosInReportBuffer_tP12CBarcodeData</STRONG> (ARM, 120 bytes, Stack size 0 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49f3870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData
</UL>

<P><STRONG><a name="[49f38ac]"></a>_ZN15CUsb2HidSurePos14SendLargeLabelEP12CBarcodeData</STRONG> (ARM, 648 bytes, Stack size 56 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _ZN15CUsb2HidSurePos14SendLargeLabelEP12CBarcodeData &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f3870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData
</UL>

<P><STRONG><a name="[49f3870]"></a>_ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData</STRONG> (ARM, 232 bytes, Stack size 32 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData &rArr; _ZN15CUsb2HidSurePos14SendLargeLabelEP12CBarcodeData &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[452e7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ExecuteRetailPDFv
<LI><a href="#[49f38ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14SendLargeLabelEP12CBarcodeData
<LI><a href="#[49f38e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos16TranslateIntoBCDEP23SurePosInReportBuffer_tP12CBarcodeData
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f3834]"></a>_ZN15CUsb2HidSurePos17StoreMenuResponseEP12CBarcodeData</STRONG> (ARM, 64 bytes, Stack size 16 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN15CUsb2HidSurePos17StoreMenuResponseEP12CBarcodeData &rArr; _ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData &rArr; _ZN13DrvMenuConfig16FreeMenuResponseEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4532bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser24GetExpectingMenuResponseEv
<LI><a href="#[453309c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser17StoreMenuResponseEP12CBarcodeData
<LI><a href="#[4940400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17StoreMenuResponseEP12CBarcodeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f37f8]"></a>_ZN15CUsb2HidSurePos18EP0_InEmptyHandlerEv</STRONG> (ARM, 92 bytes, Stack size 16 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN15CUsb2HidSurePos18EP0_InEmptyHandlerEv &rArr; _ZN9CUsb2Enum13code_transmitEPKht &rArr; _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata)
</UL>
<P><STRONG><a name="[49f37bc]"></a>_ZN15CUsb2HidSurePos16OutReportHandlerEv</STRONG> (ARM, 24 bytes, Stack size 8 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN15CUsb2HidSurePos16OutReportHandlerEv &rArr; _ZN15CThreadedDriver6SignalEm &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[440edbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver6SignalEm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata)
</UL>
<P><STRONG><a name="[49f3780]"></a>_ZN15CUsb2HidSurePos12GetPidOffsetEb</STRONG> (ARM, 44 bytes, Stack size 0 bytes, usb2hidsurepos.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f3744]"></a>_ZN15CUsb2HidSurePos15SendFlashStatusEhb</STRONG> (ARM, 52 bytes, Stack size 0 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN15CUsb2HidSurePos15SendFlashStatusEhb &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f3708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos24EP0_FlashInStatusHandlerEv
<LI><a href="#[49f6930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22FlashCommandDispatcherEv
</UL>

<P><STRONG><a name="[49f3708]"></a>_ZN15CUsb2HidSurePos24EP0_FlashInStatusHandlerEv</STRONG> (ARM, 24 bytes, Stack size 8 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN15CUsb2HidSurePos24EP0_FlashInStatusHandlerEv &rArr; _ZN15CUsb2HidSurePos15SendFlashStatusEhb &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49f3744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos15SendFlashStatusEhb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata)
</UL>
<P><STRONG><a name="[49f36cc]"></a>_ZN15CUsb2HidSurePos25EP0_FlashOutReportHandlerEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN15CUsb2HidSurePos25EP0_FlashOutReportHandlerEv &rArr; _ZN15CThreadedDriver6SignalEm &rArr; MT_AddMailbox
</UL>
<BR>[Calls]<UL><LI><a href="#[440edbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver6SignalEm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata)
</UL>
<P><STRONG><a name="[49f6930]"></a>_ZN15CUsb2HidSurePos22FlashCommandDispatcherEv</STRONG> (ARM, 268 bytes, Stack size 16 bytes, usb2hidsurepos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN15CUsb2HidSurePos22FlashCommandDispatcherEv &rArr; _ZN15CUsb2HidSurePos15SendFlashStatusEhb &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440cda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadRealTime5SleepEm
<LI><a href="#[493413c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip11ResetDeviceEv
<LI><a href="#[49401e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKhj
<LI><a href="#[49f3744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos15SendFlashStatusEhb
</UL>
<BR>[Called By]<UL><LI><a href="#[49f69e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos10ThreadLoopEv
</UL>

<P><STRONG><a name="[49f0d8c]"></a>_ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t</STRONG> (ARM, 64 bytes, Stack size 16 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos29TranslateSurePosSystemCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
<LI><a href="#[49f0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
<LI><a href="#[49f0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23DirectIOCommandAcceptedEP23SurePosInReportBuffer_tb
<LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f0b70]"></a>_ZN15CUsb2HidSurePos23DirectIOCommandAcceptedEP23SurePosInReportBuffer_tb</STRONG> (ARM, 208 bytes, Stack size 32 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ZN15CUsb2HidSurePos23DirectIOCommandAcceptedEP23SurePosInReportBuffer_tb &rArr; _ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49f0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f0b34]"></a>_ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t</STRONG> (ARM, 252 bytes, Stack size 16 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = _ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t &rArr; _ZN14DirectIoParser22ExecuteDirectIOCommandEPhi &rArr; _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4532b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser11GetResponseEPPh
<LI><a href="#[4532bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser22ExecuteDirectIOCommandEPhi
<LI><a href="#[49f0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23DirectIOCommandAcceptedEP23SurePosInReportBuffer_tb
<LI><a href="#[49f0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f0af8]"></a>_ZN15CUsb2HidSurePos29TranslateSurePosSystemCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t</STRONG> (ARM, 140 bytes, Stack size 0 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN15CUsb2HidSurePos29TranslateSurePosSystemCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t &rArr; _ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493413c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip11ResetDeviceEv
<LI><a href="#[49f0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f0abc]"></a>_ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhPS1_iRhh</STRONG> (ARM, 152 bytes, Stack size 40 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhPS1_iRhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVb
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ParseMenuResponseEPh
</UL>

<P><STRONG><a name="[49f0a80]"></a>_ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhS1_Rhh</STRONG> (ARM, 84 bytes, Stack size 16 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhS1_Rhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVb
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ParseMenuResponseEPh
</UL>

<P><STRONG><a name="[49f0a44]"></a>_ZN15CUsb2HidSurePos21ParseMenuResponse_intEPKhS1_Rhh</STRONG> (ARM, 120 bytes, Stack size 24 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN15CUsb2HidSurePos21ParseMenuResponse_intEPKhS1_Rhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVi &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVi
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ParseMenuResponseEPh
</UL>

<P><STRONG><a name="[49f0a08]"></a>_ZN15CUsb2HidSurePos17ParseMenuResponseEPh</STRONG> (ARM, 1328 bytes, Stack size 40 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _ZN15CUsb2HidSurePos17ParseMenuResponseEPh &rArr; _ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhPS1_iRhh &rArr; _ZN12CParseHelper7ExtractEPKhS1_RVb &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4332dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVm
<LI><a href="#[49f0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos21ParseMenuResponse_intEPKhS1_Rhh
<LI><a href="#[49f0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhS1_Rhh
<LI><a href="#[49f0abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22ParseMenuResponse_boolEPKhPS1_iRhh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f09cc]"></a>_ZN15CUsb2HidSurePos18AppendToMenuBufferEPKhz</STRONG> (ARM, 68 bytes, Stack size 24 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN15CUsb2HidSurePos18AppendToMenuBufferEPKhz
</UL>
<BR>[Called By]<UL><LI><a href="#[49f0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos20SurePosConfigScannerEP24SurePosOutReportBuffer_t
<LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f0990]"></a>_ZN15CUsb2HidSurePos20SurePosConfigScannerEP24SurePosOutReportBuffer_t</STRONG> (ARM, 1048 bytes, Stack size 24 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _ZN15CUsb2HidSurePos20SurePosConfigScannerEP24SurePosOutReportBuffer_t &rArr; _ZN9CUsb2Base16StuffInputBufferEPKh &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[49401a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKh
<LI><a href="#[49f09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos18AppendToMenuBufferEPKhz
</UL>
<BR>[Called By]<UL><LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f0954]"></a>_ZN15CUsb2HidSurePos31SurePosConfigValidateAndCorrectEP24SurePosOutReportBuffer_t</STRONG> (ARM, 248 bytes, Stack size 0 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49f68f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t
</UL>

<P><STRONG><a name="[49f68f4]"></a>_ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t</STRONG> (ARM, 852 bytes, Stack size 40 bytes, usb2sureposxlat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408 + Unknown Stack Size
<LI>Call Chain = _ZN15CUsb2HidSurePos23TranslateSurePosCommandEP24SurePosOutReportBuffer_t &rArr; _ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t &rArr; _ZN14DirectIoParser22ExecuteDirectIOCommandEPhi &rArr; _ZN14DirectIoParser19TF_EnterTrickleFeedEv &rArr; _ZN14DirectIoParser14Generate_CRC32EmPhm
</UL>
<BR>[Calls]<UL><LI><a href="#[4940130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base38StuffInputBufferAndWaitForMenuResponseEPKh
<LI><a href="#[494016c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16FreeMenuResponseEv
<LI><a href="#[49401a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKh
<LI><a href="#[49f0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos31SurePosConfigValidateAndCorrectEP24SurePosOutReportBuffer_t
<LI><a href="#[49f0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos20SurePosConfigScannerEP24SurePosOutReportBuffer_t
<LI><a href="#[49f09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos18AppendToMenuBufferEPKhz
<LI><a href="#[49f0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ParseMenuResponseEPh
<LI><a href="#[49f0af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos29TranslateSurePosSystemCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
<LI><a href="#[49f0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos31TranslateSurePosDirectIoCommandEP23SurePosInReportBuffer_tP24SurePosOutReportBuffer_t
<LI><a href="#[49f0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos23SurePosSendStatusReportEP23SurePosInReportBuffer_t
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[49f69e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CDriverUsb2SurePos10ThreadLoopEv
</UL>

<P><STRONG><a name="[4b4cdbc]"></a>_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh</STRONG> (ARM, 152 bytes, Stack size 16 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = _ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh &rArr; _ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh &rArr; _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4778fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CWedgeEngineUsbHidC1EP15CThreadedDriverPK14CWedgeTerminalP10CBitBanger
<LI><a href="#[48830f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseC1Ejj
<LI><a href="#[4b4ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2KbdC1EPK14CWedgeTerminalP11CUsb2HidKbd
<LI><a href="#[4b4ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh
</UL>
<BR>[Called By]<UL><LI><a href="#[4337054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateUsbKbdMacv
<LI><a href="#[4337090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateUsbJapKbdv
<LI><a href="#[4337108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateUsbKbdPcv
</UL>

<P><STRONG><a name="[4b4cd80]"></a>_ZN14CDriverUsb2KbdC2EPK14CWedgeTerminalh</STRONG> (ARM, 0 bytes, Stack size 16 bytes, drvusb2kbd.o(.text), UNUSED)

<P><STRONG><a name="[4337108]"></a>_Z14CreateUsbKbdPcv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2008 + Unknown Stack Size
<LI>Call Chain = _Z14CreateUsbKbdPcv &rArr; _ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh &rArr; _ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh &rArr; _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4337054]"></a>_Z15CreateUsbKbdMacv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2008 + Unknown Stack Size
<LI>Call Chain = _Z15CreateUsbKbdMacv &rArr; _ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh &rArr; _ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh &rArr; _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4337090]"></a>_Z15CreateUsbJapKbdv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2008 + Unknown Stack Size
<LI>Call Chain = _Z15CreateUsbJapKbdv &rArr; _ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh &rArr; _ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh &rArr; _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4b4cd44]"></a>_ZN14CDriverUsb2KbdD1Ev</STRONG> (ARM, 80 bytes, Stack size 16 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN14CDriverUsb2KbdD1Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b4cd08]"></a>_ZN14CDriverUsb2KbdD2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, drvusb2kbd.o(.text), UNUSED)

<P><STRONG><a name="[4b4cccc]"></a>_ZN14CDriverUsb2KbdD0Ev</STRONG> (ARM, 92 bytes, Stack size 16 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN14CDriverUsb2KbdD0Ev &rArr; _ZN15CDriverUsb2BaseD1Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4883078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2BaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b4cc90]"></a>_ZN14CDriverUsb2Kbd4OpenEsPKw</STRONG> (ARM, 208 bytes, Stack size 24 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = _ZN14CDriverUsb2Kbd4OpenEsPKw &rArr; _ZN15CDriverUsb2Base4OpenEsPKw &rArr; _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb
<LI><a href="#[4882fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base4OpenEsPKw
<LI><a href="#[4b4caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd18SetPollingIntervalEhb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b4cc54]"></a>_ZN14CDriverUsb2Kbd5CloseEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN14CDriverUsb2Kbd5CloseEv &rArr; _ZN15CDriverUsb2Base5CloseEv &rArr; _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4882f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base5CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b4cc18]"></a>_ZN14CDriverUsb2Kbd15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 64 bytes, Stack size 16 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _ZN14CDriverUsb2Kbd15DeviceIoControlE11IoControl_tlj &rArr; _ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj &rArr; _ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase15DeviceIoControlE11IoControl_tlj &rArr; _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4882f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CDriverUsb2Base15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b4cbdc]"></a>_ZN14CDriverUsb2Kbd10ThreadLoopEv</STRONG> (ARM, 136 bytes, Stack size 8 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN14CDriverUsb2Kbd10ThreadLoopEv &rArr; _ZN11CUsb2HidKbd13SendAllKeysUpEv &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
<LI><a href="#[440ea38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEmm
<LI><a href="#[440eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver16WaitForAnySignalEm
<LI><a href="#[440eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver20PrepareWaitForSignalEm
<LI><a href="#[4b4cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendAllKeysUpEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b4cba0]"></a>_ZN14CDriverUsb2Kbd12StartSendingEv</STRONG> (ARM, 100 bytes, Stack size 16 bytes, drvusb2kbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = _ZN14CDriverUsb2Kbd12StartSendingEv &rArr; _ZN11CUsb2HidKbd19SendLabelToKeyboardEP12CBarcodeData &rArr; _ZN11CWedgeLabel9SendLabelEv &rArr; _ZN11CWedgeLabel20TranslateEscSequenceEww &rArr; _ZN14CWedgeMultiKey9TranslateEw &rArr; _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[4337bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11SentBarcodeEv
<LI><a href="#[4b4cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd19SendLabelToKeyboardEP12CBarcodeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b4cb64]"></a>_ZN14CDriverUsb2Kbd36PrepareCableInterfaceforUSBPowerSaveEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, drvusb2kbd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[4b49504]"></a>_ZN11CUsb2HidKbd14InitUSBEndpDesEh</STRONG> (ARM, 280 bytes, Stack size 16 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN11CUsb2HidKbd14InitUSBEndpDesEh &rArr; _ZN16CDescriptorQueue3AddEiPKhi &rArr; _ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
</UL>
<BR>[Calls]<UL><LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi
<LI><a href="#[4940220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base19CustomizeUsbStringsEv
<LI><a href="#[4940310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base23AttachStringDescriptorsEPKhj
<LI><a href="#[494034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachConDescriptorsEPhj
<LI><a href="#[4940388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base20AttachDevDescriptorsEPK22_USB_DEVICE_DESCRIPTORPK19HS_DEVICE_QUALIFIER
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh
</UL>

<P><STRONG><a name="[4b4ca74]"></a>_ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh</STRONG> (ARM, 216 bytes, Stack size 16 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2HidKbdC1EP7CRxFifoP15CThreadRealTimeh &rArr; _ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN8CUsb2HidC2EP7CRxFifoP15CThreadRealTimejj &rArr; _ZN9CUsb2EnumC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN9CUsb2ChipC2EP7CRxFifoP15CThreadRealTime &rArr; _ZN13CThreadSimple10PrepareRunEiP19CCallBackTranslator &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49fbdcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperC2EP7CRxFifoP15CThreadRealTime
<LI><a href="#[4b49504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14InitUSBEndpDesEh
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh
</UL>

<P><STRONG><a name="[4b494c8]"></a>_ZN11CUsb2HidKbdC2EP7CRxFifoP15CThreadRealTimeh</STRONG> (ARM, 0 bytes, Stack size 16 bytes, usb2hidkbd.o(.text), UNUSED)

<P><STRONG><a name="[4b4948c]"></a>_ZN11CUsb2HidKbdD1Ev</STRONG> (ARM, 76 bytes, Stack size 8 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2HidKbdD1Ev &rArr; _ZN17CUsb2HidPosHelperD2Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
<LI><a href="#[49fbd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b49450]"></a>_ZN11CUsb2HidKbdD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, usb2hidkbd.o(.text), UNUSED)

<P><STRONG><a name="[4b49414]"></a>_ZN11CUsb2HidKbdD0Ev</STRONG> (ARM, 76 bytes, Stack size 8 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN11CUsb2HidKbdD0Ev &rArr; _ZN17CUsb2HidPosHelperD2Ev &rArr; _ZN8CUsb2HidD2Ev &rArr; _ZN9CUsb2EnumD2Ev &rArr; _ZN9CUsb2ChipD2Ev &rArr; _ZN13CThreadSimpleD1Ev &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4938534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip16MX25USB2_eps_disEh
<LI><a href="#[49fbd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelperD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b493d8]"></a>_ZN11CUsb2HidKbd13GetReportSizeEP15_device_request</STRONG> (ARM, 224 bytes, Stack size 0 bytes, usb2hidkbd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b4939c]"></a>_ZN11CUsb2HidKbd9SendLabelEP12CBarcodeData</STRONG> (ARM, 64 bytes, Stack size 16 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ZN11CUsb2HidKbd9SendLabelEP12CBarcodeData &rArr; _ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
<LI><a href="#[49fbcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b49360]"></a>_ZN11CUsb2HidKbd17ExtractParametersEPKw</STRONG> (ARM, 180 bytes, Stack size 24 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN11CUsb2HidKbd17ExtractParametersEPKw &rArr; _ZN9CUsb2Base17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwS1_RVb &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb
<LI><a href="#[43378c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVm
<LI><a href="#[494025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base15PatchDeviceDescEP22_USB_DEVICE_DESCRIPTOR
<LI><a href="#[494043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17ExtractParametersEPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b49324]"></a>_ZN11CUsb2HidKbd13SendKbdReportEb</STRONG> (ARM, 60 bytes, Stack size 16 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN11CUsb2HidKbd13SendKbdReportEb &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[4b47164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2Kbd18NotifyOutTermDelayEm
<LI><a href="#[4b471dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2Kbd12DeliverToUSBEv
</UL>

<P><STRONG><a name="[4b492e8]"></a>_ZN11CUsb2HidKbd26GetWritableKbdReportBufferEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidkbd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b47164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2Kbd18NotifyOutTermDelayEm
<LI><a href="#[4b471dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2Kbd12DeliverToUSBEv
</UL>

<P><STRONG><a name="[4b4cb28]"></a>_ZN11CUsb2HidKbd13SendAllKeysUpEv</STRONG> (ARM, 60 bytes, Stack size 8 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ZN11CUsb2HidKbd13SendAllKeysUpEv &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[49fe928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid18SendReportWithTestEiiPh
</UL>
<BR>[Called By]<UL><LI><a href="#[4b471a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2Kbd14BitBangOutTermEjj
<LI><a href="#[4b4cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd10ThreadLoopEv
</UL>

<P><STRONG><a name="[4b4cab0]"></a>_ZN11CUsb2HidKbd19SendLabelToKeyboardEP12CBarcodeData</STRONG> (ARM, 76 bytes, Stack size 24 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _ZN11CUsb2HidKbd19SendLabelToKeyboardEP12CBarcodeData &rArr; _ZN11CWedgeLabel9SendLabelEv &rArr; _ZN11CWedgeLabel20TranslateEscSequenceEww &rArr; _ZN14CWedgeMultiKey9TranslateEw &rArr; _ZN14CWedgeMultiKey8MultiKeyEw &rArr; _ZN14CWedgeMultiKey13SendAltNumPadEPKwj &rArr; _ZN15CWedgeTranslate12TranslateKeyEPK4CKeyw &rArr; _ZN15CWedgeTranslate20HandleModifierBreaksEPK4CKey &rArr; _ZN15CWedgeTranslate7DoBreakEhtl &rArr; _ZN15CWedgeTranslate13CopyBreakCodeEhttl &rArr; _ZN9CWedgeCmd15AddDelayCommandEl &rArr; _ZN9CWedgeCmd10AddCommandEhtt
</UL>
<BR>[Calls]<UL><LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
<LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
<LI><a href="#[4b49054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4cba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd12StartSendingEv
</UL>

<P><STRONG><a name="[4b4caec]"></a>_ZN11CUsb2HidKbd18SetPollingIntervalEhb</STRONG> (ARM, 36 bytes, Stack size 0 bytes, usb2hidkbd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b4cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2Kbd4OpenEsPKw
</UL>

<P><STRONG><a name="[4b492ac]"></a>_ZN11CUsb2HidKbd12GetPidOffsetEb</STRONG> (ARM, 44 bytes, Stack size 0 bytes, usb2hidkbd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b49270]"></a>_ZN11CUsb2HidKbd12StoreLEDInfoEh</STRONG> (ARM, 108 bytes, Stack size 0 bytes, usb2hidkbd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b491bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd20EP0_OutReportHandlerEv
<LI><a href="#[4b49234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd14ReceiveKbdDataEj
</UL>

<P><STRONG><a name="[4b49234]"></a>_ZN11CUsb2HidKbd14ReceiveKbdDataEj</STRONG> (ARM, 164 bytes, Stack size 16 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN11CUsb2HidKbd14ReceiveKbdDataEj &rArr; _ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49384bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh
<LI><a href="#[4b49270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd12StoreLEDInfoEh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b491f8]"></a>_ZN11CUsb2HidKbd19EP0_InReportHandlerEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN11CUsb2HidKbd19EP0_InReportHandlerEv &rArr; _ZN9CUsb2Enum13code_transmitEPKht &rArr; _ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh &rArr; _ZN9CUsb2Chip21MX25USB2_filldtd_ctrlEhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[493d778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum13code_transmitEPKht
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata)
</UL>
<P><STRONG><a name="[4b491bc]"></a>_ZN11CUsb2HidKbd20EP0_OutReportHandlerEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2hidkbd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11CUsb2HidKbd20EP0_OutReportHandlerEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4b49270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd12StoreLEDInfoEh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata)
</UL>
<P><STRONG><a name="[4b4ca38]"></a>_ZN15CBitBangUsb2KbdC1EPK14CWedgeTerminalP11CUsb2HidKbd</STRONG> (ARM, 60 bytes, Stack size 16 bytes, usb2kbdbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _ZN15CBitBangUsb2KbdC1EPK14CWedgeTerminalP11CUsb2HidKbd &rArr; _ZN10CBitBangerC2Ej &rArr; _ZN13CBitBangerISRC1Ej &rArr; _Z16UseFastInterrupt15vector_number_t
</UL>
<BR>[Calls]<UL><LI><a href="#[488a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerC2Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CDriverUsb2KbdC1EPK14CWedgeTerminalh
</UL>

<P><STRONG><a name="[4b472cc]"></a>_ZN15CBitBangUsb2KbdC2EPK14CWedgeTerminalP11CUsb2HidKbd</STRONG> (ARM, 0 bytes, Stack size 16 bytes, usb2kbdbase.o(.text), UNUSED)

<P><STRONG><a name="[4b47290]"></a>_ZN15CBitBangUsb2KbdD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2kbdbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _ZN15CBitBangUsb2KbdD1Ev &rArr; _ZN10CBitBangerD2Ev &rArr; _ZN13CBitBangerISRD1Ev &rArr; MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[4b47254]"></a>_ZN15CBitBangUsb2KbdD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, usb2kbdbase.o(.text), UNUSED)

<P><STRONG><a name="[4b47218]"></a>_ZN15CBitBangUsb2KbdD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, usb2kbdbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN15CBitBangUsb2KbdD0Ev &rArr; _ZN10CBitBangerD2Ev &rArr; _ZN13CBitBangerISRD1Ev &rArr; MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[4b471dc]"></a>_ZN15CBitBangUsb2Kbd12DeliverToUSBEv</STRONG> (ARM, 224 bytes, Stack size 16 bytes, usb2kbdbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN15CBitBangUsb2Kbd12DeliverToUSBEv &rArr; _ZN11CUsb2HidKbd13SendKbdReportEb &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b492e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd26GetWritableKbdReportBufferEv
<LI><a href="#[4b49324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendKbdReportEb
</UL>
<BR>[Called By]<UL><LI><a href="#[4b471a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2Kbd14BitBangOutTermEjj
</UL>

<P><STRONG><a name="[4b471a0]"></a>_ZN15CBitBangUsb2Kbd14BitBangOutTermEjj</STRONG> (ARM, 348 bytes, Stack size 24 bytes, usb2kbdbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _ZN15CBitBangUsb2Kbd14BitBangOutTermEjj &rArr; _ZN15CBitBangUsb2Kbd12DeliverToUSBEv &rArr; _ZN11CUsb2HidKbd13SendKbdReportEb &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b471dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBitBangUsb2Kbd12DeliverToUSBEv
<LI><a href="#[4b4cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendAllKeysUpEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[4b47164]"></a>_ZN15CBitBangUsb2Kbd18NotifyOutTermDelayEm</STRONG> (ARM, 60 bytes, Stack size 8 bytes, usb2kbdbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _ZN15CBitBangUsb2Kbd18NotifyOutTermDelayEm &rArr; _ZN11CUsb2HidKbd13SendKbdReportEb &rArr; _ZN8CUsb2Hid18SendReportWithTestEiiPh &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b492e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd26GetWritableKbdReportBufferEv
<LI><a href="#[4b49324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd13SendKbdReportEb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2kbdbase.o(.constdata__ZTV15CBitBangUsb2Kbd)
</UL>
<P><STRONG><a name="[493fb90]"></a>_ZN7CUsbRem4InitEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, UsbRem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4940568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2BaseC2EP7CRxFifoP15CThreadRealTime
</UL>

<P><STRONG><a name="[4938570]"></a>_ZN7CUsbRem8SendDataEP9CUsb2ChipPKhi</STRONG> (ARM, 136 bytes, Stack size 120 bytes, UsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _ZN7CUsbRem8SendDataEP9CUsb2ChipPKhi &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49384f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh
</UL>
<BR>[Called By]<UL><LI><a href="#[493878c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendToRemEPKhi
<LI><a href="#[49fe9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CUsb2Hid9SendToRemEPKhi
</UL>

<P><STRONG><a name="[4933f20]"></a>_ZN7CUsbRem12HandleRxDataEPKhiP7CRxFifo</STRONG> (ARM, 28 bytes, Stack size 0 bytes, UsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN7CUsbRem12HandleRxDataEPKhiP7CRxFifo &rArr; _ZN7CRxFifo5WriteEPKhj &rArr; _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[493404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip13Usb_ExceptionEv
</UL>

<P><STRONG><a name="[493d520]"></a>_ZN7CUsbRem14OnClassRequestEPVK15_device_requestPhPiPb</STRONG> (ARM, 168 bytes, Stack size 88 bytes, UsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN7CUsbRem14OnClassRequestEPVK15_device_requestPhPiPb
</UL>
<BR>[Called By]<UL><LI><a href="#[493d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Enum15control_handlerEv
</UL>

<P><STRONG><a name="[4337144]"></a>_Z12CreateUsbRemv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, drvUsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z12CreateUsbRemv &rArr; _ZN15CThreadedDriverC1Ejj &rArr; _ZN11CDriverBaseC2Ejj &rArr; _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[440eee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverC1Ejj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> if_table.o(.data)
</UL>
<P><STRONG><a name="[4b44ef0]"></a>_ZN13CDriverUsbRem4OpenEsPKw</STRONG> (ARM, 36 bytes, Stack size 16 bytes, drvUsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936 + Unknown Stack Size
<LI>Call Chain = _ZN13CDriverUsbRem4OpenEsPKw &rArr; _ZN15CThreadedDriver4OpenEsPKw &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440ec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver9RunThreadEv
<LI><a href="#[440ed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver4OpenEsPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4b44eb4]"></a>_ZN13CDriverUsbRem5CloseEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, drvUsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN13CDriverUsbRem5CloseEv &rArr; _ZN15CThreadedDriver5CloseEv &rArr; MT_CloseDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440ed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver5CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4b44e78]"></a>_ZN13CDriverUsbRem15DeviceIoControlE11IoControl_tlj</STRONG> (ARM, 124 bytes, Stack size 24 bytes, drvUsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN13CDriverUsbRem15DeviceIoControlE11IoControl_tlj &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
<LI><a href="#[440eccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver15DeviceIoControlE11IoControl_tlj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4b44e3c]"></a>_ZN13CDriverUsbRem12StartSendingEv</STRONG> (ARM, 100 bytes, Stack size 16 bytes, drvUsbRem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN13CDriverUsbRem12StartSendingEv &rArr; _ZN11CDriverBase11SentBarcodeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKhRj
<LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[4337bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11SentBarcodeEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[440fb54]"></a>_ZN5CUartC1EP6Uart_T</STRONG> (ARM, 132 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN5CUartC1EP6Uart_T
</UL>
<BR>[Calls]<UL><LI><a href="#[4331618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParmC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4407184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseC1ENS_12UartNumber_tE
<LI><a href="#[440ffc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadC1EP6Uart_T15vector_number_t
<LI><a href="#[4528d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683C1EP6Uart_T
</UL>

<P><STRONG><a name="[4b4204c]"></a>_ZN5CUartC2EP6Uart_T</STRONG> (ARM, 0 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[440fb18]"></a>_ZN5CUartD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4404790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseD0Ev
<LI><a href="#[4407148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBaseD1Ev
<LI><a href="#[440fde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadD0Ev
<LI><a href="#[440fe60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThreadD1Ev
<LI><a href="#[4528c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683D0Ev
<LI><a href="#[4528c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial4683D1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.constdata__ZTV5CUart)
</UL>
<P><STRONG><a name="[4b42010]"></a>_ZN5CUartD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[4b41fd4]"></a>_ZN5CUartD0Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.constdata__ZTV5CUart)
</UL>
<P><STRONG><a name="[440fbcc]"></a>_ZN5CUart5CloseEv</STRONG> (ARM, 228 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44071c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase5CloseEv
<LI><a href="#[44075f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver5CloseEv
<LI><a href="#[440fd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread5CloseEv
<LI><a href="#[4528b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835CloseEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.constdata__ZTV5CUart)
</UL>
<P><STRONG><a name="[440fc08]"></a>_ZN5CUart17ExtractParametersEPKw</STRONG> (ARM, 8 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN5CUart17ExtractParametersEPKw &rArr; _ZN8CSerParm17ExtractParametersEPKw &rArr; _ZN12CParseHelper7ExtractEPKwiRVi &rArr; wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[43315a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParm17ExtractParametersEPKw
</UL>
<BR>[Called By]<UL><LI><a href="#[44071fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase4OpenEsPKw
<LI><a href="#[440fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread4OpenEsPKw
</UL>

<P><STRONG><a name="[4b41f98]"></a>_ZN5CUart13SetupBaudrateEv</STRONG> (ARM, 424 bytes, Stack size 48 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN5CUart13SetupBaudrateEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440fc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart13SetupHardwareEv
</UL>

<P><STRONG><a name="[45289f8]"></a>_ZN5CUart10SetCTSModeEi</STRONG> (ARM, 416 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN5CUart10SetCTSModeEi
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[440fc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart13SetupHardwareEv
<LI><a href="#[4528bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial468316PrepareIoFor4683Ev
</UL>

<P><STRONG><a name="[440fc44]"></a>_ZN5CUart13SetupHardwareEv</STRONG> (ARM, 356 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN5CUart13SetupHardwareEv &rArr; _ZN5CUart13SetupBaudrateEv
</UL>
<BR>[Calls]<UL><LI><a href="#[45289f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart10SetCTSModeEi
<LI><a href="#[4b41f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5CUart13SetupBaudrateEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
<LI><a href="#[440fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread4OpenEsPKw
<LI><a href="#[4528b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46834OpenEsPKw
</UL>

<P><STRONG><a name="[440710c]"></a>_ZN5CUart12EnableIrqAICEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[440fb90]"></a>_ZN5CUart9SetIoPinsEv</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44071fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase4OpenEsPKw
<LI><a href="#[440fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread4OpenEsPKw
</UL>

<P><STRONG><a name="[4407094]"></a>_ZN5CUart18SetCtsIoPinsToGpioEv</STRONG> (ARM, 112 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN5CUart18SetCtsIoPinsToGpioEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[440701c]"></a>_ZN5CUart21SetRtsCtsIoPinsToGPIOEv</STRONG> (ARM, 72 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[44070d0]"></a>_ZN5CUart17SetCtsIoPinsToRtsEv</STRONG> (ARM, 52 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4407634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver4OpenEsPKw
</UL>

<P><STRONG><a name="[4407058]"></a>_ZN5CUart20ReadCtsIoPinFromGpioEv</STRONG> (ARM, 68 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN5CUart20ReadCtsIoPinFromGpioEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4407544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver19WaitForTxToCompleteEm
<LI><a href="#[4407580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver10WaitForCtsEmi
</UL>

<P><STRONG><a name="[43320e0]"></a>_ZN9CFifoBaseC1Ej</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fifobase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38853c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoC1Ej
<LI><a href="#[4337810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifoC1Ej
</UL>

<P><STRONG><a name="[4b419bc]"></a>_ZN9CFifoBaseC2Ej</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fifobase.o(.text), UNUSED)

<P><STRONG><a name="[43320a4]"></a>_ZN9CFifoBaseD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fifobase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43321d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifoD0Ev
<LI><a href="#[4332248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifoD1Ev
<LI><a href="#[4c4bd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoD0Ev
<LI><a href="#[4c4bda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fifobase.o(.constdata__ZTV9CFifoBase)
</UL>
<P><STRONG><a name="[4b41980]"></a>_ZN9CFifoBaseD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fifobase.o(.text), UNUSED)

<P><STRONG><a name="[4b41944]"></a>_ZN9CFifoBaseD0Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fifobase.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> fifobase.o(.constdata__ZTV9CFifoBase)
</UL>
<P><STRONG><a name="[43377d4]"></a>_ZN9CFifoBase7AnyDataEv</STRONG> (ARM, 72 bytes, Stack size 4 bytes, fifobase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9CFifoBase7AnyDataEv
</UL>
<BR>[Called By]<UL><LI><a href="#[433784c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo4ReadEPhj
<LI><a href="#[4337888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo4PeekEPhj
<LI><a href="#[4337a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase18GetTxFifoFillLevelEv
<LI><a href="#[4337aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase15DeviceIoControlE11IoControl_tlj
<LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
<LI><a href="#[4337b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK11CDriverBase13AnyDataToSendEv
<LI><a href="#[4337c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11IsAnyRxDataEv
<LI><a href="#[452f550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler46839GotPolledEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[433211c]"></a>_ZN9CFifoBase5PurgeEv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, fifobase.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> rxfifo.o(.constdata__ZTV7CRxFifo)
<LI> fifobase.o(.constdata__ZTV9CFifoBase)
</UL>
<P><STRONG><a name="[4332158]"></a>_ZN9CFifoBase14SpaceAvailableEv</STRONG> (ARM, 100 bytes, Stack size 4 bytes, fifobase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9CFifoBase14SpaceAvailableEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
</UL>

<P><STRONG><a name="[4332194]"></a>_ZN9CFifoBase11BumpPointerERVii</STRONG> (ARM, 60 bytes, Stack size 0 bytes, fifobase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
<LI><a href="#[4333850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo5WriteEPKhj
<LI><a href="#[433784c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CRxFifo4ReadEPhj
<LI><a href="#[433793c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo4ReadEv
<LI><a href="#[4c4bcec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5PurgeEv
</UL>

<P><STRONG><a name="[388543c]"></a>_ZN12CBarcodeData8StoreHHPEhh</STRONG> (ARM, 12 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[51d2a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING
</UL>

<P><STRONG><a name="[3885478]"></a>_ZN12CBarcodeData8StoreAimEhh</STRONG> (ARM, 12 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[38995e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci14FixAimModifierEP12CBarcodeData
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[51d2a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING
</UL>

<P><STRONG><a name="[4333940]"></a>_ZN12CBarcodeData18StoreNonBarcodeIdsEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>

<P><STRONG><a name="[4c4c8e0]"></a>_ZN12CBarcodeData5ResetEv</STRONG> (ARM, 64 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[433388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPwRj
<LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
<LI><a href="#[453174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataC1Ej
<LI><a href="#[4c4c8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataC1Ev
</UL>

<P><STRONG><a name="[4c4c8a4]"></a>_ZN12CBarcodeDataC1Ev</STRONG> (ARM, 48 bytes, Stack size 4 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN12CBarcodeDataC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData5ResetEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager20CreateBarcodeManagerEv
</UL>

<P><STRONG><a name="[4c4c868]"></a>_ZN12CBarcodeDataC2Ev</STRONG> (ARM, 0 bytes, Stack size 4 bytes, barcodedata.o(.text), UNUSED)

<P><STRONG><a name="[453174c]"></a>_ZN12CBarcodeDataC1Ej</STRONG> (ARM, 72 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12CBarcodeDataC1Ej &rArr; _ZN14CManagedBufferC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBufferC1Ej
<LI><a href="#[4c4c8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData5ResetEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4531c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683C1Ec
</UL>

<P><STRONG><a name="[4c4c82c]"></a>_ZN12CBarcodeDataC2Ej</STRONG> (ARM, 0 bytes, Stack size 16 bytes, barcodedata.o(.text), UNUSED)

<P><STRONG><a name="[4531710]"></a>_ZN12CBarcodeDataD1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN12CBarcodeDataD1Ev &rArr; _ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4531bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683D1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> barcodedata.o(.constdata__ZTV12CBarcodeData)
</UL>
<P><STRONG><a name="[4c4c7f0]"></a>_ZN12CBarcodeDataD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, barcodedata.o(.text), UNUSED)

<P><STRONG><a name="[4c4c7b4]"></a>_ZN12CBarcodeDataD0Ev</STRONG> (ARM, 72 bytes, Stack size 8 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN12CBarcodeDataD0Ev &rArr; _ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> barcodedata.o(.constdata__ZTV12CBarcodeData)
</UL>
<P><STRONG><a name="[36b4e84]"></a>_ZN12CBarcodeData4FreeEv</STRONG> (ARM, 116 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[4c4c55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[36b4ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CRemRouterNull15RouteBarcodeLobEP12CBarcodeDataPKwi
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[387c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t
<LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
<LI><a href="#[433388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPwRj
<LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
<LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
<LI><a href="#[4337bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11SentBarcodeEv
<LI><a href="#[4337d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKwj
<LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
<LI><a href="#[4402fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig16FreeMenuResponseEv
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[45318b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468311SentBarcodeEv
<LI><a href="#[494016c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16FreeMenuResponseEv
<LI><a href="#[4940400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base17StoreMenuResponseEP12CBarcodeData
<LI><a href="#[4c4bcec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5PurgeEv
<LI><a href="#[4ecd030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes26ClearSequenceBufferPartialEv
<LI><a href="#[4ecd0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes21UpdatePreferredTimersEv
<LI><a href="#[4ecd120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes20ClearPreferredBufferEv
<LI><a href="#[4ecd15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes19ClearSequenceBufferEv
<LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
<LI><a href="#[4ecd24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes10DoSequenceER12CBarcodeDataPi
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[501445c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi
<LI><a href="#[5014588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes24CopyPreferredBarcodeDataER12CBarcodeDatai
</UL>

<P><STRONG><a name="[36af5ec]"></a>_ZN12CBarcodeData12CopyTypeInfoERKS_</STRONG> (ARM, 68 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[5014588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes24CopyPreferredBarcodeDataER12CBarcodeDatai
</UL>

<P><STRONG><a name="[387c7d8]"></a>_ZN12CBarcodeData10MoveBufferERS_</STRONG> (ARM, 176 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN12CBarcodeData10MoveBufferERS_ &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[4c4c55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[387c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t
<LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
<LI><a href="#[389d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro7ScanECIEP12CBarcodeData
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[5014588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes24CopyPreferredBarcodeDataER12CBarcodeDatai
</UL>

<P><STRONG><a name="[36af448]"></a>_ZN12CBarcodeData8ReportIDEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
</UL>

<P><STRONG><a name="[387c760]"></a>_ZN12CBarcodeData16GetSaveNewBufferERPhRj</STRONG> (ARM, 52 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN12CBarcodeData16GetSaveNewBufferERPhRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
</UL>
<BR>[Called By]<UL><LI><a href="#[387c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t
<LI><a href="#[41fe9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SendSalaciousImageiiPh
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
</UL>

<P><STRONG><a name="[36af4fc]"></a>_ZN12CBarcodeData16GetSaveNewBufferERPwRj</STRONG> (ARM, 52 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN12CBarcodeData16GetSaveNewBufferERPwRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[433388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
<LI><a href="#[389d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro7ScanECIEP12CBarcodeData
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
</UL>

<P><STRONG><a name="[4c4c778]"></a>_ZN12CBarcodeData12AttachBufferEP14CManagedBuffer</STRONG> (ARM, 8 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[433388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPwRj
<LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
</UL>

<P><STRONG><a name="[4c4c73c]"></a>_ZN12CBarcodeData17CheckFreeElementsEj</STRONG> (ARM, 152 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData22FinalizeAddingElementsEj
<LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
</UL>

<P><STRONG><a name="[36af5b0]"></a>_ZN12CBarcodeData14CanAddElementsEj</STRONG> (ARM, 160 bytes, Stack size 24 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBuffer4FreeEv
<LI><a href="#[4c4c598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferEj
<LI><a href="#[4c4c73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17CheckFreeElementsEj
</UL>
<BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
<LI><a href="#[36b4e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData7AddTextEPKwj
<LI><a href="#[38854f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKhj
<LI><a href="#[4337978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKwj
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[4c4c610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceEjj
<LI><a href="#[4c4c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9StoreTextEPKwj
</UL>

<P><STRONG><a name="[38854f0]"></a>_ZN12CBarcodeData16StoreToNewBufferEPKhj</STRONG> (ARM, 156 bytes, Stack size 32 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
<LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
<LI><a href="#[51d2a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING
</UL>

<P><STRONG><a name="[4c4c700]"></a>_ZN12CBarcodeData9StoreTextEPKwj</STRONG> (ARM, 116 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _ZN12CBarcodeData9StoreTextEPKwj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4337978]"></a>_ZN12CBarcodeData16StoreToNewBufferEPKwj</STRONG> (ARM, 160 bytes, Stack size 32 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _ZN12CBarcodeData16StoreToNewBufferEPKwj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
<LI><a href="#[433388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[4337d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKwj
</UL>

<P><STRONG><a name="[4c4c6c4]"></a>_ZN12CBarcodeData18FillDataSourceInfoEPw</STRONG> (ARM, 44 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4c4c688]"></a>_ZN12CBarcodeData25CopyIDsFromDataSourceInfoEPKw</STRONG> (ARM, 36 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
</UL>

<P><STRONG><a name="[389d134]"></a>_ZN12CBarcodeData12GetTotalDataERPKhRj</STRONG> (ARM, 56 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38995ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci19IsECICharsetContentEP12CBarcodeData
<LI><a href="#[389d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CEciCharSet27ParseAndTranslateCharSetECIEP12CBarcodeDataPw
<LI><a href="#[389d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro11PreParseECIEP12CBarcodeData
<LI><a href="#[4407364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerialBase12StartSendingEv
<LI><a href="#[44074cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CSerialDriver8SendSlowEv
<LI><a href="#[440ff14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread13SimpleSendISREv
<LI><a href="#[440ff50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21CSerialSimpleNoThread12StartSendingEv
<LI><a href="#[452e86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData
<LI><a href="#[4532a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18TalkToReaderConfigEi
<LI><a href="#[4532afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseAEPh
<LI><a href="#[4532b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser18ParseMenuResponseBEPh
<LI><a href="#[49388f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm9SendLabelEP12CBarcodeData
<LI><a href="#[49f0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos17ParseMenuResponseEPh
<LI><a href="#[49f3870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData
<LI><a href="#[49f38ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos14SendLargeLabelEP12CBarcodeData
<LI><a href="#[49fbcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CUsb2HidPosHelper15HidPosSendLabelEiP12CBarcodeData
<LI><a href="#[4b44e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRem12StartSendingEv
</UL>

<P><STRONG><a name="[4b49054]"></a>_ZN12CBarcodeData12GetTotalDataERPKwRj</STRONG> (ARM, 60 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b4cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2HidKbd19SendLabelToKeyboardEP12CBarcodeData
<LI><a href="#[4ecdaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9DoShotgunER12CBarcodeData
<LI><a href="#[5014420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes25InsertMessageIntoSequenceER12CBarcodeData
<LI><a href="#[501445c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi
<LI><a href="#[5014588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes24CopyPreferredBarcodeDataER12CBarcodeDatai
</UL>

<P><STRONG><a name="[4c4c64c]"></a>_ZN12CBarcodeData12GetTotalDataEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[45fa3dc]"></a>_ZN12CBarcodeData22BeginnReadingTotalDataEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
</UL>

<P><STRONG><a name="[45fa418]"></a>_ZN12CBarcodeData17ReadNextTotalDataEjRw</STRONG> (ARM, 76 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45fa724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CWedgeLabel9SendLabelEv
</UL>

<P><STRONG><a name="[38854b4]"></a>_ZN12CBarcodeData17GetContentsBufferERPhRj</STRONG> (ARM, 60 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[387c850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx27TranslateBigAndLittleEndianEP12CBarcodeData12IoDataType_t
<LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[440aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af4c0]"></a>_ZN12CBarcodeData17GetContentsBufferERPwRj</STRONG> (ARM, 64 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
<LI><a href="#[36af7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit12Base64EncodeEP12CBarcodeData
<LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[387c850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx27TranslateBigAndLittleEndianEP12CBarcodeData12IoDataType_t
<LI><a href="#[387c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
</UL>

<P><STRONG><a name="[36af574]"></a>_ZN12CBarcodeData14FinalizeBufferEj</STRONG> (ARM, 152 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
<LI><a href="#[36af7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit12Base64EncodeEP12CBarcodeData
<LI><a href="#[36af880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData
<LI><a href="#[387c79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj12IoDataType_t
<LI><a href="#[387c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx24TranslateFromUnicodeToCPEP12CBarcodeDatah12IoDataType_t
<LI><a href="#[387c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx18TranslateToUnicodeEP12CBarcodeDatah
<LI><a href="#[389d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro7ScanECIEP12CBarcodeData
<LI><a href="#[41fe9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SendSalaciousImageiiPh
<LI><a href="#[41fe9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SendChasteImageiiPh
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
</UL>

<P><STRONG><a name="[387c79c]"></a>_ZN12CBarcodeData14FinalizeBufferEj12IoDataType_t</STRONG> (ARM, 8 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
</UL>
<BR>[Called By]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
</UL>

<P><STRONG><a name="[36af484]"></a>_ZN12CBarcodeData22FinalizeAddingElementsEj</STRONG> (ARM, 36 bytes, Stack size 12 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN12CBarcodeData22FinalizeAddingElementsEj
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17CheckFreeElementsEj
</UL>
<BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
<LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
</UL>

<P><STRONG><a name="[4c4c610]"></a>_ZN12CBarcodeData9MakeSpaceEjj</STRONG> (ARM, 212 bytes, Stack size 24 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN12CBarcodeData9MakeSpaceEjj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
</UL>
<BR>[Called By]<UL><LI><a href="#[36af40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceERPwjj
<LI><a href="#[440ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceERPhjj
</UL>

<P><STRONG><a name="[440ad84]"></a>_ZN12CBarcodeData9MakeSpaceERPhjj</STRONG> (ARM, 56 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _ZN12CBarcodeData9MakeSpaceERPhjj &rArr; _ZN12CBarcodeData9MakeSpaceEjj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceEjj
</UL>
<BR>[Called By]<UL><LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
<LI><a href="#[440aeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser14AddEscapeCodesERP12CBarcodeData
</UL>

<P><STRONG><a name="[36af40c]"></a>_ZN12CBarcodeData9MakeSpaceERPwjj</STRONG> (ARM, 56 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _ZN12CBarcodeData9MakeSpaceERPwjj &rArr; _ZN12CBarcodeData9MakeSpaceEjj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9MakeSpaceEjj
</UL>
<BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
</UL>

<P><STRONG><a name="[440adc0]"></a>_ZN12CBarcodeData16GetAddrOfElementERPhj</STRONG> (ARM, 68 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[440ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CFlatBedParser17FormatBarcodeDataERP12CBarcodeDataj
</UL>

<P><STRONG><a name="[36af538]"></a>_ZN12CBarcodeData16GetAddrOfElementERPwj</STRONG> (ARM, 68 bytes, Stack size 0 bytes, barcodedata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
</UL>

<P><STRONG><a name="[36b4e48]"></a>_ZN12CBarcodeData7AddTextEPKwj</STRONG> (ARM, 140 bytes, Stack size 16 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _ZN12CBarcodeData7AddTextEPKwj &rArr; _ZN12CBarcodeData14CanAddElementsEj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b5028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CRemRouterLob15RouteBarcodeLobEP12CBarcodeDataPKwi
<LI><a href="#[4ecd864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl
</UL>

<P><STRONG><a name="[4c4c5d4]"></a>_ZN12CBarcodeData8GetWTextER8HWSTRING</STRONG> (ARM, 64 bytes, Stack size 8 bytes, barcodedata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN12CBarcodeData8GetWTextER8HWSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[38853c4]"></a>_ZN12CBarcodeFifoC1Ej</STRONG> (ARM, 48 bytes, Stack size 16 bytes, barcodefifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN12CBarcodeFifoC1Ej
</UL>
<BR>[Calls]<UL><LI><a href="#[43320e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBaseC1Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4337edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseC2Ejj
<LI><a href="#[4531c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler4683C1Ec
<LI><a href="#[4ecde40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROCC1Ev
</UL>

<P><STRONG><a name="[4c4bddc]"></a>_ZN12CBarcodeFifoC2Ej</STRONG> (ARM, 0 bytes, Stack size 16 bytes, barcodefifo.o(.text), UNUSED)

<P><STRONG><a name="[4c4bda0]"></a>_ZN12CBarcodeFifoD1Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, barcodefifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12CBarcodeFifoD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[43320a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> barcodefifo.o(.constdata__ZTV12CBarcodeFifo)
</UL>
<P><STRONG><a name="[4c4bd64]"></a>_ZN12CBarcodeFifoD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, barcodefifo.o(.text), UNUSED)

<P><STRONG><a name="[4c4bd28]"></a>_ZN12CBarcodeFifoD0Ev</STRONG> (ARM, 40 bytes, Stack size 8 bytes, barcodefifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12CBarcodeFifoD0Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[43320a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBaseD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> barcodefifo.o(.constdata__ZTV12CBarcodeFifo)
</UL>
<P><STRONG><a name="[3885400]"></a>_ZN12CBarcodeFifo5WriteEP12CBarcodeData</STRONG> (ARM, 144 bytes, Stack size 16 bytes, barcodefifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN12CBarcodeFifo5WriteEP12CBarcodeData
</UL>
<BR>[Calls]<UL><LI><a href="#[4332194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase11BumpPointerERVii
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[38852d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[4337db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEP12CBarcodeData
<LI><a href="#[4528ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CSerial46835WriteEP12CBarcodeData
<LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
</UL>

<P><STRONG><a name="[433793c]"></a>_ZN12CBarcodeFifo4ReadEv</STRONG> (ARM, 108 bytes, Stack size 16 bytes, barcodefifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Calls]<UL><LI><a href="#[4332194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase11BumpPointerERVii
</UL>
<BR>[Called By]<UL><LI><a href="#[4337b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase11FlushTxFifoEv
<LI><a href="#[4337b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase16GetBarcodeToSendEv
<LI><a href="#[45318f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468316GetBarcodeToSendEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
</UL>

<P><STRONG><a name="[4c4bcec]"></a>_ZN12CBarcodeFifo5PurgeEv</STRONG> (ARM, 124 bytes, Stack size 16 bytes, barcodefifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN12CBarcodeFifo5PurgeEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[4332194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase11BumpPointerERVii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> barcodefifo.o(.constdata__ZTV12CBarcodeFifo)
</UL>
<P><STRONG><a name="[4c4a6e4]"></a>_ZN15CBarcodeManagerD1Ev</STRONG> (ARM, 84 bytes, Stack size 24 bytes, barcodedataman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN15CBarcodeManagerD1Ev &rArr; MT_CloseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseMutex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> barcodedataman.o(.constdata__ZTV15CBarcodeManager)
</UL>
<P><STRONG><a name="[4c4a6a8]"></a>_ZN15CBarcodeManagerD2Ev</STRONG> (ARM, 0 bytes, Stack size 24 bytes, barcodedataman.o(.text), UNUSED)

<P><STRONG><a name="[4c4a66c]"></a>_ZN15CBarcodeManagerD0Ev</STRONG> (ARM, 88 bytes, Stack size 24 bytes, barcodedataman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZN15CBarcodeManagerD0Ev &rArr; MT_CloseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseMutex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> barcodedataman.o(.constdata__ZTV15CBarcodeManager)
</UL>
<P><STRONG><a name="[36b9588]"></a>_ZN15CBarcodeManager20CreateBarcodeManagerEv</STRONG> (ARM, 112 bytes, Stack size 24 bytes, barcodedataman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944 + Unknown Stack Size
<LI>Call Chain = _ZN15CBarcodeManager20CreateBarcodeManagerEv &rArr; _ZN14CBufferManager19CreateBufferManagerEv &rArr; _ZN14CBufferManagerC1Ev &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
<LI><a href="#[4c4a540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager19CreateBufferManagerEv
<LI><a href="#[4c4c8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[4c4a630]"></a>_ZN15CBarcodeManager16GetFreshInstanceEv</STRONG> (ARM, 216 bytes, Stack size 16 bytes, barcodedataman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = _ZN15CBarcodeManager16GetFreshInstanceEv &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[433388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPwRj
<LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
</UL>

<P><STRONG><a name="[43338c8]"></a>_ZN15CBarcodeManager12GetNewBufferERPhRj</STRONG> (ARM, 104 bytes, Stack size 16 bytes, barcodedataman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[4c4a5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferERPhRj
<LI><a href="#[4c4a630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager16GetFreshInstanceEv
<LI><a href="#[4c4c778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12AttachBufferEP14CManagedBuffer
<LI><a href="#[4c4c8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData5ResetEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[387c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPhRj
<LI><a href="#[38854f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKhj
</UL>

<P><STRONG><a name="[433388c]"></a>_ZN15CBarcodeManager12GetNewBufferERPwRj</STRONG> (ARM, 104 bytes, Stack size 16 bytes, barcodedataman.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[4c4a57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferERPwRj
<LI><a href="#[4c4a630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager16GetFreshInstanceEv
<LI><a href="#[4c4c778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12AttachBufferEP14CManagedBuffer
<LI><a href="#[4c4c8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData5ResetEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[4337978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKwj
</UL>

<P><STRONG><a name="[4c48b78]"></a>_ZN14CBufferManagerC1Ev</STRONG> (ARM, 268 bytes, Stack size 40 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _ZN14CBufferManagerC1Ev &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateMutex
<LI><a href="#[4c4c520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBufferC1Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4a540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager19CreateBufferManagerEv
</UL>

<P><STRONG><a name="[4c48b3c]"></a>_ZN14CBufferManagerC2Ev</STRONG> (ARM, 0 bytes, Stack size 40 bytes, bufferpool.o(.text), UNUSED)

<P><STRONG><a name="[4c48b00]"></a>_ZN14CBufferManagerD1Ev</STRONG> (ARM, 96 bytes, Stack size 16 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN14CBufferManagerD1Ev &rArr; MT_CloseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseMutex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bufferpool.o(.constdata__ZTV14CBufferManager)
</UL>
<P><STRONG><a name="[4c48ac4]"></a>_ZN14CBufferManagerD2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, bufferpool.o(.text), UNUSED)

<P><STRONG><a name="[4c48a88]"></a>_ZN14CBufferManagerD0Ev</STRONG> (ARM, 100 bytes, Stack size 16 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN14CBufferManagerD0Ev &rArr; MT_CloseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CloseMutex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bufferpool.o(.constdata__ZTV14CBufferManager)
</UL>
<P><STRONG><a name="[4c4a540]"></a>_ZN14CBufferManager19CreateBufferManagerEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _ZN14CBufferManager19CreateBufferManagerEv &rArr; _ZN14CBufferManagerC1Ev &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c48b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManagerC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager20CreateBarcodeManagerEv
</UL>

<P><STRONG><a name="[4c4c598]"></a>_ZN14CBufferManager12GetNewBufferEj</STRONG> (ARM, 292 bytes, Stack size 40 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + In Cycle
<LI>Call Chain = _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
<LI><a href="#[4c4a57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferERPwRj
<LI><a href="#[4c4a5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferERPhRj
</UL>

<P><STRONG><a name="[4c4a5f4]"></a>_ZN14CBufferManager12GetNewBufferERPhRj</STRONG> (ARM, 52 bytes, Stack size 16 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4895c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBuffer9GetBufferERPhRj
<LI><a href="#[4c4c598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferEj
</UL>
<BR>[Called By]<UL><LI><a href="#[43338c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPhRj
</UL>

<P><STRONG><a name="[4c4a57c]"></a>_ZN14CBufferManager12GetNewBufferERPwRj</STRONG> (ARM, 56 bytes, Stack size 16 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c488e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CManagedBuffer9GetBufferERPtRj
<LI><a href="#[4c4c598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferEj
</UL>
<BR>[Called By]<UL><LI><a href="#[433388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CBarcodeManager12GetNewBufferERPwRj
</UL>

<P><STRONG><a name="[4c48a4c]"></a>_ZN11CPoolHelperD1Ev</STRONG> (ARM, 88 bytes, Stack size 16 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CPoolHelperD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bufferpool.o(.constdata__ZTV11CPoolHelper)
</UL>
<P><STRONG><a name="[4c48a10]"></a>_ZN11CPoolHelperD2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, bufferpool.o(.text), UNUSED)

<P><STRONG><a name="[4c489d4]"></a>_ZN11CPoolHelperD0Ev</STRONG> (ARM, 92 bytes, Stack size 16 bytes, bufferpool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11CPoolHelperD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bufferpool.o(.constdata__ZTV11CPoolHelper)
</UL>
<P><STRONG><a name="[4c4c520]"></a>_ZN14CManagedBufferC1Ej</STRONG> (ARM, 120 bytes, Stack size 8 bytes, managedbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CManagedBufferC1Ej
</UL>
<BR>[Called By]<UL><LI><a href="#[453174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataC1Ej
<LI><a href="#[4c48b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManagerC1Ev
</UL>

<P><STRONG><a name="[4c47bc4]"></a>_ZN14CManagedBufferC2Ej</STRONG> (ARM, 0 bytes, Stack size 8 bytes, managedbuffer.o(.text), UNUSED)

<P><STRONG><a name="[4c47b88]"></a>_ZN14CManagedBufferD1Ev</STRONG> (ARM, 32 bytes, Stack size 8 bytes, managedbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CManagedBufferD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> managedbuffer.o(.constdata__ZTV14CManagedBuffer)
</UL>
<P><STRONG><a name="[4c47b4c]"></a>_ZN14CManagedBufferD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, managedbuffer.o(.text), UNUSED)

<P><STRONG><a name="[4c47b10]"></a>_ZN14CManagedBufferD0Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, managedbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14CManagedBufferD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> managedbuffer.o(.constdata__ZTV14CManagedBuffer)
</UL>
<P><STRONG><a name="[4c4c55c]"></a>_ZN14CManagedBuffer4FreeEv</STRONG> (ARM, 64 bytes, Stack size 4 bytes, managedbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN14CManagedBuffer4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36af5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14CanAddElementsEj
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[387c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData10MoveBufferERS_
<LI><a href="#[4531710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataD1Ev
<LI><a href="#[4c4c7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeDataD0Ev
</UL>

<P><STRONG><a name="[4c4895c]"></a>_ZN14CManagedBuffer9GetBufferERPhRj</STRONG> (ARM, 24 bytes, Stack size 0 bytes, managedbuffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c4a5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferERPhRj
</UL>

<P><STRONG><a name="[4c488e4]"></a>_ZN14CManagedBuffer9GetBufferERPtRj</STRONG> (ARM, 28 bytes, Stack size 0 bytes, managedbuffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c4a57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CBufferManager12GetNewBufferERPwRj
</UL>

<P><STRONG><a name="[387c6e8]"></a>_ZN8HWSTRING10ReallocateEjb</STRONG> (ARM, 216 bytes, Stack size 24 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
<LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING27ConvertAndAppendFromHStringEP7HSTRINGjj
<LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
<LI><a href="#[4d81c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRINGjj
<LI><a href="#[4d822d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING18AppendLittleEndianEPhjjj
<LI><a href="#[4d8238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhjjj
</UL>

<P><STRONG><a name="[4d80eb0]"></a>_ZN8HWSTRING15SmartReallocateEj</STRONG> (ARM, 180 bytes, Stack size 24 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb
<LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
<LI><a href="#[4d815f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING6AppendEPS_
<LI><a href="#[4d81798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPS_
<LI><a href="#[4d817d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwjjj
<LI><a href="#[4d827c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14InsertFillCharEij
<LI><a href="#[4d82a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14AppendFillCharEij
<LI><a href="#[4d82e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11CopyToRangeEjjPKwj
</UL>

<P><STRONG><a name="[4d80e74]"></a>_ZN8HWSTRINGC1Ejb</STRONG> (ARM, 96 bytes, Stack size 24 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN8HWSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7065c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLEC1Ev
<LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[4ecd2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9ScannerIDEPw
<LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ecd60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc
<LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji
<LI><a href="#[4ed918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR9ScannerIDEPw
<LI><a href="#[4ed9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR15DisplayLanguageEPw
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc
<LI><a href="#[4eda0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc
<LI><a href="#[4eda140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11GetFromHostEPw
<LI><a href="#[4eda1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj
<LI><a href="#[4eda488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSORC1Ev
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
<LI><a href="#[553cd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS21PrepareDownloadStatusEv
</UL>

<P><STRONG><a name="[4d80e38]"></a>_ZN8HWSTRINGC2Ejb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)

<P><STRONG><a name="[4d80dfc]"></a>_ZN8HWSTRINGC1EPKwbb</STRONG> (ARM, 172 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
<LI><a href="#[54e0404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22HHPLInterpreterVersionv
</UL>

<P><STRONG><a name="[4d80dc0]"></a>_ZN8HWSTRINGC2EPKwbb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)

<P><STRONG><a name="[4d80d84]"></a>_ZN8HWSTRINGD1Ev</STRONG> (ARM, 32 bytes, Stack size 8 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN8HWSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6e280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLE6RemoveEv
<LI><a href="#[4c6f5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKD1Ev
<LI><a href="#[4c70620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLED1Ev
<LI><a href="#[4c70968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAD1Ev
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[4ecd2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9ScannerIDEPw
<LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ecd60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc
<LI><a href="#[4ed909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILED1Ev
<LI><a href="#[4ed918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR9ScannerIDEPw
<LI><a href="#[4ed9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR15DisplayLanguageEPw
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc
<LI><a href="#[4eda0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc
<LI><a href="#[4eda140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11GetFromHostEPw
<LI><a href="#[4eda1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj
<LI><a href="#[4eda410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSORD1Ev
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[54e0404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22HHPLInterpreterVersionv
<LI><a href="#[553cd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS21PrepareDownloadStatusEv
</UL>

<P><STRONG><a name="[4d80d48]"></a>_ZN8HWSTRINGD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hwstring.o(.text), UNUSED)

<P><STRONG><a name="[4d80d0c]"></a>_ZN8HWSTRING11RangeLengthEjjj</STRONG> (ARM, 36 bytes, Stack size 0 bytes, hwstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING27ConvertAndAppendFromHStringEP7HSTRINGjj
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRINGjj
<LI><a href="#[4d81c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRINGjj
<LI><a href="#[4d81d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRINGjj
<LI><a href="#[4d822d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING18AppendLittleEndianEPhjjj
<LI><a href="#[4d8238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhjjj
</UL>

<P><STRONG><a name="[4c4c4a8]"></a>_ZN8HWSTRING4CopyEPKwj</STRONG> (ARM, 136 bytes, Stack size 24 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4c5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8GetWTextER8HWSTRING
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d81810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKw
<LI><a href="#[4d823c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhj
<LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d80cd0]"></a>_ZN8HWSTRING14CopyFromStringEPwj</STRONG> (ARM, 68 bytes, Stack size 0 bytes, hwstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecd2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9ScannerIDEPw
<LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ecd60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc
<LI><a href="#[4ed918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR9ScannerIDEPw
<LI><a href="#[4ed9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR15DisplayLanguageEPw
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc
<LI><a href="#[4eda0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc
<LI><a href="#[4eda140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11GetFromHostEPw
<LI><a href="#[4eda1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d80c94]"></a>_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRINGjj</STRONG> (ARM, 212 bytes, Stack size 32 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRINGjj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRING
<LI><a href="#[4d81d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRINGjj
</UL>

<P><STRONG><a name="[4d80c58]"></a>_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRING</STRONG> (ARM, 28 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRINGjj
</UL>
<BR>[Called By]<UL><LI><a href="#[54e0404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22HHPLInterpreterVersionv
</UL>

<P><STRONG><a name="[4d80c1c]"></a>_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING</STRONG> (ARM, 128 bytes, Stack size 24 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[4d80c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRINGjj
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
</UL>

<P><STRONG><a name="[4d80be0]"></a>_ZN8HWSTRING27ConvertAndAppendFromHStringEP7HSTRINGjj</STRONG> (ARM, 212 bytes, Stack size 24 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN8HWSTRING27ConvertAndAppendFromHStringEP7HSTRINGjj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d81c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRINGjj
</UL>

<P><STRONG><a name="[4d80ba4]"></a>_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING</STRONG> (ARM, 140 bytes, Stack size 24 bytes, hwstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb
<LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
<LI><a href="#[4d80be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING27ConvertAndAppendFromHStringEP7HSTRINGjj
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
<LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9ScannerIDEPw
<LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ecd60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc
<LI><a href="#[4ed918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR9ScannerIDEPw
<LI><a href="#[4ed9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR15DisplayLanguageEPw
<LI><a href="#[4ed9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc
<LI><a href="#[4eda0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc
<LI><a href="#[4eda140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11GetFromHostEPw
<LI><a href="#[4eda1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
</UL>

<P><STRONG><a name="[4d811bc]"></a>_ZN8HWSTRINGC1EPwbbb</STRONG> (ARM, 180 bytes, Stack size 32 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81054]"></a>_ZN8HWSTRINGC2EPwbbb</STRONG> (ARM, 0 bytes, Stack size 32 bytes, hwstring.o(.text), UNUSED)

<P><STRONG><a name="[4d81270]"></a>_ZN8HWSTRINGC1EPKwjbb</STRONG> (ARM, 164 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji
</UL>

<P><STRONG><a name="[4d81108]"></a>_ZN8HWSTRINGC2EPKwjbb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)

<P><STRONG><a name="[4d811f8]"></a>_ZN8HWSTRINGC1EPS_bb</STRONG> (ARM, 172 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c706d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLE3AddEP8HWSTRINGjjiiPiS1_
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81090]"></a>_ZN8HWSTRINGC2EPS_bb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)

<P><STRONG><a name="[4d81234]"></a>_ZN8HWSTRINGC1EPS_</STRONG> (ARM, 172 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d810cc]"></a>_ZN8HWSTRINGC2EPS_</STRONG> (ARM, 0 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)

<P><STRONG><a name="[4d81798]"></a>_ZN8HWSTRING4CopyEPS_</STRONG> (ARM, 148 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
</UL>

<P><STRONG><a name="[4d81810]"></a>_ZN8HWSTRING4CopyEPKw</STRONG> (ARM, 40 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
<LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d82a1c]"></a>_ZN8HWSTRING14AppendFillCharEij</STRONG> (ARM, 160 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d827c4]"></a>_ZN8HWSTRING14InsertFillCharEij</STRONG> (ARM, 220 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d817d4]"></a>_ZN8HWSTRING4CopyEPKwjjj</STRONG> (ARM, 228 bytes, Stack size 32 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8175c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPS_jj
</UL>

<P><STRONG><a name="[4d8175c]"></a>_ZN8HWSTRING4CopyEPS_jj</STRONG> (ARM, 32 bytes, Stack size 8 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d817d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d82e54]"></a>_ZN8HWSTRING11CopyToRangeEjjPKwj</STRONG> (ARM, 244 bytes, Stack size 32 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d82e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11CopyToRangeEjjPS_
</UL>

<P><STRONG><a name="[4d82e18]"></a>_ZN8HWSTRING11CopyToRangeEjjPS_</STRONG> (ARM, 28 bytes, Stack size 8 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d82e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11CopyToRangeEjjPKwj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d815f4]"></a>_ZN8HWSTRING6AppendEPS_</STRONG> (ARM, 172 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81c0c]"></a>_ZN8HWSTRING26CopyFromStringLittleEndianEPhj</STRONG> (ARM, 96 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81504]"></a>_ZN8HWSTRING6RemoveEjj</STRONG> (ARM, 112 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d82530]"></a>_ZN8HWSTRING16CompareOnShorterEjPKwjb</STRONG> (ARM, 292 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d81414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING7CompareEPS_b
<LI><a href="#[4d82fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10FindStringEPKwjbiPi
</UL>

<P><STRONG><a name="[4d81414]"></a>_ZN8HWSTRING7CompareEPS_b</STRONG> (ARM, 64 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d82530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CompareOnShorterEjPKwjb
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d82fbc]"></a>_ZN8HWSTRING10FindStringEPKwjbiPi</STRONG> (ARM, 316 bytes, Stack size 56 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d82530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CompareOnShorterEjPKwjb
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d8193c]"></a>_ZN8HWSTRING29CompareOnShorterWithWildcardsEjPKwjbPj</STRONG> (ARM, 568 bytes, Stack size 44 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING29CompareOnShorterWithWildcardsEjPKwjbPj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING29CompareOnShorterWithWildcardsEjPKwjbPj
<LI><a href="#[4d820f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING20CompareWithWildcardsEPS_b
<LI><a href="#[4d82224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING18FindWildcardStringEPKwjbiPi
</UL>

<P><STRONG><a name="[4d820f8]"></a>_ZN8HWSTRING20CompareWithWildcardsEPS_b</STRONG> (ARM, 64 bytes, Stack size 20 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING29CompareOnShorterWithWildcardsEjPKwjbPj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d82224]"></a>_ZN8HWSTRING18FindWildcardStringEPKwjbiPi</STRONG> (ARM, 420 bytes, Stack size 64 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING29CompareOnShorterWithWildcardsEjPKwjbPj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81fcc]"></a>_ZN8HWSTRING20FindCharacterForwardEwjPi</STRONG> (ARM, 96 bytes, Stack size 4 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81f90]"></a>_ZN8HWSTRING21FindCharacterBackwardEwjPi</STRONG> (ARM, 104 bytes, Stack size 4 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81d38]"></a>_ZN8HWSTRING23FindNonCharacterForwardEwjPi</STRONG> (ARM, 96 bytes, Stack size 4 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81cc0]"></a>_ZN8HWSTRING24FindNonCharacterBackwardEwjPi</STRONG> (ARM, 104 bytes, Stack size 4 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d82a58]"></a>_ZN8HWSTRING13MaximumLengthEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d819f0]"></a>_ZN8HWSTRING26FindFirstNonSpaceCharacterEiPi</STRONG> (ARM, 84 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d8265c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15ConvertToNumberEiiPi
</UL>

<P><STRONG><a name="[4d8265c]"></a>_ZN8HWSTRING15ConvertToNumberEiiPi</STRONG> (ARM, 276 bytes, Stack size 36 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d819f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING26FindFirstNonSpaceCharacterEiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[4d82698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15ConvertToNumberEiPi
</UL>

<P><STRONG><a name="[4d82698]"></a>_ZN8HWSTRING15ConvertToNumberEiPi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8265c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d812ac]"></a>_ZN8HWSTRING9UpperCaseEv</STRONG> (ARM, 76 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d812e8]"></a>_ZN8HWSTRING9LowerCaseEv</STRONG> (ARM, 76 bytes, Stack size 0 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d822d8]"></a>_ZN8HWSTRING18AppendLittleEndianEPhjjj</STRONG> (ARM, 348 bytes, Stack size 32 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhjjj
</UL>

<P><STRONG><a name="[4d8238c]"></a>_ZN8HWSTRING16CopyLittleEndianEPhjjj</STRONG> (ARM, 104 bytes, Stack size 32 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
<LI><a href="#[4d822d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING18AppendLittleEndianEPhjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d823c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhj
<LI><a href="#[4d825e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15CopyFromHStringEP7HSTRINGjj
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d823c8]"></a>_ZN8HWSTRING16CopyLittleEndianEPhj</STRONG> (ARM, 80 bytes, Stack size 16 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
<LI><a href="#[4d8238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhjjj
<LI><a href="#[5dd3888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d825e4]"></a>_ZN8HWSTRING15CopyFromHStringEP7HSTRINGjj</STRONG> (ARM, 32 bytes, Stack size 8 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4d81d74]"></a>_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRINGjj</STRONG> (ARM, 96 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[4d80c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRINGjj
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d81c84]"></a>_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRINGjj</STRONG> (ARM, 96 bytes, Stack size 24 bytes, hwstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb
<LI><a href="#[4d80be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING27ConvertAndAppendFromHStringEP7HSTRINGjj
<LI><a href="#[4d80d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11RangeLengthEjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d7fec0]"></a>_ZN9BITSTRINGC1Ejb</STRONG> (ARM, 44 bytes, Stack size 8 bytes, bitstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN9BITSTRINGC1Ejb &rArr; _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[41fab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14ImageRotateRGBEi
<LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
<LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554764c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[4d7fe48]"></a>_ZN9BITSTRINGC2Ejb</STRONG> (ARM, 0 bytes, Stack size 8 bytes, bitstring.o(.text), UNUSED)

<P><STRONG><a name="[4d7fe0c]"></a>_ZN9BITSTRINGD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bitstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9BITSTRINGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[41fab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14ImageRotateRGBEi
<LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
<LI><a href="#[55466d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGED1Ev
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[4d7fdd0]"></a>_ZN9BITSTRINGD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, bitstring.o(.text), UNUSED)

<P><STRONG><a name="[4d7fd94]"></a>_ZN9BITSTRING4ZeroEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, bitstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN9BITSTRING4ZeroEv &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[570a268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateKIMImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[4d7fd58]"></a>_ZN9BITSTRING10AppendBitsEmm</STRONG> (ARM, 236 bytes, Stack size 24 bytes, bitstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN9BITSTRING10AppendBitsEmm &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
<LI><a href="#[570a268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateKIMImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[4d7fd1c]"></a>_ZN9BITSTRING22FillToNextByteBoundaryEb</STRONG> (ARM, 160 bytes, Stack size 4 bytes, bitstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN9BITSTRING22FillToNextByteBoundaryEb
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[3e9c9b8]"></a>stricmp</STRONG> (ARM, 76 bytes, Stack size 16 bytes, stricmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = stricmp &rArr; toupper &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5b21cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toupper (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[388570c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EnterScannedMenuPjPh
</UL>

<P><STRONG><a name="[387c724]"></a>_ZN7HSTRING10ReallocateEjb</STRONG> (ARM, 200 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[41fa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE9SmoothingEv
<LI><a href="#[41fa9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE22AdaptiveUltraTextImageEv
<LI><a href="#[41faa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE19InfinityFilterImageEv
<LI><a href="#[41faa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE16EdgeSharpenImageEi
<LI><a href="#[41faa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14UltraTextImageEv
<LI><a href="#[41fab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14HistogramImageEv
<LI><a href="#[41fab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE13FlySpeckImageEv
<LI><a href="#[41fabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12StretchImageEv
<LI><a href="#[41fabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FlattenImageEv
<LI><a href="#[41fac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FissionImageEv
<LI><a href="#[41fac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11ImageRotateEi
<LI><a href="#[41facb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FusionImageEv
<LI><a href="#[41facec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE10GammaImageEi
<LI><a href="#[41faf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi
<LI><a href="#[41fafbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15BINARIZE_HIMAGE8BinarizeEP9BITSTRINGS1_iib
<LI><a href="#[41fe52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1EPhii
<LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRINGjj
<LI><a href="#[4d81d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRINGjj
<LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
<LI><a href="#[570a268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateKIMImageP9BITSTRINGS0_iiii
<LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
<LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[4d7fce0]"></a>_ZN7HSTRING15SmartReallocateEj</STRONG> (ARM, 180 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEiij
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[45329d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14InsertFillCharEij
<LI><a href="#[4d79110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11BinaryToHexEv
<LI><a href="#[4d79188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableCharactersToFormatsEv
<LI><a href="#[4d791c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKhjj
<LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[4d79458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcjjj
<LI><a href="#[4d79548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEhj
<LI><a href="#[4d79584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEijj
<LI><a href="#[4d795c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEitj
<LI><a href="#[4d795fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING8CopyCharEi
<LI><a href="#[4d79638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14AppendFillCharEij
<LI><a href="#[4d799bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGaSES_
<LI><a href="#[4d7a6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11CopyToRangeEjjPKcj
<LI><a href="#[4d7fd58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING10AppendBitsEmm
</UL>

<P><STRONG><a name="[36b8fac]"></a>_ZN7HSTRINGC1Ejb</STRONG> (ARM, 84 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
<LI><a href="#[3758c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpUsageInfov
<LI><a href="#[3885220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG32ValidateDataStreamAsSYNFECommandEPKcii
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[389612c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin16InitializePluginEv
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[3f1d538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginCopyFilev
<LI><a href="#[3f1d628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginRenameFilev
<LI><a href="#[406de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29UpdateNumericListWorkingValuePKcS0_
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
<LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
<LI><a href="#[4532cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser20GenerateSerialNumberEPc
<LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[4c7119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA16InitializeTablesEv
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[4ecd2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9ScannerIDEPw
<LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ecd60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
<LI><a href="#[4ece32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ScriptThreadPv
<LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji
<LI><a href="#[4ed918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR9ScannerIDEPw
<LI><a href="#[4ed9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR15DisplayLanguageEPw
<LI><a href="#[4ed9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc
<LI><a href="#[4eda0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc
<LI><a href="#[4eda140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11GetFromHostEPw
<LI><a href="#[4eda1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52fe4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load485WorkingConfigurationOnev
<LI><a href="#[52fe51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load485WorkingConfigurationZerov
<LI><a href="#[52fe558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load232WorkingConfigurationOnev
<LI><a href="#[52fe594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load232WorkingConfigurationZerov
<LI><a href="#[52fe5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadKBWWorkingConfigurationOnev
<LI><a href="#[52fe60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadKBWWorkingConfigurationZerov
<LI><a href="#[52fe648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadUSBWorkingConfigurationOnev
<LI><a href="#[52fe684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadUSBWorkingConfigurationZerov
<LI><a href="#[52fe6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20UpdateCableInterfacev
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
<LI><a href="#[5300a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ShowEngineFirmwareFullReportv
<LI><a href="#[53031c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskRenameFilev
<LI><a href="#[5303634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskCopyFilev
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[5306fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ParseOCRTemplatev
<LI><a href="#[5307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ChangePostalv
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE
<LI><a href="#[535f338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[5367bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGEC1Ei
<LI><a href="#[5367c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
<LI><a href="#[54d6954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG16WriteTaggedImageEPcb
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
<LI><a href="#[54d6b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54da158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
<LI><a href="#[54da20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM10WaitForACKEjj
<LI><a href="#[54da590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM22TerminateHModemSessionEv
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
<LI><a href="#[553d098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUSC1Ev
<LI><a href="#[554539c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21HTAG_SCRIPT_HOST_DATAC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554548c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HTAG_SCRIPT_HOST_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554557c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5546e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
</UL>

<P><STRONG><a name="[4d79854]"></a>_ZN7HSTRINGC2Ejb</STRONG> (ARM, 0 bytes, Stack size 16 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[388507c]"></a>_ZN7HSTRINGC1EPKcbb</STRONG> (ARM, 152 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN7HSTRINGC1EPKcbb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e99f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32StoreProductConfigurationToFlashb
<LI><a href="#[3e9b554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver10GetSettingEtPwj
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[3e9cdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23CheckSubTagQueryCommandPcb
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[5307054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeUPUv
<LI><a href="#[5307090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ChangeUSPSv
<LI><a href="#[53070cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeKixv
<LI><a href="#[5307108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ChangeCanadianPostv
<LI><a href="#[5307144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ChangeJapanPostv
<LI><a href="#[5307180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ChangeBritishPostv
<LI><a href="#[53071bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ChangePlanetCodev
<LI><a href="#[53071f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangePostnetv
<LI><a href="#[5307234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangeAusPostv
<LI><a href="#[535bf6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20TurnOffFactorySuffixv
<LI><a href="#[535c5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12UpdateSDRTIMv
<LI><a href="#[535cb9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendActivationKeyStatusv
<LI><a href="#[535cbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ProcessActivationKeyv
<LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
<LI><a href="#[54e0b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBY_DFTv
<LI><a href="#[54e0bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayUSBGroupv
<LI><a href="#[54e0bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlay232Groupv
<LI><a href="#[54e0c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayC39CheckRequestv
<LI><a href="#[54e0c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayC39CheckNonev
<LI><a href="#[54e0cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearSuffixv
<LI><a href="#[54e0cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearPrefixv
<LI><a href="#[54e0d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddSuffixAsteriskv
<LI><a href="#[54e0d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayAddSuffixAsteriskCRv
<LI><a href="#[54e0da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddPrefixAsteriskv
<LI><a href="#[54e0ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatM81v
<LI><a href="#[54e0e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO81v
<LI><a href="#[54e0e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO72v
<LI><a href="#[54e0e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO71v
<LI><a href="#[54e0ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN81v
<LI><a href="#[54e0f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN72v
<LI><a href="#[54e0f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN71v
<LI><a href="#[54e0f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayBaudRate115200v
<LI><a href="#[54e0fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate38400v
<LI><a href="#[54e0ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate19200v
<LI><a href="#[54e1034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate9600v
<LI><a href="#[54e1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate2400v
<LI><a href="#[54e10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate1200v
<LI><a href="#[54e10e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate600v
<LI><a href="#[54e1124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate300v
<LI><a href="#[54e1160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBurningTestv
<LI><a href="#[54e119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayCRReplaceCommav
<LI><a href="#[54e11d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29PlugAndPlayCRReplaceSemicolonv
<LI><a href="#[54e1214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayImageRevertv
<LI><a href="#[54e1250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSBKBWv
<LI><a href="#[54e128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSB232v
<LI><a href="#[54e12c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PlugAndPlayAddCRLFv
<LI><a href="#[54e1304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddLFv
<LI><a href="#[54e1340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayAddTabv
<LI><a href="#[54e137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddCRv
<LI><a href="#[54e13b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayWinNixv
<LI><a href="#[54e13f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlayNCRv
<LI><a href="#[54e1430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayMagellanv
<LI><a href="#[54e146c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBioptiAuxPortv
<LI><a href="#[54e14a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayGilbarcov
<LI><a href="#[54e14e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayRubyv
<LI><a href="#[54e173c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayHi2dPresentaionCellv
<LI><a href="#[54e1778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayHHCellv
<LI><a href="#[54e17b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayHi2dPresentaionv
<LI><a href="#[54e17f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayHHFullv
<LI><a href="#[54e182c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayHHSnappyv
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
<LI><a href="#[54e1994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayOPOSv
<LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
<LI><a href="#[54e1b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlay232v
<LI><a href="#[54e1bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SetPrefixNoneSuffixCRLFv
<LI><a href="#[54e1bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SetSuffixCRv
<LI><a href="#[54e1c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SetPrefixSubstituteh
<LI><a href="#[54e1ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUsbPosv
<LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
<LI><a href="#[54e1e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PAP_BeeprLevelMaxv
<LI><a href="#[54e209c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayC39CheckRequestXmitv
<LI><a href="#[54e2150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE81v
<LI><a href="#[54e218c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE72v
<LI><a href="#[54e21c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE71v
<LI><a href="#[54e2204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate57600v
<LI><a href="#[54e22b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlaySetToDefaultv
<LI><a href="#[54e2330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate4800v
<LI><a href="#[54e24d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBeatlev
</UL>

<P><STRONG><a name="[4d79818]"></a>_ZN7HSTRINGC2EPKcbb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[36b8fe8]"></a>_ZN7HSTRINGC1EPcbbb</STRONG> (ARM, 160 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN7HSTRINGC1EPcbbb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[3f1d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatConfigChangedv
<LI><a href="#[3f1d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeConfigChangedv
<LI><a href="#[3f1d4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatEnableChangedv
<LI><a href="#[3f1d4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeEnableChangedv
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
<LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
</UL>

<P><STRONG><a name="[4d797dc]"></a>_ZN7HSTRINGC2EPcbbb</STRONG> (ARM, 0 bytes, Stack size 32 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[46d38b8]"></a>_ZN7HSTRINGC1EPKhjbb</STRONG> (ARM, 144 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN7HSTRINGC1EPKhjbb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[46d78f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoadProkeyFilev
<LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
</UL>

<P><STRONG><a name="[4d797a0]"></a>_ZN7HSTRINGC2EPKhjbb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[3e9ca6c]"></a>_ZN7HSTRINGC1EPhjbbb</STRONG> (ARM, 152 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN7HSTRINGC1EPhjbbb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[433928c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EnginePSOCFindRevisionPKhjPjS1_
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[4d79764]"></a>_ZN7HSTRINGC2EPhjbbb</STRONG> (ARM, 0 bytes, Stack size 32 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[3f1d1f0]"></a>_ZN7HSTRINGC1EPS_bb</STRONG> (ARM, 152 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN7HSTRINGC1EPS_bb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatConfigChangedv
<LI><a href="#[3f1d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeConfigChangedv
<LI><a href="#[3f1d5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginDeleteFilev
<LI><a href="#[3f1d6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginReadFilev
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[5300b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23WriteEngineFirmwareFilev
<LI><a href="#[53031fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskReadFilev
<LI><a href="#[5303238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskDeleteFilev
<LI><a href="#[53034cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22DiagnosticOutputStringv
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
<LI><a href="#[535fdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX38CreateNewEntryOrOverwriteExistingEntryEiP7HSTRING
<LI><a href="#[5360058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54d6b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18BuildParameterListEP7HSTRING
<LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
<LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
</UL>

<P><STRONG><a name="[4d79728]"></a>_ZN7HSTRINGC2EPS_bb</STRONG> (ARM, 0 bytes, Stack size 24 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[41fe478]"></a>_ZN7HSTRINGC1EPS_</STRONG> (ARM, 152 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN7HSTRINGC1EPS_ &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
<LI><a href="#[41fea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ImageSnapv
<LI><a href="#[5306fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ParseOCRTemplatev
<LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[4d796ec]"></a>_ZN7HSTRINGC2EPS_</STRONG> (ARM, 0 bytes, Stack size 16 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[3a1c93c]"></a>_ZN7HSTRINGC1Ev</STRONG> (ARM, 80 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN7HSTRINGC1Ev &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1cea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfigurationC2Ev
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc
<LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>

<P><STRONG><a name="[4d796b0]"></a>_ZN7HSTRINGC2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[36b8f70]"></a>_ZN7HSTRINGD1Ev</STRONG> (ARM, 32 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[3758c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpUsageInfov
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[387c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData10MoveBufferERS_
<LI><a href="#[3885220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG32ValidateDataStreamAsSYNFECommandEPKcii
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[389612c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin16InitializePluginEv
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e99f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32StoreProductConfigurationToFlashb
<LI><a href="#[3e9b554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver10GetSettingEtPwj
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[3e9cdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23CheckSubTagQueryCommandPcb
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[3f1d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatConfigChangedv
<LI><a href="#[3f1d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeConfigChangedv
<LI><a href="#[3f1d4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatEnableChangedv
<LI><a href="#[3f1d4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeEnableChangedv
<LI><a href="#[3f1d538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginCopyFilev
<LI><a href="#[3f1d5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginDeleteFilev
<LI><a href="#[3f1d628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginRenameFilev
<LI><a href="#[3f1d6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginReadFilev
<LI><a href="#[406de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29UpdateNumericListWorkingValuePKcS0_
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
<LI><a href="#[41fea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ImageSnapv
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[433928c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EnginePSOCFindRevisionPKhjPjS1_
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
<LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
<LI><a href="#[4532cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser20GenerateSerialNumberEPc
<LI><a href="#[46d78f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoadProkeyFilev
<LI><a href="#[4c6f5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKD1Ev
<LI><a href="#[4c70968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAD1Ev
<LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[4c71214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA12RemoveTablesEv
<LI><a href="#[4d7fe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGD1Ev
<LI><a href="#[4ecd2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9ScannerIDEPw
<LI><a href="#[4ecd558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii
<LI><a href="#[4ecd60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
<LI><a href="#[4ece32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ScriptThreadPv
<LI><a href="#[4ed909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILED1Ev
<LI><a href="#[4ed918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR9ScannerIDEPw
<LI><a href="#[4ed9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR15DisplayLanguageEPw
<LI><a href="#[4ed9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING
<LI><a href="#[4ed9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11MenuCommandEPwPii
<LI><a href="#[4eda014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc
<LI><a href="#[4eda0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc
<LI><a href="#[4eda140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11GetFromHostEPw
<LI><a href="#[4eda1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[50167c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTD1Ev
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52fe4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load485WorkingConfigurationOnev
<LI><a href="#[52fe51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load485WorkingConfigurationZerov
<LI><a href="#[52fe558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load232WorkingConfigurationOnev
<LI><a href="#[52fe594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load232WorkingConfigurationZerov
<LI><a href="#[52fe5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadKBWWorkingConfigurationOnev
<LI><a href="#[52fe60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadKBWWorkingConfigurationZerov
<LI><a href="#[52fe648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadUSBWorkingConfigurationOnev
<LI><a href="#[52fe684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadUSBWorkingConfigurationZerov
<LI><a href="#[52fe6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20UpdateCableInterfacev
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
<LI><a href="#[5300a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ShowEngineFirmwareFullReportv
<LI><a href="#[5300b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23WriteEngineFirmwareFilev
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[53031c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskRenameFilev
<LI><a href="#[53031fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskReadFilev
<LI><a href="#[5303238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskDeleteFilev
<LI><a href="#[53034cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22DiagnosticOutputStringv
<LI><a href="#[5303634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskCopyFilev
<LI><a href="#[5306fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ParseOCRTemplatev
<LI><a href="#[5307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ChangePostalv
<LI><a href="#[5307054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeUPUv
<LI><a href="#[5307090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ChangeUSPSv
<LI><a href="#[53070cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeKixv
<LI><a href="#[5307108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ChangeCanadianPostv
<LI><a href="#[5307144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ChangeJapanPostv
<LI><a href="#[5307180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ChangeBritishPostv
<LI><a href="#[53071bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ChangePlanetCodev
<LI><a href="#[53071f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangePostnetv
<LI><a href="#[5307234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangeAusPostv
<LI><a href="#[535bf6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20TurnOffFactorySuffixv
<LI><a href="#[535c5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12UpdateSDRTIMv
<LI><a href="#[535cb9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendActivationKeyStatusv
<LI><a href="#[535cbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ProcessActivationKeyv
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
<LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE
<LI><a href="#[535f338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
<LI><a href="#[535fc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX5EraseEiPb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi
<LI><a href="#[535ff2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT5EraseEiiiiPb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
<LI><a href="#[54d6954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG16WriteTaggedImageEPcb
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
<LI><a href="#[54d6b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18BuildParameterListEP7HSTRING
<LI><a href="#[54d6b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
<LI><a href="#[54da0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMD1Ev
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
<LI><a href="#[54da20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM10WaitForACKEjj
<LI><a href="#[54da590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM22TerminateHModemSessionEv
<LI><a href="#[54e0b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBY_DFTv
<LI><a href="#[54e0bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayUSBGroupv
<LI><a href="#[54e0bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlay232Groupv
<LI><a href="#[54e0c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayC39CheckRequestv
<LI><a href="#[54e0c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayC39CheckNonev
<LI><a href="#[54e0cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearSuffixv
<LI><a href="#[54e0cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearPrefixv
<LI><a href="#[54e0d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddSuffixAsteriskv
<LI><a href="#[54e0d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayAddSuffixAsteriskCRv
<LI><a href="#[54e0da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddPrefixAsteriskv
<LI><a href="#[54e0ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatM81v
<LI><a href="#[54e0e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO81v
<LI><a href="#[54e0e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO72v
<LI><a href="#[54e0e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO71v
<LI><a href="#[54e0ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN81v
<LI><a href="#[54e0f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN72v
<LI><a href="#[54e0f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN71v
<LI><a href="#[54e0f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayBaudRate115200v
<LI><a href="#[54e0fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate38400v
<LI><a href="#[54e0ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate19200v
<LI><a href="#[54e1034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate9600v
<LI><a href="#[54e1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate2400v
<LI><a href="#[54e10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate1200v
<LI><a href="#[54e10e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate600v
<LI><a href="#[54e1124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate300v
<LI><a href="#[54e1160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBurningTestv
<LI><a href="#[54e119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayCRReplaceCommav
<LI><a href="#[54e11d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29PlugAndPlayCRReplaceSemicolonv
<LI><a href="#[54e1214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayImageRevertv
<LI><a href="#[54e1250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSBKBWv
<LI><a href="#[54e128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSB232v
<LI><a href="#[54e12c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PlugAndPlayAddCRLFv
<LI><a href="#[54e1304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddLFv
<LI><a href="#[54e1340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayAddTabv
<LI><a href="#[54e137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddCRv
<LI><a href="#[54e13b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayWinNixv
<LI><a href="#[54e13f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlayNCRv
<LI><a href="#[54e1430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayMagellanv
<LI><a href="#[54e146c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBioptiAuxPortv
<LI><a href="#[54e14a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayGilbarcov
<LI><a href="#[54e14e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayRubyv
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
<LI><a href="#[54e173c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayHi2dPresentaionCellv
<LI><a href="#[54e1778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayHHCellv
<LI><a href="#[54e17b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayHi2dPresentaionv
<LI><a href="#[54e17f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayHHFullv
<LI><a href="#[54e182c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayHHSnappyv
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
<LI><a href="#[54e1994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayOPOSv
<LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
<LI><a href="#[54e1b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlay232v
<LI><a href="#[54e1bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SetPrefixNoneSuffixCRLFv
<LI><a href="#[54e1bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SetSuffixCRv
<LI><a href="#[54e1c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SetPrefixSubstituteh
<LI><a href="#[54e1ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUsbPosv
<LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
<LI><a href="#[54e1e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PAP_BeeprLevelMaxv
<LI><a href="#[54e209c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayC39CheckRequestXmitv
<LI><a href="#[54e2150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE81v
<LI><a href="#[54e218c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE72v
<LI><a href="#[54e21c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE71v
<LI><a href="#[54e2204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate57600v
<LI><a href="#[54e22b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlaySetToDefaultv
<LI><a href="#[54e2330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate4800v
<LI><a href="#[54e24d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBeatlev
<LI><a href="#[5545324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21HTAG_SCRIPT_HOST_DATAD1Ev
<LI><a href="#[5545414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HTAG_SCRIPT_HOST_COMMANDD1Ev
<LI><a href="#[5545504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTD1Ev
<LI><a href="#[5545e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWARED1Ev
<LI><a href="#[5545f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODED1Ev
<LI><a href="#[55466d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGED1Ev
<LI><a href="#[5546e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILED1Ev
<LI><a href="#[55474e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSD1Ev
<LI><a href="#[55475d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDD1Ev
<LI><a href="#[55476c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIOND1Ev
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
<LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
</UL>

<P><STRONG><a name="[4d79674]"></a>_ZN7HSTRINGD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hstring.o(.text), UNUSED)

<P><STRONG><a name="[3758ae0]"></a>_ZN7HSTRING4CopyEPKS_</STRONG> (ARM, 136 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[3758c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpUsageInfov
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[389612c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin16InitializePluginEv
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[41fad64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG14CopyParametersEPS_
<LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
<LI><a href="#[41fe5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG20SetParameterDefaultsEv
<LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
<LI><a href="#[4532cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser20GenerateSerialNumberEPc
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX38CreateNewEntryOrOverwriteExistingEntryEiP7HSTRING
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[5360058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
</UL>

<P><STRONG><a name="[38850f4]"></a>_ZN7HSTRING4CopyEPKhj</STRONG> (ARM, 124 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3e9caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKh
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[41faf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[4d7914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26SimpleAsciiToUniCodeFormatEv
<LI><a href="#[4d79200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPS_
<LI><a href="#[4d79494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcj
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[5300a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ShowEngineFirmwareFullReportv
<LI><a href="#[54d6a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGb
<LI><a href="#[54d6b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
</UL>

<P><STRONG><a name="[4d79638]"></a>_ZN7HSTRING14AppendFillCharEij</STRONG> (ARM, 148 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING14AppendFillCharEij &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[45329d0]"></a>_ZN7HSTRING14InsertFillCharEij</STRONG> (ARM, 200 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING14InsertFillCharEij &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4532cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser20GenerateSerialNumberEPc
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d795fc]"></a>_ZN7HSTRING8CopyCharEi</STRONG> (ARM, 104 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING8CopyCharEi &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[535f4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17QuerySettingRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRING
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
<LI><a href="#[54da590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM22TerminateHModemSessionEv
</UL>

<P><STRONG><a name="[3f1b7b0]"></a>_ZN7HSTRING10AppendCharEi</STRONG> (ARM, 104 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING10AppendCharEi &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[4eda5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR19SendWithTranslationEPwjhP20HHPL_PROGRAM_PROFILE
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[5307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ChangePostalv
<LI><a href="#[5307054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeUPUv
<LI><a href="#[5307090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ChangeUSPSv
<LI><a href="#[53070cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeKixv
<LI><a href="#[5307108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ChangeCanadianPostv
<LI><a href="#[5307144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ChangeJapanPostv
<LI><a href="#[5307180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ChangeBritishPostv
<LI><a href="#[53071bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ChangePlanetCodev
<LI><a href="#[53071f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangePostnetv
<LI><a href="#[5307234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangeAusPostv
<LI><a href="#[535c5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12UpdateSDRTIMv
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17QuerySettingRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRING
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[54d6774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING
<LI><a href="#[54d6af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG38BuildTaggedImageUsingPreMatrixProtcolsEP7HSTRINGPKhi
<LI><a href="#[54d6b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18BuildParameterListEP7HSTRING
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[4d795c0]"></a>_ZN7HSTRING12InsertNumberEitj</STRONG> (ARM, 200 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING12InsertNumberEitj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
<LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7950c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEtj
</UL>

<P><STRONG><a name="[4d79584]"></a>_ZN7HSTRING12InsertNumberEijj</STRONG> (ARM, 200 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING12InsertNumberEijj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
<LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1b774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEjj
</UL>

<P><STRONG><a name="[3f1b738]"></a>_ZN7HSTRING12InsertNumberEiij</STRONG> (ARM, 200 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING12InsertNumberEiij &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
<LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
</UL>

<P><STRONG><a name="[4d79548]"></a>_ZN7HSTRING12AppendNumberEhj</STRONG> (ARM, 156 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING12AppendNumberEhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
</UL>

<P><STRONG><a name="[4d7950c]"></a>_ZN7HSTRING12AppendNumberEtj</STRONG> (ARM, 20 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING12AppendNumberEtj &rArr; _ZN7HSTRING12InsertNumberEitj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d795c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEitj
</UL>
<BR>[Called By]<UL><LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[3f1b774]"></a>_ZN7HSTRING12AppendNumberEjj</STRONG> (ARM, 20 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING12AppendNumberEjj &rArr; _ZN7HSTRING12InsertNumberEijj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d79584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEijj
</UL>
<BR>[Called By]<UL><LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[4d794d0]"></a>_ZN7HSTRING12AppendNumberEij</STRONG> (ARM, 20 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING12AppendNumberEij &rArr; _ZN7HSTRING12InsertNumberEiij &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEiij
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[54d6b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18BuildParameterListEP7HSTRING
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
<LI><a href="#[570a268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateKIMImageP9BITSTRINGS0_iiii
<LI><a href="#[570a2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE8BinarizeEP9BITSTRINGS1_iib
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27AppendTiffHeaderAndIFDColoriilbPKcP9BITSTRING
<LI><a href="#[570c644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22AppendTiffHeaderAndIFDiilbbPKcP9BITSTRINGb
</UL>

<P><STRONG><a name="[3e9caa8]"></a>_ZN7HSTRING4CopyEPKh</STRONG> (ARM, 40 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING4CopyEPKh &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
</UL>

<P><STRONG><a name="[4d79494]"></a>_ZN7HSTRING4CopyEPKcj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING4CopyEPKcj &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[3885220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG32ValidateDataStreamAsSYNFECommandEPKcii
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[36b9024]"></a>_ZN7HSTRING4CopyEPKc</STRONG> (ARM, 40 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
<LI><a href="#[3e9cdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23CheckSubTagQueryCommandPcb
<LI><a href="#[406de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29UpdateNumericListWorkingValuePKcS0_
<LI><a href="#[41faecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGE20PreCreateTaggedImageEP7HSTRING
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4d7fd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING4ZeroEv
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[5307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ChangePostalv
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535da24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ValidatePasswordv
<LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17QuerySettingRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRING
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[5367c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[54d6774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
<LI><a href="#[54d6990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15ReadTaggedImageEP7HSTRINGPci
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
<LI><a href="#[554539c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21HTAG_SCRIPT_HOST_DATAC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554548c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HTAG_SCRIPT_HOST_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554557c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5546e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554764c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
<LI><a href="#[570a2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE8BinarizeEP9BITSTRINGS1_iib
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
</UL>

<P><STRONG><a name="[4d79458]"></a>_ZN7HSTRING4CopyEPKcjjj</STRONG> (ARM, 208 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING4CopyEPKcjjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[3f1d268]"></a>_ZN7HSTRING4CopyEPS_jj</STRONG> (ARM, 32 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING4CopyEPS_jj &rArr; _ZN7HSTRING4CopyEPKcjjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d79458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcjjj
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[3f1d538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginCopyFilev
<LI><a href="#[3f1d628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginRenameFilev
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[53031c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskRenameFilev
<LI><a href="#[5303634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskCopyFilev
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
</UL>

<P><STRONG><a name="[3a1c978]"></a>_ZN7HSTRING6AppendEPS_</STRONG> (ARM, 160 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6AppendEPS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535d8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator9CreateStrEP7HSTRING
<LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[54d6774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[4d7941c]"></a>_ZN7HSTRING6AppendEPKhj</STRONG> (ARM, 148 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh
<LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
<LI><a href="#[54d6af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG38BuildTaggedImageUsingPreMatrixProtcolsEP7HSTRINGPKhi
<LI><a href="#[5709b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor11output_bitsEP9BITSTRINGts
<LI><a href="#[5709b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor19add_to_output_blockEhP9BITSTRINGi
<LI><a href="#[570c20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[38850b8]"></a>_ZN7HSTRING6AppendEPKc</STRONG> (ARM, 40 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[374f774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ChangeDecoderSettingv
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
<LI><a href="#[3e9cd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26TerminateAddHexStringBlockPKc
<LI><a href="#[406de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29UpdateNumericListWorkingValuePKcS0_
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[41faecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGE20PreCreateTaggedImageEP7HSTRING
<LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52fe6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20UpdateCableInterfacev
<LI><a href="#[5300970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36GetEngineFirmwareRevisionInformationv
<LI><a href="#[5300a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ShowEngineFirmwareSettingListv
<LI><a href="#[5300a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ShowEngineFirmwareFullReportv
<LI><a href="#[5300a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ShowEngineFirmwareChecksumv
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[5302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16DBGIsUnitInStandv
<LI><a href="#[5307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ChangePostalv
<LI><a href="#[535cb9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendActivationKeyStatusv
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535d8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator9CreateStrEP7HSTRING
<LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17QuerySettingRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRING
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[54d6774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
<LI><a href="#[54d6b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18BuildParameterListEP7HSTRING
<LI><a href="#[54e0b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBY_DFTv
<LI><a href="#[54e0bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayUSBGroupv
<LI><a href="#[54e0bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlay232Groupv
<LI><a href="#[54e0c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayC39CheckRequestv
<LI><a href="#[54e0c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayC39CheckNonev
<LI><a href="#[54e0cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearSuffixv
<LI><a href="#[54e0cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearPrefixv
<LI><a href="#[54e0d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddSuffixAsteriskv
<LI><a href="#[54e0d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayAddSuffixAsteriskCRv
<LI><a href="#[54e0da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddPrefixAsteriskv
<LI><a href="#[54e0ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatM81v
<LI><a href="#[54e0e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO81v
<LI><a href="#[54e0e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO72v
<LI><a href="#[54e0e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO71v
<LI><a href="#[54e0ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN81v
<LI><a href="#[54e0f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN72v
<LI><a href="#[54e0f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN71v
<LI><a href="#[54e0f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayBaudRate115200v
<LI><a href="#[54e0fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate38400v
<LI><a href="#[54e0ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate19200v
<LI><a href="#[54e1034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate9600v
<LI><a href="#[54e1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate2400v
<LI><a href="#[54e10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate1200v
<LI><a href="#[54e10e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate600v
<LI><a href="#[54e1124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate300v
<LI><a href="#[54e1160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBurningTestv
<LI><a href="#[54e119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayCRReplaceCommav
<LI><a href="#[54e11d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29PlugAndPlayCRReplaceSemicolonv
<LI><a href="#[54e1214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayImageRevertv
<LI><a href="#[54e1250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSBKBWv
<LI><a href="#[54e128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSB232v
<LI><a href="#[54e12c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PlugAndPlayAddCRLFv
<LI><a href="#[54e1304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddLFv
<LI><a href="#[54e1340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayAddTabv
<LI><a href="#[54e137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddCRv
<LI><a href="#[54e13b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayWinNixv
<LI><a href="#[54e13f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlayNCRv
<LI><a href="#[54e1430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayMagellanv
<LI><a href="#[54e146c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBioptiAuxPortv
<LI><a href="#[54e14a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayGilbarcov
<LI><a href="#[54e14e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayRubyv
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
<LI><a href="#[54e1994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayOPOSv
<LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
<LI><a href="#[54e1b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlay232v
<LI><a href="#[54e1bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SetPrefixNoneSuffixCRLFv
<LI><a href="#[54e1bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SetSuffixCRv
<LI><a href="#[54e1c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SetPrefixSubstituteh
<LI><a href="#[54e1ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUsbPosv
<LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
<LI><a href="#[54e1e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PAP_BeeprLevelMaxv
<LI><a href="#[54e209c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayC39CheckRequestXmitv
<LI><a href="#[54e2150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE81v
<LI><a href="#[54e218c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE72v
<LI><a href="#[54e21c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE71v
<LI><a href="#[54e2204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate57600v
<LI><a href="#[54e22b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlaySetToDefaultv
<LI><a href="#[54e2330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate4800v
<LI><a href="#[54e24d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBeatlev
</UL>

<P><STRONG><a name="[4d793e0]"></a>_ZN7HSTRING6AppendEPKcj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6AppendEPKcj &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[4c70e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA22AddVariableInitializerEPvjj
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27AppendTiffHeaderAndIFDColoriilbPKcP9BITSTRING
<LI><a href="#[570c644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22AppendTiffHeaderAndIFDiilbbPKcP9BITSTRINGb
</UL>

<P><STRONG><a name="[4d793a4]"></a>_ZN7HSTRING6AppendEPKh</STRONG> (ARM, 40 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6AppendEPKh &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20UpdateCableInterfacev
<LI><a href="#[54e1598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendBootRevisionv
<LI><a href="#[54e15d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SendHardwareTokenv
<LI><a href="#[54e1688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendScanDriverRevisionv
<LI><a href="#[54e16c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SendDecoderRevisionv
<LI><a href="#[54e1700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendDecoderAllRevisionsv
</UL>

<P><STRONG><a name="[4d79368]"></a>_ZN7HSTRING10RemoveCharEi</STRONG> (ARM, 144 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54da20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM10WaitForACKEjj
</UL>

<P><STRONG><a name="[4d7932c]"></a>_ZN7HSTRING20CopyNumberFromStringEjjPi</STRONG> (ARM, 96 bytes, Stack size 12 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN7HSTRING20CopyNumberFromStringEjjPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3885220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG32ValidateDataStreamAsSYNFECommandEPKcii
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
</UL>

<P><STRONG><a name="[4d792f0]"></a>_ZN7HSTRING14CopyFromStringEjjPhj</STRONG> (ARM, 80 bytes, Stack size 4 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN7HSTRING14CopyFromStringEjjPhj
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPj
<LI><a href="#[4d79278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPt
<LI><a href="#[4d792b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPh
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
</UL>

<P><STRONG><a name="[4d792b4]"></a>_ZN7HSTRING14CopyFromStringEjjPh</STRONG> (ARM, 16 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN7HSTRING14CopyFromStringEjjPh &rArr; _ZN7HSTRING14CopyFromStringEjjPhj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d792f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPhj
</UL>
<BR>[Called By]<UL><LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
</UL>

<P><STRONG><a name="[4d79278]"></a>_ZN7HSTRING14CopyFromStringEjjPt</STRONG> (ARM, 16 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN7HSTRING14CopyFromStringEjjPt &rArr; _ZN7HSTRING14CopyFromStringEjjPhj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d792f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPhj
</UL>
<BR>[Called By]<UL><LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
</UL>

<P><STRONG><a name="[41f6a20]"></a>_ZN7HSTRING14CopyFromStringEjjPj</STRONG> (ARM, 16 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN7HSTRING14CopyFromStringEjjPj &rArr; _ZN7HSTRING14CopyFromStringEjjPhj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d792f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPhj
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ParseImageBoxHeaderP7HSTRINGP6HIMAGEPi
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
</UL>

<P><STRONG><a name="[4d7923c]"></a>_ZN7HSTRING14CopyFromStringEPhj</STRONG> (ARM, 64 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535fe00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv
<LI><a href="#[53600d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT24BuildBinaryCommandStringEv
</UL>

<P><STRONG><a name="[4d79200]"></a>_ZN7HSTRING14CopyFromStringEjjPS_</STRONG> (ARM, 40 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING14CopyFromStringEjjPS_ &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
</UL>

<P><STRONG><a name="[4d791c4]"></a>_ZN7HSTRING6InsertEPKhjj</STRONG> (ARM, 192 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
<LI><a href="#[4d78e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcjj
<LI><a href="#[4d78eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPS_j
</UL>

<P><STRONG><a name="[3758aa4]"></a>_ZN7HSTRING6InsertEPKcj</STRONG> (ARM, 48 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d791c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKhjj
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
</UL>

<P><STRONG><a name="[4d79188]"></a>_ZN7HSTRING30UnprintableCharactersToFormatsEv</STRONG> (ARM, 440 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING30UnprintableCharactersToFormatsEv &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[54d6b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18BuildParameterListEP7HSTRING
</UL>

<P><STRONG><a name="[3758b1c]"></a>_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv</STRONG> (ARM, 88 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3758c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpUsageInfov
<LI><a href="#[389612c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin16InitializePluginEv
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
<LI><a href="#[4532cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser20GenerateSerialNumberEPc
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
</UL>

<P><STRONG><a name="[4d7914c]"></a>_ZN7HSTRING26SimpleAsciiToUniCodeFormatEv</STRONG> (ARM, 160 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING26SimpleAsciiToUniCodeFormatEv &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
</UL>

<P><STRONG><a name="[3a1c9b4]"></a>_ZN7HSTRING30UnprintableFormatsToCharactersEv</STRONG> (ARM, 284 bytes, Stack size 20 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ZN7HSTRING30UnprintableFormatsToCharactersEv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b936c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration14LoadAllPluginsEv
<LI><a href="#[3a1d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginLoadConfigFileEP7HSTRING
<LI><a href="#[3f1d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatConfigChangedv
<LI><a href="#[3f1d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeConfigChangedv
<LI><a href="#[3f1d4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatEnableChangedv
<LI><a href="#[3f1d4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeEnableChangedv
<LI><a href="#[3f1d538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginCopyFilev
<LI><a href="#[3f1d5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginDeleteFilev
<LI><a href="#[3f1d628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginRenameFilev
<LI><a href="#[3f1d6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginReadFilev
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[5300b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23WriteEngineFirmwareFilev
<LI><a href="#[53031fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskReadFilev
<LI><a href="#[5303238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskDeleteFilev
<LI><a href="#[53034cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22DiagnosticOutputStringv
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
</UL>

<P><STRONG><a name="[4d79110]"></a>_ZN7HSTRING11BinaryToHexEv</STRONG> (ARM, 232 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING11BinaryToHexEv &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4339070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecompressHexDataP7HSTRINGS0_
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
</UL>

<P><STRONG><a name="[4339034]"></a>_ZN7HSTRING11HexToBinaryEv</STRONG> (ARM, 220 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN7HSTRING11HexToBinaryEv
</UL>
<BR>[Called By]<UL><LI><a href="#[433928c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EnginePSOCFindRevisionPKhjPjS1_
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
</UL>

<P><STRONG><a name="[4d790d4]"></a>_ZN7HSTRING23QuotedHEXStringToBinaryEPb</STRONG> (ARM, 304 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN7HSTRING23QuotedHEXStringToBinaryEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
</UL>

<P><STRONG><a name="[3f1b6fc]"></a>_ZN7HSTRING6RemoveEjj</STRONG> (ARM, 100 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[3885568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractSystemMenuCommandsP7HSTRING
<LI><a href="#[38855a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractPluginMenuCommandsP7HSTRING
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[3e9cdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23CheckSubTagQueryCommandPcb
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[535d8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator9CreateStrEP7HSTRING
<LI><a href="#[535da24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ValidatePasswordv
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16GetAffectedTableEP7HSTRINGPc
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54d6b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi
<LI><a href="#[54e1e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PAP_BeeprLevelMaxv
</UL>

<P><STRONG><a name="[4532994]"></a>_ZN7HSTRING4MoveEjjj</STRONG> (ARM, 264 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN7HSTRING4MoveEjjj &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4532c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14DirectIoParser14DIO_FullUnitIDEv
</UL>

<P><STRONG><a name="[4d79098]"></a>_ZN7HSTRING29RemoveTrailingSpaceCharactersEv</STRONG> (ARM, 100 bytes, Stack size 0 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
</UL>

<P><STRONG><a name="[4d7905c]"></a>_ZN7HSTRING16CompareSubstringEjPKhjb</STRONG> (ARM, 276 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN7HSTRING16CompareSubstringEjPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[4d79020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING16CompareSubstringEPKcjb
</UL>

<P><STRONG><a name="[4d79020]"></a>_ZN7HSTRING16CompareSubstringEPKcjb</STRONG> (ARM, 28 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN7HSTRING16CompareSubstringEPKcjb &rArr; _ZN7HSTRING16CompareSubstringEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7905c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING16CompareSubstringEjPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
</UL>

<P><STRONG><a name="[3f1b6c0]"></a>_ZNK7HSTRING16CompareOnShorterEjPKhjb</STRONG> (ARM, 276 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3885568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractSystemMenuCommandsP7HSTRING
<LI><a href="#[38855a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractPluginMenuCommandsP7HSTRING
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[41f6bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ParseImageBoxHeaderP7HSTRINGP6HIMAGEPi
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
<LI><a href="#[4d78f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKhjb
<LI><a href="#[4d78fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPS_b
<LI><a href="#[4d78fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEPKhjb
</UL>

<P><STRONG><a name="[4d78fe4]"></a>_ZNK7HSTRING16CompareOnShorterEPKhjb</STRONG> (ARM, 28 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZNK7HSTRING16CompareOnShorterEPKhjb &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[41faf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi
</UL>

<P><STRONG><a name="[4d78fa8]"></a>_ZNK7HSTRING16CompareOnShorterEjPS_b</STRONG> (ARM, 24 bytes, Stack size 8 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZNK7HSTRING16CompareOnShorterEjPS_b &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
</UL>

<P><STRONG><a name="[4d78f6c]"></a>_ZNK7HSTRING7CompareEPKhjb</STRONG> (ARM, 60 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZNK7HSTRING7CompareEPKhjb &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKS_b
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
</UL>

<P><STRONG><a name="[3f1d1b4]"></a>_ZNK7HSTRING7CompareEPKS_b</STRONG> (ARM, 16 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZNK7HSTRING7CompareEPKS_b &rArr; _ZNK7HSTRING7CompareEPKhjb &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[4d78f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginFormatConfigChangedv
<LI><a href="#[3f1d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PluginDecodeConfigChangedv
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[535f2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE
<LI><a href="#[535f338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_
<LI><a href="#[5360058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING
</UL>

<P><STRONG><a name="[4d78f30]"></a>_ZNK7HSTRING7CompareEPKcb</STRONG> (ARM, 48 bytes, Stack size 16 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZNK7HSTRING7CompareEPKcb &rArr; _ZNK7HSTRING7CompareEPKhjb &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[4d78f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKhjb
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[5300970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36GetEngineFirmwareRevisionInformationv
<LI><a href="#[5302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16DBGIsUnitInStandv
<LI><a href="#[535da24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ValidatePasswordv
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
</UL>

<P><STRONG><a name="[3f1d22c]"></a>_ZN7HSTRING4FindEPKhjbiPi</STRONG> (ARM, 300 bytes, Stack size 56 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Called By]<UL><LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3885568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractSystemMenuCommandsP7HSTRING
<LI><a href="#[38855a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractPluginMenuCommandsP7HSTRING
<LI><a href="#[3e9cd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26TerminateAddHexStringBlockPKc
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[3f1d538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginCopyFilev
<LI><a href="#[3f1d628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginRenameFilev
<LI><a href="#[433928c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22EnginePSOCFindRevisionPKhjPjS1_
<LI><a href="#[46d78f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoadProkeyFilev
<LI><a href="#[4d78ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPS_biPi
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
<LI><a href="#[5302fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetAddressAndDataToSetP7HSTRINGPPhPi
<LI><a href="#[53031c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskRenameFilev
<LI><a href="#[5303634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskCopyFilev
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
</UL>

<P><STRONG><a name="[4d78ef4]"></a>_ZN7HSTRING4FindEPS_biPi</STRONG> (ARM, 48 bytes, Stack size 12 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _ZN7HSTRING4FindEPS_biPi &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[54d6b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi
</UL>

<P><STRONG><a name="[4d78eb8]"></a>_ZN7HSTRING6InsertEPS_j</STRONG> (ARM, 16 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6InsertEPS_j &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d791c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKhjj
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
</UL>

<P><STRONG><a name="[4d78e7c]"></a>_ZN7HSTRING6InsertEPKcjj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING6InsertEPKcjj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d791c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKhjj
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
</UL>

<P><STRONG><a name="[3885130]"></a>_ZN7HSTRING20FindCharacterForwardEhjPi</STRONG> (ARM, 92 bytes, Stack size 4 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN7HSTRING20FindCharacterForwardEhjPi
</UL>
<BR>[Called By]<UL><LI><a href="#[374f774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ChangeDecoderSettingv
<LI><a href="#[3e9cdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23CheckSubTagQueryCommandPcb
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
</UL>

<P><STRONG><a name="[41fa8f0]"></a>_ZN7HSTRING13MaximumLengthEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41fafbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15BINARIZE_HIMAGE8BinarizeEP9BITSTRINGS1_iib
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[55e30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHComm4ReadEP7HSTRINGjj
<LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
<LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[4d78e40]"></a>_ZN7HSTRING10ReplaceAllEPKcS1_</STRONG> (ARM, 280 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _ZN7HSTRING10ReplaceAllEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPKhjb
<LI><a href="#[4d791c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKhjj
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[52fe4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load485WorkingConfigurationOnev
<LI><a href="#[52fe51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load485WorkingConfigurationZerov
<LI><a href="#[52fe558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load232WorkingConfigurationOnev
<LI><a href="#[52fe594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load232WorkingConfigurationZerov
<LI><a href="#[52fe5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadKBWWorkingConfigurationOnev
<LI><a href="#[52fe60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadKBWWorkingConfigurationZerov
<LI><a href="#[52fe648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadUSBWorkingConfigurationOnev
<LI><a href="#[52fe684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadUSBWorkingConfigurationZerov
</UL>

<P><STRONG><a name="[4d78e04]"></a>_ZN7HSTRING26FindFirstNonSpaceCharacterEiPi</STRONG> (ARM, 80 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3f1d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiiPi
</UL>

<P><STRONG><a name="[3f1d2a4]"></a>_ZN7HSTRING15ConvertToNumberEiiPi</STRONG> (ARM, 256 bytes, Stack size 36 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN7HSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[4d78e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26FindFirstNonSpaceCharacterEiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3f1d5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReportConfigFilev
<LI><a href="#[5303364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10MallocTestv
<LI><a href="#[5306fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ParseOCRTemplatev
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
</UL>

<P><STRONG><a name="[38851e4]"></a>_ZN7HSTRING15ConvertToNumberEiPi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN7HSTRING15ConvertToNumberEiPi &rArr; _ZN7HSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[374f774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ChangeDecoderSettingv
<LI><a href="#[41f6bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ParseImageBoxHeaderP7HSTRINGP6HIMAGEPi
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[5307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ChangePostalv
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
</UL>

<P><STRONG><a name="[388516c]"></a>_ZN7HSTRING18ConvertHexToNumberEiiPi</STRONG> (ARM, 196 bytes, Stack size 32 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[4d78e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26FindFirstNonSpaceCharacterEiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[374f774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ChangeDecoderSettingv
<LI><a href="#[38851a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiPi
<LI><a href="#[53009ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17EngineWriteMemoryv
<LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
<LI><a href="#[5302fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetAddressAndDataToSetP7HSTRINGPPhPi
<LI><a href="#[530301c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13DumpFourBytesv
<LI><a href="#[5303058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11DumpOneBytev
<LI><a href="#[5303094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15DumpMemoryBlockv
<LI><a href="#[5303670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DumpTwoBytesv
<LI><a href="#[5306fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ParseOCRTemplatev
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
</UL>

<P><STRONG><a name="[38851a8]"></a>_ZN7HSTRING18ConvertHexToNumberEiPi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN7HSTRING18ConvertHexToNumberEiPi &rArr; _ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[374f774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ChangeDecoderSettingv
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
</UL>

<P><STRONG><a name="[4d78dc8]"></a>_ZN7HSTRING9UpperCaseEv</STRONG> (ARM, 72 bytes, Stack size 0 bytes, hstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[4d78d8c]"></a>_ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii</STRONG> (ARM, 408 bytes, Stack size 172 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[535da60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13CheckPasswordv
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
</UL>

<P><STRONG><a name="[352f1d8]"></a>_ZN7HSTRING10hhpstricmpEPKcS1_b</STRONG> (ARM, 164 bytes, Stack size 24 bytes, hstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[352f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SearchForTextFlagPKciS0_Pi
<LI><a href="#[41fae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGE32PostProcessParameterAfterParsingEPKcPi
<LI><a href="#[54d6f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13FindParameterEPKcPiS2_
</UL>

<P><STRONG><a name="[4d799bc]"></a>_ZN7HSTRINGaSES_</STRONG> (ARM, 224 bytes, Stack size 24 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
<LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
</UL>

<P><STRONG><a name="[4d7a6dc]"></a>_ZN7HSTRING11CopyToRangeEjjPKcj</STRONG> (ARM, 224 bytes, Stack size 32 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7a6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11CopyToRangeEjjPS_
</UL>

<P><STRONG><a name="[4d7a6a0]"></a>_ZN7HSTRING11CopyToRangeEjjPS_</STRONG> (ARM, 28 bytes, Stack size 8 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d7a6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11CopyToRangeEjjPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d7a0c4]"></a>_ZN7HSTRING20CopyNumberFromStringEjjPt</STRONG> (ARM, 100 bytes, Stack size 12 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4d7a100]"></a>_ZN7HSTRING20CopyNumberFromStringEjjPj</STRONG> (ARM, 96 bytes, Stack size 12 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4d79cc8]"></a>_ZN7HSTRING29CompareOnShorterWithWildcardsEjPKhjbPj</STRONG> (ARM, 540 bytes, Stack size 44 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d79cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING29CompareOnShorterWithWildcardsEjPKhjbPj
</UL>
<BR>[Called By]<UL><LI><a href="#[4d79cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING29CompareOnShorterWithWildcardsEjPKhjbPj
<LI><a href="#[4d7a178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20CompareWithWildcardsEPS_b
</UL>

<P><STRONG><a name="[4d7a178]"></a>_ZN7HSTRING20CompareWithWildcardsEPS_b</STRONG> (ARM, 64 bytes, Stack size 20 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d79cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING29CompareOnShorterWithWildcardsEjPKhjbPj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d79aac]"></a>_ZN7HSTRING9LowerCaseEv</STRONG> (ARM, 72 bytes, Stack size 0 bytes, hstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4d78a80]"></a>strnicmp</STRONG> (ARM, 100 bytes, Stack size 12 bytes, strnicmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strnicmp
</UL>
<BR>[Called By]<UL><LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>

<P><STRONG><a name="[4d7860c]"></a>_Z8calc_crcPhi</STRONG> (ARM, 80 bytes, Stack size 4 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z8calc_crcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
<LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[4c7119c]"></a>_ZN15HHPL_IMAGE_DATA16InitializeTablesEv</STRONG> (ARM, 96 bytes, Stack size 8 bytes, hhplimagedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4c7065c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLEC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4c71214]"></a>_ZN15HHPL_IMAGE_DATA12RemoveTablesEv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, hhplimagedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[4c70620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLED1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAD1Ev
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4c70e18]"></a>_ZN15HHPL_IMAGE_DATA22AddVariableInitializerEPvjj</STRONG> (ARM, 228 bytes, Stack size 32 bytes, hhplimagedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4c70b0c]"></a>_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING</STRONG> (ARM, 5156 bytes, Stack size 728 bytes, hhplimagedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[4c706d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLE3AddEP8HWSTRINGjjiiPiS1_
<LI><a href="#[4c7083c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14DecompressDataP7HSTRINGibi
<LI><a href="#[4c708b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13HuffmanDecodeP7HSTRING
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[4c70e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA22AddVariableInitializerEPvjj
<LI><a href="#[4c7119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA16InitializeTablesEv
<LI><a href="#[4c71214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA12RemoveTablesEv
<LI><a href="#[4d7860c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8calc_crcPhi
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
<LI><a href="#[4d79200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPS_
<LI><a href="#[4d7932c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20CopyNumberFromStringEjjPi
<LI><a href="#[4d7a0c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20CopyNumberFromStringEjjPt
<LI><a href="#[4d7a100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20CopyNumberFromStringEjjPj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
<LI><a href="#[4d825e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15CopyFromHStringEP7HSTRINGjj
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4c70a94]"></a>_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb</STRONG> (ARM, 204 bytes, Stack size 56 bytes, hhplimagedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[46d38b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKhjbb
<LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[4c7119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA16InitializeTablesEv
<LI><a href="#[4d80dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPKwbb
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji
</UL>

<P><STRONG><a name="[4c709e0]"></a>_ZN15HHPL_IMAGE_DATAC2EPKwPKhjb</STRONG> (ARM, 0 bytes, Stack size 56 bytes, hhplimagedata.o(.text), UNUSED)

<P><STRONG><a name="[4c70968]"></a>_ZN15HHPL_IMAGE_DATAD1Ev</STRONG> (ARM, 104 bytes, Stack size 8 bytes, hhplimagedata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[4c71214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA12RemoveTablesEv
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILED1Ev
</UL>

<P><STRONG><a name="[4c7092c]"></a>_ZN15HHPL_IMAGE_DATAD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplimagedata.o(.text), UNUSED)

<P><STRONG><a name="[4c6fd38]"></a>_ZN20HHPL_INSTRUCTION_SETC1Ev</STRONG> (ARM, 2400 bytes, Stack size 40 bytes, hhplinstructionset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN20HHPL_INSTRUCTION_SETC1Ev &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSORC1Ev
</UL>

<P><STRONG><a name="[4c6fcfc]"></a>_ZN20HHPL_INSTRUCTION_SETC2Ev</STRONG> (ARM, 0 bytes, Stack size 40 bytes, hhplinstructionset.o(.text), UNUSED)

<P><STRONG><a name="[4c6fcc0]"></a>_ZN20HHPL_INSTRUCTION_SETD1Ev</STRONG> (ARM, 184 bytes, Stack size 8 bytes, hhplinstructionset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN20HHPL_INSTRUCTION_SETD1Ev &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSORD1Ev
</UL>

<P><STRONG><a name="[4c6fc84]"></a>_ZN20HHPL_INSTRUCTION_SETD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplinstructionset.o(.text), UNUSED)

<P><STRONG><a name="[4c6fdec]"></a>_ZN20HHPL_INSTRUCTION_SET17EnableFullEditingEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, hhplinstructionset.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4ece32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ScriptThreadPv
</UL>

<P><STRONG><a name="[4c6f630]"></a>_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKC1Ev</STRONG> (ARM, 24 bytes, Stack size 0 bytes, hhplipb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessHHPLProgramEPKhjPKwjS3_ji
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
</UL>

<P><STRONG><a name="[4c6f5f4]"></a>_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, hhplipb.o(.text), UNUSED)

<P><STRONG><a name="[4c6f5b8]"></a>_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKD1Ev</STRONG> (ARM, 128 bytes, Stack size 8 bytes, hhplipb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessHHPLProgramEPKhjPKwjS3_ji
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
</UL>

<P><STRONG><a name="[4c6f57c]"></a>_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplipb.o(.text), UNUSED)

<P><STRONG><a name="[4c7065c]"></a>_ZN15HHPL_ITEM_TABLEC1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, hhplitemtable.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA16InitializeTablesEv
</UL>

<P><STRONG><a name="[4c6e208]"></a>_ZN15HHPL_ITEM_TABLEC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplitemtable.o(.text), UNUSED)

<P><STRONG><a name="[4c706d4]"></a>_ZN15HHPL_ITEM_TABLE3AddEP8HWSTRINGjjiiPiS1_</STRONG> (ARM, 464 bytes, Stack size 56 bytes, hhplitemtable.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d811f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPS_bb
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[4c6e280]"></a>_ZN15HHPL_ITEM_TABLE6RemoveEv</STRONG> (ARM, 116 bytes, Stack size 24 bytes, hhplitemtable.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLED1Ev
</UL>

<P><STRONG><a name="[4c70620]"></a>_ZN15HHPL_ITEM_TABLED1Ev</STRONG> (ARM, 44 bytes, Stack size 8 bytes, hhplitemtable.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c6e280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_ITEM_TABLE6RemoveEv
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4c71214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA12RemoveTablesEv
</UL>

<P><STRONG><a name="[4c6e1cc]"></a>_ZN15HHPL_ITEM_TABLED2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplitemtable.o(.text), UNUSED)

<P><STRONG><a name="[4eda488]"></a>_ZN14HHPL_PROCESSORC1Ev</STRONG> (ARM, 88 bytes, Stack size 8 bytes, hhplprocessor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN14HHPL_PROCESSORC1Ev &rArr; _ZN20HHPL_INSTRUCTION_SETC1Ev &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6fd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_INSTRUCTION_SETC1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecde40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROCC1Ev
</UL>

<P><STRONG><a name="[4eda44c]"></a>_ZN14HHPL_PROCESSORC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplprocessor.o(.text), UNUSED)

<P><STRONG><a name="[4eda410]"></a>_ZN14HHPL_PROCESSORD1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, hhplprocessor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN14HHPL_PROCESSORD1Ev &rArr; _ZN8HWSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6fcc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_INSTRUCTION_SETD1Ev
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecdd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROCD0Ev
<LI><a href="#[4ecddc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROCD1Ev
</UL>

<P><STRONG><a name="[4eda3d4]"></a>_ZN14HHPL_PROCESSORD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplprocessor.o(.text), UNUSED)

<P><STRONG><a name="[4eda794]"></a>_ZN14HHPL_PROCESSOR17CheckForArgumentsEP20HHPL_PROGRAM_PROFILEi</STRONG> (ARM, 72 bytes, Stack size 8 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4eda8fc]"></a>_ZN14HHPL_PROCESSOR12ChangeCursorEP20HHPL_PROGRAM_PROFILEi</STRONG> (ARM, 44 bytes, Stack size 0 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4eda5f0]"></a>_ZN14HHPL_PROCESSOR19SendWithTranslationEPwjhP20HHPL_PROGRAM_PROFILE</STRONG> (ARM, 392 bytes, Stack size 40 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4eda5b4]"></a>_ZN14HHPL_PROCESSOR20InstructionTypeMatchEP20HHPL_PROGRAM_PROFILEj</STRONG> (ARM, 132 bytes, Stack size 16 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
</UL>

<P><STRONG><a name="[4eda884]"></a>_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii</STRONG> (ARM, 3920 bytes, Stack size 192 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[4c6f5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKD1Ev
<LI><a href="#[4c6f630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKC1Ev
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
<LI><a href="#[4d81798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPS_
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR20InstructionTypeMatchEP20HHPL_PROGRAM_PROFILEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4eda6a4]"></a>_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK</STRONG> (ARM, 1812 bytes, Stack size 192 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
<LI><a href="#[4d811f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPS_bb
<LI><a href="#[4d81798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPS_
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR20InstructionTypeMatchEP20HHPL_PROGRAM_PROFILEj
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>

<P><STRONG><a name="[4eda53c]"></a>_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK</STRONG> (ARM, 41932 bytes, Stack size 112 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1d1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKS_b
<LI><a href="#[45329d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14InsertFillCharEij
<LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
<LI><a href="#[4d78dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING9UpperCaseEv
<LI><a href="#[4d7923c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEPhj
<LI><a href="#[4d79458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcjjj
<LI><a href="#[4d79494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcj
<LI><a href="#[4d79638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14AppendFillCharEij
<LI><a href="#[4d79aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING9LowerCaseEv
<LI><a href="#[4d7a178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20CompareWithWildcardsEPS_b
<LI><a href="#[4d7a6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11CopyToRangeEjjPS_
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d811bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPwbbb
<LI><a href="#[4d811f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPS_bb
<LI><a href="#[4d81234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPS_
<LI><a href="#[4d812ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING9UpperCaseEv
<LI><a href="#[4d812e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING9LowerCaseEv
<LI><a href="#[4d81414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING7CompareEPS_b
<LI><a href="#[4d81504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING6RemoveEjj
<LI><a href="#[4d815f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING6AppendEPS_
<LI><a href="#[4d8175c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPS_jj
<LI><a href="#[4d81798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPS_
<LI><a href="#[4d81810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKw
<LI><a href="#[4d81c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING26CopyFromStringLittleEndianEPhj
<LI><a href="#[4d81c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRINGjj
<LI><a href="#[4d81cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING24FindNonCharacterBackwardEwjPi
<LI><a href="#[4d81d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23FindNonCharacterForwardEwjPi
<LI><a href="#[4d81d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRINGjj
<LI><a href="#[4d81f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING21FindCharacterBackwardEwjPi
<LI><a href="#[4d81fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING20FindCharacterForwardEwjPi
<LI><a href="#[4d820f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING20CompareWithWildcardsEPS_b
<LI><a href="#[4d82224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING18FindWildcardStringEPKwjbiPi
<LI><a href="#[4d8238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhjjj
<LI><a href="#[4d823c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhj
<LI><a href="#[4d82698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15ConvertToNumberEiPi
<LI><a href="#[4d827c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14InsertFillCharEij
<LI><a href="#[4d82a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14AppendFillCharEij
<LI><a href="#[4d82a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING13MaximumLengthEv
<LI><a href="#[4d82e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING11CopyToRangeEjjPS_
<LI><a href="#[4d82fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10FindStringEPKwjbiPi
<LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR20InstructionTypeMatchEP20HHPL_PROGRAM_PROFILEj
<LI><a href="#[4eda5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR19SendWithTranslationEPwjhP20HHPL_PROGRAM_PROFILE
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR17CheckForArgumentsEP20HHPL_PROGRAM_PROFILEi
<LI><a href="#[4eda848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR14ProcessRoutineEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
<LI><a href="#[4eda8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR12ChangeCursorEP20HHPL_PROGRAM_PROFILEi
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessTestRoutineEiiP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR14ProcessRoutineEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR13GetParametersEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCKPKciiiiiiii
</UL>

<P><STRONG><a name="[4eda848]"></a>_ZN14HHPL_PROCESSOR14ProcessRoutineEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK</STRONG> (ARM, 132 bytes, Stack size 48 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR22ExecuteNextInstructionEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
<LI><a href="#[4eda71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessHHPLProgramEPKhjPKwjS3_ji
</UL>

<P><STRONG><a name="[4eda71c]"></a>_ZN14HHPL_PROCESSOR18ProcessHHPLProgramEPKhjPKwjS3_ji</STRONG> (ARM, 204 bytes, Stack size 408 bytes, hhplprocessor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c6f5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKD1Ev
<LI><a href="#[4c6f630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKC1Ev
<LI><a href="#[4ed909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILED1Ev
<LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji
<LI><a href="#[4eda848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR14ProcessRoutineEP20HHPL_PROGRAM_PROFILEP32HHPL_INSTRUCTION_PARAMETER_BLOCK
</UL>
<BR>[Called By]<UL><LI><a href="#[4ece32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ScriptThreadPv
</UL>

<P><STRONG><a name="[4ed90d8]"></a>_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji</STRONG> (ARM, 676 bytes, Stack size 56 bytes, hhplprogramprofile.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4c70a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAC1EPKwPKhjb
<LI><a href="#[4d7923c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEPhj
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
<LI><a href="#[4d81270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPKwjbb
<LI><a href="#[5dd1650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znwj (via BLX)
<LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessHHPLProgramEPKhjPKwjS3_ji
</UL>

<P><STRONG><a name="[4ed8a0c]"></a>_ZN20HHPL_PROGRAM_PROFILEC2EPKhjPKwjS3_jjji</STRONG> (ARM, 0 bytes, Stack size 56 bytes, hhplprogramprofile.o(.text), UNUSED)

<P><STRONG><a name="[4ed909c]"></a>_ZN20HHPL_PROGRAM_PROFILED1Ev</STRONG> (ARM, 212 bytes, Stack size 8 bytes, hhplprogramprofile.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[4c70968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATAD1Ev
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
<LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4eda71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessHHPLProgramEPKhjPKwjS3_ji
</UL>

<P><STRONG><a name="[4ed89d0]"></a>_ZN20HHPL_PROGRAM_PROFILED2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hhplprogramprofile.o(.text), UNUSED)

<P><STRONG><a name="[4ed61bc]"></a>_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo</STRONG> (ARM, 1272 bytes, Stack size 88 bytes, EditScript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2168 + Unknown Stack Size
<LI>Call Chain = _ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo &rArr; _ZN9CDataEdit8DataEditERP12CBarcodeData &rArr; _ZN9CDataEdit10DataFormatERP12CBarcodeData &rArr; _ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData &rArr; _ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36af4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPwRj
<LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36af5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12CopyTypeInfoERKS_
<LI><a href="#[36af754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit8DataEditERP12CBarcodeData
<LI><a href="#[36af790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit27GetDataEditSettingsFromMenuEv
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[38852d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo
</UL>

<P><STRONG><a name="[38852d4]"></a>_ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo</STRONG> (ARM, 100 bytes, Stack size 16 bytes, EditScript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184 + Unknown Stack Size
<LI>Call Chain = _ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo &rArr; _ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo &rArr; _ZN9CDataEdit8DataEditERP12CBarcodeData &rArr; _ZN9CDataEdit10DataFormatERP12CBarcodeData &rArr; _ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData &rArr; _ZN9CDataEdit17TryThisDataFormatEP7HSTRINGRP12CBarcodeData &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[387c814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CTransCodeEx13AutoTranslateEP12CBarcodeDatai
<LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
<LI><a href="#[4ed61bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc14DoPluginFormatERP12CBarcodeDataP12CBarcodeFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ece32c]"></a>_Z12ScriptThreadPv</STRONG> (ARM, 136 bytes, Stack size 64 bytes, mainhhplproc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4c6fdec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_INSTRUCTION_SET17EnableFullEditingEv
<LI><a href="#[4eda71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSOR18ProcessHHPLProgramEPKhjPKwjS3_ji
</UL>

<P><STRONG><a name="[36ba1f4]"></a>_Z11StartScriptv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = _Z11StartScriptv &rArr; MT_OpenDriverThread &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeDriverThread
<LI><a href="#[3531e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_OpenDriverThread
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17Init_ProdSpecificv
</UL>

<P><STRONG><a name="[4ecde7c]"></a>_ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv</STRONG> (ARM, 256 bytes, Stack size 32 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[4ecd06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes22OnChangedConfigurationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecde40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROCC1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecde40]"></a>_ZN14MAIN_HHPL_PROCC1Ev</STRONG> (ARM, 216 bytes, Stack size 16 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ZN14MAIN_HHPL_PROCC1Ev &rArr; _ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_CreateEvent
<LI><a href="#[38853c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoC1Ej
<LI><a href="#[4ecde7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv
<LI><a href="#[4eda488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSORC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b963c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC23CreateScriptInterpreterEv
</UL>

<P><STRONG><a name="[4ecde04]"></a>_ZN14MAIN_HHPL_PROCC2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, mainhhplproc.o(.text), UNUSED)

<P><STRONG><a name="[36b963c]"></a>_ZN14MAIN_HHPL_PROC23CreateScriptInterpreterEv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _ZN14MAIN_HHPL_PROC23CreateScriptInterpreterEv &rArr; _ZN14MAIN_HHPL_PROCC1Ev &rArr; _ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ecd1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes17CreateOutputModesEv
<LI><a href="#[4ecde40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROCC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36b9678]"></a>_ZN14MAIN_HHPL_PROC12SriptRunSomeEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN14MAIN_HHPL_PROC12SriptRunSomeEv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36b9600]"></a>_ZN14MAIN_HHPL_PROC23ServiceMainScriptTimersEv</STRONG> (ARM, 88 bytes, Stack size 16 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN14MAIN_HHPL_PROC23ServiceMainScriptTimersEv &rArr; _Z14SoundErrorBeepb &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[406dd34]"></a>_ZN14MAIN_HHPL_PROC26InitializeMainScriptTimersEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[375a19c]"></a>_ZN14MAIN_HHPL_PROC36HostAcknowledgedLastDataTransmissionEb</STRONG> (ARM, 28 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
</UL>

<P><STRONG><a name="[3885388]"></a>_ZN14MAIN_HHPL_PROC17IsSequenceStartedEv</STRONG> (ARM, 48 bytes, Stack size 16 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14MAIN_HHPL_PROC17IsSequenceStartedEv
</UL>
<BR>[Calls]<UL><LI><a href="#[413dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes17IsSequenceStartedEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[3885310]"></a>_ZN14MAIN_HHPL_PROC30SequencePriorityTimeoutExpiredEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN14MAIN_HHPL_PROC30SequencePriorityTimeoutExpiredEv &rArr; _ZN12COutputModes30SequencePriorityTimeoutExpiredEv
</UL>
<BR>[Calls]<UL><LI><a href="#[5016928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes30SequencePriorityTimeoutExpiredEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[4ecddc8]"></a>_ZN14MAIN_HHPL_PROCD1Ev</STRONG> (ARM, 76 bytes, Stack size 8 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN14MAIN_HHPL_PROCD1Ev &rArr; _ZN14HHPL_PROCESSORD1Ev &rArr; _ZN8HWSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4eda410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSORD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdd8c]"></a>_ZN14MAIN_HHPL_PROCD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, mainhhplproc.o(.text), UNUSED)

<P><STRONG><a name="[4ecdd50]"></a>_ZN14MAIN_HHPL_PROCD0Ev</STRONG> (ARM, 88 bytes, Stack size 8 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN14MAIN_HHPL_PROCD0Ev &rArr; _ZN14HHPL_PROCESSORD1Ev &rArr; _ZN8HWSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4eda410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14HHPL_PROCESSORD1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdd14]"></a>_ZN14MAIN_HHPL_PROC4BeepEiii</STRONG> (ARM, 76 bytes, Stack size 16 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN14MAIN_HHPL_PROC4BeepEiii &rArr; _Z4Beepbjj &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z4Beepbjj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdcd8]"></a>_ZN14MAIN_HHPL_PROC5DelayEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN14MAIN_HHPL_PROC5DelayEi &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdc9c]"></a>_ZN14MAIN_HHPL_PROC14DoBadIndicatorEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN14MAIN_HHPL_PROC14DoBadIndicatorEv &rArr; _Z14SoundErrorBeepb &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdc60]"></a>_ZN14MAIN_HHPL_PROC15DoGoodIndicatorEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN14MAIN_HHPL_PROC15DoGoodIndicatorEv &rArr; _Z17SoundGoodReadBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundGoodReadBeepv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdc24]"></a>_ZN14MAIN_HHPL_PROC15GetSystemTimer0Ev</STRONG> (ARM, 24 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdbe8]"></a>_ZN14MAIN_HHPL_PROC11InputStringEiP8HWSTRINGiiPwiPcPi</STRONG> (ARM, 104 bytes, Stack size 48 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN14MAIN_HHPL_PROC11InputStringEiP8HWSTRINGiiPwiPcPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdbac]"></a>_ZN14MAIN_HHPL_PROC11InputStringEPN14HHPL_PROCESSOR23INPUT_STRING_PARAMETERSE</STRONG> (ARM, 88 bytes, Stack size 32 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN14MAIN_HHPL_PROC11InputStringEPN14HHPL_PROCESSOR23INPUT_STRING_PARAMETERSE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecdb70]"></a>_ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv</STRONG> (ARM, 172 bytes, Stack size 16 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = _ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413df4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger20SetSkipDecodeTimeoutEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[4ecdb34]"></a>_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData</STRONG> (ARM, 904 bytes, Stack size 48 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = _ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData &rArr; _ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv &rArr; _Z9SetLightsiiii &rArr; _Z15SetLightsCommoniiii &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[3885040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14GetShotgunModeEv
<LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
<LI><a href="#[413de98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger16WaitForScanStandEv
<LI><a href="#[413ded4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv
<LI><a href="#[413e258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23SetSerialTriggerTimeoutEv
<LI><a href="#[413e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15UnTriggerSerialEv
<LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
<LI><a href="#[4ecd0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes22GetSequenceBarcodeDataEi
<LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
<LI><a href="#[4ecd24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes10DoSequenceER12CBarcodeDataPi
<LI><a href="#[4ecdb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC15DoGoodReadFlashEv
<LI><a href="#[5016a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes27SetPreferredBarcodeDataNullEi
<LI><a href="#[5016a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes26SetSequenceBarcodeDataNullEi
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecdaf8]"></a>_ZN14MAIN_HHPL_PROC9DoShotgunER12CBarcodeData</STRONG> (ARM, 400 bytes, Stack size 40 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = _ZN14MAIN_HHPL_PROC9DoShotgunER12CBarcodeData &rArr; _ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv &rArr; _ZN8CTrigger14FinishScanningEv &rArr; _Z11StopImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[3885040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14GetShotgunModeEv
<LI><a href="#[413ded4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv
<LI><a href="#[4b49054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecdabc]"></a>_ZN14MAIN_HHPL_PROC12HandleDecodeEi</STRONG> (ARM, 516 bytes, Stack size 112 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = _ZN14MAIN_HHPL_PROC12HandleDecodeEi &rArr; _ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv &rArr; _ZN8CTrigger14FinishScanningEv &rArr; _Z11StopImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[375abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SoundOposBeepv
<LI><a href="#[3885040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14GetShotgunModeEv
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[413dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18PrepareForScanningEv
<LI><a href="#[413ded4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15UnTriggerSerialEv
<LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
<LI><a href="#[433793c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo4ReadEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecda80]"></a>_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv</STRONG> (ARM, 380 bytes, Stack size 24 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = _ZN14MAIN_HHPL_PROC17DoPartialSequenceEv &rArr; _ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv &rArr; _ZN8CTrigger14FinishScanningEv &rArr; _Z11StopImagingv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
<LI><a href="#[413dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes17IsSequenceStartedEv
<LI><a href="#[413ded4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv
<LI><a href="#[5016838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes35ClearSequenceBarcodeDataPartialSizeEv
<LI><a href="#[5016874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes33SetSequenceBarcodeDataPartialNullEi
<LI><a href="#[50168b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes33GetSequenceBarcodeDataPartialSizeEv
<LI><a href="#[5016964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes29GetSequenceBarcodeDataPartialEi
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecda44]"></a>_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_</STRONG> (ARM, 4172 bytes, Stack size 160 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28424 + Unknown Stack Size
<LI>Call Chain = _ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_ &rArr; _Z16ImageSnapAndShipv &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[2277d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13toggleCtslinev
<LI><a href="#[2277dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9IsCtsHighv
<LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[227809c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SetCurrentInterfaceP6CIoMan
<LI><a href="#[22780d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GetCurrentInterfacev
<LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[374f0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ClearDecoderWorkspacev
<LI><a href="#[374f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6decodePh
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375ab74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12NoDecodeBeepv
<LI><a href="#[375abec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DecodeBeepv
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
<LI><a href="#[3885040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14GetShotgunModeEv
<LI><a href="#[38852d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[388543c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8StoreHHPEhh
<LI><a href="#[3885478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8StoreAimEhh
<LI><a href="#[3899534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CEci5CheckEP12CBarcodeData
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[413dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes17IsSequenceStartedEv
<LI><a href="#[413dc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SetLightsiiii
<LI><a href="#[413dd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger11GetNextScanEmPPh
<LI><a href="#[413dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18PrepareForScanningEv
<LI><a href="#[413de20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger11ForceLEDsOnEv
<LI><a href="#[413de5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger21IsLowpowerTriggerModeEv
<LI><a href="#[413de98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger16WaitForScanStandEv
<LI><a href="#[413ded4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger42PreferredSequenceShotgunModeFinishScanningEv
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15UnTriggerSerialEv
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
<LI><a href="#[43377d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CFifoBase7AnyDataEv
<LI><a href="#[433793c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo4ReadEv
<LI><a href="#[4c4c5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8GetWTextER8HWSTRING
<LI><a href="#[4c4c64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataEv
<LI><a href="#[4c4c6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData18FillDataSourceInfoEPw
<LI><a href="#[4c4c700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData9StoreTextEPKwj
<LI><a href="#[4ecd030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes26ClearSequenceBufferPartialEv
<LI><a href="#[4ecd120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes20ClearPreferredBufferEv
<LI><a href="#[4ecd15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes19ClearSequenceBufferEv
<LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[4ecdaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC9DoShotgunER12CBarcodeData
<LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[50169a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes29ClearAndDeletePreferredTimersEv
<LI><a href="#[50169dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes28SetSequenceStartedIfRequiredEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecda08]"></a>_ZN14MAIN_HHPL_PROC20IsScriptingAvailableEv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd9cc]"></a>_ZN14MAIN_HHPL_PROC8LogErrorEPKc</STRONG> (ARM, 52 bytes, Stack size 8 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ZN14MAIN_HHPL_PROC8LogErrorEPKc &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd990]"></a>_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii</STRONG> (ARM, 180 bytes, Stack size 56 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2624 + Unknown Stack Size
<LI>Call Chain = _ZN14MAIN_HHPL_PROC11MenuCommandEPcPii &rArr; _Z23ReSynchWorkingAndActiveb &rArr; _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[4d792f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPhj
<LI><a href="#[4d79494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd954]"></a>_ZN14MAIN_HHPL_PROC48ProcessBackgroundOperationsDuringScriptExecutionEv</STRONG> (ARM, 60 bytes, Stack size 8 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN14MAIN_HHPL_PROC48ProcessBackgroundOperationsDuringScriptExecutionEv &rArr; _ZN12COutputModes21UpdatePreferredTimersEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ResetEvent
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[4ecd0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes21UpdatePreferredTimersEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd918]"></a>_ZN14MAIN_HHPL_PROC9ScannerIDEPc</STRONG> (ARM, 24 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd8dc]"></a>_ZN14MAIN_HHPL_PROC10SendToHostEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSE</STRONG> (ARM, 24 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd8a0]"></a>_ZN14MAIN_HHPL_PROC10TerminalIDEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd864]"></a>_ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl</STRONG> (ARM, 1040 bytes, Stack size 88 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = _ZN14MAIN_HHPL_PROC19SendToHostInterfaceEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoManl &rArr; _ZN12CBarcodeData16GetSaveNewBufferERPwRj &rArr; _ZN15CBarcodeManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferERPwRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36af4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16GetSaveNewBufferERPwRj
<LI><a href="#[36af574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData14FinalizeBufferEj
<LI><a href="#[36b4e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEP12CBarcodeData
<LI><a href="#[36b4e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData7AddTextEPKwj
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[4c4c688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData25CopyIDsFromDataSourceInfoEPKw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd828]"></a>_ZN14MAIN_HHPL_PROC17SendToCodeXMLBaseEPN14HHPL_PROCESSOR23SEND_TO_HOST_PARAMETERSEP6CIoMan</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd7ec]"></a>_ZN14MAIN_HHPL_PROC13Send_A_PacketEP7HSTRINGcP6CIoMan</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd7b0]"></a>_ZN14MAIN_HHPL_PROC13Send_Z_PacketEP7HSTRINGcP6CIoMan</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd774]"></a>_ZN14MAIN_HHPL_PROC21TransmitCodeXMLPacketEP7HSTRINGP6CIoMan</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd738]"></a>_ZN14MAIN_HHPL_PROC10TriggerHitEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3784 + Unknown Stack Size
<LI>Call Chain = _ZN14MAIN_HHPL_PROC10TriggerHitEv &rArr; _ZN8CTrigger15IsUnitTriggeredEv &rArr; _ZN8CTrigger19UpdateTriggerStatusEv &rArr; _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd6fc]"></a>_ZN14MAIN_HHPL_PROC16ZeroSystemTimer0Ev</STRONG> (ARM, 16 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd6c0]"></a>_ZN14MAIN_HHPL_PROC9WorkgroupEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[36b95c4]"></a>_ZN14MAIN_HHPL_PROC35ScriptIsInBackgroundOperationsStateEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[5014588]"></a>_ZN12COutputModes24CopyPreferredBarcodeDataER12CBarcodeDatai</STRONG> (ARM, 248 bytes, Stack size 48 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN12COutputModes24CopyPreferredBarcodeDataER12CBarcodeDatai &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12CopyTypeInfoERKS_
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[387c7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData10MoveBufferERS_
<LI><a href="#[4b49054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
</UL>

<P><STRONG><a name="[50169dc]"></a>_ZN12COutputModes28SetSequenceStartedIfRequiredEv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecd06c]"></a>_ZN12COutputModes22OnChangedConfigurationEv</STRONG> (ARM, 128 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecde7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC22OnChangedConfigurationEv
<LI><a href="#[50144d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModesC1Ev
</UL>

<P><STRONG><a name="[50144d4]"></a>_ZN12COutputModesC1Ev</STRONG> (ARM, 128 bytes, Stack size 4 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN12COutputModesC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4ecd06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes22OnChangedConfigurationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes17CreateOutputModesEv
</UL>

<P><STRONG><a name="[5014498]"></a>_ZN12COutputModesC2Ev</STRONG> (ARM, 0 bytes, Stack size 4 bytes, OutputModes.o(.text), UNUSED)

<P><STRONG><a name="[50169a0]"></a>_ZN12COutputModes29ClearAndDeletePreferredTimersEv</STRONG> (ARM, 56 bytes, Stack size 16 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN12COutputModes29ClearAndDeletePreferredTimersEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes21UpdatePreferredTimersEv
<LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecd030]"></a>_ZN12COutputModes26ClearSequenceBufferPartialEv</STRONG> (ARM, 60 bytes, Stack size 24 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN12COutputModes26ClearSequenceBufferPartialEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecd120]"></a>_ZN12COutputModes20ClearPreferredBufferEv</STRONG> (ARM, 60 bytes, Stack size 24 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN12COutputModes20ClearPreferredBufferEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecd15c]"></a>_ZN12COutputModes19ClearSequenceBufferEv</STRONG> (ARM, 52 bytes, Stack size 16 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN12COutputModes19ClearSequenceBufferEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[4ecd1d4]"></a>_ZN12COutputModes17CreateOutputModesEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN12COutputModes17CreateOutputModesEv &rArr; _ZN12COutputModesC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[50144d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModesC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[36b963c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC23CreateScriptInterpreterEv
</UL>

<P><STRONG><a name="[501445c]"></a>_ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi</STRONG> (ARM, 564 bytes, Stack size 72 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[4b49054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
</UL>

<P><STRONG><a name="[4ecd0e4]"></a>_ZN12COutputModes21UpdatePreferredTimersEv</STRONG> (ARM, 320 bytes, Stack size 24 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN12COutputModes21UpdatePreferredTimersEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[50169a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes29ClearAndDeletePreferredTimersEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes11DoPreferredER12CBarcodeDataPi
<LI><a href="#[4ecd954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC48ProcessBackgroundOperationsDuringScriptExecutionEv
</UL>

<P><STRONG><a name="[4ecd210]"></a>_ZN12COutputModes11DoPreferredER12CBarcodeDataPi</STRONG> (ARM, 668 bytes, Stack size 32 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _ZN12COutputModes11DoPreferredER12CBarcodeDataPi &rArr; _ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[374f558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ClearLastReadTimestampv
<LI><a href="#[4ecd0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes21UpdatePreferredTimersEv
<LI><a href="#[501445c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes34InsertPreferredMessageIntoSequenceER12CBarcodeDataPi
<LI><a href="#[5014588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes24CopyPreferredBarcodeDataER12CBarcodeDatai
<LI><a href="#[50169a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes29ClearAndDeletePreferredTimersEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[5016a18]"></a>_ZN12COutputModes27SetPreferredBarcodeDataNullEi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[5016928]"></a>_ZN12COutputModes30SequencePriorityTimeoutExpiredEv</STRONG> (ARM, 52 bytes, Stack size 8 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN12COutputModes30SequencePriorityTimeoutExpiredEv
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC30SequencePriorityTimeoutExpiredEv
</UL>

<P><STRONG><a name="[413dc04]"></a>_ZN12COutputModes17IsSequenceStartedEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3885388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17IsSequenceStartedEv
<LI><a href="#[413e0b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger20NeedToChangeToManualEv
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
</UL>

<P><STRONG><a name="[5014420]"></a>_ZN12COutputModes25InsertMessageIntoSequenceER12CBarcodeData</STRONG> (ARM, 588 bytes, Stack size 56 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN12COutputModes25InsertMessageIntoSequenceER12CBarcodeData &rArr; _ZN8CTrigger23SetSerialTriggerTimeoutEv
</UL>
<BR>[Calls]<UL><LI><a href="#[413e258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger23SetSerialTriggerTimeoutEv
<LI><a href="#[4b49054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData12GetTotalDataERPKwRj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecd24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes10DoSequenceER12CBarcodeDataPi
</UL>

<P><STRONG><a name="[4ecd24c]"></a>_ZN12COutputModes10DoSequenceER12CBarcodeDataPi</STRONG> (ARM, 356 bytes, Stack size 32 bytes, OutputModes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN12COutputModes10DoSequenceER12CBarcodeDataPi &rArr; _ZN12COutputModes25InsertMessageIntoSequenceER12CBarcodeData &rArr; _ZN8CTrigger23SetSerialTriggerTimeoutEv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[375ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5Clickv
<LI><a href="#[5014420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12COutputModes25InsertMessageIntoSequenceER12CBarcodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[4ecd0a8]"></a>_ZN12COutputModes22GetSequenceBarcodeDataEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[5016a54]"></a>_ZN12COutputModes26SetSequenceBarcodeDataNullEi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecdb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11DoSequencesER12CBarcodeData
</UL>

<P><STRONG><a name="[50168b0]"></a>_ZN12COutputModes33GetSequenceBarcodeDataPartialSizeEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
</UL>

<P><STRONG><a name="[5016838]"></a>_ZN12COutputModes35ClearSequenceBarcodeDataPartialSizeEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
</UL>

<P><STRONG><a name="[5016964]"></a>_ZN12COutputModes29GetSequenceBarcodeDataPartialEi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
</UL>

<P><STRONG><a name="[5016874]"></a>_ZN12COutputModes33SetSequenceBarcodeDataPartialNullEi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, OutputModes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ecda80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17DoPartialSequenceEv
</UL>

<P><STRONG><a name="[500c734]"></a>_Z22Write_Frame_Blank_Timet</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5de00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade21HandleCellPhoneLightsEm
</UL>

<P><STRONG><a name="[500c464]"></a>_ZN10IIC_Shadow7ReadIICEhPt</STRONG> (ARM, 152 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN10IIC_Shadow7ReadIICEhPt
</UL>
<BR>[Called By]<UL><LI><a href="#[500bce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetSensorMode19OperatingModesBYD_t
<LI><a href="#[5011ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13read_exp_gainPtS_
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>

<P><STRONG><a name="[500c428]"></a>_ZN10IIC_Shadow8WriteIICEht</STRONG> (ARM, 140 bytes, Stack size 24 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10IIC_Shadow8WriteIICEht
</UL>
<BR>[Called By]<UL><LI><a href="#[500c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetSensorMode19OperatingModesBYD_t
<LI><a href="#[500c2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10POI_Sensorv
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>

<P><STRONG><a name="[500c3ec]"></a>_ZN29Context_sensitive_accumulator5resetEv</STRONG> (ARM, 76 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[500b5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13Pixel_samplerI29Context_sensitive_accumulatorE5resetEjj
<LI><a href="#[500c3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYDC1Ev
</UL>

<P><STRONG><a name="[500c3b0]"></a>_ZN9HHPSD_BYDC1Ev</STRONG> (ARM, 224 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9HHPSD_BYDC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[500c3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN29Context_sensitive_accumulator5resetEv
</UL>
<BR>[Called By]<UL><LI><a href="#[500c338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13get_hhpsd_BYDv
</UL>

<P><STRONG><a name="[500c374]"></a>_ZN9HHPSD_BYDC2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text), UNUSED)

<P><STRONG><a name="[500c338]"></a>_Z13get_hhpsd_BYDv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z13get_hhpsd_BYDv &rArr; _ZN9HHPSD_BYDC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[500c3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYDC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[4e67a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoDetectBYDv
<LI><a href="#[500c284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ScanEngineIsBYDv
</UL>

<P><STRONG><a name="[500c2fc]"></a>_Z10POI_Sensorv</STRONG> (ARM, 316 bytes, Stack size 40 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z10POI_Sensorv &rArr; _ZN10IIC_Shadow8WriteIICEht
</UL>
<BR>[Calls]<UL><LI><a href="#[500c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10IIC_Shadow8WriteIICEht
</UL>
<BR>[Called By]<UL><LI><a href="#[500c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetSensorMode19OperatingModesBYD_t
</UL>

<P><STRONG><a name="[500c2c0]"></a>_Z13SetSensorMode19OperatingModesBYD_t</STRONG> (ARM, 260 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z13SetSensorMode19OperatingModesBYD_t &rArr; _Z10POI_Sensorv &rArr; _ZN10IIC_Shadow8WriteIICEht
</UL>
<BR>[Calls]<UL><LI><a href="#[500c2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10POI_Sensorv
<LI><a href="#[500c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10IIC_Shadow8WriteIICEht
<LI><a href="#[500c464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10IIC_Shadow7ReadIICEhPt
</UL>
<BR>[Called By]<UL><LI><a href="#[500bce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500bd20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD15ScanEngineStartEv
<LI><a href="#[500bd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti
</UL>

<P><STRONG><a name="[500c284]"></a>_Z15ScanEngineIsBYDv</STRONG> (ARM, 220 bytes, Stack size 32 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z15ScanEngineIsBYDv &rArr; _Z13get_hhpsd_BYDv &rArr; _ZN9HHPSD_BYDC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[500c338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13get_hhpsd_BYDv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e67a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoDetectBYDv
</UL>

<P><STRONG><a name="[500c248]"></a>_Z26AutoAimControlHighPowerBYDm</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[500c20c]"></a>_Z25AutoAimControlLowPowerBYDm</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[500c1d0]"></a>_Z10percentileRA256_mj</STRONG> (ARM, 96 bytes, Stack size 4 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z10percentileRA256_mj
</UL>
<BR>[Called By]<UL><LI><a href="#[500ba8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13calc_exposureEv
<LI><a href="#[500bb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN26Exposure_control_cellphone13calc_exposureEv
<LI><a href="#[500bf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23AutoExpCalcPresentationEv
</UL>

<P><STRONG><a name="[500c194]"></a>_ZN9HHPSD_BYD28CellphoneDetectionViaImagingEPhjj</STRONG> (ARM, 404 bytes, Stack size 1056 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = _ZN9HHPSD_BYD28CellphoneDetectionViaImagingEPhjj &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[500c158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD28ScanManagerAutoExpLineSampleEPvm
</UL>

<P><STRONG><a name="[500c158]"></a>_ZN9HHPSD_BYD28ScanManagerAutoExpLineSampleEPvm</STRONG> (ARM, 216 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392<LI>Call Chain = _ZN9HHPSD_BYD28ScanManagerAutoExpLineSampleEPvm &rArr; _ZN9HHPSD_BYD28CellphoneDetectionViaImagingEPhjj &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500c194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD28CellphoneDetectionViaImagingEPhjj
<LI><a href="#[5011f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20get_exposure_controlP9HHPSD_BYD31HHPScanDriverAutoExposureMode_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500c11c]"></a>_ZNK29Context_sensitive_accumulator4calcEv</STRONG> (ARM, 404 bytes, Stack size 24 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZNK29Context_sensitive_accumulator4calcEv
</UL>
<BR>[Called By]<UL><LI><a href="#[500ba8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13calc_exposureEv
<LI><a href="#[500c0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9HHPSD_BYD8iq_scoreEv
</UL>

<P><STRONG><a name="[500c0e0]"></a>_ZNK9HHPSD_BYD8iq_scoreEv</STRONG> (ARM, 48 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZNK9HHPSD_BYD8iq_scoreEv &rArr; _ZNK29Context_sensitive_accumulator4calcEv
</UL>
<BR>[Calls]<UL><LI><a href="#[500c11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK29Context_sensitive_accumulator4calcEv
</UL>
<BR>[Called By]<UL><LI><a href="#[500bac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t
<LI><a href="#[500bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN26Exposure_control_cellphone13is_acceptableEP24ScanDriverLastScanInfo_t
<LI><a href="#[500c0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t
</UL>

<P><STRONG><a name="[500c0a4]"></a>_ZN9HHPSD_BYD28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t</STRONG> (ARM, 440 bytes, Stack size 32 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _ZN9HHPSD_BYD28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t &rArr; _Z12set_exp_gaintt &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500c0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9HHPSD_BYD8iq_scoreEv
<LI><a href="#[5011f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20get_exposure_controlP9HHPSD_BYD31HHPScanDriverAutoExposureMode_t
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500c068]"></a>_ZN9HHPSD_BYD41ScanManagerEngineSaysOkToCaptureNextFrameEv</STRONG> (ARM, 112 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN9HHPSD_BYD41ScanManagerEngineSaysOkToCaptureNextFrameEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500c02c]"></a>_ZN9HHPSD_BYD23ScanEngineFaultOccurredEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN9HHPSD_BYD23ScanEngineFaultOccurredEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bff0]"></a>_ZN9HHPSD_BYD16AutoExpCalcFixedEv</STRONG> (ARM, 244 bytes, Stack size 40 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _ZN9HHPSD_BYD16AutoExpCalcFixedEv &rArr; _Z14ForceCellphoneb &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500b564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ForceCellphoneb
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>
<BR>[Called By]<UL><LI><a href="#[500bf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22ScanManagerAutoExpCalcEv
</UL>

<P><STRONG><a name="[500bfb4]"></a>_ZN9HHPSD_BYD15PresentationExpEj</STRONG> (ARM, 192 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[500bf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23AutoExpCalcPresentationEv
</UL>

<P><STRONG><a name="[500bf78]"></a>_ZN9HHPSD_BYD23AutoExpCalcPresentationEv</STRONG> (ARM, 636 bytes, Stack size 1072 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = _ZN9HHPSD_BYD23AutoExpCalcPresentationEv &rArr; _Z14ForceCellphoneb &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500b564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ForceCellphoneb
<LI><a href="#[500bfb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD15PresentationExpEj
<LI><a href="#[500c1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10percentileRA256_mj
<LI><a href="#[5011ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13read_exp_gainPtS_
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>
<BR>[Called By]<UL><LI><a href="#[500bf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22ScanManagerAutoExpCalcEv
</UL>

<P><STRONG><a name="[500bf3c]"></a>_ZN9HHPSD_BYD22ScanManagerAutoExpCalcEv</STRONG> (ARM, 52 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = _ZN9HHPSD_BYD22ScanManagerAutoExpCalcEv &rArr; _ZN9HHPSD_BYD23AutoExpCalcPresentationEv &rArr; _Z14ForceCellphoneb &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500bf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23AutoExpCalcPresentationEv
<LI><a href="#[500bff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD16AutoExpCalcFixedEv
<LI><a href="#[5011f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20get_exposure_controlP9HHPSD_BYD31HHPScanDriverAutoExposureMode_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bf00]"></a>_ZN9HHPSD_BYD17ScanEngineRestartEP23ScanDriverOpenContext_t</STRONG> (ARM, 64 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN9HHPSD_BYD17ScanEngineRestartEP23ScanDriverOpenContext_t &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bec4]"></a>_ZN9HHPSD_BYD12resetAEStatsEv</STRONG> (ARM, 128 bytes, Stack size 24 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9HHPSD_BYD12resetAEStatsEv
</UL>
<BR>[Called By]<UL><LI><a href="#[500bd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500be88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD33ScanManagerFrameEventAutoExposureEv
</UL>

<P><STRONG><a name="[500be88]"></a>_ZN9HHPSD_BYD33ScanManagerFrameEventAutoExposureEv</STRONG> (ARM, 356 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _ZN9HHPSD_BYD33ScanManagerFrameEventAutoExposureEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500bec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD12resetAEStatsEv
<LI><a href="#[5011f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20get_exposure_controlP9HHPSD_BYD31HHPScanDriverAutoExposureMode_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500be4c]"></a>_ZN9HHPSD_BYD15loadOpenContextEP23ScanDriverOpenContext_t</STRONG> (ARM, 1188 bytes, Stack size 24 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _ZN9HHPSD_BYD15loadOpenContextEP23ScanDriverOpenContext_t &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[500bd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500be10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22ExposureSettingsUpdateEP23ScanDriverOpenContext_t
</UL>

<P><STRONG><a name="[500be10]"></a>_ZN9HHPSD_BYD22ExposureSettingsUpdateEP23ScanDriverOpenContext_t</STRONG> (ARM, 32 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _ZN9HHPSD_BYD22ExposureSettingsUpdateEP23ScanDriverOpenContext_t &rArr; _ZN9HHPSD_BYD15loadOpenContextEP23ScanDriverOpenContext_t &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500be4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD15loadOpenContextEP23ScanDriverOpenContext_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bdd4]"></a>_ZN9HHPSD_BYD19LightSettingsUpdateEPK23ScanDriverOpenContext_t</STRONG> (ARM, 56 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _ZN9HHPSD_BYD19LightSettingsUpdateEPK23ScanDriverOpenContext_t &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bd98]"></a>_ZN9HHPSD_BYD11ResetEngineEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN9HHPSD_BYD11ResetEngineEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bd5c]"></a>_ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti</STRONG> (ARM, 296 bytes, Stack size 24 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti &rArr; _ZN9HHPSD_BYD15loadOpenContextEP23ScanDriverOpenContext_t &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500be4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD15loadOpenContextEP23ScanDriverOpenContext_t
<LI><a href="#[500bec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD12resetAEStatsEv
<LI><a href="#[500c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetSensorMode19OperatingModesBYD_t
<LI><a href="#[5011ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13read_exp_gainPtS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bd20]"></a>_ZN9HHPSD_BYD15ScanEngineStartEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN9HHPSD_BYD15ScanEngineStartEv &rArr; _Z13SetSensorMode19OperatingModesBYD_t &rArr; _Z10POI_Sensorv &rArr; _ZN10IIC_Shadow8WriteIICEht
</UL>
<BR>[Calls]<UL><LI><a href="#[500c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetSensorMode19OperatingModesBYD_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bce4]"></a>_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti</STRONG> (ARM, 576 bytes, Stack size 32 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti &rArr; _Z14ForceCellphoneb &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500b564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ForceCellphoneb
<LI><a href="#[500c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetSensorMode19OperatingModesBYD_t
<LI><a href="#[500c464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10IIC_Shadow7ReadIICEhPt
<LI><a href="#[5011f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20get_exposure_controlP9HHPSD_BYD31HHPScanDriverAutoExposureMode_t
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bca8]"></a>_ZN9HHPSD_BYD31ScanEngineSaveStateAndPowerDownEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN9HHPSD_BYD31ScanEngineSaveStateAndPowerDownEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bc6c]"></a>_ZN9HHPSD_BYD32ScanEnginePowerUpAndRestoreStateEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN9HHPSD_BYD32ScanEnginePowerUpAndRestoreStateEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bc30]"></a>_ZN9HHPSD_BYD31ScanEnginePowerUpAndRestoreRegsEv</STRONG> (ARM, 64 bytes, Stack size 8 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN9HHPSD_BYD31ScanEnginePowerUpAndRestoreRegsEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bbf4]"></a>_ZN9HHPSD_BYD24SetDefaultScannerOptionsEP23ScanDriverOpenContext_t</STRONG> (ARM, 380 bytes, Stack size 200 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ZN9HHPSD_BYD24SetDefaultScannerOptionsEP23ScanDriverOpenContext_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500bbb8]"></a>_ZN29Context_sensitive_accumulator10accumulateEm</STRONG> (ARM, 232 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN29Context_sensitive_accumulator10accumulateEm
</UL>
<BR>[Called By]<UL><LI><a href="#[500b5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13Pixel_samplerI29Context_sensitive_accumulatorE20center_weight_sampleEj
<LI><a href="#[500b618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13Pixel_samplerI29Context_sensitive_accumulatorE14uniform_sampleEj
<LI><a href="#[500b654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13Pixel_samplerI29Context_sensitive_accumulatorE13center_sampleEj
</UL>

<P><STRONG><a name="[500bb7c]"></a>_ZN26Exposure_control_cellphone13is_acceptableEP24ScanDriverLastScanInfo_t</STRONG> (ARM, 116 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN26Exposure_control_cellphone13is_acceptableEP24ScanDriverLastScanInfo_t &rArr; _ZNK9HHPSD_BYD8iq_scoreEv &rArr; _ZNK29Context_sensitive_accumulator4calcEv
</UL>
<BR>[Calls]<UL><LI><a href="#[500c0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9HHPSD_BYD8iq_scoreEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV26Exposure_control_cellphone)
</UL>
<P><STRONG><a name="[500bb40]"></a>_ZN26Exposure_control_cellphone13calc_exposureEv</STRONG> (ARM, 904 bytes, Stack size 1088 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440<LI>Call Chain = _ZN26Exposure_control_cellphone13calc_exposureEv &rArr; _Z12set_exp_gaintt &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500c1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10percentileRA256_mj
<LI><a href="#[5011ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13read_exp_gainPtS_
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV26Exposure_control_cellphone)
</UL>
<P><STRONG><a name="[500bb04]"></a>_ZN21Auto_exposure_control12deinitializeEP23ScanDriverOpenContext_ti</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScanDriverHi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV21Auto_exposure_control)
</UL>
<P><STRONG><a name="[500bac8]"></a>_ZN21Auto_exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t</STRONG> (ARM, 440 bytes, Stack size 24 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _ZN21Auto_exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500c0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9HHPSD_BYD8iq_scoreEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV21Auto_exposure_control)
</UL>
<P><STRONG><a name="[500ba8c]"></a>_ZN21Auto_exposure_control13calc_exposureEv</STRONG> (ARM, 1388 bytes, Stack size 1112 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = _ZN21Auto_exposure_control13calc_exposureEv &rArr; _Z12set_exp_gaintt &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500c11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK29Context_sensitive_accumulator4calcEv
<LI><a href="#[500c1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10percentileRA256_mj
<LI><a href="#[5011ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13read_exp_gainPtS_
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV21Auto_exposure_control)
</UL>
<P><STRONG><a name="[4e67a54]"></a>_Z13AutoDetectBYDv</STRONG> (ARM, 600 bytes, Stack size 24 bytes, scandriverscannerselect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z13AutoDetectBYDv &rArr; _Z15ScanEngineIsBYDv &rArr; _Z13get_hhpsd_BYDv &rArr; _ZN9HHPSD_BYDC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[40602c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27IsPsocInterfaceSupportedBYDv
<LI><a href="#[4e674f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_JadeC1Ev
<LI><a href="#[4e6752c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HW_light_control_MT9V022C1Ev
<LI><a href="#[4e67568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SetupAutoAimControlFunctionsPFvmES0_
<LI><a href="#[500c284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ScanEngineIsBYDv
<LI><a href="#[500c338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13get_hhpsd_BYDv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e67a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoDetectScanEngine
</UL>

<P><STRONG><a name="[4e67a18]"></a>AutoDetectScanEngine</STRONG> (ARM, 228 bytes, Stack size 16 bytes, scandriverscannerselect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AutoDetectScanEngine &rArr; _Z13AutoDetectBYDv &rArr; _Z15ScanEngineIsBYDv &rArr; _Z13get_hhpsd_BYDv &rArr; _ZN9HHPSD_BYDC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4e67a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoDetectBYDv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Init
</UL>

<P><STRONG><a name="[4e656f0]"></a>_Z50ScanDriverOpenContext_tPtrArgumentVoidReturn_DummyP23ScanDriverOpenContext_t</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scandriverscanmanager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscanmanager.o(.data)
</UL>
<P><STRONG><a name="[4e656b4]"></a>_Z6zallocj</STRONG> (ARM, 32 bytes, Stack size 16 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z6zallocj &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Open
<LI><a href="#[4e63e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ScnDrv_CreateOpenContextv
<LI><a href="#[4e64dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25CreateNewRegisteredBufferP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e65678]"></a>_Z5zfreePv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Open
<LI><a href="#[4e63e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ScnDrv_CreateOpenContextv
<LI><a href="#[4e64ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22DeleteRegisteredBufferP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e6563c]"></a>_Z18NewBufferInfoEntryv</STRONG> (ARM, 140 bytes, Stack size 16 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z18NewBufferInfoEntryv &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4e655c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z43AllocatePhysicalBufferAndCreateNewInfoEntryv
</UL>

<P><STRONG><a name="[4e65600]"></a>_Z21DeleteBufferInfoEntryP14ScanBufferInfo</STRONG> (ARM, 116 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _Z21DeleteBufferInfoEntryP14ScanBufferInfo &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[4e653a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e655c4]"></a>_Z43AllocatePhysicalBufferAndCreateNewInfoEntryv</STRONG> (ARM, 240 bytes, Stack size 32 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z43AllocatePhysicalBufferAndCreateNewInfoEntryv &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e6563c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18NewBufferInfoEntryv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e653e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25RegisterVirtualScanBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e6545c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21InitializeScanManagerv
</UL>

<P><STRONG><a name="[4e65588]"></a>_Z25ScanManagementUpdateCyclem</STRONG> (ARM, 584 bytes, Stack size 40 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z25ScanManagementUpdateCyclem &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ResetEventj
<LI><a href="#[3530df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8SetEventj
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TryEnterCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
<LI><a href="#[4e6554c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverImageLineDataISTroutinev
</UL>

<P><STRONG><a name="[4e6554c]"></a>_Z33ScanDriverImageLineDataISTroutinev</STRONG> (ARM, 168 bytes, Stack size 16 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _Z33ScanDriverImageLineDataISTroutinev &rArr; _Z24OemHandleCellPhoneLightsm &rArr; _ZN25HW_light_control_OEM_Jade21HandleCellPhoneLightsEm &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TryEnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlAutomaticAimerControlm
<LI><a href="#[4e64e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24OemHandleCellPhoneLightsm
<LI><a href="#[4e65588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanManagementUpdateCyclem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scandriverscanmanager.o(.text)
</UL>
<P><STRONG><a name="[4e65510]"></a>_Z26ScanManagementFrameBoundryi</STRONG> (ARM, 764 bytes, Stack size 32 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _Z26ScanManagementFrameBoundryi &rArr; _Z25ScanManagementUpdateCyclem &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ResetEventj
<LI><a href="#[3530df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8SetEventj
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TryEnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e65588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanManagementUpdateCyclem
<LI><a href="#[4e6662c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18HandleImageNotOkayv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e6527c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e654d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanDriverVsyncISTroutinev
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>

<P><STRONG><a name="[4e654d4]"></a>_Z25ScanDriverVsyncISTroutinev</STRONG> (ARM, 100 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TryEnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlAutomaticAimerControlm
<LI><a href="#[4e64e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24OemHandleCellPhoneLightsm
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
</UL>

<P><STRONG><a name="[4e65498]"></a>_Z23ScanDriverSofISTroutinev</STRONG> (ARM, 52 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TryEnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocWriteFlashCurrentm
</UL>

<P><STRONG><a name="[4e6545c]"></a>_Z21InitializeScanManagerv</STRONG> (ARM, 408 bytes, Stack size 24 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _Z21InitializeScanManagerv &rArr; _Z25InitializeCriticalSectionPP15MutexStruct_tag &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11CloseHandlej
<LI><a href="#[3530e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11CreateEventPPviiS0_
<LI><a href="#[3530f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21DeleteCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25InitializeCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22LightControlInitializev
<LI><a href="#[4e655c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z43AllocatePhysicalBufferAndCreateNewInfoEntryv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Init
</UL>

<P><STRONG><a name="[4e65420]"></a>_Z23DeinitializeScanManagerv</STRONG> (ARM, 280 bytes, Stack size 16 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = _Z23DeinitializeScanManagerv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3530d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11CloseHandlej
<LI><a href="#[3530f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21DeleteCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Init
</UL>

<P><STRONG><a name="[4e653e4]"></a>_Z25RegisterVirtualScanBufferP23ScanDriverOpenContext_tPv</STRONG> (ARM, 100 bytes, Stack size 24 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _Z25RegisterVirtualScanBufferP23ScanDriverOpenContext_tPv &rArr; _Z43AllocatePhysicalBufferAndCreateNewInfoEntryv &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e64dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25CreateNewRegisteredBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e64ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22DeleteRegisteredBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e655c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z43AllocatePhysicalBufferAndCreateNewInfoEntryv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e653a8]"></a>_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv</STRONG> (ARM, 372 bytes, Stack size 40 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetBufferRegisterEntryP23ScanDriverOpenContext_tPv
<LI><a href="#[4e64ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22DeleteRegisteredBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e65600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21DeleteBufferInfoEntryP14ScanBufferInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e6536c]"></a>_Z26ScanManagementBufferReturnP23ScanDriverOpenContext_tPv</STRONG> (ARM, 180 bytes, Stack size 24 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z26ScanManagementBufferReturnP23ScanDriverOpenContext_tPv &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetBufferRegisterEntryP23ScanDriverOpenContext_tPv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e65330]"></a>_Z27ScanManagerNewScanAvailableP23ScanDriverOpenContext_t</STRONG> (ARM, 84 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z27ScanManagerNewScanAvailableP23ScanDriverOpenContext_t &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e652f4]"></a>_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv</STRONG> (ARM, 824 bytes, Stack size 56 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv &rArr; _Z22ScanManagementInitiatev &rArr; _Z26ScanManagementFrameBoundryi &rArr; _Z25ScanManagementUpdateCyclem &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ResetEventj
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetBufferRegisterEntryP23ScanDriverOpenContext_tPv
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e65150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e652b8]"></a>_Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_</STRONG> (ARM, 680 bytes, Stack size 56 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_ &rArr; _Z22ScanManagementInitiatev &rArr; _Z26ScanManagementFrameBoundryi &rArr; _Z25ScanManagementUpdateCyclem &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetBufferRegisterEntryP23ScanDriverOpenContext_tPv
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e6527c]"></a>_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti</STRONG> (ARM, 368 bytes, Stack size 40 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
<LI><a href="#[4e66668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanManagementInitiatev
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e65150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e65240]"></a>_Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti</STRONG> (ARM, 188 bytes, Stack size 24 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LightControlEnableGlobalControlv
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e65150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e65204]"></a>_Z20ScanDriverIsScanningv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z20ScanDriverIsScanningv &rArr; _Z20EnterCriticalSectionPP15MutexStruct_tag &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e651c8]"></a>_Z29ScanDriverPrepareChangeConfigP23ScanDriverOpenContext_t</STRONG> (ARM, 76 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z29ScanDriverPrepareChangeConfigP23ScanDriverOpenContext_t &rArr; _Z20EnterCriticalSectionPP15MutexStruct_tag &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[4e63cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScnDrv_SetExposureSettingsP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetEngineConfigP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetExposureModeP23ScanDriverOpenContext_tPm
</UL>

<P><STRONG><a name="[4e6518c]"></a>_Z29ScanDriverCleanupChangeConfigP23ScanDriverOpenContext_t</STRONG> (ARM, 88 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z29ScanDriverCleanupChangeConfigP23ScanDriverOpenContext_t &rArr; _Z20LeaveCriticalSectionPP15MutexStruct_tag &rArr; MT_ReleaseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[4e63cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScnDrv_SetExposureSettingsP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetEngineConfigP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetExposureModeP23ScanDriverOpenContext_tPm
</UL>

<P><STRONG><a name="[4e65150]"></a>_Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv</STRONG> (ARM, 88 bytes, Stack size 16 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e65240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e6527c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e65114]"></a>_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm</STRONG> (ARM, 172 bytes, Stack size 24 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm &rArr; _Z29LightControlIlluminationStateP23ScanDriverOpenContext_ti &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlIlluminationIntensityP23ScanDriverOpenContext_tm
<LI><a href="#[4e64cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlAutomaticAimerControlP23ScanDriverOpenContext_ti
<LI><a href="#[4e64d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29LightControlIlluminationStateP23ScanDriverOpenContext_ti
<LI><a href="#[4e64d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26LightControlAimerIntensityP23ScanDriverOpenContext_tm
<LI><a href="#[4e64e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22LightControlAimerStateP23ScanDriverOpenContext_ti
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e650d8]"></a>_Z28ScanDriverScanningMasterModev</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
<LI><a href="#[4e64ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlAutomaticAimerControlm
<LI><a href="#[500b564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ForceCellphoneb
</UL>

<P><STRONG><a name="[4e6509c]"></a>_Z28ScanManagerReconfigureEngineP23ScanDriverOpenContext_t</STRONG> (ARM, 180 bytes, Stack size 16 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _Z28ScanManagerReconfigureEngineP23ScanDriverOpenContext_t &rArr; _Z10ResetEventj &rArr; MT_ResetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3530dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ResetEventj
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TryEnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e65060]"></a>_Z32ScanDriverPreEngineCommunicationv</STRONG> (ARM, 24 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z32ScanDriverPreEngineCommunicationv &rArr; _Z20EnterCriticalSectionPP15MutexStruct_tag &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e65024]"></a>_Z33ScanDriverPostEngineCommunicationv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z33ScanDriverPostEngineCommunicationv &rArr; _Z20LeaveCriticalSectionPP15MutexStruct_tag &rArr; MT_ReleaseMutex
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e64fe8]"></a>_Z22IsScanDriverPoweredOffv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e64d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LightControlEnableGlobalControlv
</UL>

<P><STRONG><a name="[4e64fac]"></a>_Z18ScanDriverPowerOffv</STRONG> (ARM, 96 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z18ScanDriverPowerOffv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Init
</UL>

<P><STRONG><a name="[4e64f70]"></a>_Z17ScanDriverPowerOnv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z17ScanDriverPowerOnv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e64d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LightControlEnableGlobalControlv
</UL>

<P><STRONG><a name="[4e63e90]"></a>_Z24ScnDrv_CreateOpenContextv</STRONG> (ARM, 108 bytes, Stack size 8 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _Z24ScnDrv_CreateOpenContextv &rArr; _Z6zallocj &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e65678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5zfreePv
<LI><a href="#[4e656b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6zallocj
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_Open
</UL>

<P><STRONG><a name="[4e64dcc]"></a>_Z25CreateNewRegisteredBufferP23ScanDriverOpenContext_tPv</STRONG> (ARM, 144 bytes, Stack size 16 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _Z25CreateNewRegisteredBufferP23ScanDriverOpenContext_tPv &rArr; _Z6zallocj &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e656b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6zallocj
</UL>
<BR>[Called By]<UL><LI><a href="#[4e653e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25RegisterVirtualScanBufferP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e64ef8]"></a>_Z22DeleteRegisteredBufferP23ScanDriverOpenContext_tPv</STRONG> (ARM, 120 bytes, Stack size 8 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z22DeleteRegisteredBufferP23ScanDriverOpenContext_tPv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e65678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5zfreePv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e653a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e653e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25RegisterVirtualScanBufferP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e64ebc]"></a>_Z22GetBufferRegisterEntryP23ScanDriverOpenContext_tPv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, scandriveropencontext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e652b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
<LI><a href="#[4e6536c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementBufferReturnP23ScanDriverOpenContext_tPv
<LI><a href="#[4e653a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e63e18]"></a>_Z22ScnDrv_SetExposureModeP23ScanDriverOpenContext_tPm</STRONG> (ARM, 136 bytes, Stack size 16 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _Z22ScnDrv_SetExposureModeP23ScanDriverOpenContext_tPm &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6518c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverCleanupChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[4e651c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverPrepareChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e63ddc]"></a>_Z22ScnDrv_GetExposureModeP23ScanDriverOpenContext_tPm</STRONG> (ARM, 16 bytes, Stack size 0 bytes, scandriveropencontext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e63da0]"></a>_Z22ScnDrv_SetEngineConfigP23ScanDriverOpenContext_tPmm</STRONG> (ARM, 132 bytes, Stack size 24 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _Z22ScnDrv_SetEngineConfigP23ScanDriverOpenContext_tPmm &rArr; _Z33LightControlSetIlluminationSourceP23ScanDriverOpenContext_tm &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e63bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlSetIlluminationSourceP23ScanDriverOpenContext_tm
<LI><a href="#[4e6518c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverCleanupChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[4e651c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverPrepareChangeConfigP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e63d64]"></a>_Z22ScnDrv_GetEngineConfigP23ScanDriverOpenContext_tPmm</STRONG> (ARM, 188 bytes, Stack size 4 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z22ScnDrv_GetEngineConfigP23ScanDriverOpenContext_tPmm
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e63d28]"></a>_Z11CheckRangesPmm</STRONG> (ARM, 544 bytes, Stack size 0 bytes, scandriveropencontext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e63cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScnDrv_SetExposureSettingsP23ScanDriverOpenContext_tPmm
</UL>

<P><STRONG><a name="[4e63cec]"></a>_Z26ScnDrv_SetExposureSettingsP23ScanDriverOpenContext_tPmm</STRONG> (ARM, 848 bytes, Stack size 32 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _Z26ScnDrv_SetExposureSettingsP23ScanDriverOpenContext_tPmm &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e63d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11CheckRangesPmm
<LI><a href="#[4e6518c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverCleanupChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[4e651c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanDriverPrepareChangeConfigP23ScanDriverOpenContext_t
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e63cb0]"></a>_Z26ScnDrv_GetExposureSettingsP23ScanDriverOpenContext_tPmm</STRONG> (ARM, 308 bytes, Stack size 4 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z26ScnDrv_GetExposureSettingsP23ScanDriverOpenContext_tPmm
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e63c74]"></a>_Z20ScnDrv_GetEngineTypeP23ScanDriverOpenContext_tPm</STRONG> (ARM, 16 bytes, Stack size 0 bytes, scandriveropencontext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e63c38]"></a>_Z25ScnDrv_GetImageAttributesP23ScanDriverOpenContext_tPvPmm</STRONG> (ARM, 404 bytes, Stack size 4 bytes, scandriveropencontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z25ScnDrv_GetImageAttributesP23ScanDriverOpenContext_tPvPmm
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e67568]"></a>_Z28SetupAutoAimControlFunctionsPFvmES0_</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e67a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoDetectBYDv
</UL>

<P><STRONG><a name="[4e64e44]"></a>_Z22LightControlInitializev</STRONG> (ARM, 88 bytes, Stack size 16 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z22LightControlInitializev
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6545c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21InitializeScanManagerv
</UL>

<P><STRONG><a name="[4e64ca0]"></a>_Z33LightControlAutomaticAimerControlm</STRONG> (ARM, 100 bytes, Stack size 8 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z33LightControlAutomaticAimerControlm
</UL>
<BR>[Calls]<UL><LI><a href="#[4e650d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanDriverScanningMasterModev
</UL>
<BR>[Called By]<UL><LI><a href="#[4e654d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanDriverVsyncISTroutinev
<LI><a href="#[4e6554c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverImageLineDataISTroutinev
</UL>

<P><STRONG><a name="[4e64d18]"></a>_Z31LightControlEnableGlobalControlv</STRONG> (ARM, 512 bytes, Stack size 48 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5dab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GetOpenContextEntryP23ScanDriverOpenContext_t
<LI><a href="#[4e64f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ScanDriverPowerOnv
<LI><a href="#[4e64fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22IsScanDriverPoweredOffv
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
<LI><a href="#[4e65240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti
</UL>

<P><STRONG><a name="[4e5df2c]"></a>_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t</STRONG> (ARM, 816 bytes, Stack size 64 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4146f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16GetILL_FlashModev
<LI><a href="#[4e64d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LightControlEnableGlobalControlv
<LI><a href="#[4e650d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanDriverScanningMasterModev
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5def0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19LightControlSetTagsP23ScanDriverOpenContext_tPKmm
<LI><a href="#[4e63bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlSetIlluminationSourceP23ScanDriverOpenContext_tm
<LI><a href="#[4e64c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t
<LI><a href="#[4e64c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlIlluminationIntensityP23ScanDriverOpenContext_tm
<LI><a href="#[4e64cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33LightControlAutomaticAimerControlP23ScanDriverOpenContext_ti
<LI><a href="#[4e64d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29LightControlIlluminationStateP23ScanDriverOpenContext_ti
<LI><a href="#[4e64d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26LightControlAimerIntensityP23ScanDriverOpenContext_tm
<LI><a href="#[4e64e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22LightControlAimerStateP23ScanDriverOpenContext_ti
<LI><a href="#[500b564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ForceCellphoneb
</UL>

<P><STRONG><a name="[4e64cdc]"></a>_Z33LightControlAutomaticAimerControlP23ScanDriverOpenContext_ti</STRONG> (ARM, 160 bytes, Stack size 16 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _Z33LightControlAutomaticAimerControlP23ScanDriverOpenContext_ti &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
</UL>

<P><STRONG><a name="[4e64d54]"></a>_Z29LightControlIlluminationStateP23ScanDriverOpenContext_ti</STRONG> (ARM, 180 bytes, Stack size 24 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _Z29LightControlIlluminationStateP23ScanDriverOpenContext_ti &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
</UL>

<P><STRONG><a name="[4e64e80]"></a>_Z22LightControlAimerStateP23ScanDriverOpenContext_ti</STRONG> (ARM, 180 bytes, Stack size 24 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _Z22LightControlAimerStateP23ScanDriverOpenContext_ti &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
</UL>

<P><STRONG><a name="[4e63bfc]"></a>_Z33LightControlSetIlluminationSourceP23ScanDriverOpenContext_tm</STRONG> (ARM, 20 bytes, Stack size 8 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _Z33LightControlSetIlluminationSourceP23ScanDriverOpenContext_tm &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4e63da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetEngineConfigP23ScanDriverOpenContext_tPmm
</UL>

<P><STRONG><a name="[4e64c64]"></a>_Z33LightControlIlluminationIntensityP23ScanDriverOpenContext_tm</STRONG> (ARM, 20 bytes, Stack size 8 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _Z33LightControlIlluminationIntensityP23ScanDriverOpenContext_tm &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
</UL>

<P><STRONG><a name="[4e64d90]"></a>_Z26LightControlAimerIntensityP23ScanDriverOpenContext_tm</STRONG> (ARM, 20 bytes, Stack size 8 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _Z26LightControlAimerIntensityP23ScanDriverOpenContext_tm &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
</UL>

<P><STRONG><a name="[4e64c28]"></a>_Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t</STRONG> (ARM, 56 bytes, Stack size 8 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6527c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti
</UL>

<P><STRONG><a name="[4e5def0]"></a>_Z19LightControlSetTagsP23ScanDriverOpenContext_tPKmm</STRONG> (ARM, 292 bytes, Stack size 56 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = _Z19LightControlSetTagsP23ScanDriverOpenContext_tPKmm &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5deb4]"></a>_Z19LightControlGetTagsP23ScanDriverOpenContext_tPKmPmm</STRONG> (ARM, 152 bytes, Stack size 20 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z19LightControlGetTagsP23ScanDriverOpenContext_tPKmPmm
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[500b564]"></a>_Z14ForceCellphoneb</STRONG> (ARM, 44 bytes, Stack size 8 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _Z14ForceCellphoneb &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
<LI><a href="#[4e650d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanDriverScanningMasterModev
</UL>
<BR>[Called By]<UL><LI><a href="#[500bce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500bf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23AutoExpCalcPresentationEv
<LI><a href="#[500bff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD16AutoExpCalcFixedEv
</UL>

<P><STRONG><a name="[4e5de78]"></a>_Z10LedControlhb</STRONG> (ARM, 228 bytes, Stack size 24 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _Z10LedControlhb &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4149a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18LedControlStateBYDj
<LI><a href="#[4e5da7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocInternalWriteRegistershPhh
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5dc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade10setLedModeEjj
<LI><a href="#[4e5dd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HW_light_control_MT9V02214setHwLightModeEmmmm
</UL>

<P><STRONG><a name="[4e5de3c]"></a>_ZN25HW_light_control_OEM_Jade17WriteFlashCurrentEm</STRONG> (ARM, 188 bytes, Stack size 16 bytes, ScanDriverLightControl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e5da7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocInternalWriteRegistershPhh
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e64f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocWriteFlashCurrentm
</UL>

<P><STRONG><a name="[4e64f34]"></a>_Z21PsocWriteFlashCurrentm</STRONG> (ARM, 168 bytes, Stack size 16 bytes, ScanDriverLightControl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e5de3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade17WriteFlashCurrentEm
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverSofISTroutinev
</UL>

<P><STRONG><a name="[4e5de00]"></a>_ZN25HW_light_control_OEM_Jade21HandleCellPhoneLightsEm</STRONG> (ARM, 388 bytes, Stack size 32 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _ZN25HW_light_control_OEM_Jade21HandleCellPhoneLightsEm &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500c734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22Write_Frame_Blank_Timet
</UL>
<BR>[Called By]<UL><LI><a href="#[4e64e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24OemHandleCellPhoneLightsm
</UL>

<P><STRONG><a name="[4e64e08]"></a>_Z24OemHandleCellPhoneLightsm</STRONG> (ARM, 92 bytes, Stack size 8 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _Z24OemHandleCellPhoneLightsm &rArr; _ZN25HW_light_control_OEM_Jade21HandleCellPhoneLightsEm &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5de00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade21HandleCellPhoneLightsEm
</UL>
<BR>[Called By]<UL><LI><a href="#[4e654d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScanDriverVsyncISTroutinev
<LI><a href="#[4e6554c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverImageLineDataISTroutinev
</UL>

<P><STRONG><a name="[4e5ddc4]"></a>_ZN16PSOC_current_reg12setIntensityEj</STRONG> (ARM, 120 bytes, Stack size 0 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5dbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade12flashCurrentEbi
<LI><a href="#[4e5dc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm
<LI><a href="#[4e5dd10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HW_light_control_MT9V02212flashCurrentEb
<LI><a href="#[4e5dd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HW_light_control_MT9V02214setHwLightModeEmmmm
</UL>

<P><STRONG><a name="[4e6752c]"></a>_ZN24HW_light_control_MT9V022C1Ev</STRONG> (ARM, 140 bytes, Stack size 0 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e67a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoDetectBYDv
</UL>

<P><STRONG><a name="[4e5dd88]"></a>_ZN24HW_light_control_MT9V022C2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ScanDriverLightControl.o(.text), UNUSED)

<P><STRONG><a name="[4e5dd4c]"></a>_ZN24HW_light_control_MT9V02214setHwLightModeEmmmm</STRONG> (ARM, 664 bytes, Stack size 56 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _ZN24HW_light_control_MT9V02214setHwLightModeEmmmm &rArr; _Z10LedControlhb &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4149874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14IllumConfigBYDm
<LI><a href="#[4149964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12AimConfigBYDm
<LI><a href="#[4e5ddc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16PSOC_current_reg12setIntensityEj
<LI><a href="#[4e5de78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10LedControlhb
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.constdata__ZTV24HW_light_control_MT9V022)
</UL>
<P><STRONG><a name="[4e5dd10]"></a>_ZN24HW_light_control_MT9V02212flashCurrentEb</STRONG> (ARM, 52 bytes, Stack size 4 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN24HW_light_control_MT9V02212flashCurrentEb
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5ddc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16PSOC_current_reg12setIntensityEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.constdata__ZTV24HW_light_control_MT9V022)
</UL>
<P><STRONG><a name="[4e674f0]"></a>_ZN25HW_light_control_OEM_JadeC1Ev</STRONG> (ARM, 176 bytes, Stack size 0 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e67a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoDetectBYDv
</UL>

<P><STRONG><a name="[4e5dcd4]"></a>_ZN25HW_light_control_OEM_JadeC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ScanDriverLightControl.o(.text), UNUSED)

<P><STRONG><a name="[4e5dc98]"></a>_ZN25HW_light_control_OEM_Jade10setLedModeEjj</STRONG> (ARM, 340 bytes, Stack size 24 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _ZN25HW_light_control_OEM_Jade10setLedModeEjj &rArr; _Z10LedControlhb &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5da7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocInternalWriteRegistershPhh
<LI><a href="#[4e5de78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10LedControlhb
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5dc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm
</UL>

<P><STRONG><a name="[4e5dc5c]"></a>_ZN25HW_light_control_OEM_Jade20SetUpCellPhoneLightsEmmmm</STRONG> (ARM, 324 bytes, Stack size 32 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _ZN25HW_light_control_OEM_Jade20SetUpCellPhoneLightsEmmmm &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5dc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm
</UL>

<P><STRONG><a name="[4e5dc20]"></a>_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm</STRONG> (ARM, 1368 bytes, Stack size 56 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm &rArr; _ZN25HW_light_control_OEM_Jade10setLedModeEjj &rArr; _Z10LedControlhb &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[4149874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14IllumConfigBYDm
<LI><a href="#[4149964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12AimConfigBYDm
<LI><a href="#[4e5dc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade20SetUpCellPhoneLightsEmmmm
<LI><a href="#[4e5dc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade10setLedModeEjj
<LI><a href="#[4e5ddc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16PSOC_current_reg12setIntensityEj
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.constdata__ZTV25HW_light_control_OEM_Jade)
</UL>
<P><STRONG><a name="[4e5dbe4]"></a>_ZN25HW_light_control_OEM_Jade12flashCurrentEbi</STRONG> (ARM, 84 bytes, Stack size 4 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ZN25HW_light_control_OEM_Jade12flashCurrentEbi
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5ddc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16PSOC_current_reg12setIntensityEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.constdata__ZTV25HW_light_control_OEM_Jade)
</UL>
<P><STRONG><a name="[4e5dab8]"></a>_Z19GetOpenContextEntryP23ScanDriverOpenContext_t</STRONG> (ARM, 72 bytes, Stack size 0 bytes, scandriverinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e64d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LightControlEnableGlobalControlv
</UL>

<P><STRONG><a name="[36ba3d4]"></a>SCN_Init</STRONG> (ARM, 96 bytes, Stack size 8 bytes, scandriverinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = SCN_Init &rArr; _Z21InitializeScanManagerv &rArr; _Z25InitializeCriticalSectionPP15MutexStruct_tag &rArr; MT_CreateMutex &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25InitializeCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e64fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ScanDriverPowerOffv
<LI><a href="#[4e65420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23DeinitializeScanManagerv
<LI><a href="#[4e6545c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21InitializeScanManagerv
<LI><a href="#[4e67a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoDetectScanEngine
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
</UL>

<P><STRONG><a name="[36ba398]"></a>SCN_Open</STRONG> (ARM, 160 bytes, Stack size 16 bytes, scandriverinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SCN_Open &rArr; _Z24ScnDrv_CreateOpenContextv &rArr; _Z6zallocj &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e63e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ScnDrv_CreateOpenContextv
<LI><a href="#[4e65678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5zfreePv
<LI><a href="#[4e656b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6zallocj
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
</UL>

<P><STRONG><a name="[36ba410]"></a>SCN_IOControl</STRONG> (ARM, 1840 bytes, Stack size 40 bytes, scandriverinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e5be20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PsocSetupDiagnosticModei
<LI><a href="#[4e5be5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ReportImagerPropertiesPKmPmm
<LI><a href="#[4e5be98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19UpdatePowerSettingsv
<LI><a href="#[4e5bed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PsocUpdateRegistersmPKhh
<LI><a href="#[4e5bf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocWriteRegistersmPKhh
<LI><a href="#[4e5bf4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocReadConfigAreav
<LI><a href="#[4e5bf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PsocReadRegistersmPhh
<LI><a href="#[4e5bfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PsocWriteBytesPhh
<LI><a href="#[4e5c000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13PsocReadBytesPhh
<LI><a href="#[4e5c03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11EngineResetv
<LI><a href="#[4e5deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19LightControlGetTagsP23ScanDriverOpenContext_tPKmPmm
<LI><a href="#[4e5def0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19LightControlSetTagsP23ScanDriverOpenContext_tPKmm
<LI><a href="#[4e63c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ScnDrv_GetImageAttributesP23ScanDriverOpenContext_tPvPmm
<LI><a href="#[4e63c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ScnDrv_GetEngineTypeP23ScanDriverOpenContext_tPm
<LI><a href="#[4e63cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScnDrv_GetExposureSettingsP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScnDrv_SetExposureSettingsP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_GetEngineConfigP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetEngineConfigP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_GetExposureModeP23ScanDriverOpenContext_tPm
<LI><a href="#[4e63e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetExposureModeP23ScanDriverOpenContext_tPm
<LI><a href="#[4e64f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ScanDriverPowerOnv
<LI><a href="#[4e64fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22IsScanDriverPoweredOffv
<LI><a href="#[4e65024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z33ScanDriverPostEngineCommunicationv
<LI><a href="#[4e65060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32ScanDriverPreEngineCommunicationv
<LI><a href="#[4e6509c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagerReconfigureEngineP23ScanDriverOpenContext_t
<LI><a href="#[4e65114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ScanDriverAlterLightsmP23ScanDriverOpenContext_tm
<LI><a href="#[4e65150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv
<LI><a href="#[4e65204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ScanDriverIsScanningv
<LI><a href="#[4e65240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScanDriverStopScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e6527c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e652b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
<LI><a href="#[4e65330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27ScanManagerNewScanAvailableP23ScanDriverOpenContext_t
<LI><a href="#[4e6536c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementBufferReturnP23ScanDriverOpenContext_tPv
<LI><a href="#[4e653a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UnregisterVirtualScanBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[4e653e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25RegisterVirtualScanBufferP23ScanDriverOpenContext_tPv
<LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger22OnChangedConfigurationEv
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18DecoderPowerupInitv
<LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
<LI><a href="#[374f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6decodePh
<LI><a href="#[374f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessLinearScanPh
<LI><a href="#[374f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15GetBestNewImagePPh
<LI><a href="#[374f4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19StoreLastDecodeInfoP13DecoderResult
<LI><a href="#[38807d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12StartImagingv
<LI><a href="#[388084c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StopImagingv
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[3885694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImageEngineHasPsocv
<LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[413b030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ImageSnapWithParametersPPcPj
<LI><a href="#[413b0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SimulateDecodingi
<LI><a href="#[413b0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9TakePhotov
<LI><a href="#[413b120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GrabFramev
<LI><a href="#[413b15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShowExpoReportv
<LI><a href="#[413dc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8GetImagev
<LI><a href="#[413dcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17NewImageAvailablev
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14OpticalTriggerEv
<LI><a href="#[413e03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger18GoToReducedImagingEv
<LI><a href="#[413e12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger29WaitForHeatMitigationCoolDownEjj
<LI><a href="#[413e1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14SetTriggerModeEi
<LI><a href="#[413e294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger17GoToNormalImagingEv
<LI><a href="#[41f7d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SetLightsCommoniiii
<LI><a href="#[41f90cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoCropImagev
<LI><a href="#[41fe6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9GetLightsi
<LI><a href="#[41fe748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17RowNoiseReductionv
<LI><a href="#[41fe838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13TakeTwoImagesv
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
<LI><a href="#[41fe8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ImageShipv
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
<LI><a href="#[43390e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Psoc5100WriteiPhi
<LI><a href="#[4339124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100SaveToEEpromv
<LI><a href="#[4339160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Psoc5100WritePKci
<LI><a href="#[433919c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100LoadFirmwareDataPhibb
<LI><a href="#[43391d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100CalculateDnldChecksumtt
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4339304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Psoc5100ReadiPci
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
<LI><a href="#[4339610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocCompareFirmwareVersionv
<LI><a href="#[5300b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36ProcessEngineIlluminationColorChangev
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
<LI><a href="#[5300c04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z41ProcessEngineFirmwareDiagnosticModeChangev
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[5302c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GrabOneImageFramev
<LI><a href="#[5302cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetTestLightsi
<LI><a href="#[5302d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32SetOrRestoreImagerRegisterValuesi
<LI><a href="#[54e1688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendScanDriverRevisionv
</UL>

<P><STRONG><a name="[4e5be98]"></a>_Z19UpdatePowerSettingsv</STRONG> (ARM, 48 bytes, Stack size 16 bytes, ScanDriverGlobalConfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z19UpdatePowerSettingsv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5a200]"></a>_Z21PsocPostCommunicationv</STRONG> (ARM, 56 bytes, Stack size 0 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5bf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocWriteRegistersmPKhh
<LI><a href="#[4e5bf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PsocReadRegistersmPhh
<LI><a href="#[4e5bfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PsocWriteBytesPhh
<LI><a href="#[4e5c000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13PsocReadBytesPhh
<LI><a href="#[4e5c03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11EngineResetv
</UL>

<P><STRONG><a name="[4e5a110]"></a>_Z20PsocPreCommunicationv</STRONG> (ARM, 192 bytes, Stack size 16 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z20PsocPreCommunicationv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5bf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocWriteRegistersmPKhh
<LI><a href="#[4e5bf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PsocReadRegistersmPhh
<LI><a href="#[4e5bfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PsocWriteBytesPhh
<LI><a href="#[4e5c000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13PsocReadBytesPhh
<LI><a href="#[4e5c03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11EngineResetv
</UL>

<P><STRONG><a name="[4e5bfc4]"></a>_Z14PsocWriteBytesPhh</STRONG> (ARM, 84 bytes, Stack size 24 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z14PsocWriteBytesPhh &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5a110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PsocPreCommunicationv
<LI><a href="#[4e5a200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocPostCommunicationv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5a0d4]"></a>_Z14NoLatencyIssuev</STRONG> (ARM, 112 bytes, Stack size 0 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5bf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocWriteRegistersmPKhh
<LI><a href="#[4e5bf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PsocReadRegistersmPhh
<LI><a href="#[4e5c03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11EngineResetv
</UL>

<P><STRONG><a name="[4e5c03c]"></a>_Z11EngineResetv</STRONG> (ARM, 120 bytes, Stack size 16 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z11EngineResetv &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5a0d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14NoLatencyIssuev
<LI><a href="#[4e5a110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PsocPreCommunicationv
<LI><a href="#[4e5a200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocPostCommunicationv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5be20]"></a>_Z23PsocSetupDiagnosticModei</STRONG> (ARM, 44 bytes, Stack size 0 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5c000]"></a>_Z13PsocReadBytesPhh</STRONG> (ARM, 84 bytes, Stack size 24 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z13PsocReadBytesPhh &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5a110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PsocPreCommunicationv
<LI><a href="#[4e5a200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocPostCommunicationv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5bf10]"></a>_Z18PsocWriteRegistersmPKhh</STRONG> (ARM, 480 bytes, Stack size 48 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z18PsocWriteRegistersmPKhh &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5a0d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14NoLatencyIssuev
<LI><a href="#[4e5a110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PsocPreCommunicationv
<LI><a href="#[4e5a200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocPostCommunicationv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e5bed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PsocUpdateRegistersmPKhh
<LI><a href="#[4e5da7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PsocInternalWriteRegistershPhh
</UL>

<P><STRONG><a name="[4e5bf88]"></a>_Z17PsocReadRegistersmPhh</STRONG> (ARM, 432 bytes, Stack size 48 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z17PsocReadRegistersmPhh &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5a0d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14NoLatencyIssuev
<LI><a href="#[4e5a110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PsocPreCommunicationv
<LI><a href="#[4e5a200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocPostCommunicationv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e5bf4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocReadConfigAreav
</UL>

<P><STRONG><a name="[4e5a098]"></a>_Z17PsocLoadStructurePh</STRONG> (ARM, 132 bytes, Stack size 0 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5bed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PsocUpdateRegistersmPKhh
<LI><a href="#[4e5bf4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocReadConfigAreav
</UL>

<P><STRONG><a name="[4e5bed4]"></a>_Z19PsocUpdateRegistersmPKhh</STRONG> (ARM, 140 bytes, Stack size 24 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z19PsocUpdateRegistersmPKhh &rArr; _Z18PsocWriteRegistersmPKhh &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5a098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PsocLoadStructurePh
<LI><a href="#[4e5bf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocWriteRegistersmPKhh
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5da7c]"></a>_Z26PsocInternalWriteRegistershPhh</STRONG> (ARM, 32 bytes, Stack size 0 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z26PsocInternalWriteRegistershPhh &rArr; _Z18PsocWriteRegistersmPKhh &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5bf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PsocWriteRegistersmPKhh
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5dc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade10setLedModeEjj
<LI><a href="#[4e5de3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade17WriteFlashCurrentEm
<LI><a href="#[4e5de78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10LedControlhb
</UL>

<P><STRONG><a name="[4e5bf4c]"></a>_Z18PsocReadConfigAreav</STRONG> (ARM, 164 bytes, Stack size 24 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z18PsocReadConfigAreav &rArr; _Z17PsocReadRegistersmPhh &rArr; _Z20PsocPreCommunicationv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5a098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PsocLoadStructurePh
<LI><a href="#[4e5bf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PsocReadRegistersmPhh
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[4e5be5c]"></a>_Z22ReportImagerPropertiesPKmPmm</STRONG> (ARM, 300 bytes, Stack size 40 bytes, ScanDriverEngine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z22ReportImagerPropertiesPKmPmm
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>

<P><STRONG><a name="[500b528]"></a>dbg_output</STRONG> (ARM, 56 bytes, Stack size 280 bytes, scandriverdebug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[5b21764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4e5dc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade14setHwLightModeEmmmm
<LI><a href="#[4e5dc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade20SetUpCellPhoneLightsEmmmm
<LI><a href="#[4e5dc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade10setLedModeEjj
<LI><a href="#[4e5dd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HW_light_control_MT9V02214setHwLightModeEmmmm
<LI><a href="#[4e5de00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade21HandleCellPhoneLightsEm
<LI><a href="#[4e5de3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HW_light_control_OEM_Jade17WriteFlashCurrentEm
<LI><a href="#[4e5de78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10LedControlhb
<LI><a href="#[4e5def0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19LightControlSetTagsP23ScanDriverOpenContext_tPKmm
<LI><a href="#[4e5df2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t
<LI><a href="#[4e63cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScnDrv_SetExposureSettingsP23ScanDriverOpenContext_tPmm
<LI><a href="#[4e63e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ScnDrv_SetExposureModeP23ScanDriverOpenContext_tPm
<LI><a href="#[4e64d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LightControlEnableGlobalControlv
<LI><a href="#[4e64f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PsocWriteFlashCurrentm
<LI><a href="#[500b870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16Exposure_control17get_pixel_samplerEv
<LI><a href="#[500b8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16Exposure_control13calc_exposureEv
<LI><a href="#[500b960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16Exposure_control11frame_eventEv
<LI><a href="#[500ba8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13calc_exposureEv
<LI><a href="#[500bac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t
<LI><a href="#[500bb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN26Exposure_control_cellphone13calc_exposureEv
<LI><a href="#[500bc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD31ScanEnginePowerUpAndRestoreRegsEv
<LI><a href="#[500bc6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD32ScanEnginePowerUpAndRestoreStateEv
<LI><a href="#[500bca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD31ScanEngineSaveStateAndPowerDownEv
<LI><a href="#[500bce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500bd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500bd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD11ResetEngineEv
<LI><a href="#[500bdd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD19LightSettingsUpdateEPK23ScanDriverOpenContext_t
<LI><a href="#[500be4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD15loadOpenContextEP23ScanDriverOpenContext_t
<LI><a href="#[500be88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD33ScanManagerFrameEventAutoExposureEv
<LI><a href="#[500bf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD17ScanEngineRestartEP23ScanDriverOpenContext_t
<LI><a href="#[500bf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23AutoExpCalcPresentationEv
<LI><a href="#[500bff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD16AutoExpCalcFixedEv
<LI><a href="#[500c02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23ScanEngineFaultOccurredEv
<LI><a href="#[500c068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD41ScanManagerEngineSaysOkToCaptureNextFrameEv
<LI><a href="#[500c194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD28CellphoneDetectionViaImagingEPhjj
<LI><a href="#[5011f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12set_exp_gaintt
</UL>

<P><STRONG><a name="[5098220]"></a>_Z27StoreApplicationCodeToFlashPKhibP7HSTRING</STRONG> (ARM, 168 bytes, Stack size 96 bytes, flashapplicationcode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = _Z27StoreApplicationCodeToFlashPKhibP7HSTRING &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[50981e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14flash_debug_onv
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
</UL>

<P><STRONG><a name="[5097230]"></a>_Z13ShowDirectoryPKc</STRONG> (ARM, 304 bytes, Stack size 536 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 876 + Unknown Stack Size
<LI>Call Chain = _Z13ShowDirectoryPKc &rArr; fsm_findfirst &rArr; fg_findfirst &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[38946b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfirst (via BLX)
<LI><a href="#[3a1c93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ev
<LI><a href="#[3f1e3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getfreespace (via BLX)
<LI><a href="#[3f1e438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getdrive (via BLX)
<LI><a href="#[3f1e474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findnext (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb
<LI><a href="#[5303580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18FlashDiskDirectoryv
</UL>

<P><STRONG><a name="[50981e4]"></a>_Z14flash_debug_onv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5098220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreApplicationCodeToFlashPKhibP7HSTRING
</UL>

<P><STRONG><a name="[36ba104]"></a>_Z13initflashdiskb</STRONG> (ARM, 872 bytes, Stack size 232 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2104 + Unknown Stack Size
<LI>Call Chain = _Z13initflashdiskb &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[2278114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11GetBaudRatev
<LI><a href="#[352f214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7RAMOnlyPKci
<LI><a href="#[36b9858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8MarkTimeiPKc
<LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
<LI><a href="#[3894674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mkdir (via BLX)
<LI><a href="#[3f1e4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_chdrive (via BLX)
<LI><a href="#[5096f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mountdrive (via BLX)
<LI><a href="#[5096f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_format (via BLX)
<LI><a href="#[5096f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_enterFS (via BLX)
<LI><a href="#[5097050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_getmem_flashdrive (via BLX)
<LI><a href="#[509708c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_init (via BLX)
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc
<LI><a href="#[5098220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreApplicationCodeToFlashPKhibP7HSTRING
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[509717c]"></a>_Z19IsConfigurationFilePKc</STRONG> (ARM, 216 bytes, Stack size 8 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z19IsConfigurationFilePKc
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[36ba17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EncodeBufferPKcPhi
</UL>

<P><STRONG><a name="[36ba17c]"></a>_Z12EncodeBufferPKcPhi</STRONG> (ARM, 60 bytes, Stack size 16 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z12EncodeBufferPKcPhi &rArr; _Z19IsConfigurationFilePKc
</UL>
<BR>[Calls]<UL><LI><a href="#[509717c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19IsConfigurationFilePKc
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
</UL>

<P><STRONG><a name="[36b9e70]"></a>_Z17WriteAndCloseFilePKcPKhi</STRONG> (ARM, 116 bytes, Stack size 24 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = _Z17WriteAndCloseFilePKcPKhi &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
<LI><a href="#[5096eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seteof (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
<LI><a href="#[5098220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreApplicationCodeToFlashPKhibP7HSTRING
</UL>

<P><STRONG><a name="[36b9f60]"></a>_Z16ReadAndCloseFilePKcjPPh</STRONG> (ARM, 200 bytes, Stack size 32 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = _Z16ReadAndCloseFilePKcjPPh &rArr; fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[2274028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read (via BLX)
<LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3896078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_filelength (via BLX)
<LI><a href="#[509717c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19IsConfigurationFilePKc
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
<LI><a href="#[3e9a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27StoreConfigToFlashIfChangedPKcPhi
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_
<LI><a href="#[3f1d6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginReadFilev
<LI><a href="#[46d78f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoadProkeyFilev
<LI><a href="#[52fe4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load485WorkingConfigurationOnev
<LI><a href="#[52fe51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load485WorkingConfigurationZerov
<LI><a href="#[52fe558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load232WorkingConfigurationOnev
<LI><a href="#[52fe594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load232WorkingConfigurationZerov
<LI><a href="#[52fe5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadKBWWorkingConfigurationOnev
<LI><a href="#[52fe60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadKBWWorkingConfigurationZerov
<LI><a href="#[52fe648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadUSBWorkingConfigurationOnev
<LI><a href="#[52fe684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadUSBWorkingConfigurationZerov
<LI><a href="#[5300b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23WriteEngineFirmwareFilev
<LI><a href="#[53031fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskReadFilev
</UL>

<P><STRONG><a name="[36b981c]"></a>_Z9EraseFilePKc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[3e99e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35DeleteDefaultConfigurationFromFlashv
<LI><a href="#[3f1d5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginDeleteFilev
<LI><a href="#[5303238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskDeleteFilev
</UL>

<P><STRONG><a name="[3f1d3d0]"></a>_Z10RenameFilePKcS0_</STRONG> (ARM, 4 bytes, Stack size 0 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = _Z10RenameFilePKcS0_ &rArr; fsm_move &rArr; fg_move &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[5096ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_move (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PluginRenameFilev
<LI><a href="#[53031c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashDiskRenameFilev
</UL>

<P><STRONG><a name="[3f1d394]"></a>_Z8CopyFilePKcS0_</STRONG> (ARM, 156 bytes, Stack size 32 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _Z8CopyFilePKcS0_ &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open (via BLX)
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close (via BLX)
<LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write (via BLX)
<LI><a href="#[5096eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seteof (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginCopyFilev
<LI><a href="#[5303634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FlashDiskCopyFilev
</UL>

<P><STRONG><a name="[36ba140]"></a>_Z13GetFileLengthPKc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[5097140]"></a>_Z16EraseEntireFlashv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z16EraseEntireFlashv &rArr; _Z16SpiEraseAllFlashv &rArr; _Z14WriteErasePollv &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[406a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SpiEraseAllFlashv
</UL>
<BR>[Called By]<UL><LI><a href="#[51d1ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EraseAllFlashv
</UL>

<P><STRONG><a name="[5097104]"></a>_Z12FormatVolumei</STRONG> (ARM, 4 bytes, Stack size 0 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z12FormatVolumei &rArr; fsm_format &rArr; fg_format &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[5096f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_format (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5303184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21FlashDiskFormatVolumev
</UL>

<P><STRONG><a name="[50970c8]"></a>_Z18SetFlashDebugStateb</STRONG> (ARM, 12 bytes, Stack size 0 bytes, StartupFlashDisk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53032b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SetFlashDebugModev
</UL>

<P><STRONG><a name="[5092154]"></a>_fsm_checksemaphore</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fsm_checksemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[509159c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mountdrive
</UL>

<P><STRONG><a name="[3f1e528]"></a>_fsm_releasesemaphore</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fsm_releasesemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[50910ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mutex_put (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3757550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seek
<LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read
<LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close
<LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write
<LI><a href="#[3894674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mkdir
<LI><a href="#[38946b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfirst
<LI><a href="#[3896078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_filelength
<LI><a href="#[3f1e384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_stat
<LI><a href="#[3f1e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_rename
<LI><a href="#[3f1e3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getfreespace
<LI><a href="#[3f1e438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getdrive
<LI><a href="#[3f1e474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findnext
<LI><a href="#[3f1e4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_delete
<LI><a href="#[3f1e4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_chdrive
<LI><a href="#[3f1e7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22filedescriptor_convertii (via BLX)
<LI><a href="#[3f1e870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12get_filenameii (via BLX)
<LI><a href="#[3f24a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_tell
<LI><a href="#[3f24a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_putc
<LI><a href="#[5096eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seteof
<LI><a href="#[5096ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_move
<LI><a href="#[5096f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mountdrive
<LI><a href="#[5096f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_format
</UL>

<P><STRONG><a name="[3f1e564]"></a>_fsm_gettask</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fsm_gettask
</UL>
<BR>[Called By]<UL><LI><a href="#[3757550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seek
<LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read
<LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open
<LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close
<LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write
<LI><a href="#[3894674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mkdir
<LI><a href="#[38946b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfirst
<LI><a href="#[3896078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_filelength
<LI><a href="#[3f1e384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_stat
<LI><a href="#[3f1e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_rename
<LI><a href="#[3f1e3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getfreespace
<LI><a href="#[3f1e438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getdrive
<LI><a href="#[3f1e474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findnext
<LI><a href="#[3f1e4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_delete
<LI><a href="#[3f1e4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_chdrive
<LI><a href="#[3f1e7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22filedescriptor_convertii (via BLX)
<LI><a href="#[3f1e870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12get_filenameii (via BLX)
<LI><a href="#[3f24a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_tell
<LI><a href="#[3f24a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_putc
<LI><a href="#[3f24aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getlasterror
<LI><a href="#[5096eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seteof
<LI><a href="#[5096ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_move
<LI><a href="#[5096f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mountdrive
<LI><a href="#[5096f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_format
<LI><a href="#[5096f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_enterFS
</UL>

<P><STRONG><a name="[5096f9c]"></a>fsm_enterFS</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fsm_enterFS &rArr; _fsm_gettask
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50910ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mutex_put (via BLX)
<LI><a href="#[5091164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn_gettaskID (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
</UL>

<P><STRONG><a name="[5096f60]"></a>fsm_format</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fsm_format &rArr; fg_format &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50918e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_format
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
<LI><a href="#[5097104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12FormatVolumei (via Veneer)
</UL>

<P><STRONG><a name="[5096f24]"></a>fsm_mountdrive</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = fsm_mountdrive &rArr; fg_mountdrive &rArr; fsm_wearleveling &rArr; _Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[509159c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mountdrive
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
</UL>

<P><STRONG><a name="[3f1e3fc]"></a>fsm_getfreespace</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fsm_getfreespace &rArr; fg_getfreespace &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50916c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_getfreespace
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii (via BLX)
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc (via BLX)
</UL>

<P><STRONG><a name="[3f1e438]"></a>fsm_getdrive</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fsm_getdrive &rArr; _fsm_releasesemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_getdrive
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
<LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii (via BLX)
<LI><a href="#[3f1e7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_statPcP7FS_STAT (via BLX)
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc (via BLX)
</UL>

<P><STRONG><a name="[3f1e4ec]"></a>fsm_chdrive</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fsm_chdrive &rArr; fg_chdrive &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_chdrive
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
<LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii (via BLX)
<LI><a href="#[3f1e7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_statPcP7FS_STAT (via BLX)
</UL>

<P><STRONG><a name="[3894674]"></a>fsm_mkdir</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = fsm_mkdir &rArr; fg_mkdir &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
</UL>

<P><STRONG><a name="[38946b0]"></a>fsm_findfirst</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = fsm_findfirst &rArr; fg_findfirst &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findfirst
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PluginShowDirectoryv (via BLX)
<LI><a href="#[3f1d664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PluginDeleteAllv (via BLX)
<LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii (via BLX)
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc (via BLX)
</UL>

<P><STRONG><a name="[3f1e474]"></a>fsm_findnext</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = fsm_findnext &rArr; fg_findnext &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[509195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findnext
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PluginShowDirectoryv (via BLX)
<LI><a href="#[3f1d664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PluginDeleteAllv (via BLX)
<LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii (via BLX)
<LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc (via BLX)
</UL>

<P><STRONG><a name="[3f1e3c0]"></a>fsm_rename</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = fsm_rename &rArr; fg_rename &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
</UL>

<P><STRONG><a name="[3f1e4b0]"></a>fsm_delete</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = fsm_delete &rArr; fg_delete &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PluginDeleteAllv (via BLX)
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
</UL>

<P><STRONG><a name="[3896078]"></a>fsm_filelength</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = fsm_filelength &rArr; fg_filelength &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50919d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_filelength
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh (via BLX)
<LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc (via BLX)
</UL>

<P><STRONG><a name="[37575c8]"></a>fsm_open</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = fsm_open &rArr; fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi (via BLX)
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh (via BLX)
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
<LI><a href="#[37576b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReadSoftwareVersionPci (via BLX)
<LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc (via BLX)
<LI><a href="#[3a1c7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument8SaveFileEPKc (via BLX)
<LI><a href="#[3a1ca2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding (via BLX)
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_ (via BLX)
<LI><a href="#[3f1e744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_openPKcii (via BLX)
</UL>

<P><STRONG><a name="[3757550]"></a>fsm_seek</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = fsm_seek &rArr; fg_seek &rArr; _fg_fseek &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50913bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_seek
</UL>
<BR>[Called By]<UL><LI><a href="#[37576b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReadSoftwareVersionPci (via BLX)
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
<LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding (via BLX)
</UL>

<P><STRONG><a name="[3f24a2c]"></a>fsm_tell</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fsm_tell &rArr; fg_tell &rArr; _fg_check_handle &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_tell
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
<LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding (via BLX)
</UL>

<P><STRONG><a name="[3f24a68]"></a>fsm_putc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = fsm_putc &rArr; fg_putc &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50914e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1c7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument8SaveFileEPKc (via BLX)
<LI><a href="#[3f2583c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument5PrintEP7FS_FILEi (via BLX)
<LI><a href="#[3f25b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlText5PrintEP7FS_FILEi (via BLX)
</UL>

<P><STRONG><a name="[375758c]"></a>fsm_read</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = fsm_read &rArr; fg_read &rArr; _fg_check_handle &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50914ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh (via BLX)
<LI><a href="#[37576b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReadSoftwareVersionPci (via BLX)
<LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc (via BLX)
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
<LI><a href="#[3f25878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEP7FS_FILE13TiXmlEncoding (via BLX)
</UL>

<P><STRONG><a name="[3894638]"></a>fsm_write</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi (via BLX)
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_ (via BLX)
<LI><a href="#[3f25968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlUnknown5PrintEP7FS_FILEi (via BLX)
<LI><a href="#[3f25a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK16TiXmlDeclaration5PrintEP7FS_FILEiP11TiXmlString (via BLX)
<LI><a href="#[3f25b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK9TiXmlText5PrintEP7FS_FILEi (via BLX)
<LI><a href="#[3f25bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlComment5PrintEP7FS_FILEi (via BLX)
<LI><a href="#[3f25c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK12TiXmlElement5PrintEP7FS_FILEi (via BLX)
<LI><a href="#[3f25f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK14TiXmlAttribute5PrintEP7FS_FILEiP11TiXmlString (via BLX)
</UL>

<P><STRONG><a name="[3757604]"></a>fsm_close</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = fsm_close &rArr; fg_close &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi (via BLX)
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh (via BLX)
<LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
<LI><a href="#[37576b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReadSoftwareVersionPci (via BLX)
<LI><a href="#[38961a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HONPlugin10LoadPluginEPKc (via BLX)
<LI><a href="#[3a1c7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument8SaveFileEPKc (via BLX)
<LI><a href="#[3a1ca2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13TiXmlDocument8LoadFileEPKc13TiXmlEncoding (via BLX)
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_ (via BLX)
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
</UL>

<P><STRONG><a name="[5096eac]"></a>fsm_seteof</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = fsm_seteof &rArr; fg_seteof &rArr; _fg_check_handle &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_seteof
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi (via BLX)
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_ (via BLX)
</UL>

<P><STRONG><a name="[3f1e384]"></a>fsm_stat</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = fsm_stat &rArr; fg_stat &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12wrapper_statPcP7FS_STAT (via BLX)
</UL>

<P><STRONG><a name="[3f24aa4]"></a>fsm_getlasterror</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fsm_getlasterror &rArr; _fsm_gettask
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1c7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK13TiXmlDocument8SaveFileEPKc (via BLX)
<LI><a href="#[3f1e6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14matrix_syscallP20matrix_syscall_param (via BLX)
</UL>

<P><STRONG><a name="[5096ee8]"></a>fsm_move</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = fsm_move &rArr; fg_move &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore
<LI><a href="#[3f1e564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_gettask
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10RenameFilePKcS0_ (via Veneer)
</UL>

<P><STRONG><a name="[508fdf0]"></a>fsm_calccrc32</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[508cf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13f_calcfilecrcP13FS_VOLUMEINFOP10FS_FILEINTPm (via BLX)
<LI><a href="#[508f6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_chacheupdatechanges (via BLX)
<LI><a href="#[508f7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheupdate (via BLX)
</UL>

<P><STRONG><a name="[508fc4c]"></a>fsm_allocdatasize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5097050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_getmem_flashdrive
</UL>

<P><STRONG><a name="[508fb98]"></a>fsm_allocdata</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fsm_allocdata
</UL>
<BR>[Called By]<UL><LI><a href="#[508faa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_setmaxfile
<LI><a href="#[509159c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mountdrive
<LI><a href="#[5097014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mount_flashdrive
</UL>

<P><STRONG><a name="[508fb5c]"></a>fsm_checkname</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[508fb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checkname
</UL>
<BR>[Called By]<UL><LI><a href="#[508fb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checkname
<LI><a href="#[5091998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findfirst
</UL>

<P><STRONG><a name="[508fb20]"></a>fsm_checknamewc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
</UL>
<BR>[Called By]<UL><LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
<LI><a href="#[5091290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_stat
<LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
<LI><a href="#[50919d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_filelength
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
</UL>

<P><STRONG><a name="[508fae4]"></a>fsm_setsectorsize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5097014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mount_flashdrive
</UL>

<P><STRONG><a name="[508faa8]"></a>fsm_setmaxfile</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fsm_setmaxfile &rArr; fsm_allocdata
</UL>
<BR>[Calls]<UL><LI><a href="#[508fb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_allocdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5097014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mount_flashdrive
</UL>

<P><STRONG><a name="[508fa6c]"></a>fsm_checksectorfree</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
<LI><a href="#[50916c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_getfreespace
</UL>

<P><STRONG><a name="[508fa30]"></a>fsm_findfreeblock</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fsm_findfreeblock
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
</UL>

<P><STRONG><a name="[508f9f4]"></a>_fsm_cacheaddsptr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fsm_cacheaddsptr &rArr; _Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Calls]<UL><LI><a href="#[50901b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[508f9b8]"></a>fsm_swapbadblock</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fsm_swapbadblock &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[50901b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
<LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
</UL>

<P><STRONG><a name="[508f97c]"></a>_fsm_cacheaddlptr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fsm_cacheaddlptr &rArr; _Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Calls]<UL><LI><a href="#[50901b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
</UL>

<P><STRONG><a name="[508f940]"></a>fsm_addsectorchain</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fsm_addsectorchain
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
</UL>

<P><STRONG><a name="[508f904]"></a>_fsm_writenextsector</STRONG> (Thumb, 692 bytes, Stack size 80 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _fsm_writenextsector &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[50901b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
<LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
</UL>

<P><STRONG><a name="[508f8c8]"></a>fsm_wearleveling</STRONG> (Thumb, 446 bytes, Stack size 80 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = fsm_wearleveling &rArr; _Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Calls]<UL><LI><a href="#[50901b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
<LI><a href="#[509159c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mountdrive
</UL>

<P><STRONG><a name="[508f88c]"></a>fsm_checksectorbad</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50916c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_getfreespace
</UL>

<P><STRONG><a name="[508f850]"></a>_fsm_toupper</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[508c970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_namecheckwc
<LI><a href="#[508c9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findfile
</UL>

<P><STRONG><a name="[508f814]"></a>_fsm_cacheaddde</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fsm_cacheaddde
</UL>
<BR>[Called By]<UL><LI><a href="#[508c8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_addentry
<LI><a href="#[508ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setdename
<LI><a href="#[508ca9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_removedename
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[508f7d8]"></a>_fsm_cacheupdate</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _fsm_cacheupdate
</UL>
<BR>[Calls]<UL><LI><a href="#[508fdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_calccrc32 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8StoreFatP13FS_VOLUMEINFO
</UL>

<P><STRONG><a name="[508f79c]"></a>_fsm_cachepagecheck</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _fsm_cachepagecheck &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[508f6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_chacheupdatechanges
<LI><a href="#[508f760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachenext
</UL>

<P><STRONG><a name="[508f760]"></a>_fsm_cachenext</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _fsm_cachenext &rArr; _fsm_cachepagecheck &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[508f79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachepagecheck
</UL>
<BR>[Called By]<UL><LI><a href="#[508bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8StoreFatP13FS_VOLUMEINFO
</UL>

<P><STRONG><a name="[508f724]"></a>_fsm_cachereset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[508bc8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6FormatP13FS_VOLUMEINFO
<LI><a href="#[508bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8StoreFatP13FS_VOLUMEINFO
<LI><a href="#[5097014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mount_flashdrive
</UL>

<P><STRONG><a name="[508f6e8]"></a>_fsm_chacheupdatechanges</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _fsm_chacheupdatechanges &rArr; _fsm_cachepagecheck &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[508f79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachepagecheck
<LI><a href="#[508fdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_calccrc32 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5097014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mount_flashdrive
</UL>

<P><STRONG><a name="[509708c]"></a>fg_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fg_init
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
</UL>

<P><STRONG><a name="[508cb50]"></a>_fg_copychainintomirror</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _fg_copychainintomirror
</UL>
<BR>[Called By]<UL><LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
</UL>

<P><STRONG><a name="[508cb14]"></a>_fg_cleanupfile</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fg_cleanupfile
</UL>
<BR>[Called By]<UL><LI><a href="#[508c754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_fseek
<LI><a href="#[508c7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_checksyncpos
<LI><a href="#[508c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_storefilebuffer
<LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
<LI><a href="#[50914ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_read
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[508cad8]"></a>_fg_getdename</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _fg_getdename
</UL>
<BR>[Called By]<UL><LI><a href="#[508c9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findfile
<LI><a href="#[509195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findnext
</UL>

<P><STRONG><a name="[508ca9c]"></a>_fg_removedename</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _fg_removedename &rArr; _fsm_cacheaddde
</UL>
<BR>[Calls]<UL><LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
</UL>
<BR>[Called By]<UL><LI><a href="#[508ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setdename
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
</UL>

<P><STRONG><a name="[508ca60]"></a>_fg_setdename</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _fg_setdename &rArr; _fg_removedename &rArr; _fsm_cacheaddde
</UL>
<BR>[Calls]<UL><LI><a href="#[508ca9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_removedename
<LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
</UL>
<BR>[Called By]<UL><LI><a href="#[508c8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_addentry
<LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
</UL>

<P><STRONG><a name="[508ca24]"></a>_fg_flush</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fg_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[509159c]"></a>fg_mountdrive</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = fg_mountdrive &rArr; fsm_wearleveling &rArr; _Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Calls]<UL><LI><a href="#[508f8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_wearleveling
<LI><a href="#[508fb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_allocdata
<LI><a href="#[5092154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_checksemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[5096f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mountdrive
</UL>

<P><STRONG><a name="[3f1e5a0]"></a>_fg_getvolumeinfo</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[5092154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_checksemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22filedescriptor_convertii (via BLX)
<LI><a href="#[3f1e870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12get_filenameii (via BLX)
<LI><a href="#[508c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_check_handle
<LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
<LI><a href="#[5091290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_stat
<LI><a href="#[5091380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_seteof
<LI><a href="#[50913bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_seek
<LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
<LI><a href="#[50914ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_read
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
<LI><a href="#[50916c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_getfreespace
<LI><a href="#[5091740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_getdcwd
<LI><a href="#[50918e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_format
<LI><a href="#[509195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findnext
<LI><a href="#[5091998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findfirst
<LI><a href="#[50919d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_filelength
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
<LI><a href="#[5091b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_chdrive
</UL>

<P><STRONG><a name="[5091740]"></a>fg_getdcwd</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fg_getdcwd &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
</UL>

<P><STRONG><a name="[5091704]"></a>fg_getdrive</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fsf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f1e438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getdrive
</UL>

<P><STRONG><a name="[508c9e8]"></a>_fg_setfsname</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _fg_setfsname &rArr; fg_getdcwd &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[5091740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_getdcwd
</UL>
<BR>[Called By]<UL><LI><a href="#[5091290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_stat
<LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
<LI><a href="#[5091998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findfirst
<LI><a href="#[50919d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_filelength
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
</UL>

<P><STRONG><a name="[508c9ac]"></a>_fg_findfile</STRONG> (Thumb, 112 bytes, Stack size 112 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[508cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getdename
<LI><a href="#[508f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_toupper
</UL>
<BR>[Called By]<UL><LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[508c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findpath
<LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
</UL>

<P><STRONG><a name="[508c970]"></a>_fg_namecheckwc</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fg_namecheckwc
</UL>
<BR>[Calls]<UL><LI><a href="#[508f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_toupper
</UL>
<BR>[Called By]<UL><LI><a href="#[509195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findnext
<LI><a href="#[5091998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findfirst
</UL>

<P><STRONG><a name="[508c934]"></a>_fg_findpath</STRONG> (Thumb, 268 bytes, Stack size 160 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[508c9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findfile
</UL>
<BR>[Called By]<UL><LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[5091290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_stat
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
<LI><a href="#[5091998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findfirst
</UL>

<P><STRONG><a name="[508c8f8]"></a>_fg_find</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[508c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findpath
<LI><a href="#[508c9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findfile
</UL>
<BR>[Called By]<UL><LI><a href="#[5091290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_stat
<LI><a href="#[5091470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_rename
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
<LI><a href="#[50919d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_filelength
<LI><a href="#[5091a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_delete
</UL>

<P><STRONG><a name="[508c8bc]"></a>_fg_addentry</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _fg_addentry &rArr; _fg_setdename &rArr; _fg_removedename &rArr; _fsm_cacheaddde
</UL>
<BR>[Calls]<UL><LI><a href="#[508c6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_getcurrenttimedate (via BLX)
<LI><a href="#[508ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setdename
<LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
</UL>
<BR>[Called By]<UL><LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[50915d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_mkdir
</UL>

<P><STRONG><a name="[508c880]"></a>_fg_storesector</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fg_storesector
</UL>
<BR>[Called By]<UL><LI><a href="#[508c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_storefilebuffer
<LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
<LI><a href="#[50914ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_read
</UL>

<P><STRONG><a name="[508c844]"></a>_fg_getsector</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fg_getsector
</UL>
<BR>[Called By]<UL><LI><a href="#[508c754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_fseek
<LI><a href="#[508c7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_checksyncpos
<LI><a href="#[508cf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13f_calcfilecrcP13FS_VOLUMEINFOP10FS_FILEINTPm
<LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
<LI><a href="#[50914ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_read
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
</UL>

<P><STRONG><a name="[5091b00]"></a>fg_chdrive</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fg_chdrive &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_chdrive
</UL>

<P><STRONG><a name="[50915d8]"></a>fg_mkdir</STRONG> (Thumb, 180 bytes, Stack size 296 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = fg_mkdir &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_addentry
<LI><a href="#[508c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findpath
<LI><a href="#[508c9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findfile
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_flush
<LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
<LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
</UL>
<BR>[Called By]<UL><LI><a href="#[3894674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_mkdir
</UL>

<P><STRONG><a name="[5091470]"></a>fg_rename</STRONG> (Thumb, 262 bytes, Stack size 312 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = fg_rename &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[508c9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findfile
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_flush
<LI><a href="#[508ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setdename
<LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_rename
</UL>

<P><STRONG><a name="[50919d4]"></a>fg_filelength</STRONG> (Thumb, 112 bytes, Stack size 296 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = fg_filelength &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
</UL>
<BR>[Called By]<UL><LI><a href="#[3896078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_filelength
</UL>

<P><STRONG><a name="[5091a4c]"></a>fg_delete</STRONG> (Thumb, 216 bytes, Stack size 296 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = fg_delete &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_flush
<LI><a href="#[508ca9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_removedename
<LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
<LI><a href="#[508f9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddsptr
<LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_delete
</UL>

<P><STRONG><a name="[508c808]"></a>_fg_storefilebuffer</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _fg_storefilebuffer &rArr; _fg_storesector
</UL>
<BR>[Calls]<UL><LI><a href="#[508c880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_storesector
<LI><a href="#[508cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_cleanupfile
</UL>
<BR>[Called By]<UL><LI><a href="#[508c754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_fseek
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[508c7cc]"></a>_fg_checksyncpos</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[508c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getsector
<LI><a href="#[508cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_cleanupfile
</UL>
<BR>[Called By]<UL><LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[508c790]"></a>_fg_check_handle</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _fg_check_handle &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
<LI><a href="#[5091254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_tell
<LI><a href="#[5091380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_seteof
<LI><a href="#[50913bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_seek
<LI><a href="#[50914ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_read
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[50911a0]"></a>fg_write</STRONG> (Thumb, 550 bytes, Stack size 56 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_check_handle
<LI><a href="#[508c7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_checksyncpos
<LI><a href="#[508c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getsector
<LI><a href="#[508c880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_storesector
<LI><a href="#[508cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_cleanupfile
</UL>
<BR>[Called By]<UL><LI><a href="#[3894638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_write
<LI><a href="#[508c754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_fseek
<LI><a href="#[50914e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_putc
</UL>

<P><STRONG><a name="[508c754]"></a>_fg_fseek</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _fg_fseek &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[508c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_storefilebuffer
<LI><a href="#[508c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getsector
<LI><a href="#[508cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_cleanupfile
<LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[50913bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_seek
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
</UL>

<P><STRONG><a name="[50913bc]"></a>fg_seek</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = fg_seek &rArr; _fg_fseek &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_fseek
<LI><a href="#[508c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3757550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seek
</UL>

<P><STRONG><a name="[5091254]"></a>fg_tell</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fg_tell &rArr; _fg_check_handle &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[508c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3f24a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_tell
</UL>

<P><STRONG><a name="[50914e8]"></a>fg_putc</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = fg_putc &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[50911a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3f24a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_putc
</UL>

<P><STRONG><a name="[50914ac]"></a>fg_read</STRONG> (Thumb, 590 bytes, Stack size 56 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = fg_read &rArr; _fg_check_handle &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_check_handle
<LI><a href="#[508c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getsector
<LI><a href="#[508c880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_storesector
<LI><a href="#[508cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_cleanupfile
</UL>
<BR>[Called By]<UL><LI><a href="#[375758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_read
</UL>

<P><STRONG><a name="[508c718]"></a>_fg_checkfilelock</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _fg_checkfilelock
</UL>
<BR>[Called By]<UL><LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
</UL>

<P><STRONG><a name="[508c6dc]"></a>_fg_checkappend</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _fg_checkappend
</UL>
<BR>[Called By]<UL><LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
</UL>

<P><STRONG><a name="[5091524]"></a>fg_open</STRONG> (Thumb, 1034 bytes, Stack size 312 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = fg_open &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_checkappend
<LI><a href="#[508c718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_checkfilelock
<LI><a href="#[508c754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_fseek
<LI><a href="#[508c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getsector
<LI><a href="#[508c8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_addentry
<LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[508c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findpath
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_cleanupfile
<LI><a href="#[508cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_copychainintomirror
<LI><a href="#[508cf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13f_calcfilecrcP13FS_VOLUMEINFOP10FS_FILEINTPm
<LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
<LI><a href="#[508f9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddsptr
<LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
<LI><a href="#[50910ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mutex_put (via BLX)
<LI><a href="#[5091128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_mutex_get (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[37575c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_open
</UL>

<P><STRONG><a name="[5091a88]"></a>fg_close</STRONG> (Thumb, 360 bytes, Stack size 32 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = fg_close &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_getcurrenttimedate (via BLX)
<LI><a href="#[508c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_check_handle
<LI><a href="#[508c7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_checksyncpos
<LI><a href="#[508c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_storefilebuffer
<LI><a href="#[508ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_flush
<LI><a href="#[508cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_cleanupfile
<LI><a href="#[508cf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13f_calcfilecrcP13FS_VOLUMEINFOP10FS_FILEINTPm
<LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
<LI><a href="#[508f9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddsptr
</UL>
<BR>[Called By]<UL><LI><a href="#[3757604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_close
</UL>

<P><STRONG><a name="[50916c8]"></a>fg_getfreespace</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fg_getfreespace &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508f88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checksectorbad
<LI><a href="#[508fa6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checksectorfree
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_getfreespace
</UL>

<P><STRONG><a name="[50918e4]"></a>fg_format</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fg_format &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[5096f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_format
</UL>

<P><STRONG><a name="[509195c]"></a>fg_findnext</STRONG> (Thumb, 328 bytes, Stack size 120 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = fg_findnext &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_namecheckwc
<LI><a href="#[508cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getdename
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findnext
<LI><a href="#[5091998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findfirst
</UL>

<P><STRONG><a name="[5091998]"></a>fg_findfirst</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = fg_findfirst &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findpath
<LI><a href="#[508c970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_namecheckwc
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508fb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checkname
<LI><a href="#[509195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_findnext
</UL>
<BR>[Called By]<UL><LI><a href="#[38946b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfirst
</UL>

<P><STRONG><a name="[5091380]"></a>fg_seteof</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fg_seteof &rArr; _fg_check_handle &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[5096eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_seteof
</UL>

<P><STRONG><a name="[5091290]"></a>fg_stat</STRONG> (Thumb, 254 bytes, Stack size 304 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = fg_stat &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[508c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findpath
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1e384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_stat
</UL>

<P><STRONG><a name="[5091560]"></a>fg_move</STRONG> (Thumb, 330 bytes, Stack size 320 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = fg_move &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1e5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getvolumeinfo
<LI><a href="#[508c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_find
<LI><a href="#[508c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_findpath
<LI><a href="#[508c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setfsname
<LI><a href="#[508ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_flush
<LI><a href="#[508ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_setdename
<LI><a href="#[508f814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddde
<LI><a href="#[508fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checknamewc
<LI><a href="#[5dd3e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5096ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_move
</UL>

<P><STRONG><a name="[508c6a0]"></a>fs_getcurrenttimedate</STRONG> (ARM, 28 bytes, Stack size 0 bytes, port_s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[508c8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_addentry (via BLX)
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close (via BLX)
</UL>

<P><STRONG><a name="[5091128]"></a>fs_mutex_get</STRONG> (ARM, 32 bytes, Stack size 0 bytes, port_s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open (via BLX)
</UL>

<P><STRONG><a name="[50910ec]"></a>fs_mutex_put</STRONG> (ARM, 16 bytes, Stack size 0 bytes, port_s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f1e528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_releasesemaphore (via BLX)
<LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open (via BLX)
<LI><a href="#[5096f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_enterFS (via BLX)
</UL>

<P><STRONG><a name="[5091164]"></a>fn_gettaskID</STRONG> (ARM, 8 bytes, Stack size 0 bytes, port_s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5096f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_enterFS (via BLX)
</UL>

<P><STRONG><a name="[508c664]"></a>fs_mutex_create</STRONG> (ARM, 16 bytes, Stack size 0 bytes, port_s.o(.text), UNUSED)

<P><STRONG><a name="[5097014]"></a>fs_mount_flashdrive</STRONG> (Thumb, 784 bytes, Stack size 40 bytes, flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = fs_mount_flashdrive &rArr; _fsm_chacheupdatechanges &rArr; _fsm_cachepagecheck &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[508f6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_chacheupdatechanges
<LI><a href="#[508f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachereset
<LI><a href="#[508faa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_setmaxfile
<LI><a href="#[508fae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_setsectorsize
<LI><a href="#[508fb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_allocdata
</UL>
<BR>[Address Reference Count : 1]<UL><LI> StartupFlashDisk.o(.text)
</UL>
<P><STRONG><a name="[5097050]"></a>fs_getmem_flashdrive</STRONG> (Thumb, 160 bytes, Stack size 104 bytes, flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = fs_getmem_flashdrive
</UL>
<BR>[Calls]<UL><LI><a href="#[508fc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_allocdatasize
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initflashdiskb (via BLX)
</UL>

<P><STRONG><a name="[5096fd8]"></a>fs_phy_nor_num_m25pxx</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, num_m25pxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fs_phy_nor_num_m25pxx &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[406aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6SpiXfrjjPjjjPc (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> StartupFlashDisk.o(.text)
</UL>
<P><STRONG><a name="[51d2a58]"></a>_ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING</STRONG> (ARM, 112 bytes, Stack size 8 bytes, SynCommandParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22780d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GetCurrentInterfacev
<LI><a href="#[36b4e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEP12CBarcodeData
<LI><a href="#[388543c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8StoreHHPEhh
<LI><a href="#[3885478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8StoreAimEhh
<LI><a href="#[38854f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[51d2a1c]"></a>_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh</STRONG> (ARM, 2716 bytes, Stack size 184 bytes, SynCommandParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28448 + Unknown Stack Size
<LI>Call Chain = _ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh &rArr; _Z16ImageSnapAndShipv &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
<LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[36b9f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SoundPowerupBeepv
<LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[375ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundStandardBeepj
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3885568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractSystemMenuCommandsP7HSTRING
<LI><a href="#[38855a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractPluginMenuCommandsP7HSTRING
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[3e9cdb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ForwardPrefixedCommandbPKhjPb
<LI><a href="#[3e9cdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23CheckSubTagQueryCommandPcb
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[3f1b864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z34PluginSerialMenuCommandProcess_ExtP7HSTRING
<LI><a href="#[413df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14FinishScanningEv
<LI><a href="#[413e3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15UnTriggerSerialEv
<LI><a href="#[413e3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger13TriggerSerialEv
<LI><a href="#[41fe874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImageSnapAndShipv
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
<LI><a href="#[4d78ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPS_biPi
<LI><a href="#[51d2878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CurrentWorkTableEv
<LI><a href="#[51d28b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKc
<LI><a href="#[51d292c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ProcessNonMenuCommandsPcj
<LI><a href="#[51d2a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE12SendResponseEPK7HSTRING
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessEngineDatav
</UL>

<P><STRONG><a name="[36b9eac]"></a>_Z17ProcessEngineDatav</STRONG> (ARM, 236 bytes, Stack size 32 bytes, SynCommandParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28480 + Unknown Stack Size
<LI>Call Chain = _Z17ProcessEngineDatav &rArr; _ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh &rArr; _Z16ImageSnapAndShipv &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4ReadEPhj
<LI><a href="#[227809c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SetCurrentInterfaceP6CIoMan
<LI><a href="#[4333fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15IsPortAvailableEv
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[36b94d4]"></a>_ZN17STX_COMMAND_PARSEC1Ev</STRONG> (ARM, 44 bytes, Stack size 8 bytes, SynCommandParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN17STX_COMMAND_PARSEC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[51d29e0]"></a>_ZN17STX_COMMAND_PARSEC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, SynCommandParser.o(.text), UNUSED)

<P><STRONG><a name="[36b9510]"></a>_ZN17STX_COMMAND_PARSEC1Ei</STRONG> (ARM, 44 bytes, Stack size 8 bytes, SynCommandParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN17STX_COMMAND_PARSEC1Ei
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[51d29a4]"></a>_ZN17STX_COMMAND_PARSEC2Ei</STRONG> (ARM, 0 bytes, Stack size 8 bytes, SynCommandParser.o(.text), UNUSED)

<P><STRONG><a name="[51d292c]"></a>_Z22ProcessNonMenuCommandsPcj</STRONG> (ARM, 480 bytes, Stack size 48 bytes, NonMenucommands.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z22ProcessNonMenuCommandsPcj &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[530991c]"></a>AES_set_encrypt_key</STRONG> (ARM, 964 bytes, Stack size 16 bytes, aes_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AES_set_encrypt_key
</UL>
<BR>[Called By]<UL><LI><a href="#[5309034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CAesEncryption6SetKeyEPKhi
<LI><a href="#[53098e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_decrypt_key
</UL>

<P><STRONG><a name="[53098e0]"></a>AES_set_decrypt_key</STRONG> (ARM, 528 bytes, Stack size 28 bytes, aes_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = AES_set_decrypt_key &rArr; AES_set_encrypt_key
</UL>
<BR>[Calls]<UL><LI><a href="#[530991c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_encrypt_key
</UL>
<BR>[Called By]<UL><LI><a href="#[5309034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CAesEncryption6SetKeyEPKhi
</UL>

<P><STRONG><a name="[53098a4]"></a>AES_encrypt</STRONG> (ARM, 1132 bytes, Stack size 36 bytes, aes_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AES_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[5308ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CAesEncryption7EncryptEPKhjPhj
</UL>

<P><STRONG><a name="[5309868]"></a>AES_decrypt</STRONG> (ARM, 1112 bytes, Stack size 36 bytes, aes_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AES_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[5308fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CAesEncryption7DecryptEPKhjPhj
</UL>

<P><STRONG><a name="[53090ac]"></a>_ZN14CAesEncryptionC1Ev</STRONG> (ARM, 20 bytes, Stack size 0 bytes, AesEncryption.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
</UL>

<P><STRONG><a name="[5309070]"></a>_ZN14CAesEncryptionC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, AesEncryption.o(.text), UNUSED)

<P><STRONG><a name="[5309034]"></a>_ZN14CAesEncryption6SetKeyEPKhi</STRONG> (ARM, 92 bytes, Stack size 16 bytes, AesEncryption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN14CAesEncryption6SetKeyEPKhi &rArr; AES_set_decrypt_key &rArr; AES_set_encrypt_key
</UL>
<BR>[Calls]<UL><LI><a href="#[53098e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_decrypt_key
<LI><a href="#[530991c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_encrypt_key
</UL>
<BR>[Called By]<UL><LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
</UL>
<BR>[Address Reference Count : 1]<UL><LI> AesEncryption.o(.constdata__ZTV14CAesEncryption)
</UL>
<P><STRONG><a name="[5308ff8]"></a>_ZN14CAesEncryption7EncryptEPKhjPhj</STRONG> (ARM, 108 bytes, Stack size 24 bytes, AesEncryption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN14CAesEncryption7EncryptEPKhjPhj &rArr; AES_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[53098a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_encrypt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> AesEncryption.o(.constdata__ZTV14CAesEncryption)
</UL>
<P><STRONG><a name="[5308fbc]"></a>_ZN14CAesEncryption7DecryptEPKhjPhj</STRONG> (ARM, 108 bytes, Stack size 24 bytes, AesEncryption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN14CAesEncryption7DecryptEPKhjPhj &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[5309868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_decrypt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> AesEncryption.o(.constdata__ZTV14CAesEncryption)
</UL>
<P><STRONG><a name="[5308ecc]"></a>_ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj</STRONG> (ARM, 304 bytes, Stack size 56 bytes, encryption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = _ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5dd3360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> AesEncryption.o(.constdata__ZTV14CAesEncryption)
</UL>
<P><STRONG><a name="[5308f08]"></a>_ZN12CBlockCipher10EcbEncryptEPKhjPhj</STRONG> (ARM, 164 bytes, Stack size 40 bytes, encryption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _ZN12CBlockCipher10EcbEncryptEPKhjPhj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> AesEncryption.o(.constdata__ZTV14CAesEncryption)
</UL>
<P><STRONG><a name="[5308f44]"></a>_ZN12CBlockCipher10EcbDecryptEPKhjPhj</STRONG> (ARM, 164 bytes, Stack size 40 bytes, encryption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _ZN12CBlockCipher10EcbDecryptEPKhjPhj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
</UL>
<BR>[Address Reference Count : 1]<UL><LI> AesEncryption.o(.constdata__ZTV14CAesEncryption)
</UL>
<P><STRONG><a name="[5307798]"></a>_ZN20READER_CONFIGURATION31CreateCPUPowerSpeedMenuSettingsEi</STRONG> (ARM, 124 bytes, Stack size 32 bytes, CPUPowerSpeedMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = _ZN20READER_CONFIGURATION31CreateCPUPowerSpeedMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[5307234]"></a>_Z13ChangeAusPostv</STRONG> (ARM, 340 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = _Z13ChangeAusPostv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53071f8]"></a>_Z13ChangePostnetv</STRONG> (ARM, 364 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = _Z13ChangePostnetv &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53071bc]"></a>_Z16ChangePlanetCodev</STRONG> (ARM, 352 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = _Z16ChangePlanetCodev &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5307180]"></a>_Z17ChangeBritishPostv</STRONG> (ARM, 324 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = _Z17ChangeBritishPostv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5307144]"></a>_Z15ChangeJapanPostv</STRONG> (ARM, 332 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = _Z15ChangeJapanPostv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5307108]"></a>_Z18ChangeCanadianPostv</STRONG> (ARM, 332 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = _Z18ChangeCanadianPostv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53070cc]"></a>_Z9ChangeKixv</STRONG> (ARM, 324 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = _Z9ChangeKixv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5307090]"></a>_Z10ChangeUSPSv</STRONG> (ARM, 360 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = _Z10ChangeUSPSv &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5307054]"></a>_Z9ChangeUPUv</STRONG> (ARM, 352 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = _Z9ChangeUPUv &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5307018]"></a>_Z12ChangePostalv</STRONG> (ARM, 3088 bytes, Stack size 48 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = _Z12ChangePostalv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5306fdc]"></a>_Z16ParseOCRTemplatev</STRONG> (ARM, 1196 bytes, Stack size 40 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024 + Unknown Stack Size
<LI>Call Chain = _Z16ParseOCRTemplatev &rArr; DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3f1d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiiPi
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
<LI><a href="#[5306f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastDecoderError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5306fa0]"></a>_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj</STRONG> (ARM, 23400 bytes, Stack size 288 bytes, DecoderMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[5306e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiiS4_
<LI><a href="#[5306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_i
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[53035f8]"></a>_Z17ShowInvalidFramesv</STRONG> (ARM, 76 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _Z17ShowInvalidFramesv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53033dc]"></a>_Z19Doprint_thread_infov</STRONG> (ARM, 16 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _Z19Doprint_thread_infov &rArr; print_thread_info &rArr; _Z13DumpRegistersPKjPKc &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2270950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_thread_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53033a0]"></a>_Z18DoBarcodePoolResetv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[5303364]"></a>_Z10MallocTestv</STRONG> (ARM, 216 bytes, Stack size 16 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = _Z10MallocTestv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3f1d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303328]"></a>_Z8EchoReadPhii</STRONG> (ARM, 268 bytes, Stack size 40 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z8EchoReadPhii
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[2277b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4ReadEPhj
<LI><a href="#[2277bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan11IsAnyRxDataEv
</UL>
<BR>[Called By]<UL><LI><a href="#[53032ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7DbgEchov
</UL>

<P><STRONG><a name="[53032ec]"></a>_Z7DbgEchov</STRONG> (ARM, 420 bytes, Stack size 32 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _Z7DbgEchov &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[5303328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8EchoReadPhii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53032b0]"></a>_Z17SetFlashDebugModev</STRONG> (ARM, 28 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z17SetFlashDebugModev
</UL>
<BR>[Calls]<UL><LI><a href="#[50970c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetFlashDebugStateb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303274]"></a>_Z22StuffRxBuffFromTheMenuv</STRONG> (ARM, 104 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z22StuffRxBuffFromTheMenuv &rArr; _Z10xputstringPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKhi
<LI><a href="#[43339f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan11StuffRxBuffEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303238]"></a>_Z19FlashDiskDeleteFilev</STRONG> (ARM, 80 bytes, Stack size 40 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z19FlashDiskDeleteFilev &rArr; _ZN7HSTRINGC1EPS_bb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b981c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9EraseFilePKc
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53031fc]"></a>_Z17FlashDiskReadFilev</STRONG> (ARM, 164 bytes, Stack size 48 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = _Z17FlashDiskReadFilev &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53031c0]"></a>_Z19FlashDiskRenameFilev</STRONG> (ARM, 204 bytes, Stack size 80 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 724 + Unknown Stack Size
<LI>Call Chain = _Z19FlashDiskRenameFilev &rArr; _Z10RenameFilePKcS0_ &rArr; fsm_move &rArr; fg_move &rArr; _fg_find &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[3f1d3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10RenameFilePKcS0_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303184]"></a>_Z21FlashDiskFormatVolumev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Z21FlashDiskFormatVolumev &rArr; _Z12FormatVolumei &rArr; fsm_format &rArr; fg_format &rArr; _fg_getvolumeinfo &rArr; _fsm_checksemaphore
</UL>
<BR>[Calls]<UL><LI><a href="#[5097104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12FormatVolumei
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303148]"></a>_Z24FlashDiskInformationDumpv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[530310c]"></a>_Z14ShowStackUsagev</STRONG> (ARM, 964 bytes, Stack size 216 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _Z14ShowStackUsagev &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[3531a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportDriverThreadUnusedStack
<LI><a href="#[3531de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsThreadOpen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53030d0]"></a>_Z23DumpMemoryConfigurationv</STRONG> (ARM, 3360 bytes, Stack size 96 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _Z23DumpMemoryConfigurationv &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303094]"></a>_Z15DumpMemoryBlockv</STRONG> (ARM, 284 bytes, Stack size 184 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _Z15DumpMemoryBlockv &rArr; _ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303058]"></a>_Z11DumpOneBytev</STRONG> (ARM, 164 bytes, Stack size 176 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Z11DumpOneBytev &rArr; _ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[530301c]"></a>_Z13DumpFourBytesv</STRONG> (ARM, 172 bytes, Stack size 176 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Z13DumpFourBytesv &rArr; _ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302fe0]"></a>_Z22GetAddressAndDataToSetP7HSTRINGPPhPi</STRONG> (ARM, 208 bytes, Stack size 40 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _Z22GetAddressAndDataToSetP7HSTRINGPPhPi &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[5302ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Readspiflashv
<LI><a href="#[5302f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SetFourBytesv
<LI><a href="#[5302f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SetTwoBytesv
<LI><a href="#[5302fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10SetOneBytev
</UL>

<P><STRONG><a name="[5302fa4]"></a>_Z10SetOneBytev</STRONG> (ARM, 52 bytes, Stack size 16 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _Z10SetOneBytev &rArr; _Z22GetAddressAndDataToSetP7HSTRINGPPhPi &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[5302fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetAddressAndDataToSetP7HSTRINGPPhPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302f68]"></a>_Z11SetTwoBytesv</STRONG> (ARM, 72 bytes, Stack size 16 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _Z11SetTwoBytesv &rArr; _Z22GetAddressAndDataToSetP7HSTRINGPPhPi &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[5302fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetAddressAndDataToSetP7HSTRINGPPhPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302f2c]"></a>_Z12SetFourBytesv</STRONG> (ARM, 72 bytes, Stack size 16 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _Z12SetFourBytesv &rArr; _Z22GetAddressAndDataToSetP7HSTRINGPPhPi &rArr; _ZN7HSTRING4FindEPKhjbiPi &rArr; _ZNK7HSTRING16CompareOnShorterEjPKhjb
</UL>
<BR>[Calls]<UL><LI><a href="#[5302fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetAddressAndDataToSetP7HSTRINGPPhPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302ef0]"></a>_Z12Readspiflashv</STRONG> (ARM, 184 bytes, Stack size 552 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = _Z12Readspiflashv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[406a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10SpiReadDbljjPc
<LI><a href="#[5302fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22GetAddressAndDataToSetP7HSTRINGPPhPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302eb4]"></a>_Z15DiagnosticResetv</STRONG> (ARM, 44 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z15DiagnosticResetv &rArr; _Z13SoundMenuBeepv &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
<LI><a href="#[36b9fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16IsBeepInProgressv
<LI><a href="#[375ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SoundMenuBeepv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302e78]"></a>_Z12DelayedResetv</STRONG> (ARM, 172 bytes, Stack size 24 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = _Z12DelayedResetv &rArr; _Z31FlashAndReSynchCustomerDefaultsv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2270af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23reset_to_boot_code_hardv
<LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[2277fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8xputcharh
<LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[36b9fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16IsBeepInProgressv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302e3c]"></a>_Z13DiagnosticCRCv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302e00]"></a>_Z16DumpI2CRegistersv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302dc4]"></a>_Z10DbgTriggerv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302d88]"></a>_Z16DBGIsUnitInStandv</STRONG> (ARM, 108 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _Z16DBGIsUnitInStandv &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302d4c]"></a>_Z6DBG2IFv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5302d10]"></a>_Z32SetOrRestoreImagerRegisterValuesi</STRONG> (ARM, 552 bytes, Stack size 136 bytes, DiagnosticAndDebugMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[5302c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GrabOneImageFramev
</UL>

<P><STRONG><a name="[5302cd4]"></a>_Z13SetTestLightsi</STRONG> (ARM, 276 bytes, Stack size 56 bytes, DiagnosticAndDebugMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[5302c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GrabOneImageFramev
</UL>

<P><STRONG><a name="[5302c98]"></a>_Z17GrabOneImageFramev</STRONG> (ARM, 112 bytes, Stack size 24 bytes, DiagnosticAndDebugMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[5302cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetTestLightsi
<LI><a href="#[5302d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32SetOrRestoreImagerRegisterValuesi
</UL>
<BR>[Called By]<UL><LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
</UL>

<P><STRONG><a name="[5302c5c]"></a>_Z15TestFlexCommandj</STRONG> (ARM, 4152 bytes, Stack size 1336 bytes, DiagnosticAndDebugMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[4060300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ReadIIC_BYDhPtj
<LI><a href="#[4d78e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcjj
<LI><a href="#[4d799bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGaSES_
<LI><a href="#[5302c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GrabOneImageFramev
<LI><a href="#[5302cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SetTestLightsi
</UL>
<BR>[Called By]<UL><LI><a href="#[5302c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8TestFlexv
</UL>

<P><STRONG><a name="[5302c20]"></a>_Z8TestFlexv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
</UL>

<P><STRONG><a name="[5302be4]"></a>_Z11TestCurrentv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[5302ba8]"></a>_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi</STRONG> (ARM, 5624 bytes, Stack size 272 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[5302b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGS1_S1_
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[5303580]"></a>_Z18FlashDiskDirectoryv</STRONG> (ARM, 32 bytes, Stack size 8 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 884 + Unknown Stack Size
<LI>Call Chain = _Z18FlashDiskDirectoryv &rArr; _Z13ShowDirectoryPKc &rArr; fsm_findfirst &rArr; fg_findfirst &rArr; _fg_findpath &rArr; _fg_findfile &rArr; _fg_getdename
</UL>
<BR>[Calls]<UL><LI><a href="#[5097230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ShowDirectoryPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303634]"></a>_Z17FlashDiskCopyFilev</STRONG> (ARM, 208 bytes, Stack size 80 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = _Z17FlashDiskCopyFilev &rArr; _Z8CopyFilePKcS0_ &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[3f1d394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8CopyFilePKcS0_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5303670]"></a>_Z12DumpTwoBytesv</STRONG> (ARM, 184 bytes, Stack size 176 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Z12DumpTwoBytesv &rArr; _ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKh
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53035bc]"></a>_Z18DiagnosticChecksumv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53034cc]"></a>_Z22DiagnosticOutputStringv</STRONG> (ARM, 76 bytes, Stack size 32 bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Z22DiagnosticOutputStringv &rArr; _ZN7HSTRINGC1EPS_bb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[2277f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKhi
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[36b9dbc]"></a>_Z18UpdatePowerDownPinv</STRONG> (ARM, 56 bytes, Stack size 0 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36ba5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14OpenScanDriverv
</UL>

<P><STRONG><a name="[5300bc8]"></a>_Z15CheckIMGVGAModev</STRONG> (ARM, 124 bytes, Stack size 32 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z15CheckIMGVGAModev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5300b8c]"></a>_Z25UpdateImageShipParametersv</STRONG> (ARM, 1084 bytes, Stack size 320 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056 + Unknown Stack Size
<LI>Call Chain = _Z25UpdateImageShipParametersv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[5300790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciiPi
<LI><a href="#[53007cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKcii
<LI><a href="#[5300808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciPii
<LI><a href="#[5300844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[406dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5300b50]"></a>_Z36ProcessEngineIlluminationColorChangev</STRONG> (ARM, 88 bytes, Stack size 24 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _Z36ProcessEngineIlluminationColorChangev &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[406dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv
</UL>

<P><STRONG><a name="[5300b14]"></a>_Z23WriteEngineFirmwareFilev</STRONG> (ARM, 200 bytes, Stack size 48 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8520 + Unknown Stack Size
<LI>Call Chain = _Z23WriteEngineFirmwareFilev &rArr; _Z24Psoc5100LoadFirmwareDataPhibb &rArr; _Z24Psoc5100FlashNewFirmwarebbb &rArr; _Z20Psoc5100ProgramBlocktj &rArr; _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[433919c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100LoadFirmwareDataPhibb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5300ad8]"></a>_Z26WriteDefaultEngineFirmwarev</STRONG> (ARM, 72 bytes, Stack size 8 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8512 + Unknown Stack Size
<LI>Call Chain = _Z26WriteDefaultEngineFirmwarev &rArr; _Z29Psoc5100VerifyFirmwareVersionb &rArr; _Z24Psoc5100FlashNewFirmwarebbb &rArr; _Z20Psoc5100ProgramBlocktj &rArr; _ZN8I2C_Drvr21Send_Data_As_Char_I2CEhhtPKhjii &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5300a9c]"></a>_Z26ShowEngineFirmwareChecksumv</STRONG> (ARM, 132 bytes, Stack size 152 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = _Z26ShowEngineFirmwareChecksumv &rArr; _Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5300a60]"></a>_Z28ShowEngineFirmwareFullReportv</STRONG> (ARM, 1480 bytes, Stack size 296 bytes, ImagingMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[38855e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKci
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
</UL>

<P><STRONG><a name="[5300a24]"></a>_Z29ShowEngineFirmwareSettingListv</STRONG> (ARM, 708 bytes, Stack size 168 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760 + Unknown Stack Size
<LI>Call Chain = _Z29ShowEngineFirmwareSettingListv &rArr; _Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53009e8]"></a>_Z16EngineReadMemoryv</STRONG> (ARM, 536 bytes, Stack size 2104 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2672<LI>Call Chain = _Z16EngineReadMemoryv &rArr; _Z12Psoc5100ReadiPci &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3a1cb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKcib
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[4339304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Psoc5100ReadiPci
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53009ac]"></a>_Z17EngineWriteMemoryv</STRONG> (ARM, 428 bytes, Stack size 72 bytes, ImagingMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[4339034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11HexToBinaryEv
<LI><a href="#[43390e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Psoc5100WriteiPhi
<LI><a href="#[4339160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Psoc5100WritePKci
</UL>

<P><STRONG><a name="[5300970]"></a>_Z36GetEngineFirmwareRevisionInformationv</STRONG> (ARM, 344 bytes, Stack size 104 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = _Z36GetEngineFirmwareRevisionInformationv &rArr; _Z21GetEnginePSOCRevisionPjS_ &rArr; _Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[43392c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21GetEnginePSOCRevisionPjS_
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5300934]"></a>_Z28IsImagingBlockedByAllignmentv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ImagingMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[4143f64]"></a>_Z16RemoveGpioVectorv</STRONG> (ARM, 48 bytes, Stack size 0 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41442e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CHWTrigger14PrepareForStopEv (via BLX)
</UL>

<P><STRONG><a name="[53008f8]"></a>_Z31ChangeIlluminationAlwaysOnStatev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[406dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53008bc]"></a>_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj</STRONG> (ARM, 12804 bytes, Stack size 320 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = _ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[406dd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmYoujie4600Ev
<LI><a href="#[5300754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_iS4_
<LI><a href="#[5306e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiiS4_
<LI><a href="#[5306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_i
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[5300c04]"></a>_Z41ProcessEngineFirmwareDiagnosticModeChangev</STRONG> (ARM, 108 bytes, Stack size 24 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _Z41ProcessEngineFirmwareDiagnosticModeChangev &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5300cf4]"></a>_Z18EngineWriteRamToEEv</STRONG> (ARM, 68 bytes, Stack size 8 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = _Z18EngineWriteRamToEEv &rArr; _Z20Psoc5100SaveToEEpromv &rArr; SCN_IOControl &rArr; _Z23ScanDriverSingleCaptureP23ScanDriverOpenContext_tPv &rArr; _Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti &rArr; _Z35LightControlEnableIndividualControlP23ScanDriverOpenContext_t &rArr; _Z30LightControlOpenContextChangedP23ScanDriverOpenContext_t &rArr; _Z31LightControlEnableGlobalControlv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[4339124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100SaveToEEpromv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[4143fa0]"></a>_Z13SetGpioVectorv</STRONG> (ARM, 48 bytes, Stack size 0 bytes, ImagingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[5300c7c]"></a>_Z20ConnectFLOtoExternalv</STRONG> (ARM, 504 bytes, Stack size 24 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z20ConnectFLOtoExternalv &rArr; _Z27DoesPluginHaveControlofNFRBv
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[3ea03d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27DoesPluginHaveControlofNFRBv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52ffaac]"></a>_Z12ExecuteSoundv</STRONG> (ARM, 108 bytes, Stack size 8 bytes, IndicatorMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[375ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundStandardBeepj
</UL>

<P><STRONG><a name="[52ff9bc]"></a>_Z10ForceAimOnv</STRONG> (ARM, 108 bytes, Stack size 8 bytes, IndicatorMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _Z10ForceAimOnv &rArr; _Z11IllTestModebb &rArr; _Z16SetILL_FlashModej &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413e384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger12ForceAimerOnEv
<LI><a href="#[4146ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllTestModebb
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52ff980]"></a>_Z10ForceLedOnv</STRONG> (ARM, 92 bytes, Stack size 8 bytes, IndicatorMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413de20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger11ForceLEDsOnEv
<LI><a href="#[4146ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllTestModebb
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>

<P><STRONG><a name="[52ff944]"></a>_Z11ForceLedOffv</STRONG> (ARM, 88 bytes, Stack size 8 bytes, IndicatorMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _Z11ForceLedOffv &rArr; _Z11IllTestModebb &rArr; _Z16SetILL_FlashModej &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413dde4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger12ForceLEDsOffEv
<LI><a href="#[4146ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllTestModebb
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52ff908]"></a>_Z17ForceAllLightsOffv</STRONG> (ARM, 88 bytes, Stack size 16 bytes, IndicatorMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _Z17ForceAllLightsOffv &rArr; _Z18SetLedControlStatej &rArr; _Z28Ill_Ctl_Sys_StateChangeToOFFv &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413dde4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger12ForceLEDsOffEv
<LI><a href="#[413e21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger13ForceAimerOffEv
<LI><a href="#[4146ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllTestModebb
<LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52ff8cc]"></a>_Z13ForceImagerOnv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, IndicatorMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52ff890]"></a>_Z14ForceImagerOffv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, IndicatorMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52ff854]"></a>_ZN20READER_CONFIGURATION27CreateIndicatorMenuSettingsEi</STRONG> (ARM, 1972 bytes, Stack size 272 bytes, IndicatorMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = _ZN20READER_CONFIGURATION27CreateIndicatorMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[52ffae8]"></a>_Z11ForceAimOffv</STRONG> (ARM, 108 bytes, Stack size 8 bytes, IndicatorMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _Z11ForceAimOffv &rArr; _Z11IllTestModebb &rArr; _Z16SetILL_FlashModej &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[413e21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger13ForceAimerOffEv
<LI><a href="#[4146ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11IllTestModebb
<LI><a href="#[4147024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18get_HI2D_illum_crlv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[36ba050]"></a>_Z15ExpandBaudRatesv</STRONG> (ARM, 332 bytes, Stack size 240 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = _Z15ExpandBaudRatesv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe738]"></a>_Z13Update232Lockv</STRONG> (ARM, 176 bytes, Stack size 1632 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1736<LI>Call Chain = _Z13Update232Lockv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b9a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30CollectInterfaceUSBTerminalIdsPi
<LI><a href="#[406df8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30CollectAllInterfaceTerminalIdsiPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe6fc]"></a>_Z11CheckTermidv</STRONG> (ARM, 76 bytes, Stack size 0 bytes, InterfaceMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe6c0]"></a>_Z20UpdateCableInterfacev</STRONG> (ARM, 304 bytes, Stack size 40 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z20UpdateCableInterfacev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe684]"></a>_Z31LoadUSBWorkingConfigurationZerov</STRONG> (ARM, 236 bytes, Stack size 72 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = _Z31LoadUSBWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeUSBCableTablev
</UL>

<P><STRONG><a name="[52fe648]"></a>_Z30LoadUSBWorkingConfigurationOnev</STRONG> (ARM, 180 bytes, Stack size 48 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = _Z30LoadUSBWorkingConfigurationOnev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeUSBCableTablev
</UL>

<P><STRONG><a name="[52fe60c]"></a>_Z31LoadKBWWorkingConfigurationZerov</STRONG> (ARM, 196 bytes, Stack size 72 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = _Z31LoadKBWWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeKBWCableTablev
</UL>

<P><STRONG><a name="[52fe5d0]"></a>_Z30LoadKBWWorkingConfigurationOnev</STRONG> (ARM, 164 bytes, Stack size 48 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = _Z30LoadKBWWorkingConfigurationOnev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ChangeKBWCableTablev
</UL>

<P><STRONG><a name="[52fe594]"></a>_Z31Load232WorkingConfigurationZerov</STRONG> (ARM, 196 bytes, Stack size 72 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = _Z31Load232WorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS485CableTablev
<LI><a href="#[52fe3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS232CableTablev
</UL>

<P><STRONG><a name="[52fe558]"></a>_Z30Load232WorkingConfigurationOnev</STRONG> (ARM, 164 bytes, Stack size 48 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = _Z30Load232WorkingConfigurationOnev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS232CableTablev
</UL>

<P><STRONG><a name="[52fe51c]"></a>_Z31Load485WorkingConfigurationZerov</STRONG> (ARM, 220 bytes, Stack size 72 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = _Z31Load485WorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS485CableTablev
</UL>

<P><STRONG><a name="[52fe4e0]"></a>_Z30Load485WorkingConfigurationOnev</STRONG> (ARM, 164 bytes, Stack size 48 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = _Z30Load485WorkingConfigurationOnev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeRS485CableTablev
</UL>

<P><STRONG><a name="[3e9cc4c]"></a>_Z27LoadWorkingConfigurationOnev</STRONG> (ARM, 236 bytes, Stack size 72 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = _Z27LoadWorkingConfigurationOnev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeTableSelSettingv
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
</UL>

<P><STRONG><a name="[3e9cbd4]"></a>_Z28LoadWorkingConfigurationZerov</STRONG> (ARM, 236 bytes, Stack size 72 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = _Z28LoadWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeTableSelSettingv
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
</UL>

<P><STRONG><a name="[52fe4a4]"></a>_Z17CheckUSBCableModev</STRONG> (ARM, 508 bytes, Stack size 64 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _Z17CheckUSBCableModev &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe468]"></a>_Z19ChangeUSBCableTablev</STRONG> (ARM, 128 bytes, Stack size 16 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = _Z19ChangeUSBCableTablev &rArr; _Z31LoadUSBWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[52fe648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadUSBWorkingConfigurationOnev
<LI><a href="#[52fe684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadUSBWorkingConfigurationZerov
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe42c]"></a>_Z19CheckRS232CableModev</STRONG> (ARM, 432 bytes, Stack size 64 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _Z19CheckRS232CableModev &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe3f0]"></a>_Z21ChangeRS232CableTablev</STRONG> (ARM, 128 bytes, Stack size 16 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = _Z21ChangeRS232CableTablev &rArr; _Z31Load232WorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[52fe558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load232WorkingConfigurationOnev
<LI><a href="#[52fe594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load232WorkingConfigurationZerov
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe3b4]"></a>_Z19CheckRS485CableModev</STRONG> (ARM, 436 bytes, Stack size 64 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _Z19CheckRS485CableModev &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe378]"></a>_Z21ChangeRS485CableTablev</STRONG> (ARM, 128 bytes, Stack size 16 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = _Z21ChangeRS485CableTablev &rArr; _Z31Load485WorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[52fe4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load485WorkingConfigurationOnev
<LI><a href="#[52fe51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load485WorkingConfigurationZerov
<LI><a href="#[52fe594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load232WorkingConfigurationZerov
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe33c]"></a>_Z17CheckKBWCableModev</STRONG> (ARM, 440 bytes, Stack size 64 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _Z17CheckKBWCableModev &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe300]"></a>_Z19ChangeKBWCableTablev</STRONG> (ARM, 128 bytes, Stack size 16 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = _Z19ChangeKBWCableTablev &rArr; _Z31LoadKBWWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[52fe5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadKBWWorkingConfigurationOnev
<LI><a href="#[52fe60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadKBWWorkingConfigurationZerov
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe2c4]"></a>_Z21ChangeTableSelSettingv</STRONG> (ARM, 184 bytes, Stack size 8 bytes, InterfaceMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[51d2878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CurrentWorkTableEv
</UL>

<P><STRONG><a name="[52fe288]"></a>_Z15Enter232Standbyv</STRONG> (ARM, 104 bytes, Stack size 8 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = _Z15Enter232Standbyv &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe24c]"></a>_Z13CheckDEstatusv</STRONG> (ARM, 52 bytes, Stack size 0 bytes, InterfaceMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe210]"></a>_Z23TriggerUpdateOposRetailb</STRONG> (ARM, 96 bytes, Stack size 0 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52fe1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SetRetailScannerEnablev
</UL>

<P><STRONG><a name="[52fe1d4]"></a>_Z22SetRetailScannerEnablev</STRONG> (ARM, 60 bytes, Stack size 4 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z22SetRetailScannerEnablev
</UL>
<BR>[Calls]<UL><LI><a href="#[52fe210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23TriggerUpdateOposRetailb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[52fe198]"></a>_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi</STRONG> (ARM, 14364 bytes, Stack size 344 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[406501c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14InterfaceTokenEv
<LI><a href="#[406dd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmYoujie4600Ev
<LI><a href="#[406ddac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmIndustrialEv
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
<LI><a href="#[52fe120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ClearFixedAttributeEPKc
<LI><a href="#[52fe15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[52fe7b0]"></a>_Z20CheckTableSelSettingv</STRONG> (ARM, 224 bytes, Stack size 32 bytes, InterfaceMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _Z20CheckTableSelSettingv &rArr; _ZN6CIoMan6printfEPKcz &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> InterfaceMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5367d80]"></a>_Z17ReportAimerCenterv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, productconfiguration.o(.text), UNUSED)

<P><STRONG><a name="[36b93a8]"></a>_ZN21PRODUCT_CONFIGURATIONC1Ev</STRONG> (ARM, 5256 bytes, Stack size 376 bytes, productconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _ZN21PRODUCT_CONFIGURATIONC1Ev &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[406501c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14InterfaceTokenEv
<LI><a href="#[406bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken21IAmChargeOnlyBaseTypeEv
<LI><a href="#[406ddac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmIndustrialEv
<LI><a href="#[52fe15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
<LI><a href="#[5367bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGEC1Ei
<LI><a href="#[5367c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20EnableSettingChangesEb
<LI><a href="#[5367c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[5367ccc]"></a>_ZN21PRODUCT_CONFIGURATIONC2Ev</STRONG> (ARM, 0 bytes, Stack size 376 bytes, productconfiguration.o(.text), UNUSED)

<P><STRONG><a name="[5300880]"></a>_Z14deferred_resetv</STRONG> (ARM, 28 bytes, Stack size 0 bytes, readerconfiguration.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5366cdc]"></a>_ZN20READER_CONFIGURATION10InitializeEi</STRONG> (ARM, 364 bytes, Stack size 80 bytes, readerconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION10InitializeEi &rArr; _ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreatePluginMenuSettingsEi
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52ff854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateIndicatorMenuSettingsEi
<LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5302ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
<LI><a href="#[5307798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION31CreateCPUPowerSpeedMenuSettingsEi
<LI><a href="#[5366afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION29CreatePlugAndPlayMenuSettingsEi
<LI><a href="#[5366b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj
<LI><a href="#[5366b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateScriptingMenuSettingsEij
<LI><a href="#[5366bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateLicenseMenuSettingsEi
<LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
<LI><a href="#[5366c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATIONC1Ei
</UL>

<P><STRONG><a name="[36b9420]"></a>_ZN20READER_CONFIGURATIONC1Ei</STRONG> (ARM, 68 bytes, Stack size 16 bytes, readerconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATIONC1Ei &rArr; _ZN20READER_CONFIGURATION10InitializeEi &rArr; _ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
<LI><a href="#[5367bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGEC1Ei
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24SetupReaderConfigurationv
</UL>

<P><STRONG><a name="[5366ca0]"></a>_ZN20READER_CONFIGURATIONC2Ei</STRONG> (ARM, 0 bytes, Stack size 16 bytes, readerconfiguration.o(.text), UNUSED)

<P><STRONG><a name="[406dcf8]"></a>_ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, readerconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION60ReconcileSettingsAfterHardwareInitializationOrDefaultCommandEv &rArr; _Z25UpdateImageShipParametersv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[406ded8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UpdateImageTransferSettingsv
<LI><a href="#[53008f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31ChangeIlluminationAlwaysOnStatev
<LI><a href="#[5300b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36ProcessEngineIlluminationColorChangev
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[36b945c]"></a>_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv</STRONG> (ARM, 2000 bytes, Stack size 264 bytes, readerconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv &rArr; _Z32StoreProductConfigurationToFlashb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE21WorkingValuesUpToDateEv
<LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3885694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImageEngineHasPsocv
<LI><a href="#[3e99f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32StoreProductConfigurationToFlashb
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[406ded8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27UpdateImageTransferSettingsv
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[53007cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKcii
<LI><a href="#[5300844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb
<LI><a href="#[53008f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31ChangeIlluminationAlwaysOnStatev
<LI><a href="#[5300b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36ProcessEngineIlluminationColorChangev
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
<LI><a href="#[5366ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcbbb
<LI><a href="#[5367c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20EnableSettingChangesEb
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[5366c64]"></a>_ZN20READER_CONFIGURATION12ProcessErrorEiPKc</STRONG> (ARM, 208 bytes, Stack size 104 bytes, readerconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN20READER_CONFIGURATION12ProcessErrorEiPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> readerconfiguration.o(.constdata__ZTV20READER_CONFIGURATION)
</UL>
<P><STRONG><a name="[5361048]"></a>_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_</STRONG> (ARM, 472 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_ &rArr; _ZN7HSTRINGC1EPKcbb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiiPi
</UL>
<BR>[Called By]<UL><LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535fef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT5EraseEPKcPb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
</UL>

<P><STRONG><a name="[536010c]"></a>_ZN11DATA_FORMAT25SizeOfBinaryCommandStringEi</STRONG> (ARM, 92 bytes, Stack size 8 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11DATA_FORMAT25SizeOfBinaryCommandStringEi
</UL>
<BR>[Called By]<UL><LI><a href="#[53600d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT24BuildBinaryCommandStringEv
</UL>

<P><STRONG><a name="[53600d0]"></a>_ZN11DATA_FORMAT24BuildBinaryCommandStringEv</STRONG> (ARM, 396 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN11DATA_FORMAT24BuildBinaryCommandStringEv &rArr; _ZN11DATA_FORMAT25SizeOfBinaryCommandStringEi
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7923c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEPhj
<LI><a href="#[536010c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT25SizeOfBinaryCommandStringEi
</UL>
<BR>[Called By]<UL><LI><a href="#[535ff2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT5EraseEiiiiPb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>

<P><STRONG><a name="[5360094]"></a>_ZN11DATA_FORMAT4FindEiiiii</STRONG> (ARM, 128 bytes, Stack size 36 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _ZN11DATA_FORMAT4FindEiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[36af628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17FindCommandStringEiiiiRi
<LI><a href="#[535ff2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT5EraseEiiiiPb
<LI><a href="#[5360058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING
</UL>

<P><STRONG><a name="[5360058]"></a>_ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING</STRONG> (ARM, 468 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3f1d1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKS_b
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[5360094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT4FindEiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
</UL>

<P><STRONG><a name="[536001c]"></a>_ZN11DATA_FORMAT8EraseAllEPb</STRONG> (ARM, 136 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN11DATA_FORMAT8EraseAllEPb &rArr; _ZN11DATA_FORMAT24BuildBinaryCommandStringEv &rArr; _ZN11DATA_FORMAT25SizeOfBinaryCommandStringEi
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[53600d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT24BuildBinaryCommandStringEv
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
</UL>

<P><STRONG><a name="[535ffe0]"></a>_ZN11DATA_FORMAT14ProcessCommandEPKcb</STRONG> (ARM, 748 bytes, Stack size 152 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3885130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20FindCharacterForwardEhjPi
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[4d79200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPS_
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
<LI><a href="#[5360058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING
<LI><a href="#[53600d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT24BuildBinaryCommandStringEv
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
</UL>
<BR>[Called By]<UL><LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535f5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13AddDataFormatEPKcjPFbvES3_PP11DATA_FORMATjS1_S1_
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535ffa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMATC1EiPKc
</UL>

<P><STRONG><a name="[535ffa4]"></a>_ZN11DATA_FORMATC1EiPKc</STRONG> (ARM, 88 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _ZN11DATA_FORMATC1EiPKc &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13AddDataFormatEPKcjPFbvES3_PP11DATA_FORMATjS1_S1_
</UL>

<P><STRONG><a name="[535ff68]"></a>_ZN11DATA_FORMATC2EiPKc</STRONG> (ARM, 0 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text), UNUSED)

<P><STRONG><a name="[36af628]"></a>_ZN11DATA_FORMAT17FindCommandStringEiiiiRi</STRONG> (ARM, 116 bytes, Stack size 28 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN11DATA_FORMAT17FindCommandStringEiiiiRi &rArr; _ZN11DATA_FORMAT4FindEiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[5360094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT4FindEiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[36af844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit16FindFormatAndTryEP4KEYSRP12CBarcodeData
</UL>

<P><STRONG><a name="[535ff2c]"></a>_ZN11DATA_FORMAT5EraseEiiiiPb</STRONG> (ARM, 284 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _ZN11DATA_FORMAT5EraseEiiiiPb &rArr; _ZN11DATA_FORMAT24BuildBinaryCommandStringEv &rArr; _ZN11DATA_FORMAT25SizeOfBinaryCommandStringEi
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[5360094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT4FindEiiiii
<LI><a href="#[53600d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT24BuildBinaryCommandStringEv
</UL>
<BR>[Called By]<UL><LI><a href="#[535fef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT5EraseEPKcPb
</UL>

<P><STRONG><a name="[535fef0]"></a>_ZN11DATA_FORMAT5EraseEPKcPb</STRONG> (ARM, 132 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _ZN11DATA_FORMAT5EraseEPKcPb &rArr; _ZN11DATA_FORMAT5EraseEiiiiPb &rArr; _ZN11DATA_FORMAT24BuildBinaryCommandStringEv &rArr; _ZN11DATA_FORMAT25SizeOfBinaryCommandStringEi
</UL>
<BR>[Calls]<UL><LI><a href="#[535ff2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT5EraseEiiiiPb
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[535feb4]"></a>_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb</STRONG> (ARM, 340 bytes, Stack size 104 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[535f2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE
<LI><a href="#[535f338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>

<P><STRONG><a name="[535fe78]"></a>_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi</STRONG> (ARM, 184 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ZN13PREFIX_SUFFIX8ParseKeyEPKcPi &rArr; _ZN7HSTRINGC1EPKcbb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
</UL>

<P><STRONG><a name="[535fe3c]"></a>_ZN13PREFIX_SUFFIX25SizeOfBinaryCommandStringEii</STRONG> (ARM, 100 bytes, Stack size 12 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN13PREFIX_SUFFIX25SizeOfBinaryCommandStringEii
</UL>
<BR>[Called By]<UL><LI><a href="#[535fe00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv
</UL>

<P><STRONG><a name="[535fe00]"></a>_ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv</STRONG> (ARM, 280 bytes, Stack size 32 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv &rArr; _ZN13PREFIX_SUFFIX25SizeOfBinaryCommandStringEii
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7923c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEPhj
<LI><a href="#[535fe3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX25SizeOfBinaryCommandStringEii
</UL>
<BR>[Called By]<UL><LI><a href="#[535fc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX5EraseEiPb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
</UL>

<P><STRONG><a name="[535fdc4]"></a>_ZN13PREFIX_SUFFIX38CreateNewEntryOrOverwriteExistingEntryEiP7HSTRING</STRONG> (ARM, 292 bytes, Stack size 32 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _ZN13PREFIX_SUFFIX38CreateNewEntryOrOverwriteExistingEntryEiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
</UL>
<BR>[Called By]<UL><LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
</UL>

<P><STRONG><a name="[535fd88]"></a>_ZN13PREFIX_SUFFIX8EraseAllEPb</STRONG> (ARM, 132 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _ZN13PREFIX_SUFFIX8EraseAllEPb &rArr; _ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv &rArr; _ZN13PREFIX_SUFFIX25SizeOfBinaryCommandStringEii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[535fe00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
</UL>

<P><STRONG><a name="[535fd4c]"></a>_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb</STRONG> (ARM, 724 bytes, Stack size 136 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _ZN13PREFIX_SUFFIX14ProcessCommandEPKcb &rArr; _ZN13PREFIX_SUFFIX38CreateNewEntryOrOverwriteExistingEntryEiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3885130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20FindCharacterForwardEhjPi
<LI><a href="#[388516c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiiPi
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[4d79200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPS_
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535fdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX38CreateNewEntryOrOverwriteExistingEntryEiP7HSTRING
<LI><a href="#[535fe00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv
<LI><a href="#[535fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi
</UL>
<BR>[Called By]<UL><LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535f590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15AddPrefixSuffixEPKcjPFbvES3_PP13PREFIX_SUFFIXjS1_S1_
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fd10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIXC1EiPKc
</UL>

<P><STRONG><a name="[535fd10]"></a>_ZN13PREFIX_SUFFIXC1EiPKc</STRONG> (ARM, 84 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _ZN13PREFIX_SUFFIXC1EiPKc &rArr; _ZN13PREFIX_SUFFIX14ProcessCommandEPKcb &rArr; _ZN13PREFIX_SUFFIX38CreateNewEntryOrOverwriteExistingEntryEiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15AddPrefixSuffixEPKcjPFbvES3_PP13PREFIX_SUFFIXjS1_S1_
</UL>

<P><STRONG><a name="[535fcd4]"></a>_ZN13PREFIX_SUFFIXC2EiPKc</STRONG> (ARM, 0 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text), UNUSED)

<P><STRONG><a name="[36af3d0]"></a>_ZN13PREFIX_SUFFIX17FindCommandStringEi</STRONG> (ARM, 96 bytes, Stack size 8 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN13PREFIX_SUFFIX17FindCommandStringEi
</UL>
<BR>[Called By]<UL><LI><a href="#[36af8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CDataEdit20GetSizeAndEditStringEP13PREFIX_SUFFIXiRP7HSTRING
</UL>

<P><STRONG><a name="[535fc98]"></a>_ZN13PREFIX_SUFFIX5EraseEiPb</STRONG> (ARM, 248 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _ZN13PREFIX_SUFFIX5EraseEiPb &rArr; _ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv &rArr; _ZN13PREFIX_SUFFIX25SizeOfBinaryCommandStringEii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[535fe00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX24BuildBinaryCommandStringEv
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[535fc5c]"></a>_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb</STRONG> (ARM, 288 bytes, Stack size 72 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[535f2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE
<LI><a href="#[535f338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>

<P><STRONG><a name="[535fc20]"></a>_ZN13SUB_TAG_TABLE14AddMoreEntriesEv</STRONG> (ARM, 248 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN13SUB_TAG_TABLE14AddMoreEntriesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>

<P><STRONG><a name="[535fbe4]"></a>_ZN13SUB_TAG_TABLE4FindEPKcPjS2_</STRONG> (ARM, 228 bytes, Stack size 32 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN13SUB_TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4d78a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnicmp
</UL>
<BR>[Called By]<UL><LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[3e9cb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE22ValidatePartialCommandEPKcPb
<LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[5300790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciiPi
<LI><a href="#[53007cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKcii
<LI><a href="#[5300808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciPii
<LI><a href="#[535f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>

<P><STRONG><a name="[535fba8]"></a>_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j</STRONG> (ARM, 984 bytes, Stack size 184 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[4d78d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE14AddMoreEntriesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[52fe15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[5300754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_iS4_
<LI><a href="#[5306e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiiS4_
<LI><a href="#[5306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_i
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
<LI><a href="#[535f590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15AddPrefixSuffixEPKcjPFbvES3_PP13PREFIX_SUFFIXjS1_S1_
<LI><a href="#[535f5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13AddDataFormatEPKcjPFbvES3_PP11DATA_FORMATjS1_S1_
<LI><a href="#[535f608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i
<LI><a href="#[5367c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
</UL>

<P><STRONG><a name="[535fb6c]"></a>_ZN9TAG_TABLE14AddMoreEntriesEv</STRONG> (ARM, 148 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN9TAG_TABLE14AddMoreEntriesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
</UL>

<P><STRONG><a name="[535fb30]"></a>_ZN9TAG_TABLE4FindEPKcPjS2_</STRONG> (ARM, 212 bytes, Stack size 32 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4d78a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnicmp
</UL>
<BR>[Called By]<UL><LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[3e9cb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE22ValidatePartialCommandEPKcPb
<LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[5300790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciiPi
<LI><a href="#[53007cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKcii
<LI><a href="#[5300808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciPii
<LI><a href="#[535f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE38RestoreAllSettingsWithThisTagToDefaultEPKcc
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
</UL>

<P><STRONG><a name="[535faf4]"></a>_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc</STRONG> (ARM, 296 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fb6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE14AddMoreEntriesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[52fe15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[5300754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_iS4_
<LI><a href="#[5306e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiiS4_
<LI><a href="#[5306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_i
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
<LI><a href="#[535f590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15AddPrefixSuffixEPKcjPFbvES3_PP13PREFIX_SUFFIXjS1_S1_
<LI><a href="#[535f5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13AddDataFormatEPKcjPFbvES3_PP11DATA_FORMATjS1_S1_
<LI><a href="#[535f608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i
<LI><a href="#[5367c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
</UL>

<P><STRONG><a name="[535fab8]"></a>_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE</STRONG> (ARM, 300 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CopyStandardDefaultsToDefaultsEv
<LI><a href="#[535f914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb
</UL>

<P><STRONG><a name="[535fa7c]"></a>_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc</STRONG> (ARM, 544 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b91c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb
<LI><a href="#[535f3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE38RestoreAllSettingsWithThisTagToDefaultEPKcc
<LI><a href="#[535f914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb
</UL>

<P><STRONG><a name="[535fa40]"></a>_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE</STRONG> (ARM, 304 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[535fa04]"></a>_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE</STRONG> (ARM, 508 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE37CopyWorkingSettingsOverActiveSettingsEv
<LI><a href="#[36b91c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb
<LI><a href="#[535f3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE38RestoreAllSettingsWithThisTagToDefaultEPKcc
<LI><a href="#[535f914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb
</UL>

<P><STRONG><a name="[535f9c8]"></a>_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j</STRONG> (ARM, 292 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
</UL>

<P><STRONG><a name="[535f98c]"></a>_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE</STRONG> (ARM, 324 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib
<LI><a href="#[535f950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
</UL>

<P><STRONG><a name="[535f950]"></a>_ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc</STRONG> (ARM, 436 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CopySettingValueEPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b91c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb
</UL>

<P><STRONG><a name="[535f914]"></a>_ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb</STRONG> (ARM, 140 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb &rArr; _ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535f950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[5300844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb
<LI><a href="#[5366ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcbbb
</UL>

<P><STRONG><a name="[5367bdc]"></a>_ZN28READER_CONFIGURATION_STORAGEC1Ei</STRONG> (ARM, 384 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGEC1Ei &rArr; _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b9420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATIONC1Ei
</UL>

<P><STRONG><a name="[535f8d8]"></a>_ZN28READER_CONFIGURATION_STORAGEC2Ei</STRONG> (ARM, 0 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text), UNUSED)

<P><STRONG><a name="[5367c18]"></a>_ZN28READER_CONFIGURATION_STORAGE20EnableSettingChangesEb</STRONG> (ARM, 8 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[535db14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z48ProcessProductConfigurationUpdatePrivilegeChangev
<LI><a href="#[535db50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z47ProcessProductConfigurationQueryPrivilegeChangev
</UL>

<P><STRONG><a name="[51d2878]"></a>_ZN28READER_CONFIGURATION_STORAGE16CurrentWorkTableEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21ChangeTableSelSettingv
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
</UL>

<P><STRONG><a name="[388525c]"></a>_ZN28READER_CONFIGURATION_STORAGE30CurrentWorkTableForScannedMenuEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
</UL>

<P><STRONG><a name="[535f89c]"></a>_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE</STRONG> (ARM, 316 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib
</UL>

<P><STRONG><a name="[535f860]"></a>_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib</STRONG> (ARM, 360 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib &rArr; _ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
</UL>

<P><STRONG><a name="[3e9cb5c]"></a>_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE</STRONG> (ARM, 152 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[36b918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE35UpdateNumericListWorkingDefaltValueEPKci
<LI><a href="#[3e9cd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26TerminateAddHexStringBlockPKc
<LI><a href="#[406de9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27AlertDriverOfSettingsChangev
<LI><a href="#[52fe120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ClearFixedAttributeEPKc
<LI><a href="#[5300844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb
<LI><a href="#[535f7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28ScannedMenuChangeToWorktableEi
<LI><a href="#[535f824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorktableEi
<LI><a href="#[5366ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcbbb
</UL>

<P><STRONG><a name="[535f824]"></a>_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorktableEi</STRONG> (ARM, 276 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE17ChangeToWorktableEi &rArr; _ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
</UL>

<P><STRONG><a name="[535f7e8]"></a>_ZN28READER_CONFIGURATION_STORAGE28ScannedMenuChangeToWorktableEi</STRONG> (ARM, 240 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE28ScannedMenuChangeToWorktableEi &rArr; _ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
</UL>

<P><STRONG><a name="[535f7ac]"></a>_ZN28READER_CONFIGURATION_STORAGE28ComputeMaximumNumberOfDigitsEib</STRONG> (ARM, 92 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[535f680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
<LI><a href="#[535f6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEii
<LI><a href="#[535f6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiPi
<LI><a href="#[535f734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPii
<LI><a href="#[535f770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPiiS3_
</UL>

<P><STRONG><a name="[36b918c]"></a>_ZN28READER_CONFIGURATION_STORAGE35UpdateNumericListWorkingDefaltValueEPKci</STRONG> (ARM, 156 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE35UpdateNumericListWorkingDefaltValueEPKci &rArr; _ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36CreateManualCableSelect_ProdSpecificv
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
</UL>

<P><STRONG><a name="[535f770]"></a>_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPiiS3_</STRONG> (ARM, 320 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPiiS3_
</UL>
<BR>[Calls]<UL><LI><a href="#[535f7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28ComputeMaximumNumberOfDigitsEib
</UL>
<BR>[Called By]<UL><LI><a href="#[5300754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_iS4_
</UL>

<P><STRONG><a name="[535f734]"></a>_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPii</STRONG> (ARM, 320 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28ComputeMaximumNumberOfDigitsEib
</UL>
<BR>[Called By]<UL><LI><a href="#[5300808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciPii
<LI><a href="#[5306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_i
</UL>

<P><STRONG><a name="[535f6f8]"></a>_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiPi</STRONG> (ARM, 324 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiPi
</UL>
<BR>[Calls]<UL><LI><a href="#[535f7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28ComputeMaximumNumberOfDigitsEib
</UL>
<BR>[Called By]<UL><LI><a href="#[5300790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciiPi
<LI><a href="#[5306e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiiS4_
</UL>

<P><STRONG><a name="[535f6bc]"></a>_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEii</STRONG> (ARM, 324 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28ComputeMaximumNumberOfDigitsEib
</UL>
<BR>[Called By]<UL><LI><a href="#[53007cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKcii
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>

<P><STRONG><a name="[535f680]"></a>_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii</STRONG> (ARM, 684 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28ComputeMaximumNumberOfDigitsEib
</UL>
<BR>[Called By]<UL><LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[535f644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>

<P><STRONG><a name="[535f644]"></a>_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii</STRONG> (ARM, 568 bytes, Stack size 376 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Called By]<UL><LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>

<P><STRONG><a name="[3f1d31c]"></a>_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i</STRONG> (ARM, 188 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[3f1d40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreatePluginMenuSettingsEi
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52ff854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateIndicatorMenuSettingsEi
<LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5302ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
<LI><a href="#[5366afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION29CreatePlugAndPlayMenuSettingsEi
<LI><a href="#[5366b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateScriptingMenuSettingsEij
<LI><a href="#[5366bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateLicenseMenuSettingsEi
<LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
<LI><a href="#[5366c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi
</UL>

<P><STRONG><a name="[3f1d358]"></a>_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb</STRONG> (ARM, 324 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[3f1d40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreatePluginMenuSettingsEi
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52ff854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateIndicatorMenuSettingsEi
<LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5302ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
<LI><a href="#[5307798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION31CreateCPUPowerSpeedMenuSettingsEi
<LI><a href="#[5366b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj
<LI><a href="#[5366b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateScriptingMenuSettingsEij
<LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
<LI><a href="#[5366c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi
</UL>

<P><STRONG><a name="[535f608]"></a>_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i</STRONG> (ARM, 468 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
</UL>

<P><STRONG><a name="[3f1d2e0]"></a>_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_</STRONG> (ARM, 108 bytes, Stack size 88 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_ &rArr; _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[3f1d40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreatePluginMenuSettingsEi
<LI><a href="#[406df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17FillInProductNamev
<LI><a href="#[5302ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
<LI><a href="#[5366b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateScriptingMenuSettingsEij
<LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
</UL>

<P><STRONG><a name="[52fe15c]"></a>_ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_</STRONG> (ARM, 600 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE16AddUnicodeStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[4d7914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26SimpleAsciiToUniCodeFormatEv
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
</UL>

<P><STRONG><a name="[5367c54]"></a>_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_</STRONG> (ARM, 652 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[5302b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGS1_S1_
</UL>

<P><STRONG><a name="[5302b6c]"></a>_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGS1_S1_</STRONG> (ARM, 80 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGS1_S1_ &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[5367c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddASCIIStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
</UL>
<BR>[Called By]<UL><LI><a href="#[5302ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi
</UL>

<P><STRONG><a name="[5306f28]"></a>_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_</STRONG> (ARM, 732 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[4339034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11HexToBinaryEv
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
<LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
</UL>

<P><STRONG><a name="[535f5cc]"></a>_ZN28READER_CONFIGURATION_STORAGE13AddDataFormatEPKcjPFbvES3_PP11DATA_FORMATjS1_S1_</STRONG> (ARM, 592 bytes, Stack size 72 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE13AddDataFormatEPKcjPFbvES3_PP11DATA_FORMATjS1_S1_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
<LI><a href="#[535ffa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMATC1EiPKc
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
</UL>
<BR>[Called By]<UL><LI><a href="#[5366c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi
</UL>

<P><STRONG><a name="[535f590]"></a>_ZN28READER_CONFIGURATION_STORAGE15AddPrefixSuffixEPKcjPFbvES3_PP13PREFIX_SUFFIXjS1_S1_</STRONG> (ARM, 592 bytes, Stack size 72 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE15AddPrefixSuffixEPKcjPFbvES3_PP13PREFIX_SUFFIXjS1_S1_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
<LI><a href="#[535fd10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIXC1EiPKc
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
</UL>
<BR>[Called By]<UL><LI><a href="#[5366c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi
</UL>

<P><STRONG><a name="[5300754]"></a>_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_iS4_</STRONG> (ARM, 348 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_iS4_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPiiS3_
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
</UL>

<P><STRONG><a name="[5306eb0]"></a>_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_i</STRONG> (ARM, 348 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiS4_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPii
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
</UL>

<P><STRONG><a name="[5306e74]"></a>_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiiS4_</STRONG> (ARM, 348 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_PiiiiiS4_ &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiPi
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
</UL>

<P><STRONG><a name="[530775c]"></a>_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii</STRONG> (ARM, 340 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEii
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52ff854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateIndicatorMenuSettingsEi
<LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5302ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
<LI><a href="#[5307798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION31CreateCPUPowerSpeedMenuSettingsEi
<LI><a href="#[5366b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj
<LI><a href="#[5366b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateScriptingMenuSettingsEij
<LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
<LI><a href="#[5366c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi
</UL>

<P><STRONG><a name="[5306eec]"></a>_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii</STRONG> (ARM, 712 bytes, Stack size 288 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[535faf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE28GetExistingTagOrCreateNewTagEPKc
<LI><a href="#[535fba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21PRODUCT_CONFIGURATIONC1Ev
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52ff854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateIndicatorMenuSettingsEi
<LI><a href="#[53008bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateImagingMenuSettingsEijjjjjj
<LI><a href="#[5302ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION36CreateDiagnosticAndDebugMenuSettingsEi
<LI><a href="#[5306fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION25CreateDecoderMenuSettingsEijjjjjjjj
<LI><a href="#[5366b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj
<LI><a href="#[5366bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi
<LI><a href="#[5366c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi
</UL>

<P><STRONG><a name="[535f554]"></a>_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING</STRONG> (ARM, 2796 bytes, Stack size 72 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib &rArr; _ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1b774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEjj
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[4d79020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING16CompareSubstringEPKcjb
<LI><a href="#[535f860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib
</UL>
<BR>[Called By]<UL><LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
</UL>

<P><STRONG><a name="[535f518]"></a>_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb</STRONG> (ARM, 1984 bytes, Stack size 112 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb &rArr; _ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[4d79110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11BinaryToHexEv
<LI><a href="#[4d79188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableCharactersToFormatsEv
<LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[535f4dc]"></a>_ZN28READER_CONFIGURATION_STORAGE17QuerySettingRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRING</STRONG> (ARM, 572 bytes, Stack size 104 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE17QuerySettingRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRING &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[4d795fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING8CopyCharEi
</UL>
<BR>[Called By]<UL><LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[535f4a0]"></a>_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb</STRONG> (ARM, 4096 bytes, Stack size 88 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib &rArr; _ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[38851a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING18ConvertHexToNumberEiPi
<LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[4339034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11HexToBinaryEv
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
<LI><a href="#[4d790d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING23QuotedHEXStringToBinaryEPb
<LI><a href="#[4d7914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26SimpleAsciiToUniCodeFormatEv
<LI><a href="#[4d7923c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEPhj
<LI><a href="#[535f7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28ScannedMenuChangeToWorktableEi
<LI><a href="#[535f824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorktableEi
<LI><a href="#[535f860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib
<LI><a href="#[535fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX14ProcessCommandEPKcb
<LI><a href="#[535fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi
<LI><a href="#[535ffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT14ProcessCommandEPKcb
<LI><a href="#[5361048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8ParseKeyEPKcPiS2_S2_S2_
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9cb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE22ValidatePartialCommandEPKcPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[535f464]"></a>_ZN28READER_CONFIGURATION_STORAGE21DisableAllSymbologiesEc</STRONG> (ARM, 620 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE21DisableAllSymbologiesEc
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[535f428]"></a>_ZN28READER_CONFIGURATION_STORAGE20EnableAllSymbologiesEc</STRONG> (ARM, 616 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE20EnableAllSymbologiesEc
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[535f3ec]"></a>_ZN28READER_CONFIGURATION_STORAGE30CopyStandardDefaultsToDefaultsEv</STRONG> (ARM, 152 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE30CopyStandardDefaultsToDefaultsEv &rArr; _ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535fab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE28CopyStandardDefaultToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[535f3b0]"></a>_ZN28READER_CONFIGURATION_STORAGE38RestoreAllSettingsWithThisTagToDefaultEPKcc</STRONG> (ARM, 272 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE38RestoreAllSettingsWithThisTagToDefaultEPKcc &rArr; _ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[36b91c8]"></a>_ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb</STRONG> (ARM, 292 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb &rArr; _ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535f950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyDefaultToWorkingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
</UL>

<P><STRONG><a name="[535f374]"></a>_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc</STRONG> (ARM, 2520 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc &rArr; _ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb &rArr; _ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b91c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb
<LI><a href="#[535f3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE38RestoreAllSettingsWithThisTagToDefaultEPKcc
<LI><a href="#[535f3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CopyStandardDefaultsToDefaultsEv
<LI><a href="#[535f428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20EnableAllSymbologiesEc
<LI><a href="#[535f464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE21DisableAllSymbologiesEc
<LI><a href="#[535fa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CopyWorkingToDefaultEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX5EraseEiPb
<LI><a href="#[535fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8EraseAllEPb
<LI><a href="#[535fe78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX8ParseKeyEPKcPi
<LI><a href="#[535fef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT5EraseEPKcPb
<LI><a href="#[536001c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT8EraseAllEPb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[535f338]"></a>_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_</STRONG> (ARM, 408 bytes, Stack size 72 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_ &rArr; _ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3f1d1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKS_b
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[535f2fc]"></a>_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE</STRONG> (ARM, 416 bytes, Stack size 72 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE &rArr; _ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3f1d1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKS_b
<LI><a href="#[535fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13PREFIX_SUFFIX17BuildReportStringEP7HSTRINGbb
<LI><a href="#[535feb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11DATA_FORMAT17BuildReportStringEP7HSTRINGbb
</UL>
<BR>[Called By]<UL><LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
</UL>

<P><STRONG><a name="[535f2c0]"></a>_ZN28READER_CONFIGURATION_STORAGE16GetAffectedTableEP7HSTRINGPc</STRONG> (ARM, 92 bytes, Stack size 8 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE16GetAffectedTableEP7HSTRINGPc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
</UL>

<P><STRONG><a name="[535f284]"></a>_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb</STRONG> (ARM, 3476 bytes, Stack size 264 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb &rArr; _ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc &rArr; _ZN28READER_CONFIGURATION_STORAGE30CopyDefaultsToWorkingAndActiveEcb &rArr; _ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3885130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20FindCharacterForwardEhjPi
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1b774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEjj
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
<LI><a href="#[4d78d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[4d78dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING9UpperCaseEv
<LI><a href="#[4d79200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPS_
<LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[535f2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYEPNS0_47SUB_TAG_TABLE_INSTANTIATOR_COPY_OF_ACTIVE_VALUEE
<LI><a href="#[535f338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20CompareSettingValuesEiPN13SUB_TAG_TABLE25SUB_TAG_TABLE_VALUE_ENTRYES2_
<LI><a href="#[535f374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15DoSpecialActionEP13SUB_TAG_TABLEPNS0_19SUB_TAG_TABLE_ENTRYEPKcc
<LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535f4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17QuerySettingRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRING
<LI><a href="#[535f518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12QuerySettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEcP7HSTRINGcb
<LI><a href="#[535f950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc
<LI><a href="#[535f98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
</UL>

<P><STRONG><a name="[535f248]"></a>_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb</STRONG> (ARM, 1572 bytes, Stack size 288 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3885130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20FindCharacterForwardEhjPi
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1b774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEjj
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
<LI><a href="#[4d78dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING9UpperCaseEv
<LI><a href="#[4d79200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPS_
<LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE25ProcessMenuCommandSubTagsEP13SUB_TAG_TABLEP7HSTRINGPKccbPiS6_bb
<LI><a href="#[535f554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE23ProcessReportingCommandEP7HSTRING
<LI><a href="#[535f860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
</UL>

<P><STRONG><a name="[36b9114]"></a>_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb</STRONG> (ARM, 480 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
<LI><a href="#[535f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb
<LI><a href="#[535f2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16GetAffectedTableEP7HSTRINGPc
<LI><a href="#[535f860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b8ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger19UpdateTriggerStatusEv
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[36ba668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z45UpdateAfterReadWorkingAndDefaultConfigurationP7HSTRING
<LI><a href="#[36ba6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z35ReadWorkingAndDefaultConfigurationsP7HSTRINGS0_
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e99f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32StoreProductConfigurationToFlashb
<LI><a href="#[3e9b554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CMenuGlueDriver10GetSettingEtPwj
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[406de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29UpdateNumericListWorkingValuePKcS0_
<LI><a href="#[4339214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24Psoc5100FlashNewFirmwarebbb
<LI><a href="#[4ecd990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC11MenuCommandEPcPii
<LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
<LI><a href="#[51d60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessNonPluginMenuCommandsP7HSTRING
<LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
<LI><a href="#[52fe6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20UpdateCableInterfacev
<LI><a href="#[5302c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15TestFlexCommandj
<LI><a href="#[5307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ChangePostalv
<LI><a href="#[5307054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeUPUv
<LI><a href="#[5307090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ChangeUSPSv
<LI><a href="#[53070cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeKixv
<LI><a href="#[5307108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ChangeCanadianPostv
<LI><a href="#[5307144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ChangeJapanPostv
<LI><a href="#[5307180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ChangeBritishPostv
<LI><a href="#[53071bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ChangePlanetCodev
<LI><a href="#[53071f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangePostnetv
<LI><a href="#[5307234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangeAusPostv
<LI><a href="#[535bf6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20TurnOffFactorySuffixv
<LI><a href="#[535c5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12UpdateSDRTIMv
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
<LI><a href="#[54e0b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBY_DFTv
<LI><a href="#[54e0bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayUSBGroupv
<LI><a href="#[54e0bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlay232Groupv
<LI><a href="#[54e0c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayC39CheckRequestv
<LI><a href="#[54e0c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayC39CheckNonev
<LI><a href="#[54e0cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearSuffixv
<LI><a href="#[54e0cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayClearPrefixv
<LI><a href="#[54e0d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddSuffixAsteriskv
<LI><a href="#[54e0d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayAddSuffixAsteriskCRv
<LI><a href="#[54e0da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28PlugAndPlayAddPrefixAsteriskv
<LI><a href="#[54e0ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatM81v
<LI><a href="#[54e0e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO81v
<LI><a href="#[54e0e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO72v
<LI><a href="#[54e0e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatO71v
<LI><a href="#[54e0ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN81v
<LI><a href="#[54e0f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN72v
<LI><a href="#[54e0f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatN71v
<LI><a href="#[54e0f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayBaudRate115200v
<LI><a href="#[54e0fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate38400v
<LI><a href="#[54e0ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate19200v
<LI><a href="#[54e1034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate9600v
<LI><a href="#[54e1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate2400v
<LI><a href="#[54e10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate1200v
<LI><a href="#[54e10e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate600v
<LI><a href="#[54e1124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBaudRate300v
<LI><a href="#[54e1160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayBurningTestv
<LI><a href="#[54e119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayCRReplaceCommav
<LI><a href="#[54e11d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29PlugAndPlayCRReplaceSemicolonv
<LI><a href="#[54e1214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayImageRevertv
<LI><a href="#[54e1250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSBKBWv
<LI><a href="#[54e128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUSB232v
<LI><a href="#[54e12c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18PlugAndPlayAddCRLFv
<LI><a href="#[54e1304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddLFv
<LI><a href="#[54e1340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayAddTabv
<LI><a href="#[54e137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayAddCRv
<LI><a href="#[54e13b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayWinNixv
<LI><a href="#[54e13f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlayNCRv
<LI><a href="#[54e1430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayMagellanv
<LI><a href="#[54e146c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBioptiAuxPortv
<LI><a href="#[54e14a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayGilbarcov
<LI><a href="#[54e14e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayRubyv
<LI><a href="#[54e173c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayHi2dPresentaionCellv
<LI><a href="#[54e1778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayHHCellv
<LI><a href="#[54e17b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayHi2dPresentaionv
<LI><a href="#[54e17f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayHHFullv
<LI><a href="#[54e182c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayHHSnappyv
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
<LI><a href="#[54e1994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayOPOSv
<LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
<LI><a href="#[54e1b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlay232v
<LI><a href="#[54e1bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SetPrefixNoneSuffixCRLFv
<LI><a href="#[54e1bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SetSuffixCRv
<LI><a href="#[54e1c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SetPrefixSubstituteh
<LI><a href="#[54e1ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayUsbPosv
<LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
<LI><a href="#[54e1e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PAP_BeeprLevelMaxv
<LI><a href="#[54e209c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30PlugAndPlayC39CheckRequestXmitv
<LI><a href="#[54e2150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE81v
<LI><a href="#[54e218c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE72v
<LI><a href="#[54e21c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayWordFormatE71v
<LI><a href="#[54e2204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24PlugAndPlayBaudRate57600v
<LI><a href="#[54e22b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlaySetToDefaultv
<LI><a href="#[54e2330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayBaudRate4800v
<LI><a href="#[54e24d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayBeatlev
</UL>

<P><STRONG><a name="[3e9cae4]"></a>_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb</STRONG> (ARM, 140 bytes, Stack size 64 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[4d7923c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEPhj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b990c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z4MenuPjPh
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[3e9cd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25ProcessScannedMenuCommandPjPh
<LI><a href="#[52fe4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load485WorkingConfigurationOnev
<LI><a href="#[52fe51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load485WorkingConfigurationZerov
<LI><a href="#[52fe558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Load232WorkingConfigurationOnev
<LI><a href="#[52fe594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31Load232WorkingConfigurationZerov
<LI><a href="#[52fe5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadKBWWorkingConfigurationOnev
<LI><a href="#[52fe60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadKBWWorkingConfigurationZerov
<LI><a href="#[52fe648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30LoadUSBWorkingConfigurationOnev
<LI><a href="#[52fe684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31LoadUSBWorkingConfigurationZerov
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
</UL>

<P><STRONG><a name="[3e99e20]"></a>_ZN28READER_CONFIGURATION_STORAGE23CustomerDefaultsUpdatedEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
</UL>

<P><STRONG><a name="[3e99e5c]"></a>_ZN28READER_CONFIGURATION_STORAGE20WorkingValuesUpdatedEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
</UL>

<P><STRONG><a name="[406dc80]"></a>_ZN28READER_CONFIGURATION_STORAGE33AtLeastOneActiveValueWasDefaultedEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[406dcbc]"></a>_ZN28READER_CONFIGURATION_STORAGE19ActiveValuesUpdatedEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[36b9204]"></a>_ZN28READER_CONFIGURATION_STORAGE24CustomerDefaultsUpToDateEv</STRONG> (ARM, 160 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE24CustomerDefaultsUpToDateEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
</UL>

<P><STRONG><a name="[36b9240]"></a>_ZN28READER_CONFIGURATION_STORAGE21WorkingValuesUpToDateEv</STRONG> (ARM, 248 bytes, Stack size 12 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE21WorkingValuesUpToDateEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
</UL>

<P><STRONG><a name="[36b927c]"></a>_ZN28READER_CONFIGURATION_STORAGE20ActiveValuesUpToDateEv</STRONG> (ARM, 228 bytes, Stack size 16 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE20ActiveValuesUpToDateEv
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
</UL>

<P><STRONG><a name="[36b9150]"></a>_ZN28READER_CONFIGURATION_STORAGE37CopyWorkingSettingsOverActiveSettingsEv</STRONG> (ARM, 152 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE37CopyWorkingSettingsOverActiveSettingsEv &rArr; _ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535fa04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19CopyWorkingToActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
</UL>

<P><STRONG><a name="[5300808]"></a>_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciPii</STRONG> (ARM, 176 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciPii &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[535f734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiPii
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
</UL>

<P><STRONG><a name="[5300790]"></a>_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciiPi</STRONG> (ARM, 176 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKciiPi &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[535f6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiPi
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
</UL>

<P><STRONG><a name="[53007cc]"></a>_ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKcii</STRONG> (ARM, 168 bytes, Stack size 40 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE18ChangeNumericRangeEPKcii &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[535f6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE18UpdateNumericRangeEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEii
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
</UL>

<P><STRONG><a name="[36b92b8]"></a>_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii</STRONG> (ARM, 504 bytes, Stack size 304 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv
<LI><a href="#[36ba050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ExpandBaudRatesv
<LI><a href="#[36ba62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24ProcessUpdateInformationPi
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
</UL>

<P><STRONG><a name="[36b92f4]"></a>_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii</STRONG> (ARM, 176 bytes, Stack size 48 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[535f680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
<LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateDynamicMenuSettingsv
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[406df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13UpdateTermIDsv
<LI><a href="#[406e1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15UpdateCodePagesv
<LI><a href="#[52fe738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Update232Lockv
</UL>

<P><STRONG><a name="[535f20c]"></a>_ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb</STRONG> (ARM, 400 bytes, Stack size 72 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv
<LI><a href="#[36b9bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayFactoryTestv
<LI><a href="#[535db50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z47ProcessProductConfigurationQueryPrivilegeChangev
</UL>

<P><STRONG><a name="[3e9cb20]"></a>_ZN28READER_CONFIGURATION_STORAGE22ValidatePartialCommandEPKcPb</STRONG> (ARM, 328 bytes, Stack size 56 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE22ValidatePartialCommandEPKcPb &rArr; _ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeToWorkgroupEib &rArr; _ZN28READER_CONFIGURATION_STORAGE78MoveValueFromCurrentWorkgroupInActiveValueTableToInstantiatorCopyOfActiveValueEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535f4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE24ValidateAndChangeSettingEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPKcicbb
<LI><a href="#[535fb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TAG_TABLE4FindEPKcPjS2_
<LI><a href="#[535fbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13SUB_TAG_TABLE4FindEPKcPjS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[388570c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EnterScannedMenuPjPh
</UL>

<P><STRONG><a name="[52fe120]"></a>_ZN28READER_CONFIGURATION_STORAGE19ClearFixedAttributeEPKc</STRONG> (ARM, 40 bytes, Stack size 8 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE19ClearFixedAttributeEPKc &rArr; _ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
</UL>
<BR>[Called By]<UL><LI><a href="#[52fe198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27CreateInterfaceMenuSettingsEi
</UL>

<P><STRONG><a name="[5366ac0]"></a>_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcbbb</STRONG> (ARM, 76 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcbbb &rArr; _ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb &rArr; _ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv
</UL>

<P><STRONG><a name="[5300844]"></a>_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb</STRONG> (ARM, 188 bytes, Stack size 24 bytes, readerconfigurationstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb &rArr; _ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb &rArr; _ZN28READER_CONFIGURATION_STORAGE25ReplicateAcrossWorkgroupsEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEc &rArr; _ZN28READER_CONFIGURATION_STORAGE69MoveInstantiatorCopyOfActiveValueToCurrentWorkgroupInActiveValueTableEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE &rArr; _ZN11DATA_FORMAT14ProcessCommandEPKcb &rArr; _ZN11DATA_FORMAT38CreateNewEntryOrOverwriteExistingEntryEiiiiP7HSTRING &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9cb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE19GetSubTagTableEntryEPKcPPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE
<LI><a href="#[535f914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE44CopyStandardDefaultToDefaultWorkingAndActiveEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION44ReconcileSettingsAfterHardwareInitializationEv
<LI><a href="#[36b9498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv
<LI><a href="#[5300b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25UpdateImageShipParametersv
<LI><a href="#[54e0bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayUSBGroupv
<LI><a href="#[54e0bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlay232Groupv
</UL>

<P><STRONG><a name="[535db50]"></a>_Z47ProcessProductConfigurationQueryPrivilegeChangev</STRONG> (ARM, 140 bytes, Stack size 16 bytes, SystemMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _Z47ProcessProductConfigurationQueryPrivilegeChangev &rArr; _ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb &rArr; _ZN9TAG_TABLE4FindEPKcPjS2_ &rArr; strnicmp
</UL>
<BR>[Calls]<UL><LI><a href="#[535f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb
<LI><a href="#[5367c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20EnableSettingChangesEb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SystemMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[535db14]"></a>_Z48ProcessProductConfigurationUpdatePrivilegeChangev</STRONG> (ARM, 56 bytes, Stack size 8 bytes, SystemMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z48ProcessProductConfigurationUpdatePrivilegeChangev
</UL>
<BR>[Calls]<UL><LI><a href="#[5367c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE20EnableSettingChangesEb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SystemMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[535dad8]"></a>_Z33NextCommandAppliedToDefaltSettingv</STRONG> (ARM, 40 bytes, Stack size 0 bytes, SystemMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SystemMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[535da9c]"></a>_Z34SetCustomDefaultProgrammingModeOffv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, SystemMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SystemMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[535da60]"></a>_Z13CheckPasswordv</STRONG> (ARM, 380 bytes, Stack size 120 bytes, SystemMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d78d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>

<P><STRONG><a name="[535da24]"></a>_Z16ValidatePasswordv</STRONG> (ARM, 240 bytes, Stack size 32 bytes, SystemMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
</UL>

<P><STRONG><a name="[5366bec]"></a>_ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi</STRONG> (ARM, 2172 bytes, Stack size 320 bytes, SystemMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION24CreateSystemMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[37576b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReadSoftwareVersionPci
<LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[5306f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE12AddHexStringEPKcjPFbvES3_PP7HSTRINGjS1_S1_
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[535db8c]"></a>_Z33SetCustomDefaultProgrammingModeOnv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, SystemMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SystemMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[535dc04]"></a>_Z12DisplayPinfov</STRONG> (ARM, 984 bytes, Stack size 168 bytes, SystemMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _Z12DisplayPinfov &rArr; _ZN12PinfoCreator9CreateStrEP7HSTRING &rArr; _ZN12PinfoCreator7AddItemEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[3a1c93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ev
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[535d8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreatorC1Ev
<LI><a href="#[535d8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator9CreateStrEP7HSTRING
<LI><a href="#[535d934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKci
<LI><a href="#[535d970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcb
<LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
<LI><a href="#[535d9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator10AddItemHexEPKcj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SystemMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[535cc14]"></a>_Z20DecryptActivationKeyP7HSTRING</STRONG> (ARM, 636 bytes, Stack size 2712 bytes, LicenseControlMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e9caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKh
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[4339034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11HexToBinaryEv
<LI><a href="#[4d79098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING29RemoveTrailingSpaceCharactersEv
<LI><a href="#[4d79110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11BinaryToHexEv
<LI><a href="#[5308f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher10EcbDecryptEPKhjPhj
<LI><a href="#[5309034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CAesEncryption6SetKeyEPKhi
<LI><a href="#[53090ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CAesEncryptionC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[535cbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ProcessActivationKeyv
</UL>

<P><STRONG><a name="[36b9498]"></a>_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv</STRONG> (ARM, 836 bytes, Stack size 256 bytes, LicenseControlMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv &rArr; _ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b92b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[5300844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb
<LI><a href="#[535f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb
<LI><a href="#[5366ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcbbb
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z24SetupReaderConfigurationv
<LI><a href="#[535cbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ProcessActivationKeyv
</UL>

<P><STRONG><a name="[535cbd8]"></a>_Z20ProcessActivationKeyv</STRONG> (ARM, 232 bytes, Stack size 72 bytes, LicenseControlMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION27ConfigureLicensableCommandsEv
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[535cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20DecryptActivationKeyP7HSTRING
</UL>

<P><STRONG><a name="[535cb9c]"></a>_Z23SendActivationKeyStatusv</STRONG> (ARM, 716 bytes, Stack size 40 bytes, LicenseControlMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[38855e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKci
</UL>

<P><STRONG><a name="[5366bb0]"></a>_ZN20READER_CONFIGURATION25CreateLicenseMenuSettingsEi</STRONG> (ARM, 92 bytes, Stack size 16 bytes, LicenseControlMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = _ZN20READER_CONFIGURATION25CreateLicenseMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[535c5c0]"></a>_Z12UpdateSDRTIMv</STRONG> (ARM, 192 bytes, Stack size 40 bytes, TriggeringMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z12UpdateSDRTIMv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> TriggeringMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5366b38]"></a>_ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj</STRONG> (ARM, 3628 bytes, Stack size 296 bytes, TriggeringMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = _ZN20READER_CONFIGURATION28CreateTriggeringMenuSettingsEijj &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[535bfa8]"></a>_Z24ReportMaximumMessageSizev</STRONG> (ARM, 68 bytes, Stack size 16 bytes, OutputMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>

<P><STRONG><a name="[452e7f4]"></a>_Z16ExecuteRetailPDFv</STRONG> (ARM, 56 bytes, Stack size 0 bytes, OutputMenuSettings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452e86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CommandHandler468321CanYouSendThisBarcodeEP12CBarcodeData
<LI><a href="#[49f3870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos9SendLabelEP12CBarcodeData
</UL>

<P><STRONG><a name="[535bf6c]"></a>_Z20TurnOffFactorySuffixv</STRONG> (ARM, 112 bytes, Stack size 40 bytes, OutputMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
</UL>

<P><STRONG><a name="[5366c28]"></a>_ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi</STRONG> (ARM, 2752 bytes, Stack size 272 bytes, OutputMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = _ZN20READER_CONFIGURATION24CreateOutputMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii &rArr; _ZN28READER_CONFIGURATION_STORAGE17UpdateNumericListEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYEPiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[5306eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE14AddNumericListEPKcjPFbvES3_Piiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
<LI><a href="#[535f590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15AddPrefixSuffixEPKcjPFbvES3_PP13PREFIX_SUFFIXjS1_S1_
<LI><a href="#[535f5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13AddDataFormatEPKcjPFbvES3_PP11DATA_FORMATjS1_S1_
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[54e23e4]"></a>_Z21PlugAndPlayCloneSlavev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1f70]"></a>_Z24PlugAndPlayOCIA_NCRShortv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1f34]"></a>_Z23PlugAndPlayOCIA_NCRLongv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1ef8]"></a>_Z23PlugAndPlayOCIA_Nixdorfv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1ebc]"></a>_Z28PlugAndPlay_Symbol_3300_HHLCv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1e80]"></a>_Z17PAP_BeeprLevelMaxv</STRONG> (ARM, 228 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PAP_BeeprLevelMaxv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1e44]"></a>_Z27PlugAndPlayIBM_4683_SurePosiii</STRONG> (ARM, 836 bytes, Stack size 176 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
<LI><a href="#[54e3320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25CreateFormatCommandStringPK14FormatString_ttPcj
</UL>
<BR>[Called By]<UL><LI><a href="#[54e1cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36PlugAndPlayIBM_USB_SURE_POS_TableTopv
<LI><a href="#[54e1d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z36PlugAndPlayIBM_USB_SURE_POS_HandHeldv
<LI><a href="#[54e32a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayIBM_4683_Commoni
</UL>

<P><STRONG><a name="[54e1e08]"></a>_Z25PlugAndPlayIBM_4683Port5Bv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z25PlugAndPlayIBM_4683Port5Bv &rArr; _Z26PlugAndPlayIBM_4683_Commoni &rArr; _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e32a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayIBM_4683_Commoni
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1dcc]"></a>_Z32PlugAndPlayIBM_4683Port9B_HHBCR1v</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z32PlugAndPlayIBM_4683Port9B_HHBCR1v &rArr; _Z26PlugAndPlayIBM_4683_Commoni &rArr; _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e32a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayIBM_4683_Commoni
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1d90]"></a>_Z32PlugAndPlayIBM_4683Port9B_HHBCR2v</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z32PlugAndPlayIBM_4683Port9B_HHBCR2v &rArr; _Z26PlugAndPlayIBM_4683_Commoni &rArr; _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e32a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayIBM_4683_Commoni
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1d54]"></a>_Z25PlugAndPlayIBM_4683Port17v</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z25PlugAndPlayIBM_4683Port17v &rArr; _Z26PlugAndPlayIBM_4683_Commoni &rArr; _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e32a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PlugAndPlayIBM_4683_Commoni
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1d18]"></a>_Z36PlugAndPlayIBM_USB_SURE_POS_HandHeldv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z36PlugAndPlayIBM_USB_SURE_POS_HandHeldv &rArr; _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1cdc]"></a>_Z36PlugAndPlayIBM_USB_SURE_POS_TableTopv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z36PlugAndPlayIBM_USB_SURE_POS_TableTopv &rArr; _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1ca0]"></a>_Z17PlugAndPlayUsbPosv</STRONG> (ARM, 172 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayUsbPosv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1c64]"></a>_Z19SetPrefixSubstituteh</STRONG> (ARM, 184 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z19SetPrefixSubstituteh &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[54e1c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15SetPrefixCodeIDv
</UL>

<P><STRONG><a name="[54e1c28]"></a>_Z15SetPrefixCodeIDv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z15SetPrefixCodeIDv &rArr; _Z19SetPrefixSubstituteh &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SetPrefixSubstituteh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1bec]"></a>_Z11SetSuffixCRv</STRONG> (ARM, 148 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z11SetSuffixCRv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1bb0]"></a>_Z23SetPrefixNoneSuffixCRLFv</STRONG> (ARM, 140 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z23SetPrefixNoneSuffixCRLFv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[54e13f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlayNCRv
<LI><a href="#[54e1994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15PlugAndPlayOPOSv
<LI><a href="#[54e1b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PlugAndPlay232v
</UL>

<P><STRONG><a name="[54e1b74]"></a>_Z14PlugAndPlay232v</STRONG> (ARM, 228 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = _Z14PlugAndPlay232v &rArr; _Z23SetPrefixNoneSuffixCRLFv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
<LI><a href="#[54e1bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SetPrefixNoneSuffixCRLFv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1b38]"></a>_Z19PlugAndPlayKbdWedgeiii</STRONG> (ARM, 312 bytes, Stack size 160 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = _Z19PlugAndPlayKbdWedgeiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Called By]<UL><LI><a href="#[54e19d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23PlugAndPlayLapTopDirectv
<LI><a href="#[54e1a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PlugAndPlayEriaIBMPS2v
<LI><a href="#[54e1a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17PlugAndPlayIBMPS2v
<LI><a href="#[54e1a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16PlugAndPlayIBMATv
<LI><a href="#[54e1ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20PlugAndPlayUsbKbdMacv
<LI><a href="#[54e1afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayUsbKbdPcv
</UL>

<P><STRONG><a name="[54e1afc]"></a>_Z19PlugAndPlayUsbKbdPcv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = _Z19PlugAndPlayUsbKbdPcv &rArr; _Z19PlugAndPlayKbdWedgeiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1ac0]"></a>_Z20PlugAndPlayUsbKbdMacv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = _Z20PlugAndPlayUsbKbdMacv &rArr; _Z19PlugAndPlayKbdWedgeiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1a84]"></a>_Z16PlugAndPlayIBMATv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = _Z16PlugAndPlayIBMATv &rArr; _Z19PlugAndPlayKbdWedgeiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1a48]"></a>_Z17PlugAndPlayIBMPS2v</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayIBMPS2v &rArr; _Z19PlugAndPlayKbdWedgeiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1a0c]"></a>_Z21PlugAndPlayEriaIBMPS2v</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = _Z21PlugAndPlayEriaIBMPS2v &rArr; _Z19PlugAndPlayKbdWedgeiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e19d0]"></a>_Z23PlugAndPlayLapTopDirectv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = _Z23PlugAndPlayLapTopDirectv &rArr; _Z19PlugAndPlayKbdWedgeiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PlugAndPlayKbdWedgeiii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1994]"></a>_Z15PlugAndPlayOPOSv</STRONG> (ARM, 416 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = _Z15PlugAndPlayOPOSv &rArr; _Z23SetPrefixNoneSuffixCRLFv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
<LI><a href="#[54e1bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SetPrefixNoneSuffixCRLFv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[36b9bdc]"></a>_Z22PlugAndPlayFactoryTestv</STRONG> (ARM, 1604 bytes, Stack size 1664 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2720 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayFactoryTestv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b92f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE17ChangeNumericListEPKcPiii
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[406df8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30CollectAllInterfaceTerminalIdsiPi
<LI><a href="#[535f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE15ChangeTypeFlagsEPKcjb
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1958]"></a>_Z29PlugAndPlayGetBufferedMessagev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e191c]"></a>_Z10VisualMenui</STRONG> (ARM, 244 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2608 + Unknown Stack Size
<LI>Call Chain = _Z10VisualMenui &rArr; _Z23ReSynchWorkingAndActiveb &rArr; _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ReSynchWorkingAndActiveb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[54e1868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayVisualMenu3v
<LI><a href="#[54e18a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22PlugAndPlayVisualMenu2v
<LI><a href="#[54e18e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21PlugAndPlayVisualMenuv
</UL>

<P><STRONG><a name="[54e18e0]"></a>_Z21PlugAndPlayVisualMenuv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2616 + Unknown Stack Size
<LI>Call Chain = _Z21PlugAndPlayVisualMenuv &rArr; _Z10VisualMenui &rArr; _Z23ReSynchWorkingAndActiveb &rArr; _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e18a4]"></a>_Z22PlugAndPlayVisualMenu2v</STRONG> (ARM, 56 bytes, Stack size 8 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2616 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayVisualMenu2v &rArr; _Z10VisualMenui &rArr; _Z23ReSynchWorkingAndActiveb &rArr; _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1868]"></a>_Z22PlugAndPlayVisualMenu3v</STRONG> (ARM, 56 bytes, Stack size 8 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2616 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayVisualMenu3v &rArr; _Z10VisualMenui &rArr; _Z23ReSynchWorkingAndActiveb &rArr; _Z20ReconfigureInterfacev &rArr; _ZN6CIoMan4OpenEsPKh &rArr; _ZN6CIoMan12InternalOpenEsPKw &rArr; _ZN15CMenuGlueDriver10GetSettingEtPwj &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[54e191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10VisualMenui
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[3a1cb58]"></a>_Z21SendStringToInterfacePKcib</STRONG> (ARM, 68 bytes, Stack size 16 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z21SendStringToInterfacePKcib
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1ccfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22HONPluginConfiguration23HONPluginDumpConfigFileEv
<LI><a href="#[3f1d574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19PluginShowDirectoryv
<LI><a href="#[3f1d5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReportConfigFilev
<LI><a href="#[3f1d6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14PluginReadFilev
<LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
<LI><a href="#[4ecdabc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC12HandleDecodeEi
<LI><a href="#[53009e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EngineReadMemoryv
</UL>

<P><STRONG><a name="[38855e0]"></a>_Z21SendStringToInterfacePKci</STRONG> (ARM, 76 bytes, Stack size 24 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z21SendStringToInterfacePKci
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[4149694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15ReadRegisterBYDv
<LI><a href="#[5300a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ShowEngineFirmwareFullReportv
<LI><a href="#[535cb9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendActivationKeyStatusv
</UL>

<P><STRONG><a name="[530a5c4]"></a>_Z21SendStringToInterfacePKc</STRONG> (ARM, 80 bytes, Stack size 24 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z21SendStringToInterfacePKc
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
</UL>
<BR>[Called By]<UL><LI><a href="#[54e1520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SendSuffixBlockSizev
<LI><a href="#[54e155c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SendPrefixBlockSizev
<LI><a href="#[54e1610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SendSettingForAllCablev
<LI><a href="#[54e164c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SendRevisionInfov
<LI><a href="#[54e227c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendDataFormatBlockSizev
</UL>

<P><STRONG><a name="[54e182c]"></a>_Z19PlugAndPlayHHSnappyv</STRONG> (ARM, 84 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z19PlugAndPlayHHSnappyv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e17f0]"></a>_Z17PlugAndPlayHHFullv</STRONG> (ARM, 84 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayHHFullv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e17b4]"></a>_Z26PlugAndPlayHi2dPresentaionv</STRONG> (ARM, 84 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z26PlugAndPlayHi2dPresentaionv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1778]"></a>_Z17PlugAndPlayHHCellv</STRONG> (ARM, 84 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayHHCellv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e173c]"></a>_Z30PlugAndPlayHi2dPresentaionCellv</STRONG> (ARM, 84 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z30PlugAndPlayHi2dPresentaionCellv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1700]"></a>_Z23SendDecoderAllRevisionsv</STRONG> (ARM, 248 bytes, Stack size 16 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = _Z23SendDecoderAllRevisionsv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh
<LI><a href="#[54e0b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportDecoderVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e16c4]"></a>_Z19SendDecoderRevisionv</STRONG> (ARM, 104 bytes, Stack size 16 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = _Z19SendDecoderRevisionv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh
<LI><a href="#[54e0b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportDecoderVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1688]"></a>_Z22SendScanDriverRevisionv</STRONG> (ARM, 140 bytes, Stack size 24 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = _Z22SendScanDriverRevisionv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36ba410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCN_IOControl
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e164c]"></a>_Z16SendRevisionInfov</STRONG> (ARM, 1184 bytes, Stack size 176 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2048 + Unknown Stack Size
<LI>Call Chain = _Z16SendRevisionInfov &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3758b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26UniCodeToSimpleAsciiFormatEv
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[388561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20Psoc5100GetRegistersP24PSoC_5100_REGISTER_TABLE
<LI><a href="#[3885694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ImageEngineHasPsocv
<LI><a href="#[530a5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1610]"></a>_Z22SendSettingForAllCablev</STRONG> (ARM, 388 bytes, Stack size 32 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _Z22SendSettingForAllCablev &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3e9cae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[51d2878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CurrentWorkTableEv
<LI><a href="#[530a5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e15d4]"></a>_Z17SendHardwareTokenv</STRONG> (ARM, 88 bytes, Stack size 8 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = _Z17SendHardwareTokenv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1598]"></a>_Z16SendBootRevisionv</STRONG> (ARM, 216 bytes, Stack size 16 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = _Z16SendBootRevisionv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e155c]"></a>_Z19SendPrefixBlockSizev</STRONG> (ARM, 60 bytes, Stack size 16 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z19SendPrefixBlockSizev &rArr; _Z21SendStringToInterfacePKc
</UL>
<BR>[Calls]<UL><LI><a href="#[530a5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1520]"></a>_Z19SendSuffixBlockSizev</STRONG> (ARM, 52 bytes, Stack size 16 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z19SendSuffixBlockSizev &rArr; _Z21SendStringToInterfacePKc
</UL>
<BR>[Calls]<UL><LI><a href="#[530a5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e14e4]"></a>_Z15PlugAndPlayRubyv</STRONG> (ARM, 388 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z15PlugAndPlayRubyv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e14a8]"></a>_Z19PlugAndPlayGilbarcov</STRONG> (ARM, 264 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z19PlugAndPlayGilbarcov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e146c]"></a>_Z24PlugAndPlayBioptiAuxPortv</STRONG> (ARM, 260 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayBioptiAuxPortv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1430]"></a>_Z19PlugAndPlayMagellanv</STRONG> (ARM, 260 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z19PlugAndPlayMagellanv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e13f4]"></a>_Z14PlugAndPlayNCRv</STRONG> (ARM, 376 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = _Z14PlugAndPlayNCRv &rArr; _Z23SetPrefixNoneSuffixCRLFv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
<LI><a href="#[54e1bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SetPrefixNoneSuffixCRLFv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e13b8]"></a>_Z17PlugAndPlayWinNixv</STRONG> (ARM, 344 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayWinNixv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e137c]"></a>_Z16PlugAndPlayAddCRv</STRONG> (ARM, 148 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z16PlugAndPlayAddCRv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1340]"></a>_Z17PlugAndPlayAddTabv</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayAddTabv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1304]"></a>_Z16PlugAndPlayAddLFv</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z16PlugAndPlayAddLFv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e12c8]"></a>_Z18PlugAndPlayAddCRLFv</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z18PlugAndPlayAddCRLFv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e128c]"></a>_Z17PlugAndPlayUSB232v</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayUSB232v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1250]"></a>_Z17PlugAndPlayUSBKBWv</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayUSBKBWv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1214]"></a>_Z22PlugAndPlayImageRevertv</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayImageRevertv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e11d8]"></a>_Z29PlugAndPlayCRReplaceSemicolonv</STRONG> (ARM, 180 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z29PlugAndPlayCRReplaceSemicolonv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e119c]"></a>_Z25PlugAndPlayCRReplaceCommav</STRONG> (ARM, 180 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z25PlugAndPlayCRReplaceCommav &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1160]"></a>_Z22PlugAndPlayBurningTestv</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayBurningTestv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1124]"></a>_Z22PlugAndPlayBaudRate300v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayBaudRate300v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e10e8]"></a>_Z22PlugAndPlayBaudRate600v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayBaudRate600v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e10ac]"></a>_Z23PlugAndPlayBaudRate1200v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z23PlugAndPlayBaudRate1200v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1070]"></a>_Z23PlugAndPlayBaudRate2400v</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z23PlugAndPlayBaudRate2400v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e1034]"></a>_Z23PlugAndPlayBaudRate9600v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>

<P><STRONG><a name="[54e0ff8]"></a>_Z24PlugAndPlayBaudRate19200v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayBaudRate19200v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0fbc]"></a>_Z24PlugAndPlayBaudRate38400v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayBaudRate38400v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0f80]"></a>_Z25PlugAndPlayBaudRate115200v</STRONG> (ARM, 148 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z25PlugAndPlayBaudRate115200v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0f44]"></a>_Z24PlugAndPlayWordFormatN71v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatN71v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0f08]"></a>_Z24PlugAndPlayWordFormatN72v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatN72v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0ecc]"></a>_Z24PlugAndPlayWordFormatN81v</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>

<P><STRONG><a name="[54e0e90]"></a>_Z24PlugAndPlayWordFormatO71v</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatO71v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0e54]"></a>_Z24PlugAndPlayWordFormatO72v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatO72v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0e18]"></a>_Z24PlugAndPlayWordFormatO81v</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatO81v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0ddc]"></a>_Z24PlugAndPlayWordFormatM81v</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>

<P><STRONG><a name="[54e0da0]"></a>_Z28PlugAndPlayAddPrefixAsteriskv</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z28PlugAndPlayAddPrefixAsteriskv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0d64]"></a>_Z30PlugAndPlayAddSuffixAsteriskCRv</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z30PlugAndPlayAddSuffixAsteriskCRv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0d28]"></a>_Z28PlugAndPlayAddSuffixAsteriskv</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>

<P><STRONG><a name="[54e0cec]"></a>_Z22PlugAndPlayClearPrefixv</STRONG> (ARM, 160 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayClearPrefixv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0cb0]"></a>_Z22PlugAndPlayClearSuffixv</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z22PlugAndPlayClearSuffixv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0c74]"></a>_Z23PlugAndPlayC39CheckNonev</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z23PlugAndPlayC39CheckNonev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0c38]"></a>_Z26PlugAndPlayC39CheckRequestv</STRONG> (ARM, 156 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>

<P><STRONG><a name="[54e0bfc]"></a>_Z19PlugAndPlay232Groupv</STRONG> (ARM, 192 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z19PlugAndPlay232Groupv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
<LI><a href="#[5300844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0bc0]"></a>_Z19PlugAndPlayUSBGroupv</STRONG> (ARM, 184 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z19PlugAndPlayUSBGroupv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
<LI><a href="#[5300844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE13ChangeDefaultEPKcibb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e0b84]"></a>_Z17PlugAndPlayBY_DFTv</STRONG> (ARM, 212 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>

<P><STRONG><a name="[5366afc]"></a>_ZN20READER_CONFIGURATION29CreatePlugAndPlayMenuSettingsEi</STRONG> (ARM, 4136 bytes, Stack size 24 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = _ZN20READER_CONFIGURATION29CreatePlugAndPlayMenuSettingsEi &rArr; _ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[406ddac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken13IAmIndustrialEv
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[54e227c]"></a>_Z23SendDataFormatBlockSizev</STRONG> (ARM, 60 bytes, Stack size 16 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z23SendDataFormatBlockSizev &rArr; _Z21SendStringToInterfacePKc
</UL>
<BR>[Calls]<UL><LI><a href="#[530a5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e24d4]"></a>_Z17PlugAndPlayBeatlev</STRONG> (ARM, 892 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z17PlugAndPlayBeatlev &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e22b8]"></a>_Z23PlugAndPlaySetToDefaultv</STRONG> (ARM, 176 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z23PlugAndPlaySetToDefaultv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e2330]"></a>_Z23PlugAndPlayBaudRate4800v</STRONG> (ARM, 168 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z23PlugAndPlayBaudRate4800v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e2204]"></a>_Z24PlugAndPlayBaudRate57600v</STRONG> (ARM, 168 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayBaudRate57600v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e21c8]"></a>_Z24PlugAndPlayWordFormatE71v</STRONG> (ARM, 168 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatE71v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e218c]"></a>_Z24PlugAndPlayWordFormatE72v</STRONG> (ARM, 168 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatE72v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e2150]"></a>_Z24PlugAndPlayWordFormatE81v</STRONG> (ARM, 168 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z24PlugAndPlayWordFormatE81v &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e209c]"></a>_Z30PlugAndPlayC39CheckRequestXmitv</STRONG> (ARM, 168 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = _Z30PlugAndPlayC39CheckRequestXmitv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[406dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ValidateTermIdi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e065c]"></a>_Z22ValidateMainScriptNamev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e0620]"></a>_Z27ValidateIQEditProScriptNamev</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e05e4]"></a>_Z20DeleteHHPLMainScriptv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e05a8]"></a>_Z20DeleteHHPLEditScriptv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e056c]"></a>_Z23TerminateHHPLMainScriptv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e0530]"></a>_Z23TerminateHHPLEditScriptv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e04f4]"></a>_Z23HHPLMainScriptDirectoryv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e04b8]"></a>_Z23HHPLEditScriptDirectoryv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e047c]"></a>_Z22HHPLMainScriptFileListv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e0440]"></a>_Z22HHPLEditScriptFileListv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScriptingMenuSettings.o(.text), UNUSED)

<P><STRONG><a name="[54e0404]"></a>_Z22HHPLInterpreterVersionv</STRONG> (ARM, 92 bytes, Stack size 40 bytes, ScriptingMenuSettings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d80c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndAppendToHStringEP7HSTRING
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPKwbb
</UL>

<P><STRONG><a name="[5366b74]"></a>_ZN20READER_CONFIGURATION27CreateScriptingMenuSettingsEij</STRONG> (ARM, 676 bytes, Stack size 40 bytes, ScriptingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = _ZN20READER_CONFIGURATION27CreateScriptingMenuSettingsEij &rArr; _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_ &rArr; _ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_iS1_i &rArr; _ZN13SUB_TAG_TABLE31AddBasicInformationForNewSubTagEPKcPFbvES3_j &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddStringEPKcjPFbvES3_PcjS1_S1_
<LI><a href="#[3f1d31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddCommandEPKcjPFbvES3_i
<LI><a href="#[3f1d358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE10AddBooleanEPKcjPFbvES3_Pbbb
<LI><a href="#[530775c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE9AddNumberEPKcjPFbvES3_Piiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[5366cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20READER_CONFIGURATION10InitializeEi
</UL>

<P><STRONG><a name="[535d9ac]"></a>_ZN12PinfoCreator7AddItemEPKcS1_</STRONG> (ARM, 328 bytes, Stack size 48 bytes, PinfoCreator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _ZN12PinfoCreator7AddItemEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[535d8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreatorC1Ev
<LI><a href="#[535d8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator9CreateStrEP7HSTRING
<LI><a href="#[535d934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKci
<LI><a href="#[535d970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcb
<LI><a href="#[535d9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator10AddItemHexEPKcj
<LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
</UL>

<P><STRONG><a name="[535d934]"></a>_ZN12PinfoCreator7AddItemEPKci</STRONG> (ARM, 52 bytes, Stack size 32 bytes, PinfoCreator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN12PinfoCreator7AddItemEPKci &rArr; _ZN12PinfoCreator7AddItemEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
</UL>

<P><STRONG><a name="[535d8bc]"></a>_ZN12PinfoCreatorC1Ev</STRONG> (ARM, 100 bytes, Stack size 32 bytes, PinfoCreator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN12PinfoCreatorC1Ev &rArr; _ZN12PinfoCreator7AddItemEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
</UL>

<P><STRONG><a name="[54df090]"></a>_ZN12PinfoCreatorC2Ev</STRONG> (ARM, 0 bytes, Stack size 32 bytes, PinfoCreator.o(.text), UNUSED)

<P><STRONG><a name="[535d970]"></a>_ZN12PinfoCreator7AddItemEPKcb</STRONG> (ARM, 56 bytes, Stack size 32 bytes, PinfoCreator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN12PinfoCreator7AddItemEPKcb &rArr; _ZN12PinfoCreator7AddItemEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
</UL>

<P><STRONG><a name="[535d9e8]"></a>_ZN12PinfoCreator10AddItemHexEPKcj</STRONG> (ARM, 52 bytes, Stack size 32 bytes, PinfoCreator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN12PinfoCreator10AddItemHexEPKcj &rArr; _ZN12PinfoCreator7AddItemEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
</UL>

<P><STRONG><a name="[535d8f8]"></a>_ZN12PinfoCreator9CreateStrEP7HSTRING</STRONG> (ARM, 260 bytes, Stack size 48 bytes, PinfoCreator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _ZN12PinfoCreator9CreateStrEP7HSTRING &rArr; _ZN12PinfoCreator7AddItemEPKcS1_ &rArr; _ZN7HSTRING6InsertEPKcj &rArr; _ZN7HSTRING6InsertEPKhjj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[535d9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12PinfoCreator7AddItemEPKcS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[535dc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisplayPinfov
</UL>

<P><STRONG><a name="[54dd4ac]"></a>_ZN5HCOMMC1Ev</STRONG> (ARM, 52 bytes, Stack size 0 bytes, hcomm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36b97a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11MatrixHCommC1Ev
</UL>

<P><STRONG><a name="[54dd470]"></a>_ZN5HCOMMC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, hcomm.o(.text), UNUSED)

<P><STRONG><a name="[530a588]"></a>_ZN16HCOMMAND_HANDLERC1Ev</STRONG> (ARM, 12 bytes, Stack size 0 bytes, hcommandhandler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41faddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13NonMenuHModemC1Ev
</UL>

<P><STRONG><a name="[54dcb10]"></a>_ZN16HCOMMAND_HANDLERC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, hcommandhandler.o(.text), UNUSED)

<P><STRONG><a name="[530a54c]"></a>_ZN16HCOMMAND_HANDLERD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hcommandhandler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41fada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13NonMenuHModemD1Ev
</UL>

<P><STRONG><a name="[54dcad4]"></a>_ZN16HCOMMAND_HANDLERD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, hcommandhandler.o(.text), UNUSED)

<P><STRONG><a name="[4339070]"></a>_Z17DecompressHexDataP7HSTRINGS0_</STRONG> (ARM, 252 bytes, Stack size 56 bytes, HexFile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _Z17DecompressHexDataP7HSTRINGS0_ &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[4d79110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING11BinaryToHexEv
<LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[433955c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29Psoc5100VerifyFirmwareVersionb
</UL>

<P><STRONG><a name="[54da590]"></a>_ZN6HMODEM22TerminateHModemSessionEv</STRONG> (ARM, 268 bytes, Stack size 24 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN6HMODEM22TerminateHModemSessionEv &rArr; _ZN7HSTRING8CopyCharEi &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d795fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING8CopyCharEi
</UL>
<BR>[Called By]<UL><LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
<LI><a href="#[54da20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM10WaitForACKEjj
</UL>

<P><STRONG><a name="[54da20c]"></a>_ZN6HMODEM10WaitForACKEjj</STRONG> (ARM, 444 bytes, Stack size 48 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _ZN6HMODEM10WaitForACKEjj &rArr; _ZN6HMODEM22TerminateHModemSessionEv &rArr; _ZN7HSTRING8CopyCharEi &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d79368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10RemoveCharEi
<LI><a href="#[54da590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM22TerminateHModemSessionEv
</UL>
<BR>[Called By]<UL><LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[54da1d0]"></a>_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj</STRONG> (ARM, 4052 bytes, Stack size 144 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[3f1b774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEjj
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[4c708f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGi
<LI><a href="#[4d7860c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8calc_crcPhi
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
<LI><a href="#[4d7950c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEtj
<LI><a href="#[4d795fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING8CopyCharEi
<LI><a href="#[4d79638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14AppendFillCharEij
<LI><a href="#[54da20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM10WaitForACKEjj
<LI><a href="#[54da590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM22TerminateHModemSessionEv
</UL>
<BR>[Called By]<UL><LI><a href="#[41fa92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM8TransmitEP7HSTRINGS1_bbj
</UL>

<P><STRONG><a name="[54da194]"></a>_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E</STRONG> (ARM, 6912 bytes, Stack size 120 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = _ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E &rArr; _Z14DecompressDataP7HSTRINGibi &rArr; _Z14DecompressDataP7HSTRINGiPiS1_bi &rArr; _Z14ZLibDecompressP7HSTRINGi &rArr; inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[41f6a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPj
<LI><a href="#[41fa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING13MaximumLengthEv
<LI><a href="#[4c7083c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14DecompressDataP7HSTRINGibi
<LI><a href="#[4d7860c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8calc_crcPhi
<LI><a href="#[4d79278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPt
<LI><a href="#[4d792b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPh
<LI><a href="#[4d795fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING8CopyCharEi
</UL>
<BR>[Called By]<UL><LI><a href="#[51cef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM7ReceiveEP7HSTRINGj
</UL>

<P><STRONG><a name="[54da158]"></a>_ZN6HMODEMC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 120 bytes, Stack size 8 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN6HMODEMC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[41faddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13NonMenuHModemC1Ev
<LI><a href="#[54d69cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
</UL>

<P><STRONG><a name="[54da11c]"></a>_ZN6HMODEMC2EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hmodem.o(.text), UNUSED)

<P><STRONG><a name="[54da0e0]"></a>_ZN6HMODEMD1Ev</STRONG> (ARM, 36 bytes, Stack size 8 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN6HMODEMD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[41fada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13NonMenuHModemD1Ev
<LI><a href="#[54d69cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
</UL>

<P><STRONG><a name="[54da0a4]"></a>_ZN6HMODEMD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, hmodem.o(.text), UNUSED)

<P><STRONG><a name="[41fa92c]"></a>_ZN6HMODEM8TransmitEP7HSTRINGS1_bbj</STRONG> (ARM, 64 bytes, Stack size 32 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = _ZN6HMODEM8TransmitEP7HSTRINGS1_bbj &rArr; _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[54d69cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb
</UL>

<P><STRONG><a name="[51cef48]"></a>_ZN6HMODEM7ReceiveEP7HSTRINGj</STRONG> (ARM, 40 bytes, Stack size 16 bytes, hmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _ZN6HMODEM7ReceiveEP7HSTRINGj &rArr; _ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E &rArr; _Z14DecompressDataP7HSTRINGibi &rArr; _Z14DecompressDataP7HSTRINGiPiS1_bi &rArr; _Z14ZLibDecompressP7HSTRINGi &rArr; inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
</UL>

<P><STRONG><a name="[54d6f6c]"></a>_ZN4HTAG13FindParameterEPKcPiS2_</STRONG> (ARM, 180 bytes, Stack size 24 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[352f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10hhpstricmpEPKcS1_b
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiibiib
</UL>

<P><STRONG><a name="[54d6d8c]"></a>_ZN4HTAG28AddMoreParameterTableEntriesEv</STRONG> (ARM, 168 bytes, Stack size 24 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN4HTAG28AddMoreParameterTableEntriesEv
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiibiib
</UL>

<P><STRONG><a name="[54d6d50]"></a>_ZN4HTAG19AddNumericParameterEPKcPiibiib</STRONG> (ARM, 564 bytes, Stack size 48 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[54d6d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG28AddMoreParameterTableEntriesEv
<LI><a href="#[54d6f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13FindParameterEPKcPiS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>

<P><STRONG><a name="[54d6d14]"></a>_ZN4HTAG19AddNumericParameterEPKcPiiiib</STRONG> (ARM, 72 bytes, Stack size 32 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[54d6d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiibiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[554557c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5546e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554764c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>

<P><STRONG><a name="[54d6cd8]"></a>_ZN4HTAG19AddNumericParameterEPKcPiib</STRONG> (ARM, 56 bytes, Stack size 32 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _ZN4HTAG19AddNumericParameterEPKcPiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[54d6d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiibiib
</UL>
<BR>[Called By]<UL><LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554764c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>

<P><STRONG><a name="[54d6c9c]"></a>_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib</STRONG> (ARM, 440 bytes, Stack size 48 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb
<LI><a href="#[54d6d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG28AddMoreParameterTableEntriesEv
<LI><a href="#[54d6f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13FindParameterEPKcPiS2_
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[554557c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5546e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>

<P><STRONG><a name="[54d6c60]"></a>_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb</STRONG> (ARM, 508 bytes, Stack size 40 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
<LI><a href="#[54d6d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiibiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554539c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21HTAG_SCRIPT_HOST_DATAC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554548c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HTAG_SCRIPT_HOST_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554557c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5546e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554764c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>

<P><STRONG><a name="[54d6c24]"></a>_ZN4HTAGC2EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb</STRONG> (ARM, 0 bytes, Stack size 40 bytes, htag.o(.text), UNUSED)

<P><STRONG><a name="[54d6be8]"></a>_ZN4HTAGD1Ev</STRONG> (ARM, 200 bytes, Stack size 24 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[50167c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTD1Ev
<LI><a href="#[5545324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21HTAG_SCRIPT_HOST_DATAD1Ev
<LI><a href="#[5545414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HTAG_SCRIPT_HOST_COMMANDD1Ev
<LI><a href="#[5545504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTD1Ev
<LI><a href="#[5545e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWARED1Ev
<LI><a href="#[5545f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODED1Ev
<LI><a href="#[55466d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGED1Ev
<LI><a href="#[5546e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILED1Ev
<LI><a href="#[55474e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSD1Ev
<LI><a href="#[55475d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDD1Ev
<LI><a href="#[55476c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIOND1Ev
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>

<P><STRONG><a name="[54d6bac]"></a>_ZN4HTAGD2Ev</STRONG> (ARM, 0 bytes, Stack size 24 bytes, htag.o(.text), UNUSED)

<P><STRONG><a name="[41fe5e0]"></a>_ZN4HTAG19ReportAllParametersEb</STRONG> (ARM, 8 bytes, Stack size 0 bytes, htag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[41fe5a4]"></a>_ZN4HTAG20SetParameterDefaultsEv</STRONG> (ARM, 124 bytes, Stack size 32 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG20SetParameterDefaultsEv &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41fe4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1Ev
<LI><a href="#[41fe52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1EPhii
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[41fad28]"></a>_ZN4HTAG18ValidateParametersEv</STRONG> (ARM, 200 bytes, Stack size 32 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN4HTAG18ValidateParametersEv
</UL>
<BR>[Called By]<UL><LI><a href="#[41fad64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG14CopyParametersEPS_
<LI><a href="#[41fe52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1EPhii
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fe658]"></a>_ZN4HTAG11ParseHeaderEP7HSTRINGPi</STRONG> (ARM, 1048 bytes, Stack size 80 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG11ParseHeaderEP7HSTRINGPi &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3a1c9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableFormatsToCharactersEv
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[41f6a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPj
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
<LI><a href="#[4d78fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEjPS_b
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
<LI><a href="#[54d6b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi
</UL>

<P><STRONG><a name="[54d6b70]"></a>_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi</STRONG> (ARM, 284 bytes, Stack size 56 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi &rArr; _ZN4HTAG11ParseHeaderEP7HSTRINGPi &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[4d78ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPS_biPi
</UL>
<BR>[Called By]<UL><LI><a href="#[41faf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi
</UL>

<P><STRONG><a name="[41fad64]"></a>_ZN4HTAG14CopyParametersEPS_</STRONG> (ARM, 352 bytes, Stack size 40 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG14CopyParametersEPS_ &rArr; _ZN7HSTRING4CopyEPKS_ &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[41fad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18ValidateParametersEv
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[54d6b34]"></a>_ZN4HTAG18BuildParameterListEP7HSTRING</STRONG> (ARM, 424 bytes, Stack size 144 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG18BuildParameterListEP7HSTRING &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[4d79188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING30UnprintableCharactersToFormatsEv
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
</UL>

<P><STRONG><a name="[54d6af8]"></a>_ZN4HTAG38BuildTaggedImageUsingPreMatrixProtcolsEP7HSTRINGPKhi</STRONG> (ARM, 180 bytes, Stack size 24 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG38BuildTaggedImageUsingPreMatrixProtcolsEP7HSTRINGPKhi &rArr; _ZN7HSTRING10AppendCharEi &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
<LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
</UL>

<P><STRONG><a name="[54d6abc]"></a>_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib</STRONG> (ARM, 392 bytes, Stack size 120 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib &rArr; _ZN4HTAG18BuildParameterListEP7HSTRING &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3f1b774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEjj
<LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[54d6af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG38BuildTaggedImageUsingPreMatrixProtcolsEP7HSTRINGPKhi
<LI><a href="#[54d6b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18BuildParameterListEP7HSTRING
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_b
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[54d6954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG16WriteTaggedImageEPcb
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>

<P><STRONG><a name="[41fe61c]"></a>_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_b</STRONG> (ARM, 112 bytes, Stack size 32 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_b &rArr; _ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib &rArr; _ZN4HTAG18BuildParameterListEP7HSTRING &rArr; _ZN7HSTRING6AppendEPKc &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[54d6774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[54d6a80]"></a>_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib</STRONG> (ARM, 656 bytes, Stack size 72 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib &rArr; _ZN4HTAG11ParseHeaderEP7HSTRINGPi &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3f1d22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPKhjbiPi
<LI><a href="#[41f6a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPj
<LI><a href="#[41fe658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG11ParseHeaderEP7HSTRINGPi
<LI><a href="#[4d79200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING14CopyFromStringEjjPS_
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[54d6a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGb
</UL>

<P><STRONG><a name="[54d6a44]"></a>_ZN4HTAG15LoadTaggedImageEP7HSTRINGb</STRONG> (ARM, 152 bytes, Stack size 24 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG15LoadTaggedImageEP7HSTRINGb &rArr; _ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[54d67b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15ReadTaggedImageEP7HSTRINGPci
</UL>

<P><STRONG><a name="[54d6a08]"></a>_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_</STRONG> (ARM, 2112 bytes, Stack size 136 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_ &rArr; _ZN6HMODEM7ReceiveEP7HSTRINGj &rArr; _ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E &rArr; _Z14DecompressDataP7HSTRINGibi &rArr; _Z14DecompressDataP7HSTRINGiPiS1_bi &rArr; _Z14ZLibDecompressP7HSTRINGi &rArr; inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[41fa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING13MaximumLengthEv
<LI><a href="#[4d78eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPS_j
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
<LI><a href="#[51cef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM7ReceiveEP7HSTRINGj
<LI><a href="#[54da0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMD1Ev
<LI><a href="#[54da158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[54d6990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15ReadTaggedImageEP7HSTRINGPci
</UL>

<P><STRONG><a name="[54d69cc]"></a>_ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb</STRONG> (ARM, 920 bytes, Stack size 48 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb &rArr; _ZN6HMODEM8TransmitEP7HSTRINGS1_bbj &rArr; _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[41fa92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM8TransmitEP7HSTRINGS1_bbj
<LI><a href="#[54da0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMD1Ev
<LI><a href="#[54da158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[54d6954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG16WriteTaggedImageEPcb
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>

<P><STRONG><a name="[54d6990]"></a>_ZN4HTAG15ReadTaggedImageEP7HSTRINGPci</STRONG> (ARM, 124 bytes, Stack size 24 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG15ReadTaggedImageEP7HSTRINGPci &rArr; _ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_ &rArr; _ZN6HMODEM7ReceiveEP7HSTRINGj &rArr; _ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E &rArr; _Z14DecompressDataP7HSTRINGibi &rArr; _Z14DecompressDataP7HSTRINGiPiS1_bi &rArr; _Z14ZLibDecompressP7HSTRINGi &rArr; inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54d6a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGb
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[54d6954]"></a>_ZN4HTAG16WriteTaggedImageEPcb</STRONG> (ARM, 196 bytes, Stack size 80 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG16WriteTaggedImageEPcb &rArr; _ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb &rArr; _ZN6HMODEM8TransmitEP7HSTRINGS1_bbj &rArr; _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[54d6774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING
<LI><a href="#[54d69cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[3885220]"></a>_ZN4HTAG32ValidateDataStreamAsSYNFECommandEPKcii</STRONG> (ARM, 244 bytes, Stack size 56 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG32ValidateDataStreamAsSYNFECommandEPKcii &rArr; _ZN7HSTRING4CopyEPKcj &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d7932c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20CopyNumberFromStringEjjPi
<LI><a href="#[4d79494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcj
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[54d6918]"></a>_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_</STRONG> (ARM, 760 bytes, Stack size 56 bytes, htag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_ &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[4d7932c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING20CopyNumberFromStringEjjPi
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[54d6774]"></a>_ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING</STRONG> (ARM, 356 bytes, Stack size 120 bytes, HTagData.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _ZN9HTAG_DATA17CreateTaggedImageEP7HSTRING &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1b7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10AppendCharEi
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_b
<LI><a href="#[54d6954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG16WriteTaggedImageEPcb
</UL>

<P><STRONG><a name="[54d67b0]"></a>_ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING</STRONG> (ARM, 900 bytes, Stack size 208 bytes, HTagData.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = _ZN9HTAG_DATA15LoadTaggedImageEP7HSTRING &rArr; _ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38851e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15ConvertToNumberEiPi
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[4d78d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10RangeCheckEiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
</UL>
<BR>[Called By]<UL><LI><a href="#[54d6a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGb
</UL>

<P><STRONG><a name="[50167fc]"></a>_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 460 bytes, Stack size 24 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[55478a4]"></a>_ZN18HTAG_DECODE_RESULTC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[50167c0]"></a>_ZN18HTAG_DECODE_RESULTD1Ev</STRONG> (ARM, 88 bytes, Stack size 8 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN18HTAG_DECODE_RESULTD1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5547778]"></a>_ZN18HTAG_DECODE_RESULTD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[554773c]"></a>_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 788 bytes, Stack size 24 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3a1c93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ev
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5547700]"></a>_ZN23HTAG_SYSTEM_INFORMATIONC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[55476c4]"></a>_ZN23HTAG_SYSTEM_INFORMATIOND1Ev</STRONG> (ARM, 156 bytes, Stack size 8 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN23HTAG_SYSTEM_INFORMATIOND1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5547688]"></a>_ZN23HTAG_SYSTEM_INFORMATIOND2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[554764c]"></a>_ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 228 bytes, Stack size 24 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5547610]"></a>_ZN17HTAG_MENU_COMMANDC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[55475d4]"></a>_ZN17HTAG_MENU_COMMANDD1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN17HTAG_MENU_COMMANDD1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5547598]"></a>_ZN17HTAG_MENU_COMMANDD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[554755c]"></a>_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 296 bytes, Stack size 24 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5547520]"></a>_ZN20HTAG_ACTIVITY_STATUSC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[55474e4]"></a>_ZN20HTAG_ACTIVITY_STATUSD1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, HTagDataResult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN20HTAG_ACTIVITY_STATUSD1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[55474a8]"></a>_ZN20HTAG_ACTIVITY_STATUSD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HTagDataResult.o(.text), UNUSED)

<P><STRONG><a name="[5546e90]"></a>_ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 304 bytes, Stack size 24 bytes, HTagFile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5546e54]"></a>_ZN9HTAG_FILEC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, HTagFile.o(.text), UNUSED)

<P><STRONG><a name="[5546e18]"></a>_ZN9HTAG_FILED1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, HTagFile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN9HTAG_FILED1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5546ddc]"></a>_ZN9HTAG_FILED2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HTagFile.o(.text), UNUSED)

<P><STRONG><a name="[554674c]"></a>_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 1448 bytes, Stack size 32 bytes, htagimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[41fe4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1Ev
<LI><a href="#[41fe52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGEC1EPhii
</UL>

<P><STRONG><a name="[5546710]"></a>_ZN10HTAG_IMAGEC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 32 bytes, htagimage.o(.text), UNUSED)

<P><STRONG><a name="[55466d4]"></a>_ZN10HTAG_IMAGED1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, htagimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN10HTAG_IMAGED1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[4d7fe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[41fe4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGED1Ev
</UL>

<P><STRONG><a name="[5546698]"></a>_ZN10HTAG_IMAGED2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, htagimage.o(.text), UNUSED)

<P><STRONG><a name="[41fae54]"></a>_ZN10HTAG_IMAGE36PerformAdditionalParameterValidationEPi</STRONG> (ARM, 128 bytes, Stack size 8 bytes, htagimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN10HTAG_IMAGE36PerformAdditionalParameterValidationEPi
</UL>
<BR>[Address Reference Count : 3]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
<LI> htagimage.o(.constdata__ZTV10HTAG_IMAGE)
<LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[41fae90]"></a>_ZN10HTAG_IMAGE32PostProcessParameterAfterParsingEPKcPi</STRONG> (ARM, 52 bytes, Stack size 16 bytes, htagimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _ZN10HTAG_IMAGE32PostProcessParameterAfterParsingEPKcPi &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[352f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10hhpstricmpEPKcS1_b
</UL>
<BR>[Address Reference Count : 3]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
<LI> htagimage.o(.constdata__ZTV10HTAG_IMAGE)
<LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[41fae18]"></a>_ZN10HTAG_IMAGE39PerformAdditionalOperationsAfterParsingEPi</STRONG> (ARM, 140 bytes, Stack size 24 bytes, htagimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN10HTAG_IMAGE39PerformAdditionalOperationsAfterParsingEPi
</UL>
<BR>[Address Reference Count : 3]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
<LI> htagimage.o(.constdata__ZTV10HTAG_IMAGE)
<LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[41faecc]"></a>_ZN10HTAG_IMAGE20PreCreateTaggedImageEP7HSTRING</STRONG> (ARM, 480 bytes, Stack size 112 bytes, htagimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _ZN10HTAG_IMAGE20PreCreateTaggedImageEP7HSTRING &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc
</UL>
<BR>[Address Reference Count : 3]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
<LI> htagimage.o(.constdata__ZTV10HTAG_IMAGE)
<LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[41faf08]"></a>_ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi</STRONG> (ARM, 924 bytes, Stack size 56 bytes, htagimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _ZN10HTAG_IMAGE18PreLoadTaggedImageEP7HSTRINGPi &rArr; _ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi &rArr; _ZN4HTAG11ParseHeaderEP7HSTRINGPi &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[4d78fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING16CompareOnShorterEPKhjb
<LI><a href="#[54d6b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG26FindAndParseTrailingHeaderEP7HSTRINGPi
</UL>
<BR>[Address Reference Count : 3]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
<LI> htagimage.o(.constdata__ZTV10HTAG_IMAGE)
<LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[5545f90]"></a>_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 736 bytes, Stack size 24 bytes, HTagReaderCode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5545f54]"></a>_ZN16HTAG_READER_CODEC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, HTagReaderCode.o(.text), UNUSED)

<P><STRONG><a name="[5545f18]"></a>_ZN16HTAG_READER_CODED1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, HTagReaderCode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN16HTAG_READER_CODED1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5545edc]"></a>_ZN16HTAG_READER_CODED2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HTagReaderCode.o(.text), UNUSED)

<P><STRONG><a name="[5545ea0]"></a>_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 308 bytes, Stack size 24 bytes, HTagReaderCode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5545e64]"></a>_ZN25HTAG_SCAN_ENGINE_FIRMWAREC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, HTagReaderCode.o(.text), UNUSED)

<P><STRONG><a name="[5545e28]"></a>_ZN25HTAG_SCAN_ENGINE_FIRMWARED1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, HTagReaderCode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN25HTAG_SCAN_ENGINE_FIRMWARED1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5545dec]"></a>_ZN25HTAG_SCAN_ENGINE_FIRMWARED2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, HTagReaderCode.o(.text), UNUSED)

<P><STRONG><a name="[554557c]"></a>_ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 260 bytes, Stack size 24 bytes, htagscript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5545540]"></a>_ZN11HTAG_SCRIPTC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 24 bytes, htagscript.o(.text), UNUSED)

<P><STRONG><a name="[5545504]"></a>_ZN11HTAG_SCRIPTD1Ev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, htagscript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN11HTAG_SCRIPTD1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[55454c8]"></a>_ZN11HTAG_SCRIPTD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, htagscript.o(.text), UNUSED)

<P><STRONG><a name="[554548c]"></a>_ZN24HTAG_SCRIPT_HOST_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 96 bytes, Stack size 16 bytes, htagscript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = _ZN24HTAG_SCRIPT_HOST_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5545450]"></a>_ZN24HTAG_SCRIPT_HOST_COMMANDC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 16 bytes, htagscript.o(.text), UNUSED)

<P><STRONG><a name="[5545414]"></a>_ZN24HTAG_SCRIPT_HOST_COMMANDD1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, htagscript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN24HTAG_SCRIPT_HOST_COMMANDD1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[55453d8]"></a>_ZN24HTAG_SCRIPT_HOST_COMMANDD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, htagscript.o(.text), UNUSED)

<P><STRONG><a name="[554539c]"></a>_ZN21HTAG_SCRIPT_HOST_DATAC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 96 bytes, Stack size 16 bytes, htagscript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = _ZN21HTAG_SCRIPT_HOST_DATAC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[5545360]"></a>_ZN21HTAG_SCRIPT_HOST_DATAC2EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER</STRONG> (ARM, 0 bytes, Stack size 16 bytes, htagscript.o(.text), UNUSED)

<P><STRONG><a name="[5545324]"></a>_ZN21HTAG_SCRIPT_HOST_DATAD1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, htagscript.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN21HTAG_SCRIPT_HOST_DATAD1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[55452e8]"></a>_ZN21HTAG_SCRIPT_HOST_DATAD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, htagscript.o(.text), UNUSED)

<P><STRONG><a name="[5547430]"></a>_ZN16HTRANSFER_STATUS41IncrementProcessReceivedDataLockSemaphoreEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, htransferstatus.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>

<P><STRONG><a name="[554746c]"></a>_ZN16HTRANSFER_STATUS41DecrementProcessReceivedDataLockSemaphoreEv</STRONG> (ARM, 32 bytes, Stack size 0 bytes, htransferstatus.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[5016784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>

<P><STRONG><a name="[553d098]"></a>_ZN16HTRANSFER_STATUSC1Ev</STRONG> (ARM, 60 bytes, Stack size 8 bytes, htransferstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN16HTRANSFER_STATUSC1Ev &rArr; _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b93e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21MatrixHTransferStatusC1Ev
</UL>

<P><STRONG><a name="[553d05c]"></a>_ZN16HTRANSFER_STATUSC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, htransferstatus.o(.text), UNUSED)

<P><STRONG><a name="[36b97a4]"></a>_ZN11MatrixHCommC1Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11MatrixHCommC1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[54dd4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN5HCOMMC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[55e3298]"></a>_ZN11MatrixHCommC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, MatrixHcomm.o(.text), UNUSED)

<P><STRONG><a name="[55e31e4]"></a>_ZN11MatrixHComm15ZeroElapsedTimeEv</STRONG> (ARM, 28 bytes, Stack size 8 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11MatrixHComm15ZeroElapsedTimeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e31a8]"></a>_ZN11MatrixHComm11ElapsedTimeEv</STRONG> (ARM, 36 bytes, Stack size 8 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11MatrixHComm11ElapsedTimeEv
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e316c]"></a>_ZN11MatrixHComm15FlushReadBufferEv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11MatrixHComm15FlushReadBufferEv &rArr; _Z8get_charv
</UL>
<BR>[Calls]<UL><LI><a href="#[2277fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8get_charv
<LI><a href="#[2278024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5kbhitv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e3130]"></a>_ZN11MatrixHComm16FlushWriteBufferEv</STRONG> (ARM, 24 bytes, Stack size 8 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ZN11MatrixHComm16FlushWriteBufferEv &rArr; _ZN6CIoMan7TxFlushEv &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4333aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan7TxFlushEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e30f4]"></a>_ZN11MatrixHComm4ReadEP7HSTRINGjj</STRONG> (ARM, 492 bytes, Stack size 56 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _ZN11MatrixHComm4ReadEP7HSTRINGjj &rArr; _ZN7HSTRING12AppendNumberEhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[2277b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan4ReadEPhj
<LI><a href="#[2277bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan11IsAnyRxDataEv
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
<LI><a href="#[2277fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8get_charv
<LI><a href="#[2278024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5kbhitv
<LI><a href="#[2278060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25poll_getchar_from_rx_fifov
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[41fa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING13MaximumLengthEv
<LI><a href="#[4333b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z44IntercharacterReceiveTimeoutForThisInterfacev
<LI><a href="#[4333b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23DoesInterfaceDoSimpleIOv
<LI><a href="#[4d79548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e30b8]"></a>_ZN11MatrixHComm5WriteEP7HSTRINGiib</STRONG> (ARM, 56 bytes, Stack size 8 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11MatrixHComm5WriteEP7HSTRINGiib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e307c]"></a>_ZN11MatrixHComm18BytesInWriteBufferEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, MatrixHcomm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e3040]"></a>_ZN11MatrixHComm10HCommSleepEj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN11MatrixHComm10HCommSleepEj &rArr; MT_Delay &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e3004]"></a>_ZN11MatrixHComm14IsPortAssignedEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, MatrixHcomm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e2fc8]"></a>_ZN11MatrixHComm4ReadEPcPjjj</STRONG> (ARM, 36 bytes, Stack size 16 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN11MatrixHComm4ReadEPcPjjj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e2f8c]"></a>_ZN11MatrixHComm15FlushReadBufferEi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, MatrixHcomm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[55e2f50]"></a>_ZN11MatrixHComm5WriteEPci</STRONG> (ARM, 224 bytes, Stack size 32 bytes, MatrixHcomm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ZN11MatrixHComm5WriteEPci &rArr; _Z10xputstringPKci &rArr; _Z10xputstringPKhi
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18IsInterfaceRunningv
<LI><a href="#[2277ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKci
<LI><a href="#[4333b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23DoesInterfaceDoSimpleIOv
<LI><a href="#[4333fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15IsPortAvailableEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[41faddc]"></a>_ZN13NonMenuHModemC1Ev</STRONG> (ARM, 52 bytes, Stack size 8 bytes, MatrixNonMenuHmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN13NonMenuHModemC1Ev &rArr; _ZN6HMODEMC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[530a588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HCOMMAND_HANDLERC1Ev
<LI><a href="#[54da158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[55e22a8]"></a>_ZN13NonMenuHModemC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, MatrixNonMenuHmodem.o(.text), UNUSED)

<P><STRONG><a name="[41fada0]"></a>_ZN13NonMenuHModemD1Ev</STRONG> (ARM, 24 bytes, Stack size 8 bytes, MatrixNonMenuHmodem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN13NonMenuHModemD1Ev &rArr; _ZN6HMODEMD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[530a54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HCOMMAND_HANDLERD1Ev
<LI><a href="#[54da0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEMD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[55e226c]"></a>_ZN13NonMenuHModemD2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, MatrixNonMenuHmodem.o(.text), UNUSED)

<P><STRONG><a name="[55e1498]"></a>_ZN21MatrixHTransferStatus21PrepareDownloadStatusEv</STRONG> (ARM, 24 bytes, Stack size 0 bytes, Matrixhtransferstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN21MatrixHTransferStatus21PrepareDownloadStatusEv &rArr; _Z22FlashImageDownloadBeepv &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22FlashImageDownloadBeepv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[55e13e4]"></a>_ZN21MatrixHTransferStatus19CloseDownloadStatusEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Matrixhtransferstatus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[55e13a8]"></a>_ZN21MatrixHTransferStatus11MayContinueEjjb</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Matrixhtransferstatus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[36b93e4]"></a>_ZN21MatrixHTransferStatusC1Ev</STRONG> (ARM, 20 bytes, Stack size 8 bytes, Matrixhtransferstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ZN21MatrixHTransferStatusC1Ev &rArr; _ZN16HTRANSFER_STATUSC1Ev &rArr; _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[553d098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUSC1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>

<P><STRONG><a name="[55e136c]"></a>_ZN21MatrixHTransferStatusC2Ev</STRONG> (ARM, 0 bytes, Stack size 8 bytes, Matrixhtransferstatus.o(.text), UNUSED)

<P><STRONG><a name="[55decc0]"></a>_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb</STRONG> (ARM, 468 bytes, Stack size 216 bytes, synfecommandhandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = _ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb &rArr; _ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb &rArr; _ZN6HMODEM8TransmitEP7HSTRINGS1_bbj &rArr; _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d69cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[5547430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS41IncrementProcessReceivedDataLockSemaphoreEv
<LI><a href="#[554746c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS41DecrementProcessReceivedDataLockSemaphoreEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>

<P><STRONG><a name="[3885298]"></a>_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci</STRONG> (ARM, 11084 bytes, Stack size 384 bytes, synfecommandhandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464 + Unknown Stack Size
<LI>Call Chain = _ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci &rArr; _ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb &rArr; _ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb &rArr; _ZN6HMODEM8TransmitEP7HSTRINGS1_bbj &rArr; _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2277fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8xputcharh
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[3f1d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPS_jj
<LI><a href="#[4d78e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcjj
<LI><a href="#[4d78eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPS_j
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb
<LI><a href="#[4d79494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKcj
<LI><a href="#[50167c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTD1Ev
<LI><a href="#[50167fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18HTAG_DECODE_RESULTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[54d6918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17ReceiveHTAGHeaderEPcP7HSTRINGS2_PiP5HCOMMS2_
<LI><a href="#[54d6954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG16WriteTaggedImageEPcb
<LI><a href="#[54d6990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15ReadTaggedImageEP7HSTRINGPci
<LI><a href="#[54d6a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG12ReadHTagDataEP7HSTRINGPciS1_
<LI><a href="#[54d6a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG15LoadTaggedImageEP7HSTRINGPPhPib
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddHStringParameterEPKcP7HSTRINGS1_ib
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
<LI><a href="#[5545324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21HTAG_SCRIPT_HOST_DATAD1Ev
<LI><a href="#[554539c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21HTAG_SCRIPT_HOST_DATAC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HTAG_SCRIPT_HOST_COMMANDD1Ev
<LI><a href="#[554548c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN24HTAG_SCRIPT_HOST_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTD1Ev
<LI><a href="#[554557c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11HTAG_SCRIPTC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWARED1Ev
<LI><a href="#[5545ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN25HTAG_SCAN_ENGINE_FIRMWAREC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5545f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODED1Ev
<LI><a href="#[5545f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTAG_READER_CODEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55466d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGED1Ev
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5546e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILED1Ev
<LI><a href="#[5546e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HTAG_FILEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[5547430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS41IncrementProcessReceivedDataLockSemaphoreEv
<LI><a href="#[554746c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS41DecrementProcessReceivedDataLockSemaphoreEv
<LI><a href="#[55474e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSD1Ev
<LI><a href="#[554755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HTAG_ACTIVITY_STATUSC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55475d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDD1Ev
<LI><a href="#[554764c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17HTAG_MENU_COMMANDC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55476c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIOND1Ev
<LI><a href="#[554773c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN23HTAG_SYSTEM_INFORMATIONC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
<LI><a href="#[55decc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[51d28b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKc
</UL>

<P><STRONG><a name="[51d28b4]"></a>_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKc</STRONG> (ARM, 48 bytes, Stack size 16 bytes, synfecommandhandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = _ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKc &rArr; _ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci &rArr; _ZN22SYN_FE_COMMAND_HANDLER14TurnOnBootModeEPcb &rArr; _ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb &rArr; _ZN6HMODEM8TransmitEP7HSTRINGS1_bbj &rArr; _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[5016784]"></a>_ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi</STRONG> (ARM, 236 bytes, Stack size 272 bytes, synfecommandhandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = _ZN22SYN_FE_COMMAND_HANDLER16SendTriggerEventEi &rArr; _ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb &rArr; _ZN6HMODEM8TransmitEP7HSTRINGS1_bbj &rArr; _ZN6HMODEM17TransmitProcessorEPhjS0_jbbj &rArr; _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[54d69cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG13WriteHTagDataEP7HSTRINGS1_Pcb
<LI><a href="#[54d6abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG17CreateTaggedImageEP7HSTRINGS1_PKhib
<LI><a href="#[54d6be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGD1Ev
<LI><a href="#[54d6c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb
<LI><a href="#[54d6d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG19AddNumericParameterEPKcPiiiib
<LI><a href="#[5547430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS41IncrementProcessReceivedDataLockSemaphoreEv
<LI><a href="#[554746c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16HTRANSFER_STATUS41DecrementProcessReceivedDataLockSemaphoreEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4ecda44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC13InputStandardEiP8HWSTRINGiiPwiPcPiS4_
</UL>

<P><STRONG><a name="[3757640]"></a>_ZN19CTlvContainerParser19CalcNumPaddingBytesEPKN4CTlv8Header_tE</STRONG> (ARM, 32 bytes, Stack size 8 bytes, TlvContainerParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN19CTlvContainerParser19CalcNumPaddingBytesEPKN4CTlv8Header_tE
</UL>
<BR>[Calls]<UL><LI><a href="#[4532a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_4
</UL>
<BR>[Called By]<UL><LI><a href="#[37576b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19ReadSoftwareVersionPci
</UL>

<P><STRONG><a name="[570c644]"></a>_Z22AppendTiffHeaderAndIFDiilbbPKcP9BITSTRINGb</STRONG> (ARM, 1400 bytes, Stack size 80 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _Z22AppendTiffHeaderAndIFDiilbbPKcP9BITSTRINGb &rArr; _ZN7HSTRING12AppendNumberEij &rArr; _ZN7HSTRING12InsertNumberEiij &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
</UL>
<BR>[Called By]<UL><LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[570c464]"></a>_Z27AppendTiffHeaderAndIFDColoriilbPKcP9BITSTRING</STRONG> (ARM, 1256 bytes, Stack size 72 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _Z27AppendTiffHeaderAndIFDColoriilbPKcP9BITSTRING &rArr; _ZN7HSTRING12AppendNumberEij &rArr; _ZN7HSTRING12InsertNumberEiij &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
</UL>
<BR>[Called By]<UL><LI><a href="#[570c20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb
</UL>

<P><STRONG><a name="[570c428]"></a>_Z12write_bits_cPKc</STRONG> (ARM, 156 bytes, Stack size 16 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z12write_bits_cPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[570c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14compress_imageP23uncompressed_descriptorP21compressed_descriptorP10parameters
<LI><a href="#[570c2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13compress_lineP10parameters
<LI><a href="#[570c374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15vertical_mode_cP10parameters
<LI><a href="#[570c3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17horizontal_mode_cP10parameters
<LI><a href="#[570c3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16write_run_lengthss
</UL>

<P><STRONG><a name="[570c3ec]"></a>_Z16write_run_lengthss</STRONG> (ARM, 204 bytes, Stack size 24 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z16write_run_lengthss &rArr; _Z12write_bits_cPKc
</UL>
<BR>[Calls]<UL><LI><a href="#[570c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12write_bits_cPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[570c3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17horizontal_mode_cP10parameters
</UL>

<P><STRONG><a name="[570c3b0]"></a>_Z17horizontal_mode_cP10parameters</STRONG> (ARM, 284 bytes, Stack size 12 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _Z17horizontal_mode_cP10parameters &rArr; _Z16write_run_lengthss &rArr; _Z12write_bits_cPKc
</UL>
<BR>[Calls]<UL><LI><a href="#[570c3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16write_run_lengthss
<LI><a href="#[570c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12write_bits_cPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[570c2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13compress_lineP10parameters
</UL>

<P><STRONG><a name="[570c374]"></a>_Z15vertical_mode_cP10parameters</STRONG> (ARM, 704 bytes, Stack size 16 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z15vertical_mode_cP10parameters &rArr; _Z12write_bits_cPKc
</UL>
<BR>[Calls]<UL><LI><a href="#[570c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12write_bits_cPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[570c2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13compress_lineP10parameters
</UL>

<P><STRONG><a name="[570c338]"></a>_Z13initialize_b1P10parameters</STRONG> (ARM, 100 bytes, Stack size 12 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z13initialize_b1P10parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[570c2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13compress_lineP10parameters
</UL>

<P><STRONG><a name="[570c2fc]"></a>_Z13compress_lineP10parameters</STRONG> (ARM, 220 bytes, Stack size 12 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z13compress_lineP10parameters &rArr; _Z17horizontal_mode_cP10parameters &rArr; _Z16write_run_lengthss &rArr; _Z12write_bits_cPKc
</UL>
<BR>[Calls]<UL><LI><a href="#[570c338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13initialize_b1P10parameters
<LI><a href="#[570c374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15vertical_mode_cP10parameters
<LI><a href="#[570c3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17horizontal_mode_cP10parameters
<LI><a href="#[570c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12write_bits_cPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[570c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14compress_imageP23uncompressed_descriptorP21compressed_descriptorP10parameters
</UL>

<P><STRONG><a name="[570c2c0]"></a>_Z14compress_imageP23uncompressed_descriptorP21compressed_descriptorP10parameters</STRONG> (ARM, 572 bytes, Stack size 48 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _Z14compress_imageP23uncompressed_descriptorP21compressed_descriptorP10parameters &rArr; _Z13compress_lineP10parameters &rArr; _Z17horizontal_mode_cP10parameters &rArr; _Z16write_run_lengthss &rArr; _Z12write_bits_cPKc
</UL>
<BR>[Calls]<UL><LI><a href="#[570c2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13compress_lineP10parameters
<LI><a href="#[570c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12write_bits_cPKc
</UL>
<BR>[Called By]<UL><LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[570c284]"></a>_Z19prepare_to_compressP23uncompressed_descriptorP21compressed_descriptorP10parameters</STRONG> (ARM, 164 bytes, Stack size 16 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z19prepare_to_compressP23uncompressed_descriptorP21compressed_descriptorP10parameters &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>

<P><STRONG><a name="[570c248]"></a>_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi</STRONG> (ARM, 652 bytes, Stack size 104 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = _Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[4d7fd1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING22FillToNextByteBoundaryEb
<LI><a href="#[4d7fd58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING10AppendBitsEmm
<LI><a href="#[4d7fd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING4ZeroEv
<LI><a href="#[4d7fe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGD1Ev
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[570c284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19prepare_to_compressP23uncompressed_descriptorP21compressed_descriptorP10parameters
<LI><a href="#[570c2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14compress_imageP23uncompressed_descriptorP21compressed_descriptorP10parameters
<LI><a href="#[570c644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22AppendTiffHeaderAndIFDiilbbPKcP9BITSTRINGb
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
</UL>

<P><STRONG><a name="[570c20c]"></a>_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb</STRONG> (ARM, 176 bytes, Stack size 320 bytes, tiffimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = _Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb &rArr; _ZN14CLZWCompressor12TiffCompressEP9BITSTRINGS1_m &rArr; _ZN14CLZWCompressor11output_bitsEP9BITSTRINGts &rArr; _ZN14CLZWCompressor19add_to_output_blockEhP9BITSTRINGi &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[4d7fd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING4ZeroEv
<LI><a href="#[570c158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressorD1Ev
<LI><a href="#[570c194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressorC1Ev
<LI><a href="#[570c1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor12TiffCompressEP9BITSTRINGS1_m
<LI><a href="#[570c464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27AppendTiffHeaderAndIFDColoriilbPKcP9BITSTRING
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
</UL>

<P><STRONG><a name="[570bb7c]"></a>_Z14CreateBMPImageP9BITSTRINGS0_iiii</STRONG> (ARM, 1044 bytes, Stack size 1144 bytes, bmpimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3016 + Unknown Stack Size
<LI>Call Chain = _Z14CreateBMPImageP9BITSTRINGS0_iiii &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
<LI><a href="#[4d7fd1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING22FillToNextByteBoundaryEb
<LI><a href="#[4d7fd58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING10AppendBitsEmm
<LI><a href="#[4d7fd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING4ZeroEv
<LI><a href="#[5dd3360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
</UL>

<P><STRONG><a name="[570bb04]"></a>_Z19CreateBMPColorImageP9BITSTRINGS0_iiii</STRONG> (ARM, 540 bytes, Stack size 88 bytes, bmpimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _Z19CreateBMPColorImageP9BITSTRINGS0_iiii &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[3a1c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPS_
<LI><a href="#[4d793e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKcj
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
<LI><a href="#[4d7fd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING4ZeroEv
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
</UL>

<P><STRONG><a name="[570a574]"></a>_Z26CalculateOffsiteAndPatternPiS_S_bbiiiibb</STRONG> (ARM, 2204 bytes, Stack size 80 bytes, himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z26CalculateOffsiteAndPatternPiS_S_bbiiiibb
</UL>
<BR>[Called By]<UL><LI><a href="#[570a3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ModifyImagePhS_PiS0_S0_S0_S0_bbbiiiiiibb
</UL>

<P><STRONG><a name="[570a3d0]"></a>_Z11ModifyImagePhS_PiS0_S0_S0_S0_bbbiiiiiibb</STRONG> (ARM, 3176 bytes, Stack size 640 bytes, himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = _Z11ModifyImagePhS_PiS0_S0_S0_S0_bbbiiiiiibb &rArr; _Z26CalculateOffsiteAndPatternPiS_S_bbiiiibb
</UL>
<BR>[Calls]<UL><LI><a href="#[36b972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken10IAmOEMJadeEv
<LI><a href="#[570a574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26CalculateOffsiteAndPatternPiS_S_bbiiiibb
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ModifyImageP7HSTRINGPiS1_S1_S1_S1_bbbiiiiiibb
</UL>

<P><STRONG><a name="[41fe70c]"></a>_Z11ModifyImageP7HSTRINGPiS1_S1_S1_S1_bbbiiiiiibb</STRONG> (ARM, 172 bytes, Stack size 112 bytes, himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = _Z11ModifyImageP7HSTRINGPiS1_S1_S1_S1_bbbiiiiiibb &rArr; _Z11ModifyImagePhS_PiS0_S0_S0_S0_bbbiiiiiibb &rArr; _Z26CalculateOffsiteAndPatternPiS_S_bbiiiibb
</UL>
<BR>[Calls]<UL><LI><a href="#[570a3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11ModifyImagePhS_PiS0_S0_S0_S0_bbbiiiiiibb
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[41fe4f0]"></a>_ZN6HIMAGEC1Ev</STRONG> (ARM, 100 bytes, Stack size 16 bytes, himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGEC1Ev &rArr; _ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[41fe5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG20SetParameterDefaultsEv
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[570a394]"></a>_ZN6HIMAGEC2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, himage.o(.text), UNUSED)

<P><STRONG><a name="[41fe52c]"></a>_ZN6HIMAGEC1EPhii</STRONG> (ARM, 204 bytes, Stack size 32 bytes, himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGEC1EPhii &rArr; _ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER &rArr; _ZN4HTAGC1EP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLERb &rArr; _ZN4HTAG19AddNumericParameterEPKcPiiiib &rArr; _ZN4HTAG19AddNumericParameterEPKcPiibiib &rArr; _ZN4HTAG13FindParameterEPKcPiS2_ &rArr; _ZN7HSTRING10hhpstricmpEPKcS1_b &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[41fad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG18ValidateParametersEv
<LI><a href="#[41fe5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG20SetParameterDefaultsEv
<LI><a href="#[554674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGEC1EPKcP5HCOMMP16HTRANSFER_STATUSP16HCOMMAND_HANDLER
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[570a358]"></a>_ZN6HIMAGEC2EPhii</STRONG> (ARM, 0 bytes, Stack size 32 bytes, himage.o(.text), UNUSED)

<P><STRONG><a name="[41fe4b4]"></a>_ZN6HIMAGED1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ZN6HIMAGED1Ev &rArr; _ZN10HTAG_IMAGED1Ev &rArr; _ZN4HTAGD1Ev &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[55466d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10HTAG_IMAGED1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[41f6ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DumpImgBoxv
<LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[570a31c]"></a>_ZN6HIMAGED2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, himage.o(.text), UNUSED)

<P><STRONG><a name="[41fe568]"></a>_ZN6HIMAGE11FormatImageEi</STRONG> (ARM, 1580 bytes, Stack size 88 bytes, himage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3104 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE11FormatImageEi &rArr; _Z14CreateBMPImageP9BITSTRINGS0_iiii &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[4d7fd1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING22FillToNextByteBoundaryEb
<LI><a href="#[4d7fd58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING10AppendBitsEmm
<LI><a href="#[4d7fe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGD1Ev
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
<LI><a href="#[570a268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateKIMImageP9BITSTRINGS0_iiii
<LI><a href="#[570a2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGiiiiiii
<LI><a href="#[570bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19CreateBMPColorImageP9BITSTRINGS0_iiii
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[570c20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb
<LI><a href="#[570c248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CreateTiffImageP9BITSTRINGS0_iibbPKcbi
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
<LI><a href="#[41fe8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ProcessImageShipStyleCommandPhiib
</UL>

<P><STRONG><a name="[570c194]"></a>_ZN14CLZWCompressorC1Ev</STRONG> (ARM, 20 bytes, Stack size 0 bytes, LZWCompressor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[570c20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb
</UL>

<P><STRONG><a name="[5709c14]"></a>_ZN14CLZWCompressorC2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, LZWCompressor.o(.text), UNUSED)

<P><STRONG><a name="[570c158]"></a>_ZN14CLZWCompressorD1Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, LZWCompressor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[570c20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb
</UL>

<P><STRONG><a name="[5709bd8]"></a>_ZN14CLZWCompressorD2Ev</STRONG> (ARM, 0 bytes, Stack size 0 bytes, LZWCompressor.o(.text), UNUSED)

<P><STRONG><a name="[5709b9c]"></a>_ZN14CLZWCompressor19add_to_output_blockEhP9BITSTRINGi</STRONG> (ARM, 100 bytes, Stack size 16 bytes, LZWCompressor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _ZN14CLZWCompressor19add_to_output_blockEhP9BITSTRINGi &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
</UL>
<BR>[Called By]<UL><LI><a href="#[5709b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor11output_bitsEP9BITSTRINGts
</UL>

<P><STRONG><a name="[5709b60]"></a>_ZN14CLZWCompressor11output_bitsEP9BITSTRINGts</STRONG> (ARM, 192 bytes, Stack size 24 bytes, LZWCompressor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _ZN14CLZWCompressor11output_bitsEP9BITSTRINGts &rArr; _ZN14CLZWCompressor19add_to_output_blockEhP9BITSTRINGi &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7941c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKhj
<LI><a href="#[5709b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor19add_to_output_blockEhP9BITSTRINGi
</UL>
<BR>[Called By]<UL><LI><a href="#[570c1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor12TiffCompressEP9BITSTRINGS1_m
</UL>

<P><STRONG><a name="[570c1d0]"></a>_ZN14CLZWCompressor12TiffCompressEP9BITSTRINGS1_m</STRONG> (ARM, 588 bytes, Stack size 56 bytes, LZWCompressor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _ZN14CLZWCompressor12TiffCompressEP9BITSTRINGS1_m &rArr; _ZN14CLZWCompressor11output_bitsEP9BITSTRINGts &rArr; _ZN14CLZWCompressor19add_to_output_blockEhP9BITSTRINGi &rArr; _ZN7HSTRING6AppendEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5709b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor11output_bitsEP9BITSTRINGts
<LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj (via BLX)
<LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[570c20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CreateTiffColorImageP9BITSTRINGS0_iibPKcb
</UL>

<P><STRONG><a name="[41f9054]"></a>_Z11FixRowNoisePhiiiii</STRONG> (ARM, 308 bytes, Stack size 296 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _Z11FixRowNoisePhiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f90cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13AutoCropImagev
<LI><a href="#[41fa9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE8RowNoiseEii
</UL>

<P><STRONG><a name="[41faa58]"></a>_ZN6HIMAGE16EdgeSharpenImageEi</STRONG> (ARM, 304 bytes, Stack size 96 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 27984 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SharpenEdges
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fa968]"></a>_ZN6HIMAGE9SmoothingEv</STRONG> (ARM, 296 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2280 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE9SmoothingEv &rArr; Blur &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blur
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41faad0]"></a>_ZN6HIMAGE14SubsampleImageEi</STRONG> (ARM, 288 bytes, Stack size 32 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN6HIMAGE14SubsampleImageEi
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fac74]"></a>_ZN6HIMAGE11ImageRotateEi</STRONG> (ARM, 364 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2120 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE11ImageRotateEi &rArr; RotateImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotateImage
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fab0c]"></a>_ZN6HIMAGE14ImageRotateRGBEi</STRONG> (ARM, 444 bytes, Stack size 64 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ZN6HIMAGE14ImageRotateRGBEi &rArr; _ZN9BITSTRINGC1Ejb &rArr; _ZN7HSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7fe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGD1Ev
<LI><a href="#[4d7fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRINGC1Ejb
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fab84]"></a>_ZN6HIMAGE13FlySpeckImageEv</STRONG> (ARM, 304 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2136 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE13FlySpeckImageEv &rArr; FlySpeck &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlySpeck
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fabfc]"></a>_ZN6HIMAGE12FlattenImageEv</STRONG> (ARM, 296 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2064 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE12FlattenImageEv &rArr; CompensateImage &rArr; ic_CreateCompensateThresholds &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompensateImage
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fabc0]"></a>_ZN6HIMAGE12StretchImageEv</STRONG> (ARM, 304 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3160 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE12StretchImageEv &rArr; HistogramStretch &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramStretch
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41faa94]"></a>_ZN6HIMAGE14UltraTextImageEv</STRONG> (ARM, 300 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2320 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE14UltraTextImageEv &rArr; DocumentFilter &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DocumentFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fa9e0]"></a>_ZN6HIMAGE22AdaptiveUltraTextImageEv</STRONG> (ARM, 296 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2648 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE22AdaptiveUltraTextImageEv &rArr; AdaptiveUltraText &rArr; ic_ConvolveImageAdaptive &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdaptiveUltraText
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41faa1c]"></a>_ZN6HIMAGE19InfinityFilterImageEv</STRONG> (ARM, 296 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2592 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE19InfinityFilterImageEv &rArr; InfinityFilter &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfinityFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41facec]"></a>_ZN6HIMAGE10GammaImageEi</STRONG> (ARM, 332 bytes, Stack size 96 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3184 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE10GammaImageEi &rArr; GammaCorrection &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GammaCorrection
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fab48]"></a>_ZN6HIMAGE14HistogramImageEv</STRONG> (ARM, 296 bytes, Stack size 88 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3176 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE14HistogramImageEv &rArr; ShowHistogram &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[5708bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHistogram
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41fa9a4]"></a>_ZN6HIMAGE8RowNoiseEii</STRONG> (ARM, 44 bytes, Stack size 16 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _ZN6HIMAGE8RowNoiseEii &rArr; _Z11FixRowNoisePhiiiii
</UL>
<BR>[Calls]<UL><LI><a href="#[41f9054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11FixRowNoisePhiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[5708e7c]"></a>_ZN6HIMAGE14CalImageBlueXYEPiS0_</STRONG> (ARM, 116 bytes, Stack size 0 bytes, himageProprietary.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41fac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FissionImageEv
<LI><a href="#[41facb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FusionImageEv
</UL>

<P><STRONG><a name="[41fac38]"></a>_ZN6HIMAGE12FissionImageEv</STRONG> (ARM, 456 bytes, Stack size 96 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1968 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE12FissionImageEv &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[5708e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14CalImageBlueXYEPiS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[41facb0]"></a>_ZN6HIMAGE11FusionImageEv</STRONG> (ARM, 440 bytes, Stack size 104 bytes, himageProprietary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE11FusionImageEv &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[5708e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14CalImageBlueXYEPiS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9SendImageP6HIMAGEPhiibb
</UL>

<P><STRONG><a name="[570a268]"></a>_Z14CreateKIMImageP9BITSTRINGS0_iiii</STRONG> (ARM, 560 bytes, Stack size 40 bytes, kimimage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _Z14CreateKIMImageP9BITSTRINGS0_iiii &rArr; _ZN9BITSTRING4ZeroEv &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
<LI><a href="#[4d7fd58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING10AppendBitsEmm
<LI><a href="#[4d7fd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9BITSTRING4ZeroEv
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
</UL>

<P><STRONG><a name="[57644b8]"></a>DrawBorder</STRONG> (ARM, 172 bytes, Stack size 20 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DrawBorder
</UL>
<BR>[Called By]<UL><LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
<LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
</UL>

<P><STRONG><a name="[576447c]"></a>DrawSearchCrosshair</STRONG> (ARM, 428 bytes, Stack size 20 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DrawSearchCrosshair
</UL>
<BR>[Called By]<UL><LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
</UL>

<P><STRONG><a name="[5764440]"></a>SetupWindow</STRONG> (ARM, 1336 bytes, Stack size 40 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SetupWindow &rArr; SI_DecodeSet &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5764134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeSet
<LI><a href="#[5764314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_DecodeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[38858b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDecoder
<LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[5764404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeReset
</UL>

<P><STRONG><a name="[5764404]"></a>DecodeReset</STRONG> (ARM, 444 bytes, Stack size 16 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = DecodeReset &rArr; SetupWindow &rArr; SI_DecodeSet &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5764440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupWindow
<LI><a href="#[5765430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ClearStoredResultsi
</UL>
<BR>[Called By]<UL><LI><a href="#[38858b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDecoder
</UL>

<P><STRONG><a name="[38858b0]"></a>InitDecoder</STRONG> (ARM, 192 bytes, Stack size 24 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12160 + Unknown Stack Size
<LI>Call Chain = InitDecoder &rArr; SI_InitDecoder &rArr; SD_Create &rArr; SymLoc00000e88Lc40xec &rArr; SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5764080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_InstallCallback
<LI><a href="#[57640bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_InitDecoder
<LI><a href="#[5764260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_InstallCallback
<LI><a href="#[576429c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_InitDecoder
<LI><a href="#[5764404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeReset
<LI><a href="#[5764440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[374f288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EstablishDecoderii
</UL>

<P><STRONG><a name="[54e0b48]"></a>ReportDecoderVersion</STRONG> (ARM, 276 bytes, Stack size 96 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ReportDecoderVersion &rArr; RSI_ReportDecoderVersion &rArr; RS_ReportDecoderVersion
</UL>
<BR>[Calls]<UL><LI><a href="#[5764008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ReportDecoderVersion
<LI><a href="#[5764224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_ReportDecoderVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[54e16c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19SendDecoderRevisionv
<LI><a href="#[54e1700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23SendDecoderAllRevisionsv
</UL>

<P><STRONG><a name="[3885874]"></a>InstallCallback</STRONG> (ARM, 152 bytes, Stack size 16 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = InstallCallback &rArr; SI_InstallCallback &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5764080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_InstallCallback
<LI><a href="#[5764260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_InstallCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[374f288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EstablishDecoderii
</UL>

<P><STRONG><a name="[3885964]"></a>Decode</STRONG> (ARM, 1100 bytes, Stack size 48 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3504 + Unknown Stack Size
<LI>Call Chain = Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5764134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeSet
<LI><a href="#[5764170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeGet
<LI><a href="#[57641ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_Decode
<LI><a href="#[576438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_Decode
<LI><a href="#[576447c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSearchCrosshair
<LI><a href="#[57644b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBorder
<LI><a href="#[5765430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ClearStoredResultsi
</UL>
<BR>[Called By]<UL><LI><a href="#[374f24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10FastDecodePhi
<LI><a href="#[374f2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8OPdecodePhiiiiii
</UL>

<P><STRONG><a name="[3885784]"></a>StopDecode</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = StopDecode &rArr; SI_StopDecode &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5763fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_StopDecode
</UL>
<BR>[Called By]<UL><LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
<LI><a href="#[3753ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SD_CB_ResultNotifyi
<LI><a href="#[3753f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SD_CB_Progressi
</UL>

<P><STRONG><a name="[38859a0]"></a>ContinueDecode</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ContinueDecode &rArr; SI_ContinueDecode &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[57641e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ContinueDecode
</UL>
<BR>[Called By]<UL><LI><a href="#[3753f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SD_CB_Progressi
</UL>

<P><STRONG><a name="[3885838]"></a>PauseDecode</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PauseDecode &rArr; SI_PauseDecode &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5764044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_PauseDecode
</UL>
<BR>[Called By]<UL><LI><a href="#[3753f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SD_CB_Progressi
</UL>

<P><STRONG><a name="[3885928]"></a>DecodeGet</STRONG> (ARM, 1512 bytes, Stack size 24 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DecodeGet &rArr; SI_DecodeGet &rArr; SD_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5764170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeGet
<LI><a href="#[5764350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_DecodeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[374f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessLinearScanPh
<LI><a href="#[374f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15GetBestNewImagePPh
<LI><a href="#[374f774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ChangeDecoderSettingv
<LI><a href="#[413df88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger36ProcessChangeToFromTempManualTriggerEv
</UL>

<P><STRONG><a name="[38858ec]"></a>DecodeSet</STRONG> (ARM, 2180 bytes, Stack size 112 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = DecodeSet &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5764134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeSet
<LI><a href="#[5764314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_DecodeSet
<LI><a href="#[5764440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupWindow
<LI><a href="#[576519c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15InsertCharacterPhPihi
</UL>
<BR>[Called By]<UL><LI><a href="#[36ba014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FillDecoderMenuv
<LI><a href="#[374f198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SetVigorEtAliPiS_S_
<LI><a href="#[374f24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10FastDecodePhi
<LI><a href="#[374f300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30FillDecoderWindowCenteringMenuv
<LI><a href="#[374f33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetImageParametersiiiii
<LI><a href="#[374f378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20FillSwiftDecoderMenuv
<LI><a href="#[374f774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ChangeDecoderSettingv
<LI><a href="#[5306fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ParseOCRTemplatev
<LI><a href="#[5307054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9ChangeUPUv
<LI><a href="#[5307090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ChangeUSPSv
<LI><a href="#[53071bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ChangePlanetCodev
<LI><a href="#[53071f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ChangePostnetv
</UL>

<P><STRONG><a name="[5306f64]"></a>GetLastDecoderError</STRONG> (ARM, 4 bytes, Stack size 0 bytes, DecoderInterface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57640f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_GetLastDecoderError
</UL>
<BR>[Called By]<UL><LI><a href="#[5306fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ParseOCRTemplatev
</UL>

<P><STRONG><a name="[5761b3c]"></a>SI_ResultCallback</STRONG> (ARM, 116 bytes, Stack size 16 bytes, SwiftInterface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57621cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14FillResultInfoi
<LI><a href="#[5762208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11CheckLengthv
<LI><a href="#[5762244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CheckAddendav
<LI><a href="#[5762280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12FormatResultv
</UL>

<P><STRONG><a name="[5761b00]"></a>SI_StatusCallback</STRONG> (ARM, 20 bytes, Stack size 0 bytes, SwiftInterface.o(.text), UNUSED)

<P><STRONG><a name="[5761ac4]"></a>SI_ProgressCallback</STRONG> (ARM, 20 bytes, Stack size 0 bytes, SwiftInterface.o(.text), UNUSED)

<P><STRONG><a name="[5761a88]"></a>SI_DecodeReset</STRONG> (ARM, 400 bytes, Stack size 8 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SI_DecodeReset
</UL>
<BR>[Called By]<UL><LI><a href="#[57640bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_InitDecoder
<LI><a href="#[5764134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeSet
</UL>

<P><STRONG><a name="[57640bc]"></a>SI_InitDecoder</STRONG> (ARM, 104 bytes, Stack size 24 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12136 + Unknown Stack Size
<LI>Call Chain = SI_InitDecoder &rArr; SD_Create &rArr; SymLoc00000e88Lc40xec &rArr; SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
<LI><a href="#[5761a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Create
<LI><a href="#[5761a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeReset
</UL>
<BR>[Called By]<UL><LI><a href="#[38858b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDecoder
</UL>

<P><STRONG><a name="[5764008]"></a>SI_ReportDecoderVersion</STRONG> (ARM, 188 bytes, Stack size 32 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SI_ReportDecoderVersion &rArr; SD_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5761998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[54e0b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportDecoderVersion
</UL>

<P><STRONG><a name="[5764080]"></a>SI_InstallCallback</STRONG> (ARM, 148 bytes, Stack size 8 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SI_InstallCallback &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[3885874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InstallCallback
<LI><a href="#[38858b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDecoder
</UL>

<P><STRONG><a name="[57641ac]"></a>SI_Decode</STRONG> (ARM, 52 bytes, Stack size 16 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3456 + Unknown Stack Size
<LI>Call Chain = SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
<LI><a href="#[5761a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
</UL>

<P><STRONG><a name="[5763fcc]"></a>SI_StopDecode</STRONG> (ARM, 12 bytes, Stack size 0 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SI_StopDecode &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[3885784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDecode
<LI><a href="#[57652c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ProgressCallbacki
</UL>

<P><STRONG><a name="[57641e8]"></a>SI_ContinueDecode</STRONG> (ARM, 12 bytes, Stack size 0 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SI_ContinueDecode &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[38859a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinueDecode
</UL>

<P><STRONG><a name="[5764044]"></a>SI_PauseDecode</STRONG> (ARM, 12 bytes, Stack size 0 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SI_PauseDecode &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[3885838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PauseDecode
</UL>

<P><STRONG><a name="[5764170]"></a>SI_DecodeGet</STRONG> (ARM, 8768 bytes, Stack size 24 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SI_DecodeGet &rArr; SD_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5761998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[3885928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeGet
<LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
<LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
</UL>

<P><STRONG><a name="[5764134]"></a>SI_DecodeSet</STRONG> (ARM, 13344 bytes, Stack size 96 bytes, SwiftInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SI_DecodeSet &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
<LI><a href="#[5761998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Get
<LI><a href="#[5761a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeReset
</UL>
<BR>[Called By]<UL><LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
<LI><a href="#[5764440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupWindow
</UL>

<P><STRONG><a name="[57640f8]"></a>SI_GetLastDecoderError</STRONG> (ARM, 4 bytes, Stack size 0 bytes, SwiftInterface.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[576195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetLastError
</UL>
<BR>[Called By]<UL><LI><a href="#[5306f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastDecoderError
</UL>

<P><STRONG><a name="[576069c]"></a>RSI_ResultCallback</STRONG> (ARM, 44 bytes, Stack size 8 bytes, RapidScanInterface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5760b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14FillResultInfoP15RS_DecodeResult
</UL>

<P><STRONG><a name="[576429c]"></a>RSI_InitDecoder</STRONG> (ARM, 76 bytes, Stack size 24 bytes, RapidScanInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RSI_InitDecoder
</UL>
<BR>[Calls]<UL><LI><a href="#[57604f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Set
<LI><a href="#[5760660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[38858b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDecoder
</UL>

<P><STRONG><a name="[5764224]"></a>RSI_ReportDecoderVersion</STRONG> (ARM, 4 bytes, Stack size 0 bytes, RapidScanInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RSI_ReportDecoderVersion &rArr; RS_ReportDecoderVersion
</UL>
<BR>[Calls]<UL><LI><a href="#[5760570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_ReportDecoderVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[54e0b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportDecoderVersion
</UL>

<P><STRONG><a name="[5764260]"></a>RSI_InstallCallback</STRONG> (ARM, 120 bytes, Stack size 8 bytes, RapidScanInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RSI_InstallCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[57604f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[3885874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InstallCallback
<LI><a href="#[38858b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDecoder
</UL>

<P><STRONG><a name="[576438c]"></a>RSI_Decode</STRONG> (ARM, 32 bytes, Stack size 0 bytes, RapidScanInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = RSI_Decode &rArr; RS_Decode &rArr; FastRead &rArr; FastDecode &rArr; FastUpcEan &rArr; ProcessUpcEan &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[5760624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
</UL>

<P><STRONG><a name="[5764350]"></a>RSI_DecodeGet</STRONG> (ARM, 2152 bytes, Stack size 8 bytes, RapidScanInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RSI_DecodeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[57605ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[3885928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeGet
</UL>

<P><STRONG><a name="[5764314]"></a>RSI_DecodeSet</STRONG> (ARM, 3140 bytes, Stack size 32 bytes, RapidScanInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RSI_DecodeSet
</UL>
<BR>[Calls]<UL><LI><a href="#[57604f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Set
<LI><a href="#[57605ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[5764440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupWindow
</UL>

<P><STRONG><a name="[4c70878]"></a>_Z13HuffmanEncodeP7HSTRINGi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, compression.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[4c708b4]"></a>_Z13HuffmanDecodeP7HSTRING</STRONG> (ARM, 8 bytes, Stack size 0 bytes, compression.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
</UL>

<P><STRONG><a name="[575f670]"></a>_Z8LZEncodeP7HSTRING</STRONG> (ARM, 8 bytes, Stack size 0 bytes, compression.o(.text), UNUSED)

<P><STRONG><a name="[575f634]"></a>_Z8LZDecodeP7HSTRING</STRONG> (ARM, 8 bytes, Stack size 0 bytes, compression.o(.text), UNUSED)

<P><STRONG><a name="[575f5f8]"></a>_Z15JPEGLossyEncodeP7HSTRINGiiiiii</STRONG> (ARM, 596 bytes, Stack size 536 bytes, compression.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[41fa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING13MaximumLengthEv
<LI><a href="#[575f01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_write_scanlines
<LI><a href="#[575f058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_stdio_dest
<LI><a href="#[575f094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_std_error
<LI><a href="#[575f0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_compress
<LI><a href="#[575f10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_quality
<LI><a href="#[575f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_defaults
<LI><a href="#[575f184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_compressed_buffer_len
<LI><a href="#[575f1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_compressed_buffer
<LI><a href="#[575f1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_finish_compress
<LI><a href="#[575f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy_compress
<LI><a href="#[575f274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateCompress
</UL>
<BR>[Called By]<UL><LI><a href="#[4c708f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGi
<LI><a href="#[570a2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGiiiiiii
<LI><a href="#[575f490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGii
</UL>

<P><STRONG><a name="[575f5bc]"></a>_Z15JPEGLossyDecodeP7HSTRINGiPiS1_b</STRONG> (ARM, 8 bytes, Stack size 0 bytes, compression.o(.text), UNUSED)

<P><STRONG><a name="[575f580]"></a>_Z12ZLibCompressP7HSTRINGii</STRONG> (ARM, 312 bytes, Stack size 120 bytes, compression.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = _Z12ZLibCompressP7HSTRINGii &rArr; deflate &rArr; _tr_stored_block &rArr; copy_block &rArr; bi_windup
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[41fa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING13MaximumLengthEv
<LI><a href="#[575f364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateInit2_
<LI><a href="#[575f3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateEnd
<LI><a href="#[575f3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate
</UL>
<BR>[Called By]<UL><LI><a href="#[4c708f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGi
<LI><a href="#[570a2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGiiiiiii
<LI><a href="#[575f490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CompressDataP7HSTRINGii
</UL>

<P><STRONG><a name="[575f544]"></a>_Z14ZLibDecompressP7HSTRINGi</STRONG> (ARM, 416 bytes, Stack size 104 bytes, compression.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _Z14ZLibDecompressP7HSTRINGi &rArr; inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb
<LI><a href="#[41fa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING13MaximumLengthEv
<LI><a href="#[575f2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateInit_
<LI><a href="#[575f2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateEnd
<LI><a href="#[575f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>
<BR>[Called By]<UL><LI><a href="#[575f454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14DecompressDataP7HSTRINGiPiS1_bi
</UL>

<P><STRONG><a name="[575f508]"></a>_Z14LZOLibCompressP7HSTRING</STRONG> (ARM, 8 bytes, Stack size 0 bytes, compression.o(.text), UNUSED)

<P><STRONG><a name="[575f4cc]"></a>_Z16LZOLibDecompressP7HSTRING</STRONG> (ARM, 8 bytes, Stack size 0 bytes, compression.o(.text), UNUSED)

<P><STRONG><a name="[4c708f0]"></a>_Z12CompressDataP7HSTRINGi</STRONG> (ARM, 164 bytes, Stack size 16 bytes, compression.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = _Z12CompressDataP7HSTRINGi &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[54da1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM17TransmitProcessorEPhjS0_jbbj
</UL>

<P><STRONG><a name="[575f490]"></a>_Z12CompressDataP7HSTRINGii</STRONG> (ARM, 164 bytes, Stack size 16 bytes, compression.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[570a2a4]"></a>_Z12CompressDataP7HSTRINGiiiiiii</STRONG> (ARM, 140 bytes, Stack size 24 bytes, compression.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = _Z12CompressDataP7HSTRINGiiiiiii &rArr; _Z15JPEGLossyEncodeP7HSTRINGiiiiii &rArr; jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>
<BR>[Called By]<UL><LI><a href="#[41fe568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FormatImageEi
</UL>

<P><STRONG><a name="[575f454]"></a>_Z14DecompressDataP7HSTRINGiPiS1_bi</STRONG> (ARM, 96 bytes, Stack size 8 bytes, compression.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _Z14DecompressDataP7HSTRINGiPiS1_bi &rArr; _Z14ZLibDecompressP7HSTRINGi &rArr; inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7083c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14DecompressDataP7HSTRINGibi
</UL>

<P><STRONG><a name="[4c7083c]"></a>_Z14DecompressDataP7HSTRINGibi</STRONG> (ARM, 28 bytes, Stack size 24 bytes, compression.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _Z14DecompressDataP7HSTRINGibi &rArr; _Z14DecompressDataP7HSTRINGiPiS1_bi &rArr; _Z14ZLibDecompressP7HSTRINGi &rArr; inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[575f454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14DecompressDataP7HSTRINGiPiS1_bi
</UL>
<BR>[Called By]<UL><LI><a href="#[4c70b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15HHPL_IMAGE_DATA9LoadImageEP7HSTRING
<LI><a href="#[54da194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HMODEM16ReceiveProcessorEPhPjP7HSTRINGjPFbS3_E
</UL>

<P><STRONG><a name="[575e680]"></a>GetImageCoreRevision</STRONG> (ARM, 24 bytes, Stack size 8 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575e644]"></a>ic_BiCubicInterpolation</STRONG> (ARM, 312 bytes, Stack size 48 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575d8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Distortion
<LI><a href="#[575db04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Distortion0
<LI><a href="#[575de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_Transmute
</UL>

<P><STRONG><a name="[575e608]"></a>ic_subpixel</STRONG> (ARM, 92 bytes, Stack size 12 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575e5cc]"></a>ic_BiLinearInterpolation</STRONG> (ARM, 464 bytes, Stack size 80 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575e590]"></a>ImageCopy</STRONG> (ARM, 32 bytes, Stack size 0 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[3ea4a28]"></a>ToGray</STRONG> (ARM, 1740 bytes, Stack size 72 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ToGray &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
<LI><a href="#[41fac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FissionImageEv
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
<LI><a href="#[5708bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHistogram
<LI><a href="#[5708be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SharpenEdges
<LI><a href="#[5708c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotateImage
<LI><a href="#[5708c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramStretch
<LI><a href="#[5708cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GammaCorrection
<LI><a href="#[5708d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlySpeck
<LI><a href="#[5708d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CropImage
<LI><a href="#[5708dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompensateImage
<LI><a href="#[5708e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdaptiveUltraText
<LI><a href="#[575d8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Distortion
<LI><a href="#[575d924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vignette
<LI><a href="#[575da14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MirrorImage
<LI><a href="#[575da50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlipImage
<LI><a href="#[575da8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResizeImage
<LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
<LI><a href="#[575db40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoTwoTone
<LI><a href="#[575db7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelSkip
<LI><a href="#[575de4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sobel
<LI><a href="#[575e02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Difference
<LI><a href="#[575e068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeWhiteValue
<LI><a href="#[575e0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoTone
<LI><a href="#[575e0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Magic
<LI><a href="#[575e11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynamicTwoTone
<LI><a href="#[575e158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemiGauss
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
<LI><a href="#[575e3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramEqualize
<LI><a href="#[575e428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rank
<LI><a href="#[575e464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnSharp
<LI><a href="#[575e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpMask
</UL>

<P><STRONG><a name="[3ea49ec]"></a>ToRGB</STRONG> (ARM, 976 bytes, Stack size 96 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestructMonoColorEngine
<LI><a href="#[575d834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertMonoColorImage
<LI><a href="#[575d870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConstructMonoColorEngine
<LI><a href="#[575d8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureMonoColorEngine
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1b300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FusionImageDataPhPmS0_
<LI><a href="#[41facb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11FusionImageEv
<LI><a href="#[41fe964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21RawImageShipWithParami
<LI><a href="#[5708bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHistogram
<LI><a href="#[5708be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SharpenEdges
<LI><a href="#[5708c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotateImage
<LI><a href="#[5708c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramStretch
<LI><a href="#[5708cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GammaCorrection
<LI><a href="#[5708d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlySpeck
<LI><a href="#[5708d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CropImage
<LI><a href="#[575d8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Distortion
<LI><a href="#[575d924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vignette
<LI><a href="#[575da14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MirrorImage
<LI><a href="#[575da50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlipImage
<LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
<LI><a href="#[575db7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelSkip
<LI><a href="#[575de4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sobel
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
<LI><a href="#[575e3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramEqualize
<LI><a href="#[575e464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnSharp
<LI><a href="#[575e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpMask
</UL>

<P><STRONG><a name="[5708cd8]"></a>GammaCorrection</STRONG> (ARM, 464 bytes, Stack size 1096 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3088 + Unknown Stack Size
<LI>Call Chain = GammaCorrection &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[41facec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE10GammaImageEi
</UL>

<P><STRONG><a name="[575e554]"></a>gen_lookup_table</STRONG> (ARM, 100 bytes, Stack size 32 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[575e518]"></a>gen_convolve_matrix</STRONG> (ARM, 852 bytes, Stack size 96 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[575e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpMask
</UL>

<P><STRONG><a name="[575e4dc]"></a>blur_line</STRONG> (ARM, 960 bytes, Stack size 80 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpMask
</UL>

<P><STRONG><a name="[575e4a0]"></a>UnsharpMask</STRONG> (ARM, 1572 bytes, Stack size 136 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575e4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blur_line
<LI><a href="#[575e518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_convolve_matrix
</UL>

<P><STRONG><a name="[575e464]"></a>UnSharp</STRONG> (ARM, 448 bytes, Stack size 40 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[5708b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpAndBrighten
</UL>

<P><STRONG><a name="[575e428]"></a>Rank</STRONG> (ARM, 756 bytes, Stack size 80 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[575e3ec]"></a>HistogramEqualize</STRONG> (ARM, 452 bytes, Stack size 1080 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[5708c9c]"></a>HistogramStretch</STRONG> (ARM, 592 bytes, Stack size 1080 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3072 + Unknown Stack Size
<LI>Call Chain = HistogramStretch &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[41fabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12StretchImageEv
<LI><a href="#[5708b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnsharpAndBrighten
</UL>

<P><STRONG><a name="[575e3b0]"></a>ic_CopyForConvolve</STRONG> (ARM, 488 bytes, Stack size 24 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ic_CopyForConvolve &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[575df00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderStatisticFilter
<LI><a href="#[575e2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImageAdaptive
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
<LI><a href="#[575e374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BiConvolveImage
</UL>

<P><STRONG><a name="[575e374]"></a>BiConvolveImage</STRONG> (ARM, 400 bytes, Stack size 88 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[575e3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CopyForConvolve
</UL>
<BR>[Called By]<UL><LI><a href="#[575e248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoneFilter
</UL>

<P><STRONG><a name="[575e338]"></a>ic_ConvolveImage</STRONG> (ARM, 2128 bytes, Stack size 152 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2144 + Unknown Stack Size
<LI>Call Chain = ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575e3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CopyForConvolve
</UL>
<BR>[Called By]<UL><LI><a href="#[5708c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfinityFilter
<LI><a href="#[5708d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DocumentFilter
<LI><a href="#[5708e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blur
<LI><a href="#[575de88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GaussianBlur
<LI><a href="#[575e284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average
<LI><a href="#[575e2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Threshold
<LI><a href="#[575e2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImageAdaptive
</UL>

<P><STRONG><a name="[575e2fc]"></a>ic_ConvolveImageAdaptive</STRONG> (ARM, 1292 bytes, Stack size 304 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2448 + Unknown Stack Size
<LI>Call Chain = ic_ConvolveImageAdaptive &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
<LI><a href="#[575e3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CopyForConvolve
</UL>
<BR>[Called By]<UL><LI><a href="#[5708e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdaptiveUltraText
</UL>

<P><STRONG><a name="[575e2c0]"></a>Threshold</STRONG> (ARM, 96 bytes, Stack size 136 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
</UL>

<P><STRONG><a name="[5708be8]"></a>SharpenEdges</STRONG> (ARM, 1172 bytes, Stack size 25896 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 27888 + Unknown Stack Size
<LI>Call Chain = SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[41faa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE16EdgeSharpenImageEi
</UL>

<P><STRONG><a name="[575e284]"></a>Average</STRONG> (ARM, 120 bytes, Stack size 80 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
</UL>

<P><STRONG><a name="[5708d50]"></a>DocumentFilter</STRONG> (ARM, 136 bytes, Stack size 88 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2232 + Unknown Stack Size
<LI>Call Chain = DocumentFilter &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
</UL>
<BR>[Called By]<UL><LI><a href="#[41faa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14UltraTextImageEv
</UL>

<P><STRONG><a name="[5708e40]"></a>AdaptiveUltraText</STRONG> (ARM, 248 bytes, Stack size 112 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2560 + Unknown Stack Size
<LI>Call Chain = AdaptiveUltraText &rArr; ic_ConvolveImageAdaptive &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575e2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImageAdaptive
</UL>
<BR>[Called By]<UL><LI><a href="#[41fa9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE22AdaptiveUltraTextImageEv
</UL>

<P><STRONG><a name="[575e248]"></a>HoneFilter</STRONG> (ARM, 172 bytes, Stack size 80 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575e374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BiConvolveImage
</UL>

<P><STRONG><a name="[5708c60]"></a>InfinityFilter</STRONG> (ARM, 96 bytes, Stack size 360 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2504 + Unknown Stack Size
<LI>Call Chain = InfinityFilter &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
</UL>
<BR>[Called By]<UL><LI><a href="#[41faa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE19InfinityFilterImageEv
</UL>

<P><STRONG><a name="[5708bac]"></a>ShowHistogram</STRONG> (ARM, 1004 bytes, Stack size 1096 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3088 + Unknown Stack Size
<LI>Call Chain = ShowHistogram &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[41fab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE14HistogramImageEv
</UL>

<P><STRONG><a name="[575e20c]"></a>ic_linear_regression</STRONG> (ARM, 268 bytes, Stack size 56 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575e1d0]"></a>init_kernel</STRONG> (ARM, 244 bytes, Stack size 40 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemiGauss
</UL>

<P><STRONG><a name="[575e194]"></a>kernelmult</STRONG> (ARM, 380 bytes, Stack size 72 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemiGauss
</UL>

<P><STRONG><a name="[575e158]"></a>SemiGauss</STRONG> (ARM, 304 bytes, Stack size 56 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575e194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kernelmult
<LI><a href="#[575e1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_kernel
</UL>

<P><STRONG><a name="[575e11c]"></a>DynamicTwoTone</STRONG> (ARM, 2312 bytes, Stack size 240 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[575e0e0]"></a>Magic</STRONG> (ARM, 3760 bytes, Stack size 184 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[575e0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoTone
</UL>

<P><STRONG><a name="[575e0a4]"></a>TwoTone</STRONG> (ARM, 2332 bytes, Stack size 248 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575e0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Magic
</UL>

<P><STRONG><a name="[575e068]"></a>ComputeWhiteValue</STRONG> (ARM, 504 bytes, Stack size 1056 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[5708d14]"></a>FlySpeck</STRONG> (ARM, 1256 bytes, Stack size 56 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2048 + Unknown Stack Size
<LI>Call Chain = FlySpeck &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[41fab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE13FlySpeckImageEv
</UL>

<P><STRONG><a name="[575e02c]"></a>Difference</STRONG> (ARM, 232 bytes, Stack size 24 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[575dff0]"></a>Ones</STRONG> (ARM, 72 bytes, Stack size 8 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575dfb4]"></a>OnesShape</STRONG> (ARM, 356 bytes, Stack size 24 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575df78]"></a>Malloc2DMat</STRONG> (ARM, 108 bytes, Stack size 24 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[575df3c]"></a>Free2DMat</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[575df00]"></a>OrderStatisticFilter</STRONG> (ARM, 552 bytes, Stack size 1128 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[575e3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CopyForConvolve
</UL>

<P><STRONG><a name="[575dec4]"></a>gauss_kernel</STRONG> (ARM, 528 bytes, Stack size 96 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gauss_kernel
</UL>
<BR>[Called By]<UL><LI><a href="#[5708e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blur
<LI><a href="#[575de88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GaussianBlur
</UL>

<P><STRONG><a name="[575de88]"></a>GaussianBlur</STRONG> (ARM, 156 bytes, Stack size 56 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575dec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauss_kernel
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
</UL>

<P><STRONG><a name="[575de4c]"></a>Sobel</STRONG> (ARM, 784 bytes, Stack size 136 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[5708b70]"></a>UnsharpAndBrighten</STRONG> (ARM, 80 bytes, Stack size 48 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5708c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistogramStretch
<LI><a href="#[575e464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnSharp
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[575de10]"></a>ic_Transmute</STRONG> (ARM, 588 bytes, Stack size 104 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_BiCubicInterpolation
</UL>
<BR>[Called By]<UL><LI><a href="#[575da8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResizeImage
<LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
</UL>

<P><STRONG><a name="[575ddd4]"></a>PointSpread</STRONG> (ARM, 156 bytes, Stack size 56 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575dd98]"></a>SetRail</STRONG> (ARM, 148 bytes, Stack size 8 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearestPnts
</UL>

<P><STRONG><a name="[575dd5c]"></a>Ahead</STRONG> (ARM, 164 bytes, Stack size 4 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosestPnt
</UL>

<P><STRONG><a name="[575dd20]"></a>Back</STRONG> (ARM, 148 bytes, Stack size 0 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosestPnt
</UL>

<P><STRONG><a name="[575dce4]"></a>DoAutoCrop</STRONG> (ARM, 3016 bytes, Stack size 1752 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[575e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearestPnts
<LI><a href="#[575e89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImgOutLine
<LI><a href="#[575e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResBit
<LI><a href="#[575e9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EglOutLine
<LI><a href="#[575ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleImage
<LI><a href="#[575ea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EstablishWorkspace
<LI><a href="#[575eab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transform
</UL>

<P><STRONG><a name="[575dca8]"></a>DoAutoCropMod</STRONG> (ARM, 5936 bytes, Stack size 10104 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearestPnts
<LI><a href="#[575e89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImgOutLine
<LI><a href="#[575e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResBit
<LI><a href="#[575e9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EglOutLine
<LI><a href="#[575ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleImage
<LI><a href="#[575ea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EstablishWorkspace
<LI><a href="#[575eab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
</UL>

<P><STRONG><a name="[575dc6c]"></a>label</STRONG> (ARM, 2792 bytes, Stack size 112 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
<LI><a href="#[575dbf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentLargest
</UL>

<P><STRONG><a name="[575dc30]"></a>LocateSpot</STRONG> (ARM, 1116 bytes, Stack size 160 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sum9Pixels
</UL>
<BR>[Called By]<UL><LI><a href="#[575dbf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentLargest
</UL>

<P><STRONG><a name="[575dbf4]"></a>segmentLargest</STRONG> (ARM, 6472 bytes, Stack size 304 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575dc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocateSpot
<LI><a href="#[575dc6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label
</UL>
<BR>[Called By]<UL><LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
</UL>

<P><STRONG><a name="[575dbb8]"></a>invertUInt8</STRONG> (ARM, 208 bytes, Stack size 8 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575db7c]"></a>PixelSkip</STRONG> (ARM, 476 bytes, Stack size 56 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
</UL>

<P><STRONG><a name="[575db40]"></a>autoTwoTone</STRONG> (ARM, 2436 bytes, Stack size 248 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
</UL>

<P><STRONG><a name="[575db04]"></a>Distortion0</STRONG> (ARM, 412 bytes, Stack size 80 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_BiCubicInterpolation
</UL>
<BR>[Called By]<UL><LI><a href="#[575dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCrop
</UL>

<P><STRONG><a name="[575dac8]"></a>AutoCrop</STRONG> (ARM, 1292 bytes, Stack size 424 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575db04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Distortion0
<LI><a href="#[575db40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoTwoTone
<LI><a href="#[575db7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelSkip
<LI><a href="#[575dbf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentLargest
<LI><a href="#[575dc6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label
<LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_Transmute
</UL>

<P><STRONG><a name="[575da8c]"></a>ResizeImage</STRONG> (ARM, 256 bytes, Stack size 88 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_Transmute
</UL>

<P><STRONG><a name="[5708c24]"></a>RotateImage</STRONG> (ARM, 772 bytes, Stack size 40 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = RotateImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL><LI><a href="#[41fac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE11ImageRotateEi
</UL>

<P><STRONG><a name="[575da50]"></a>FlipImage</STRONG> (ARM, 484 bytes, Stack size 56 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[575da14]"></a>MirrorImage</STRONG> (ARM, 472 bytes, Stack size 48 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[5708d8c]"></a>CropImage</STRONG> (ARM, 476 bytes, Stack size 48 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[575d9d8]"></a>ic_CreateCompensateThresholds</STRONG> (ARM, 1444 bytes, Stack size 64 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936 + Unknown Stack Size
<LI>Call Chain = ic_CreateCompensateThresholds &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5708dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompensateImage
</UL>

<P><STRONG><a name="[575d99c]"></a>ic_PixelCompensate</STRONG> (ARM, 36 bytes, Stack size 0 bytes, ImageCore.o(.text), UNUSED)

<P><STRONG><a name="[575d960]"></a>ic_FreeCompensateBuffers</STRONG> (ARM, 28 bytes, Stack size 8 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[5708dc8]"></a>CompensateImage</STRONG> (ARM, 260 bytes, Stack size 40 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = CompensateImage &rArr; ic_CreateCompensateThresholds &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575d9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_CreateCompensateThresholds
</UL>
<BR>[Called By]<UL><LI><a href="#[41fabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE12FlattenImageEv
</UL>

<P><STRONG><a name="[5708e04]"></a>Blur</STRONG> (ARM, 140 bytes, Stack size 48 bytes, ImageCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2192 + Unknown Stack Size
<LI>Call Chain = Blur &rArr; ic_ConvolveImage &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575dec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauss_kernel
<LI><a href="#[575e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_ConvolveImage
</UL>
<BR>[Called By]<UL><LI><a href="#[41fa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6HIMAGE9SmoothingEv
</UL>

<P><STRONG><a name="[575d924]"></a>Vignette</STRONG> (ARM, 1024 bytes, Stack size 1096 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
</UL>

<P><STRONG><a name="[575d8e8]"></a>Distortion</STRONG> (ARM, 712 bytes, Stack size 88 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
<LI><a href="#[3ea4a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToGray
<LI><a href="#[575e644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ic_BiCubicInterpolation
</UL>

<P><STRONG><a name="[575ca9c]"></a>SD_ComputeAGC</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S002.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
<LI><a href="#[575d3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000132cLc40x68
</UL>

<P><STRONG><a name="[5761a10]"></a>SD_Decode</STRONG> (ARM, 164 bytes, Stack size 192 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3440 + Unknown Stack Size
<LI>Call Chain = SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575c970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000000Gb153Data0x2f4
<LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
<LI><a href="#[575d1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A452B
<LI><a href="#[575d3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000132cLc40x68
</UL>
<BR>[Called By]<UL><LI><a href="#[57641ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_Decode
</UL>

<P><STRONG><a name="[575ca60]"></a>SD_PrivateFunction1</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S002.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
<LI><a href="#[575d3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000132cLc40x68
</UL>

<P><STRONG><a name="[575ca24]"></a>SD_ProgressiveDecode</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S002.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
<LI><a href="#[575d3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000132cLc40x68
</UL>

<P><STRONG><a name="[5761a4c]"></a>SD_Create</STRONG> (ARM, 196 bytes, Stack size 24 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12112 + Unknown Stack Size
<LI>Call Chain = SD_Create &rArr; SymLoc00000e88Lc40xec &rArr; SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000388Gb153Data0x90
<LI><a href="#[575d1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000e88Lc40xec
</UL>
<BR>[Called By]<UL><LI><a href="#[57640bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_InitDecoder
</UL>

<P><STRONG><a name="[57619d4]"></a>SD_Destroy</STRONG> (ARM, 56 bytes, Stack size 8 bytes, S002.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082867
<LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
<LI><a href="#[575d3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000132cLc40x68
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[576195c]"></a>SD_GetLastError</STRONG> (ARM, 12 bytes, Stack size 0 bytes, S002.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57621cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14FillResultInfoi
<LI><a href="#[57640f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_GetLastDecoderError
</UL>

<P><STRONG><a name="[5761998]"></a>SD_Get</STRONG> (ARM, 588 bytes, Stack size 40 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
<LI><a href="#[575d3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000132cLc40x68
</UL>
<BR>[Called By]<UL><LI><a href="#[57621cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14FillResultInfoi
<LI><a href="#[5764008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ReportDecoderVersion
<LI><a href="#[5764134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeSet
<LI><a href="#[5764170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeGet
</UL>

<P><STRONG><a name="[5761920]"></a>SD_Set</STRONG> (ARM, 500 bytes, Stack size 40 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
<LI><a href="#[575d3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000132cLc40x68
</UL>
<BR>[Called By]<UL><LI><a href="#[5762244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CheckAddendav
<LI><a href="#[5763fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_StopDecode
<LI><a href="#[5764044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_PauseDecode
<LI><a href="#[5764080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_InstallCallback
<LI><a href="#[57640bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_InitDecoder
<LI><a href="#[5764134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeSet
<LI><a href="#[57641ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_Decode
<LI><a href="#[57641e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ContinueDecode
</UL>

<P><STRONG><a name="[58dd230]"></a>RS_EstablishDecoder</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rapidscan.o(.text), UNUSED)

<P><STRONG><a name="[57605e8]"></a>RS_Destroy</STRONG> (ARM, 4 bytes, Stack size 0 bytes, rapidscan.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5760660]"></a>RS_Create</STRONG> (ARM, 68 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[576429c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_InitDecoder
</UL>

<P><STRONG><a name="[5760624]"></a>RS_Decode</STRONG> (ARM, 160 bytes, Stack size 16 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = RS_Decode &rArr; FastRead &rArr; FastDecode &rArr; FastUpcEan &rArr; ProcessUpcEan &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastRead
</UL>
<BR>[Called By]<UL><LI><a href="#[576438c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_Decode
</UL>

<P><STRONG><a name="[57604f8]"></a>RS_Set</STRONG> (ARM, 1184 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5764260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_InstallCallback
<LI><a href="#[576429c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_InitDecoder
<LI><a href="#[5764314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_DecodeSet
</UL>

<P><STRONG><a name="[57605ac]"></a>RS_Get</STRONG> (ARM, 2908 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5760b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14FillResultInfoP15RS_DecodeResult
<LI><a href="#[5764314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_DecodeSet
<LI><a href="#[5764350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_DecodeGet
</UL>

<P><STRONG><a name="[5760534]"></a>RS_Reset</STRONG> (ARM, 8 bytes, Stack size 0 bytes, rapidscan.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5760570]"></a>RS_ReportDecoderVersion</STRONG> (ARM, 108 bytes, Stack size 88 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RS_ReportDecoderVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[5764224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_ReportDecoderVersion
</UL>

<P><STRONG><a name="[58dc36c]"></a>deflateReset</STRONG> (ARM, 144 bytes, Stack size 8 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = deflateReset &rArr; lm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[58dc150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_init
<LI><a href="#[58dcc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[575f364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateInit2_
</UL>

<P><STRONG><a name="[575f3a0]"></a>deflateEnd</STRONG> (ARM, 180 bytes, Stack size 16 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = deflateEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[575f364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateInit2_
<LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[58dc27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateCopy
</UL>

<P><STRONG><a name="[575f364]"></a>deflateInit2_</STRONG> (ARM, 564 bytes, Stack size 32 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = deflateInit2_ &rArr; deflateReset &rArr; lm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[575f3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateEnd
<LI><a href="#[58dc36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateReset
</UL>
<BR>[Called By]<UL><LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[58dc330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateInit_
</UL>

<P><STRONG><a name="[58dc330]"></a>deflateInit_</STRONG> (ARM, 52 bytes, Stack size 24 bytes, deflate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575f364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateInit2_
</UL>

<P><STRONG><a name="[58dc2f4]"></a>deflateSetDictionary</STRONG> (ARM, 296 bytes, Stack size 32 bytes, deflate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58dc0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adler32
</UL>

<P><STRONG><a name="[575f3dc]"></a>deflate</STRONG> (ARM, 732 bytes, Stack size 32 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = deflate &rArr; _tr_stored_block &rArr; copy_block &rArr; bi_windup
</UL>
<BR>[Calls]<UL><LI><a href="#[58dc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_stored_block
<LI><a href="#[58dc1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_align
<LI><a href="#[58dcc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putShortMSB
<LI><a href="#[58dcdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_pending
</UL>
<BR>[Called By]<UL><LI><a href="#[575f580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12ZLibCompressP7HSTRINGii
<LI><a href="#[58dc2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateParams
</UL>

<P><STRONG><a name="[58dc2b8]"></a>deflateParams</STRONG> (ARM, 196 bytes, Stack size 24 bytes, deflate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575f3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate
</UL>

<P><STRONG><a name="[58dc27c]"></a>deflateCopy</STRONG> (ARM, 420 bytes, Stack size 24 bytes, deflate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575f3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateEnd
</UL>

<P><STRONG><a name="[58dba84]"></a>inflateReset</STRONG> (ARM, 88 bytes, Stack size 8 bytes, inflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = inflateReset &rArr; inflate_blocks_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[58db8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[58db9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateSync
<LI><a href="#[58dba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateInit2_
</UL>

<P><STRONG><a name="[575f2ec]"></a>inflateEnd</STRONG> (ARM, 76 bytes, Stack size 8 bytes, inflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inflateEnd &rArr; inflate_blocks_free &rArr; inflate_blocks_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[58db91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_free
</UL>
<BR>[Called By]<UL><LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
<LI><a href="#[58dba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateInit2_
</UL>

<P><STRONG><a name="[58dba48]"></a>inflateInit2_</STRONG> (ARM, 280 bytes, Stack size 16 bytes, inflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = inflateInit2_ &rArr; inflateEnd &rArr; inflate_blocks_free &rArr; inflate_blocks_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[575f2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateEnd
<LI><a href="#[58db8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_new
<LI><a href="#[58dba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateReset
</UL>
<BR>[Called By]<UL><LI><a href="#[575f2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateInit_
</UL>

<P><STRONG><a name="[575f2b0]"></a>inflateInit_</STRONG> (ARM, 16 bytes, Stack size 0 bytes, inflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = inflateInit_ &rArr; inflateInit2_ &rArr; inflateEnd &rArr; inflate_blocks_free &rArr; inflate_blocks_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[58dba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateInit2_
</UL>
<BR>[Called By]<UL><LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
</UL>

<P><STRONG><a name="[575f328]"></a>inflate</STRONG> (ARM, 1308 bytes, Stack size 40 bytes, inflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = inflate &rArr; inflate_blocks
</UL>
<BR>[Calls]<UL><LI><a href="#[58db8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_reset
<LI><a href="#[58db958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks
</UL>
<BR>[Called By]<UL><LI><a href="#[575f544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ZLibDecompressP7HSTRINGi
</UL>

<P><STRONG><a name="[58dba0c]"></a>inflateSetDictionary</STRONG> (ARM, 156 bytes, Stack size 24 bytes, inflate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58db82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_set_dictionary
<LI><a href="#[58dc0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adler32
</UL>

<P><STRONG><a name="[58db9d0]"></a>inflateSync</STRONG> (ARM, 220 bytes, Stack size 16 bytes, inflate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58dba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateReset
</UL>

<P><STRONG><a name="[58db994]"></a>inflateSyncPoint</STRONG> (ARM, 32 bytes, Stack size 0 bytes, inflate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58db868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_sync_point
</UL>

<P><STRONG><a name="[575f274]"></a>jpeg_CreateCompress</STRONG> (ARM, 264 bytes, Stack size 24 bytes, jcapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = jpeg_CreateCompress &rArr; jinit_memory_mgr
</UL>
<BR>[Calls]<UL><LI><a href="#[58da92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
<LI><a href="#[5dd2e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[575f238]"></a>jpeg_destroy_compress</STRONG> (ARM, 4 bytes, Stack size 0 bytes, jcapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_destroy_compress &rArr; jpeg_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[58da8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[58daad0]"></a>jpeg_abort_compress</STRONG> (ARM, 4 bytes, Stack size 0 bytes, jcapimin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58da8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort
</UL>

<P><STRONG><a name="[58daa94]"></a>jpeg_suppress_tables</STRONG> (ARM, 80 bytes, Stack size 0 bytes, jcapimin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575f0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_compress
</UL>

<P><STRONG><a name="[575f1fc]"></a>jpeg_finish_compress</STRONG> (ARM, 332 bytes, Stack size 16 bytes, jcapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jpeg_finish_compress &rArr; jpeg_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[58da8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[58daa58]"></a>jpeg_write_marker</STRONG> (ARM, 164 bytes, Stack size 24 bytes, jcapimin.o(.text), UNUSED)

<P><STRONG><a name="[58daa1c]"></a>jpeg_write_m_header</STRONG> (ARM, 116 bytes, Stack size 16 bytes, jcapimin.o(.text), UNUSED)

<P><STRONG><a name="[58da9e0]"></a>jpeg_write_m_byte</STRONG> (ARM, 12 bytes, Stack size 0 bytes, jcapimin.o(.text), UNUSED)

<P><STRONG><a name="[58da9a4]"></a>jpeg_write_tables</STRONG> (ARM, 136 bytes, Stack size 8 bytes, jcapimin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58da968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_marker_writer
</UL>

<P><STRONG><a name="[575f0d0]"></a>jpeg_start_compress</STRONG> (ARM, 168 bytes, Stack size 16 bytes, JCAPISTD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = jpeg_start_compress &rArr; jinit_compress_master &rArr; jinit_c_coef_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
<LI><a href="#[58daa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_suppress_tables
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[575f01c]"></a>jpeg_write_scanlines</STRONG> (ARM, 264 bytes, Stack size 24 bytes, JCAPISTD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jpeg_write_scanlines
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[58da530]"></a>jpeg_write_raw_data</STRONG> (ARM, 284 bytes, Stack size 24 bytes, JCAPISTD.o(.text), UNUSED)

<P><STRONG><a name="[58d9db0]"></a>jpeg_add_quant_table</STRONG> (ARM, 252 bytes, Stack size 32 bytes, JCPARAM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[58d9c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_quant_table
</UL>
<BR>[Called By]<UL><LI><a href="#[58d9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_linear_quality
</UL>

<P><STRONG><a name="[58d9d74]"></a>jpeg_set_linear_quality</STRONG> (ARM, 64 bytes, Stack size 24 bytes, JCPARAM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[58d9db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_add_quant_table
</UL>
<BR>[Called By]<UL><LI><a href="#[575f10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_quality
</UL>

<P><STRONG><a name="[58d9d38]"></a>jpeg_quality_scaling</STRONG> (ARM, 60 bytes, Stack size 0 bytes, JCPARAM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575f10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_quality
</UL>

<P><STRONG><a name="[575f10c]"></a>jpeg_set_quality</STRONG> (ARM, 40 bytes, Stack size 16 bytes, JCPARAM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[58d9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_quality_scaling
<LI><a href="#[58d9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_linear_quality
</UL>
<BR>[Called By]<UL><LI><a href="#[575f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_defaults
<LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[58d9cfc]"></a>jpeg_set_colorspace</STRONG> (ARM, 796 bytes, Stack size 24 bytes, JCPARAM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jpeg_set_colorspace
</UL>
<BR>[Called By]<UL><LI><a href="#[58d9cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_default_colorspace
</UL>

<P><STRONG><a name="[58d9cc0]"></a>jpeg_default_colorspace</STRONG> (ARM, 104 bytes, Stack size 0 bytes, JCPARAM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jpeg_default_colorspace &rArr; jpeg_set_colorspace
</UL>
<BR>[Calls]<UL><LI><a href="#[58d9cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_colorspace
</UL>
<BR>[Called By]<UL><LI><a href="#[575f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_defaults
</UL>

<P><STRONG><a name="[575f148]"></a>jpeg_set_defaults</STRONG> (ARM, 332 bytes, Stack size 8 bytes, JCPARAM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = jpeg_set_defaults &rArr; jpeg_set_quality &rArr; jpeg_set_linear_quality &rArr; jpeg_add_quant_table &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[575f10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_quality
<LI><a href="#[58d9cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_default_colorspace
<LI><a href="#[58d9fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_huff_table
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[58d9c84]"></a>jpeg_simple_progression</STRONG> (ARM, 596 bytes, Stack size 24 bytes, JCPARAM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_scans
<LI><a href="#[58d9f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_a_scan
<LI><a href="#[58d9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_dc_scans
</UL>

<P><STRONG><a name="[575f058]"></a>jpeg_stdio_dest</STRONG> (ARM, 96 bytes, Stack size 16 bytes, Jdatadst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_stdio_dest
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[575f1c0]"></a>jpeg_get_compressed_buffer</STRONG> (ARM, 56 bytes, Stack size 8 bytes, Jdatadst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_get_compressed_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[575f184]"></a>jpeg_get_compressed_buffer_len</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Jdatadst.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[575f094]"></a>jpeg_std_error</STRONG> (ARM, 88 bytes, Stack size 0 bytes, JERROR.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575f5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15JPEGLossyEncodeP7HSTRINGiiiiii
</UL>

<P><STRONG><a name="[58d89c4]"></a>GetRequiredWorkSPMemeory</STRONG> (ARM, 16 bytes, Stack size 0 bytes, MonoColorImplementation.o(.text), UNUSED)

<P><STRONG><a name="[58d8988]"></a>monoColorInit</STRONG> (ARM, 96 bytes, Stack size 0 bytes, MonoColorImplementation.o(.text), UNUSED)

<P><STRONG><a name="[575d870]"></a>ConstructMonoColorEngine</STRONG> (ARM, 156 bytes, Stack size 24 bytes, MonoColorImplementation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ConstructMonoColorEngine &rArr; MC_malloc &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d8820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
</UL>

<P><STRONG><a name="[575d834]"></a>ConvertMonoColorImage</STRONG> (ARM, 16 bytes, Stack size 0 bytes, MonoColorImplementation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d87e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMonoColorImage
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
</UL>

<P><STRONG><a name="[575d7f8]"></a>DestructMonoColorEngine</STRONG> (ARM, 68 bytes, Stack size 16 bytes, MonoColorImplementation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = DestructMonoColorEngine &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d885c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
</UL>

<P><STRONG><a name="[575d8ac]"></a>ConfigureMonoColorEngine</STRONG> (ARM, 160 bytes, Stack size 0 bytes, MonoColorImplementation.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
</UL>

<P><STRONG><a name="[58d894c]"></a>RecoverPartialMonochrome</STRONG> (ARM, 140 bytes, Stack size 16 bytes, MonoColorImplementation.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d8898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpolatePartialMonoSet
</UL>

<P><STRONG><a name="[58d8910]"></a>RecoverCrossShapeMonochrome</STRONG> (ARM, 212 bytes, Stack size 40 bytes, MonoColorImplementation.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d88d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpolateCrossShapeMonoSet
</UL>

<P><STRONG><a name="[58d83e8]"></a>AAAAAAAAAAAA</STRONG> (ARM, 288 bytes, Stack size 56 bytes, S084.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AAAAAAAAAAAA
</UL>
<BR>[Called By]<UL><LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
<LI><a href="#[58d83ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoFission
</UL>

<P><STRONG><a name="[58d83ac]"></a>DoFission</STRONG> (ARM, 20 bytes, Stack size 0 bytes, S084.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d83e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAA
</UL>

<P><STRONG><a name="[58d8370]"></a>SymLocH00011C70</STRONG> (ARM, 204 bytes, Stack size 16 bytes, S084.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = SymLocH00011C70 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[58d7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00013356
<LI><a href="#[58d7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00013084
<LI><a href="#[58d8028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11292966
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[58d8208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAL
</UL>
<BR>[Called By]<UL><LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
</UL>

<P><STRONG><a name="[58d8334]"></a>SyMbOl10132084</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S084.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyMbOl10132084
</UL>
<BR>[Called By]<UL><LI><a href="#[58d6ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_find
<LI><a href="#[58d7650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00076C36
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[5962628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02554473
<LI><a href="#[5962f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDmax_isolation
<LI><a href="#[596a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007C92B
<LI><a href="#[596a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09095808
<LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[596d9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_and_decode
<LI><a href="#[5a2ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E7A4C
<LI><a href="#[5b25634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07241761
<LI><a href="#[5b25fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524L
<LI><a href="#[5b261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524m
<LI><a href="#[5b280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDchoose_best_vector
<LI><a href="#[5b28f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071763
<LI><a href="#[5b2c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000FF8E2
<LI><a href="#[5b87640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E7B45
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
</UL>

<P><STRONG><a name="[58d82f8]"></a>SymLocH000119F0</STRONG> (ARM, 2372 bytes, Stack size 160 bytes, S084.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2120 + Unknown Stack Size
<LI>Call Chain = SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d8064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11246859
<LI><a href="#[58d80dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04809334
<LI><a href="#[58d81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAQ
<LI><a href="#[58d8370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00011C70
<LI><a href="#[58d83e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAA
</UL>
<BR>[Called By]<UL><LI><a href="#[575c970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000000Gb153Data0x2f4
</UL>

<P><STRONG><a name="[575c970]"></a>SymLoc00000000Gb153Data0x2f4</STRONG> (ARM, 40 bytes, Stack size 1128 bytes, S084.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3248 + Unknown Stack Size
<LI>Call Chain = SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
</UL>
<BR>[Called By]<UL><LI><a href="#[5761a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Decode
</UL>

<P><STRONG><a name="[575c934]"></a>SymLoc000002f4Gb153Data0x94</STRONG> (ARM, 192 bytes, Stack size 0 bytes, S084.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575d1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A452B
</UL>

<P><STRONG><a name="[575c8f8]"></a>SymLoc00000388Gb153Data0x90</STRONG> (ARM, 452 bytes, Stack size 8 bytes, S084.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SymLoc00000388Gb153Data0x90 &rArr; SyMbOl03023572
</UL>
<BR>[Calls]<UL><LI><a href="#[58d80a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05284028
<LI><a href="#[58d8118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03572864
<LI><a href="#[58d8154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03023572
</UL>
<BR>[Called By]<UL><LI><a href="#[5761a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Create
</UL>

<P><STRONG><a name="[58d82bc]"></a>SymLoc000DCD8F</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S084.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc000DCD8F
</UL>
<BR>[Called By]<UL><LI><a href="#[5962e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_dismiss
<LI><a href="#[596d668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03042738
<LI><a href="#[596dadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_hv_segments
<LI><a href="#[596db18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_vh_segments
<LI><a href="#[5a2a7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdetect_macro_mode
<LI><a href="#[5a2d414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09213116
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
<LI><a href="#[5b88dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06236945
<LI><a href="#[5cef68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDcmos_preprocess
</UL>

<P><STRONG><a name="[58d8280]"></a>SyMbOl10150464</STRONG> (ARM, 20 bytes, Stack size 0 bytes, S084.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00013356
<LI><a href="#[58d7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00013084
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[58d8244]"></a>SymLoc0000044cGb153Data0x2c</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S084.o(.text), UNUSED)

<P><STRONG><a name="[58d7830]"></a>SymLoc0009B887</STRONG> (ARM, 132 bytes, Stack size 24 bytes, S120.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
</UL>

<P><STRONG><a name="[58d77f4]"></a>SymLoc00096D8C</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S120.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d71dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EA599
<LI><a href="#[5968e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CFBD3
</UL>

<P><STRONG><a name="[575c844]"></a>SymLoc00082867</STRONG> (ARM, 52 bytes, Stack size 8 bytes, S120.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[57619d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Destroy
</UL>

<P><STRONG><a name="[575c808]"></a>SymLoc000F8942</STRONG> (ARM, 384 bytes, Stack size 5088 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12064 + Unknown Stack Size
<LI>Call Chain = SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d78a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001194A7
<LI><a href="#[58d795c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CA325
</UL>
<BR>[Called By]<UL><LI><a href="#[575c8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0005817C
<LI><a href="#[575cbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009C1A8
</UL>

<P><STRONG><a name="[575c8bc]"></a>SymLoc0005817C</STRONG> (ARM, 36 bytes, Stack size 0 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12064 + Unknown Stack Size
<LI>Call Chain = SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F8942
</UL>
<BR>[Called By]<UL><LI><a href="#[575d1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000e88Lc40xec
</UL>

<P><STRONG><a name="[58d77b8]"></a>SymLoc000D52C5</STRONG> (ARM, 720 bytes, Stack size 20792 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20792<LI>Call Chain = SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Called By]<UL><LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
<LI><a href="#[5969504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0005D4CB
<LI><a href="#[5969bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0002E6FC
<LI><a href="#[5969cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A0D9D
<LI><a href="#[5969d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009E332
</UL>

<P><STRONG><a name="[58d777c]"></a>SymLoc0006D43F</STRONG> (ARM, 564 bytes, Stack size 168 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SymLoc0006D43F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Called By]<UL><LI><a href="#[59695b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001121FD
</UL>

<P><STRONG><a name="[58d7740]"></a>SymLoc0007AE3D</STRONG> (ARM, 816 bytes, Stack size 128 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SymLoc0007AE3D
</UL>
<BR>[Called By]<UL><LI><a href="#[5969540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECC78
<LI><a href="#[5969cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A0D9D
<LI><a href="#[5969cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000960C3
<LI><a href="#[5969d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009E332
</UL>

<P><STRONG><a name="[58dc0d8]"></a>adler32</STRONG> (ARM, 344 bytes, Stack size 32 bytes, adler32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = adler32
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58dba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateSetDictionary
<LI><a href="#[58dc2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateSetDictionary
<LI><a href="#[58dcd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_window
</UL>
<BR>[Address Reference Count : 1]<UL><LI> inflate.o(.text)
</UL>
<P><STRONG><a name="[58db8a4]"></a>inflate_blocks_reset</STRONG> (ARM, 140 bytes, Stack size 16 bytes, infblock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inflate_blocks_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[575f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
<LI><a href="#[58db8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_new
<LI><a href="#[58db91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_free
<LI><a href="#[58dba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateReset
</UL>

<P><STRONG><a name="[58db8e0]"></a>inflate_blocks_new</STRONG> (ARM, 200 bytes, Stack size 24 bytes, infblock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inflate_blocks_new &rArr; inflate_blocks_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[58db8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[58dba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateInit2_
</UL>

<P><STRONG><a name="[58db958]"></a>inflate_blocks</STRONG> (ARM, 2272 bytes, Stack size 88 bytes, infblock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = inflate_blocks
</UL>
<BR>[Called By]<UL><LI><a href="#[575f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>

<P><STRONG><a name="[58db91c]"></a>inflate_blocks_free</STRONG> (ARM, 76 bytes, Stack size 16 bytes, infblock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = inflate_blocks_free &rArr; inflate_blocks_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[58db8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_blocks_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[575f2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateEnd
</UL>

<P><STRONG><a name="[58db82c]"></a>inflate_set_dictionary</STRONG> (ARM, 40 bytes, Stack size 16 bytes, infblock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58dba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateSetDictionary
</UL>

<P><STRONG><a name="[58db868]"></a>inflate_blocks_sync_point</STRONG> (ARM, 16 bytes, Stack size 0 bytes, infblock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58db994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateSyncPoint
</UL>

<P><STRONG><a name="[58da4f4]"></a>jinit_compress_master</STRONG> (ARM, 224 bytes, Stack size 8 bytes, jcinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jinit_compress_master &rArr; jinit_c_coef_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[58d5094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_phuff_encoder
<LI><a href="#[58d50d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_huff_encoder
<LI><a href="#[58d510c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_forward_dct
<LI><a href="#[58d5148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_downsampler
<LI><a href="#[58d5184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_color_converter
<LI><a href="#[58d51c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_c_prep_controller
<LI><a href="#[58d51fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_c_master_control
<LI><a href="#[58d5238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_c_main_controller
<LI><a href="#[58d5274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_c_coef_controller
<LI><a href="#[58da968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_marker_writer
</UL>
<BR>[Called By]<UL><LI><a href="#[575f0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_compress
</UL>

<P><STRONG><a name="[58da968]"></a>jinit_marker_writer</STRONG> (ARM, 104 bytes, Stack size 8 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jinit_marker_writer
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
<LI><a href="#[58da9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_write_tables
</UL>

<P><STRONG><a name="[58da8f0]"></a>jpeg_abort</STRONG> (ARM, 88 bytes, Stack size 16 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[575f1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_finish_compress
<LI><a href="#[58daad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort_compress
</UL>

<P><STRONG><a name="[58da8b4]"></a>jpeg_destroy</STRONG> (ARM, 44 bytes, Stack size 8 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[575f238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy_compress
</UL>

<P><STRONG><a name="[58d9c0c]"></a>jpeg_alloc_quant_table</STRONG> (ARM, 36 bytes, Stack size 8 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_alloc_quant_table
</UL>
<BR>[Called By]<UL><LI><a href="#[58d9db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_add_quant_table
</UL>

<P><STRONG><a name="[58d9c48]"></a>jpeg_alloc_huff_table</STRONG> (ARM, 36 bytes, Stack size 8 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_alloc_huff_table
</UL>
<BR>[Called By]<UL><LI><a href="#[58d9fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_huff_table
<LI><a href="#[5964b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_pass_gather_phuff
<LI><a href="#[5965b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_pass_gather
</UL>

<P><STRONG><a name="[58da92c]"></a>jinit_memory_mgr</STRONG> (ARM, 328 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jinit_memory_mgr
</UL>
<BR>[Called By]<UL><LI><a href="#[575f274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateCompress
</UL>

<P><STRONG><a name="[58dc150]"></a>_tr_init</STRONG> (ARM, 84 bytes, Stack size 0 bytes, trees.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58d3294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_block
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateReset
</UL>

<P><STRONG><a name="[58dc114]"></a>_tr_stored_block</STRONG> (ARM, 140 bytes, Stack size 16 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _tr_stored_block &rArr; copy_block &rArr; bi_windup
</UL>
<BR>[Calls]<UL><LI><a href="#[58d3000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_block
</UL>
<BR>[Called By]<UL><LI><a href="#[575f3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate
<LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
</UL>

<P><STRONG><a name="[58dc1c8]"></a>_tr_align</STRONG> (ARM, 496 bytes, Stack size 24 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _tr_align &rArr; bi_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[58d30b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bi_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[575f3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate
</UL>

<P><STRONG><a name="[58dc18c]"></a>_tr_flush_block</STRONG> (ARM, 728 bytes, Stack size 24 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _tr_flush_block &rArr; send_all_trees &rArr; send_tree
</UL>
<BR>[Calls]<UL><LI><a href="#[58d3078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compress_block
<LI><a href="#[58d30f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bi_windup
<LI><a href="#[58d312c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_trees
<LI><a href="#[58d31a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_tree
<LI><a href="#[58d31e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_tree
<LI><a href="#[58d3294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_block
<LI><a href="#[58dc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_stored_block
</UL>
<BR>[Called By]<UL><LI><a href="#[58dcc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_slow
<LI><a href="#[58dcccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_fast
<LI><a href="#[58dcd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_stored
</UL>

<P><STRONG><a name="[58d2c7c]"></a>_tr_tally</STRONG> (ARM, 204 bytes, Stack size 4 bytes, trees.o(.text), UNUSED)

<P><STRONG><a name="[58d25ec]"></a>zlibVersion</STRONG> (ARM, 8 bytes, Stack size 0 bytes, zutil.o(.text), UNUSED)

<P><STRONG><a name="[58d25b0]"></a>zError</STRONG> (ARM, 16 bytes, Stack size 0 bytes, zutil.o(.text), UNUSED)

<P><STRONG><a name="[58dc060]"></a>zcalloc</STRONG> (ARM, 36 bytes, Stack size 16 bytes, zutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = zcalloc &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> deflate.o(.text)
<LI> inflate.o(.text)
</UL>
<P><STRONG><a name="[58dc024]"></a>zcfree</STRONG> (ARM, 20 bytes, Stack size 8 bytes, zutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = zcfree &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 2]<UL><LI> deflate.o(.text)
<LI> inflate.o(.text)
</UL>
<P><STRONG><a name="[58d2394]"></a>MonoColorFusionNE</STRONG> (ARM, 576 bytes, Stack size 88 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MonoColorFusionNE
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d2358]"></a>ExpandColorSet</STRONG> (ARM, 5524 bytes, Stack size 152 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ExpandColorSet
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d231c]"></a>CsetMeanTh</STRONG> (ARM, 444 bytes, Stack size 48 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CsetMeanTh
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d22e0]"></a>WhiteBalance</STRONG> (ARM, 620 bytes, Stack size 1080 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = WhiteBalance
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d22a4]"></a>DetectNoWBSituations</STRONG> (ARM, 372 bytes, Stack size 1064 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = DetectNoWBSituations
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d2268]"></a>CsetFIPGR</STRONG> (ARM, 1868 bytes, Stack size 64 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CsetFIPGR
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d222c]"></a>CsetFIPRG</STRONG> (ARM, 1872 bytes, Stack size 64 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CsetFIPRG
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d21f0]"></a>CsetFIPGB</STRONG> (ARM, 1844 bytes, Stack size 64 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CsetFIPGB
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d21b4]"></a>CsetFIPBG</STRONG> (ARM, 1876 bytes, Stack size 64 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CsetFIPBG
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d2178]"></a>RemoveCSetBrightSpots</STRONG> (ARM, 960 bytes, Stack size 56 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RemoveCSetBrightSpots
</UL>
<BR>[Called By]<UL><LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
</UL>

<P><STRONG><a name="[58d213c]"></a>SampleDataSet</STRONG> (ARM, 272 bytes, Stack size 24 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SampleDataSet
</UL>
<BR>[Called By]<UL><LI><a href="#[58d204c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSetSampleMC
<LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
<LI><a href="#[58d2100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSetSampleMono
<LI><a href="#[58d87e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMonoColorImage
</UL>

<P><STRONG><a name="[58d2100]"></a>MSetSampleMono</STRONG> (ARM, 64 bytes, Stack size 4 bytes, MonoColorCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d213c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataSet
</UL>

<P><STRONG><a name="[58d20c4]"></a>ReBuildColorImage</STRONG> (ARM, 196 bytes, Stack size 8 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = ReBuildColorImage &rArr; WhiteBalance
</UL>
<BR>[Calls]<UL><LI><a href="#[58d213c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataSet
<LI><a href="#[58d2178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveCSetBrightSpots
<LI><a href="#[58d21b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CsetFIPBG
<LI><a href="#[58d21f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CsetFIPGB
<LI><a href="#[58d222c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CsetFIPRG
<LI><a href="#[58d2268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CsetFIPGR
<LI><a href="#[58d22a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectNoWBSituations
<LI><a href="#[58d22e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WhiteBalance
<LI><a href="#[58d231c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CsetMeanTh
<LI><a href="#[58d2358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpandColorSet
<LI><a href="#[58d2394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MonoColorFusionNE
</UL>
<BR>[Called By]<UL><LI><a href="#[58d87e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMonoColorImage
</UL>

<P><STRONG><a name="[58d2088]"></a>RemoveBrightSpots</STRONG> (ARM, 324 bytes, Stack size 40 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RemoveBrightSpots
</UL>
<BR>[Called By]<UL><LI><a href="#[58d87e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMonoColorImage
</UL>

<P><STRONG><a name="[58d204c]"></a>CSetSampleMC</STRONG> (ARM, 48 bytes, Stack size 4 bytes, MonoColorCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d213c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataSet
</UL>

<P><STRONG><a name="[58d87e4]"></a>ProcessMonoColorImage</STRONG> (ARM, 464 bytes, Stack size 24 bytes, MonoColorCore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d1ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpolateMonoSet
<LI><a href="#[58d2088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveBrightSpots
<LI><a href="#[58d20c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReBuildColorImage
<LI><a href="#[58d213c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SampleDataSet
<LI><a href="#[58d8820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_malloc
<LI><a href="#[58d885c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_free
</UL>
<BR>[Called By]<UL><LI><a href="#[575d834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertMonoColorImage
</UL>

<P><STRONG><a name="[58d2010]"></a>CsetColorMatch</STRONG> (ARM, 284 bytes, Stack size 64 bytes, MonoColorCore.o(.text), UNUSED)

<P><STRONG><a name="[58d1fd4]"></a>CsetPixColorXT</STRONG> (ARM, 324 bytes, Stack size 48 bytes, MonoColorCore.o(.text), UNUSED)

<P><STRONG><a name="[58d1f98]"></a>WhiteBalanceWhole</STRONG> (ARM, 692 bytes, Stack size 1080 bytes, MonoColorCore.o(.text), UNUSED)

<P><STRONG><a name="[58d1ea8]"></a>InterpolateMonoSet</STRONG> (ARM, 580 bytes, Stack size 48 bytes, MonoColorInterpolation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InterpolateMonoSet
</UL>
<BR>[Calls]<UL><LI><a href="#[58d1d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58d87e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMonoColorImage
</UL>

<P><STRONG><a name="[58d8898]"></a>InterpolatePartialMonoSet</STRONG> (ARM, 564 bytes, Stack size 16 bytes, MonoColorInterpolation.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d894c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverPartialMonochrome
</UL>

<P><STRONG><a name="[58d88d4]"></a>InterpolateCrossShapeMonoSet</STRONG> (ARM, 1648 bytes, Stack size 24 bytes, MonoColorInterpolation.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverCrossShapeMonochrome
</UL>

<P><STRONG><a name="[58d8820]"></a>MC_malloc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, MonoColorMem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MC_malloc &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[575d870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConstructMonoColorEngine
<LI><a href="#[58d87e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMonoColorImage
</UL>

<P><STRONG><a name="[58d885c]"></a>MC_free</STRONG> (ARM, 4 bytes, Stack size 0 bytes, MonoColorMem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[575d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestructMonoColorEngine
<LI><a href="#[58d87e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMonoColorImage
</UL>

<P><STRONG><a name="[58d1d7c]"></a>MC_memcpy</STRONG> (ARM, 4 bytes, Stack size 0 bytes, MonoColorMem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58d1ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpolateMonoSet
</UL>

<P><STRONG><a name="[58d1c8c]"></a>MC_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, MonoColorMem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd3798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[58d1ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFIP
</UL>

<P><STRONG><a name="[58d132c]"></a>SymLoc00116CD4</STRONG> (ARM, 340 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
</UL>

<P><STRONG><a name="[58d12f0]"></a>SymLocH00012B2C</STRONG> (ARM, 860 bytes, Stack size 96 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d132c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00116CD4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3146
<LI><a href="#[5b2b598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007CE91
<LI><a href="#[5b8a19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01091707
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[58d12b4]"></a>SDrank_algorithmic_options</STRONG> (ARM, 1116 bytes, Stack size 8 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDrank_algorithmic_options
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00013356
<LI><a href="#[58d7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00013084
<LI><a href="#[59625ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02454714
<LI><a href="#[5962da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinteger_to_ASCII
<LI><a href="#[5968eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B3021
<LI><a href="#[5a2aa5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526D
<LI><a href="#[5a2c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00087C52
<LI><a href="#[5a2d84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00029DA0
<LI><a href="#[5a2d8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A73DB
<LI><a href="#[5a2d93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08452120
<LI><a href="#[5a2d9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05087273
<LI><a href="#[5a2da2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAO
<LI><a href="#[5b260fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134424P
<LI><a href="#[5b295b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C5F21
<LI><a href="#[5b298c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00114E5F
<LI><a href="#[5b2a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B41CF
<LI><a href="#[5b2a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008447A
<LI><a href="#[5b2a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010CC72
<LI><a href="#[5b2aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E6904
<LI><a href="#[5b2af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C62CB
<LI><a href="#[5b2b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00108EBD
<LI><a href="#[5b2b6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EF7A8
<LI><a href="#[5b2b9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6571
<LI><a href="#[5b2bd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECF23
<LI><a href="#[5b2c2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001B4BF6
<LI><a href="#[5b2c510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D1BB5
<LI><a href="#[5b2cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAX
<LI><a href="#[5b2cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525i
<LI><a href="#[5b85ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Y
<LI><a href="#[5b861a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522z
<LI><a href="#[5b861dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D75E8
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b870dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08780525
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
<LI><a href="#[5b88dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06236945
<LI><a href="#[5b8a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00874185
<LI><a href="#[5b8a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13383606
<LI><a href="#[5b8aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BB221
<LI><a href="#[5b8ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00467304
<LI><a href="#[5b8ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E74F0
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cef3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDupdate_minimum_spanning_tree
<LI><a href="#[5cef86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DB5BB
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
<LI><a href="#[5cefc2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDschedule_background_activity
</UL>

<P><STRONG><a name="[58d7fec]"></a>SymLocH00013084</STRONG> (ARM, 736 bytes, Stack size 120 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SymLocH00013084 &rArr; SDrank_algorithmic_options
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10150464
</UL>
<BR>[Called By]<UL><LI><a href="#[58d8370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00011C70
</UL>

<P><STRONG><a name="[58d1278]"></a>SymLocH000131D0</STRONG> (ARM, 224 bytes, Stack size 104 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SymLocH000131D0
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Called By]<UL><LI><a href="#[596c27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hhpnfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[58d123c]"></a>SymLoc00164836</STRONG> (ARM, 208 bytes, Stack size 24 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2dbd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DC43B
</UL>

<P><STRONG><a name="[58d7fb0]"></a>SymLocH00013356</STRONG> (ARM, 304 bytes, Stack size 104 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SymLocH00013356 &rArr; SDrank_algorithmic_options
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10150464
</UL>
<BR>[Called By]<UL><LI><a href="#[58d8370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00011C70
</UL>

<P><STRONG><a name="[58d1200]"></a>SymLocH0001343C</STRONG> (ARM, 300 bytes, Stack size 112 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[58d11c4]"></a>SyMbOl11986896</STRONG> (ARM, 80 bytes, Stack size 0 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b2a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008F08F
<LI><a href="#[5b86344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522P
</UL>

<P><STRONG><a name="[58d1188]"></a>SyMbOl12013858</STRONG> (ARM, 136 bytes, Stack size 24 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
<LI><a href="#[5b86290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001126BF
<LI><a href="#[5b86bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B4CCE
</UL>

<P><STRONG><a name="[58d114c]"></a>SyMbOl01547567</STRONG> (ARM, 96 bytes, Stack size 16 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SyMbOl01547567
</UL>
<BR>[Called By]<UL><LI><a href="#[58d1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01372474
<LI><a href="#[5969414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C70C0
<LI><a href="#[596db90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_single_leg
</UL>

<P><STRONG><a name="[58d1110]"></a>SyMbOl01402457</STRONG> (ARM, 88 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b87fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08326642
</UL>

<P><STRONG><a name="[58d10d4]"></a>SyMbOl01571821</STRONG> (ARM, 80 bytes, Stack size 8 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b873e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001C5B63
</UL>

<P><STRONG><a name="[58d1098]"></a>SyMbOl01372474</STRONG> (ARM, 632 bytes, Stack size 160 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[58d114c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01547567
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2e134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05445434
<LI><a href="#[5a2e170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05420601
</UL>

<P><STRONG><a name="[58d105c]"></a>SyMbOl01314266</STRONG> (ARM, 360 bytes, Stack size 56 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[58d0210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04444773
<LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[5b2c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAV
<LI><a href="#[5b8ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00697941
<LI><a href="#[5cef95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDtriaxial_rotation
<LI><a href="#[5cef998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDstacked_symbol_warp_mapping
<LI><a href="#[5cefc2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDschedule_background_activity
</UL>

<P><STRONG><a name="[58d1020]"></a>SyMbOl01293526</STRONG> (ARM, 48 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d00a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11330883
</UL>

<P><STRONG><a name="[58d0fe4]"></a>SyMbOl01443772</STRONG> (ARM, 36 bytes, Stack size 8 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
</UL>
<BR>[Called By]<UL><LI><a href="#[5b270b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06290326
<LI><a href="#[5b2c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAV
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
</UL>

<P><STRONG><a name="[58d0fa8]"></a>SyMbOl01285564</STRONG> (ARM, 68 bytes, Stack size 8 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596e9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11660286
<LI><a href="#[596ea18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11623050
</UL>
<BR>[Called By]<UL><LI><a href="#[5b270b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06290326
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
</UL>

<P><STRONG><a name="[58d0f6c]"></a>AAAAAAAAAAAS</STRONG> (ARM, 156 bytes, Stack size 32 bytes, S020.o(.text), UNUSED)

<P><STRONG><a name="[58d0f30]"></a>SyMbOl01634753</STRONG> (ARM, 96 bytes, Stack size 4 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[596a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007C92B
<LI><a href="#[596a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09095808
<LI><a href="#[5a2d4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09189565
<LI><a href="#[5b26048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000FB782
<LI><a href="#[5b2849c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_get_threshold_based_energy_info
<LI><a href="#[5b87370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159369
<LI><a href="#[5b8749c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E0AE3
<LI><a href="#[5b8758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001502F5
<LI><a href="#[5b8ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00697941
<LI><a href="#[5cef95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDtriaxial_rotation
<LI><a href="#[5cef998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDstacked_symbol_warp_mapping
<LI><a href="#[5cefc2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDschedule_background_activity
</UL>

<P><STRONG><a name="[58d0ef4]"></a>SyMbOl01356050</STRONG> (ARM, 200 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[5b270b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06290326
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
</UL>

<P><STRONG><a name="[58d0eb8]"></a>SyMbOl01345593</STRONG> (ARM, 132 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b88324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07048329
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
</UL>

<P><STRONG><a name="[58d0e7c]"></a>SyMbOl01312844</STRONG> (ARM, 324 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
</UL>
<BR>[Called By]<UL><LI><a href="#[5b25634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07241761
<LI><a href="#[5b25b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07100913
</UL>

<P><STRONG><a name="[58d0e40]"></a>SyMbOl01595613</STRONG> (ARM, 136 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)

<P><STRONG><a name="[58d0e04]"></a>SD1d_vs_2d</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S020.o(.text), UNUSED)

<P><STRONG><a name="[58d8190]"></a>SyMbOl01476036</STRONG> (ARM, 812 bytes, Stack size 24 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10150464
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
</UL>
<BR>[Called By]<UL><LI><a href="#[58d8370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00011C70
<LI><a href="#[59625ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02454714
<LI><a href="#[5962da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinteger_to_ASCII
<LI><a href="#[5968eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B3021
<LI><a href="#[5a2aa5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526D
<LI><a href="#[5a2c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00087C52
<LI><a href="#[5a2d84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00029DA0
<LI><a href="#[5a2d8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A73DB
<LI><a href="#[5a2d93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08452120
<LI><a href="#[5a2d9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05087273
<LI><a href="#[5a2da2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAO
<LI><a href="#[5b260fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134424P
<LI><a href="#[5b295b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C5F21
<LI><a href="#[5b298c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00114E5F
<LI><a href="#[5b2a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B41CF
<LI><a href="#[5b2a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008447A
<LI><a href="#[5b2a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010CC72
<LI><a href="#[5b2aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E6904
<LI><a href="#[5b2af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C62CB
<LI><a href="#[5b2b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00108EBD
<LI><a href="#[5b2b6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EF7A8
<LI><a href="#[5b2b9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6571
<LI><a href="#[5b2bd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECF23
<LI><a href="#[5b2c2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001B4BF6
<LI><a href="#[5b2c510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D1BB5
<LI><a href="#[5b2cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAX
<LI><a href="#[5b2cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525i
<LI><a href="#[5b85ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Y
<LI><a href="#[5b861a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522z
<LI><a href="#[5b861dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D75E8
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b870dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08780525
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
<LI><a href="#[5b88dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06236945
<LI><a href="#[5b8a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00874185
<LI><a href="#[5b8a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13383606
<LI><a href="#[5b8aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BB221
<LI><a href="#[5b8ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00467304
<LI><a href="#[5b8ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E74F0
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cef3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDupdate_minimum_spanning_tree
<LI><a href="#[5cef86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DB5BB
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
<LI><a href="#[5cefc2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDschedule_background_activity
</UL>

<P><STRONG><a name="[58d0dc8]"></a>SymLoc000C8A65</STRONG> (ARM, 100 bytes, Stack size 32 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[58d0d8c]"></a>SDdetect_right_angles</STRONG> (ARM, 156 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[5b2cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525i
<LI><a href="#[5b86830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522r
</UL>

<P><STRONG><a name="[58d0d50]"></a>SDright_angle_density</STRONG> (ARM, 312 bytes, Stack size 848 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdetect_right_angles
</UL>
<BR>[Called By]<UL><LI><a href="#[5b295b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C5F21
<LI><a href="#[5b2a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B41CF
<LI><a href="#[5b2a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010CC72
<LI><a href="#[5b2aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E6904
<LI><a href="#[5b2af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C62CB
<LI><a href="#[5b2b6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EF7A8
<LI><a href="#[5b2b9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6571
<LI><a href="#[5b2bd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECF23
<LI><a href="#[5b8a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00874185
<LI><a href="#[5b8a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13383606
<LI><a href="#[5b8ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00467304
<LI><a href="#[5cef3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDupdate_minimum_spanning_tree
<LI><a href="#[5cefc2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDschedule_background_activity
</UL>

<P><STRONG><a name="[58d0d14]"></a>SyMbOl01668118</STRONG> (ARM, 228 bytes, Stack size 24 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01425102
</UL>

<P><STRONG><a name="[58d0cd8]"></a>SyMbOl01193210</STRONG> (ARM, 628 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[5b2cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10571854
<LI><a href="#[5b2cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525s
</UL>

<P><STRONG><a name="[58d0c9c]"></a>SyMbOl01578497</STRONG> (ARM, 568 bytes, Stack size 32 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d1494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAO
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[58d0c60]"></a>SymLoc0011EB2F</STRONG> (ARM, 196 bytes, Stack size 24 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SymLoc0011EB2F
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01249397
<LI><a href="#[5b2ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10863418
<LI><a href="#[5cefa88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDstochastic_reverification
</UL>

<P><STRONG><a name="[58d0c24]"></a>SyMbOl01249397</STRONG> (ARM, 8 bytes, Stack size 0 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SyMbOl01249397 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011EB2F
</UL>
<BR>[Called By]<UL><LI><a href="#[5b29504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007E634
<LI><a href="#[5b859e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134523A
<LI><a href="#[5b85ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522B
<LI><a href="#[5b86a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134523V
<LI><a href="#[5b8a598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13257494
<LI><a href="#[5cefa88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDstochastic_reverification
</UL>

<P><STRONG><a name="[58d0be8]"></a>AAAAAAAAAAAU</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S020.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b2cdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAW
<LI><a href="#[5b8ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAG
<LI><a href="#[5cefa4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAC
</UL>

<P><STRONG><a name="[58d0bac]"></a>AAAAAAAAAAAV</STRONG> (ARM, 80 bytes, Stack size 8 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d1458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAK
</UL>
<BR>[Called By]<UL><LI><a href="#[5b25634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07241761
<LI><a href="#[5b25b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07100913
<LI><a href="#[5b2cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525s
</UL>

<P><STRONG><a name="[58d0b70]"></a>SyMbOl01421208</STRONG> (ARM, 1616 bytes, Stack size 48 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d00a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11330883
<LI><a href="#[58d0c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01578497
<LI><a href="#[58d0ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01356050
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
<LI><a href="#[58d1494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAO
<LI><a href="#[596e9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11660286
<LI><a href="#[596ea18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11623050
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[5b25634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07241761
<LI><a href="#[5b25b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07100913
<LI><a href="#[5b29fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BE838
<LI><a href="#[5b2a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001076D9
<LI><a href="#[5b2a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CF46D
<LI><a href="#[5b2a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011622C
<LI><a href="#[5b2a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010073B
<LI><a href="#[5b2a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010CC72
<LI><a href="#[5b2aad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0006F842
<LI><a href="#[5b2ab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B7DC9
<LI><a href="#[5b2ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BE742
<LI><a href="#[5b2ba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000AD5E2
<LI><a href="#[5b2bc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A455F
<LI><a href="#[5b2bc64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DE9D0
<LI><a href="#[5b2bdcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E57D1
<LI><a href="#[5b2be08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CA9B3
<LI><a href="#[5b2be44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BE2E1
<LI><a href="#[5b2c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11073468
<LI><a href="#[5b2cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10571854
<LI><a href="#[5b2cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11126701
<LI><a href="#[5b2cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525s
<LI><a href="#[5b2cfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525u
<LI><a href="#[5b88324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07048329
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
<LI><a href="#[5b8a124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01055479
<LI><a href="#[5b8a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00874185
<LI><a href="#[5b8a4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13355461
<LI><a href="#[5b8a520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13349756
<LI><a href="#[5b8a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13383606
<LI><a href="#[5cef470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00346868
<LI><a href="#[5cef4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00447702
</UL>

<P><STRONG><a name="[58d0b34]"></a>SyMbOl01533577</STRONG> (ARM, 784 bytes, Stack size 240 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01193210
<LI><a href="#[58d141c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F2FCA
<LI><a href="#[58d1458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAK
</UL>
<BR>[Called By]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[5b29414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AB08
<LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3146
<LI><a href="#[5b2b598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007CE91
<LI><a href="#[5b2b958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000915EA
<LI><a href="#[5b2bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082AE5
<LI><a href="#[5b2cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10571854
<LI><a href="#[5b2cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525i
<LI><a href="#[5b2cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525s
<LI><a href="#[5b859a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522U
<LI><a href="#[5b85e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522x
<LI><a href="#[5b86218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F8C94
<LI><a href="#[5b868a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134523R
<LI><a href="#[5b86bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B4CCE
<LI><a href="#[5b8a19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01091707
<LI><a href="#[5b8a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13222601
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5b8aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EE8A0
<LI><a href="#[5b8ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00467304
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
<LI><a href="#[5cefb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00118267
<LI><a href="#[5cefbb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E8126
</UL>

<P><STRONG><a name="[58d0af8]"></a>SyMbOl01425102</STRONG> (ARM, 1260 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01668118
</UL>
<BR>[Called By]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
</UL>

<P><STRONG><a name="[58d0abc]"></a>SyMbOl01468279</STRONG> (ARM, 344 bytes, Stack size 32 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[5b2cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11002535
<LI><a href="#[5b2d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10687023
</UL>

<P><STRONG><a name="[58d0a80]"></a>SyMbOl01452031</STRONG> (ARM, 184 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01468279
</UL>
<BR>[Called By]<UL><LI><a href="#[5b29414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AB08
<LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3146
<LI><a href="#[5b2b598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007CE91
<LI><a href="#[5b2b958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000915EA
<LI><a href="#[5b2bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082AE5
<LI><a href="#[5b859a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522U
<LI><a href="#[5b85e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522x
<LI><a href="#[5b861dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D75E8
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b8a19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01091707
<LI><a href="#[5b8a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13222601
<LI><a href="#[5b8aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00667135
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
<LI><a href="#[5cefbb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E8126
</UL>

<P><STRONG><a name="[58d0a44]"></a>SyMbOl01559305</STRONG> (ARM, 304 bytes, Stack size 32 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[5b29414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AB08
<LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3146
<LI><a href="#[5b2b598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007CE91
<LI><a href="#[5b2b958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000915EA
<LI><a href="#[5b2bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082AE5
<LI><a href="#[5b2cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10571854
<LI><a href="#[5b2cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525s
<LI><a href="#[5b2d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10687023
<LI><a href="#[5b859a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522U
<LI><a href="#[5b85e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522x
<LI><a href="#[5b861dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D75E8
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b86bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B4CCE
<LI><a href="#[5b8a19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01091707
<LI><a href="#[5b8a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13222601
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5b8acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F1C32
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
<LI><a href="#[5cefbb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E8126
</UL>

<P><STRONG><a name="[58d0a08]"></a>SyMbOl01573235</STRONG> (ARM, 132 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b29414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AB08
<LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3146
<LI><a href="#[5b2b598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007CE91
<LI><a href="#[5b2b958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000915EA
<LI><a href="#[5b2bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082AE5
<LI><a href="#[5b2d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10687023
<LI><a href="#[5b859a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522U
<LI><a href="#[5b85e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522x
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b8a19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01091707
<LI><a href="#[5b8a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13222601
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[58d09cc]"></a>SyMbOl01357995</STRONG> (ARM, 844 bytes, Stack size 48 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01425102
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>
<BR>[Called By]<UL><LI><a href="#[5b29414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AB08
<LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3146
<LI><a href="#[5b2b598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007CE91
<LI><a href="#[5b2b958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000915EA
<LI><a href="#[5b2bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082AE5
<LI><a href="#[5b2cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11002535
<LI><a href="#[5b2d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10687023
<LI><a href="#[5b859a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522U
<LI><a href="#[5b85e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522x
<LI><a href="#[5b861dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D75E8
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b8a19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01091707
<LI><a href="#[5b8a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13222601
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5b8acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F1C32
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
<LI><a href="#[5cefbb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E8126
</UL>

<P><STRONG><a name="[58d0990]"></a>SyMbOl01218044</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b2a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011622C
<LI><a href="#[5b2a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010073B
<LI><a href="#[5b2a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010CC72
<LI><a href="#[5b2c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11073468
<LI><a href="#[5b2cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10571854
<LI><a href="#[5b2cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11126701
<LI><a href="#[5b2cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525s
<LI><a href="#[5b2cfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525u
<LI><a href="#[5b8a124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01055479
<LI><a href="#[5b8a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00874185
<LI><a href="#[5b8a4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13355461
<LI><a href="#[5b8a520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13349756
<LI><a href="#[5b8a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13383606
</UL>

<P><STRONG><a name="[58d0954]"></a>SyMbOl01260761</STRONG> (ARM, 572 bytes, Stack size 1160 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b295b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C5F21
<LI><a href="#[5b2a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B41CF
<LI><a href="#[5b2a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010CC72
<LI><a href="#[5b2aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E6904
<LI><a href="#[5b2af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C62CB
<LI><a href="#[5b2b6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EF7A8
<LI><a href="#[5b2b9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6571
<LI><a href="#[5b2bd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECF23
<LI><a href="#[5b2c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000975F4
<LI><a href="#[5b8a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00874185
<LI><a href="#[5b8a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13383606
<LI><a href="#[5b8ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00467304
<LI><a href="#[5cef3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDupdate_minimum_spanning_tree
<LI><a href="#[5cefc2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDschedule_background_activity
</UL>

<P><STRONG><a name="[58d0918]"></a>SyMbOl12038322</STRONG> (ARM, 156 bytes, Stack size 12 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b85ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Y
<LI><a href="#[5b862cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522K
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b8aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BB221
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[58d08dc]"></a>SyMbOl01250317</STRONG> (ARM, 68 bytes, Stack size 0 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001293F5
<LI><a href="#[5b2b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00106302
<LI><a href="#[5b2b958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000915EA
<LI><a href="#[5b2bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082AE5
<LI><a href="#[5b2cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10713657
<LI><a href="#[5b859a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522U
<LI><a href="#[5b85e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522x
<LI><a href="#[5b868a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134523R
<LI><a href="#[5b8a160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00949532
<LI><a href="#[5b8a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13222601
<LI><a href="#[5b8adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00538216
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefc68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDshadow_compensation
</UL>

<P><STRONG><a name="[58d08a0]"></a>SyMbOl01504971</STRONG> (ARM, 304 bytes, Stack size 48 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SyMbOl01504971
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
<LI><a href="#[5968e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BB546
<LI><a href="#[59696a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140113
<LI><a href="#[5969b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008F843
<LI><a href="#[5969b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000878DE
<LI><a href="#[5a2a7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdetect_macro_mode
<LI><a href="#[5a2c76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAZ
<LI><a href="#[5a2d414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09213116
<LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b86290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001126BF
<LI><a href="#[5b86998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00132917
<LI><a href="#[5b86bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B4CCE
<LI><a href="#[5b87154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A14E6
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
</UL>

<P><STRONG><a name="[58d0864]"></a>SymLoc0010196F</STRONG> (ARM, 336 bytes, Stack size 80 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2c460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_orient_find_clock_intersect
<LI><a href="#[5a2c910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000AA221
<LI><a href="#[5a2ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E7A4C
</UL>

<P><STRONG><a name="[58d0828]"></a>SymLocH00016B46</STRONG> (ARM, 236 bytes, Stack size 20 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[596e784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00028AF0
<LI><a href="#[5a2c76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAZ
</UL>

<P><STRONG><a name="[58d07ec]"></a>SymLoc000A754F</STRONG> (ARM, 304 bytes, Stack size 48 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d07b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000985FF
</UL>

<P><STRONG><a name="[58d07b0]"></a>SymLoc000985FF</STRONG> (ARM, 868 bytes, Stack size 784 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d07ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A754F
</UL>
<BR>[Called By]<UL><LI><a href="#[596a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007C92B
</UL>

<P><STRONG><a name="[58d0774]"></a>cc_int_intersect</STRONG> (ARM, 280 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)

<P><STRONG><a name="[58d0738]"></a>SyMbOl01491665</STRONG> (ARM, 124 bytes, Stack size 4 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5962538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03261614
<LI><a href="#[5b25364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0018456F
<LI><a href="#[5b26b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05874340
<LI><a href="#[5b27344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdecompose_hv
<LI><a href="#[5b27434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000003f4Lc450xac
<LI><a href="#[5b298c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00114E5F
<LI><a href="#[5b2b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00108EBD
<LI><a href="#[5b85ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Y
<LI><a href="#[5b85de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12142496
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
<LI><a href="#[5b88c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05838330
<LI><a href="#[5b88d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06161699
<LI><a href="#[5b88d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06136380
</UL>

<P><STRONG><a name="[58d06fc]"></a>SyMbOl12072172</STRONG> (ARM, 72 bytes, Stack size 0 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b85ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Y
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
</UL>

<P><STRONG><a name="[58d06c0]"></a>SyMbOl12095453</STRONG> (ARM, 136 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b85ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Y
<LI><a href="#[5b86b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC183
</UL>

<P><STRONG><a name="[58d0684]"></a>AAAAAAAAAAAW</STRONG> (ARM, 32 bytes, Stack size 0 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2d414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09213116
<LI><a href="#[5b22e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAD
<LI><a href="#[5b876b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08933940
</UL>

<P><STRONG><a name="[58d0648]"></a>SyMbOl12122732</STRONG> (ARM, 2284 bytes, Stack size 136 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d1188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12013858
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525j
<LI><a href="#[5b85ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Y
<LI><a href="#[5b86254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522N
<LI><a href="#[5b869d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134523b
<LI><a href="#[5b8ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00467304
<LI><a href="#[5cefc2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDschedule_background_activity
</UL>

<P><STRONG><a name="[58d060c]"></a>AAAAAAAAAAAX</STRONG> (ARM, 336 bytes, Stack size 32 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0014200A
</UL>
<BR>[Called By]<UL><LI><a href="#[5b280a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAJ
</UL>

<P><STRONG><a name="[58d05d0]"></a>SDretry_slow_way</STRONG> (ARM, 172 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b25a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07034464
<LI><a href="#[5b261ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524p
<LI><a href="#[5b2bfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A7FE7
</UL>

<P><STRONG><a name="[58d0594]"></a>SDrandomize_find_elements</STRONG> (ARM, 564 bytes, Stack size 280 bytes, S020.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SDrandomize_find_elements
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2e0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F70FA
<LI><a href="#[5b2a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007B909
<LI><a href="#[5b2a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B6830
<LI><a href="#[5b2ae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00074153
<LI><a href="#[5b2b5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009F2CE
<LI><a href="#[5b2bac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00070E3A
<LI><a href="#[5b2bcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008B606
<LI><a href="#[5b2cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10652292
<LI><a href="#[5b8a250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DBAC8
<LI><a href="#[5b8a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0013120C
<LI><a href="#[5b8ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAG
<LI><a href="#[5b8ab74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CF7FB
<LI><a href="#[5cef8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00184A5D
</UL>

<P><STRONG><a name="[596d230]"></a>SyMbOl02482439</STRONG> (ARM, 572 bytes, Stack size 9320 bytes, S034.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03065151
</UL>
<BR>[Called By]<UL><LI><a href="#[596d668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03042738
</UL>

<P><STRONG><a name="[58d8154]"></a>SyMbOl03023572</STRONG> (ARM, 236 bytes, Stack size 48 bytes, S034.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SyMbOl03023572
</UL>
<BR>[Called By]<UL><LI><a href="#[575c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000388Gb153Data0x90
</UL>

<P><STRONG><a name="[596c6f0]"></a>SyMbOl03549640</STRONG> (ARM, 428 bytes, Stack size 0 bytes, S037.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d8118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03572864
<LI><a href="#[59623d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ecc200
<LI><a href="#[5a2a87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDsemi_island_score
<LI><a href="#[5a2d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BDEF8
<LI><a href="#[5a2d900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009201E
<LI><a href="#[5a2d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDcodeword_hash
<LI><a href="#[5a2da2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAO
<LI><a href="#[5b23d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C7B77
<LI><a href="#[5b24eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08709677
<LI><a href="#[5b24fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09035529
<LI><a href="#[5b27fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdiscard_impossible_vectors
<LI><a href="#[5b28d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009C11C
<LI><a href="#[5b28dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000345A9
<LI><a href="#[5b86e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001069DB
<LI><a href="#[5b88dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06236945
</UL>

<P><STRONG><a name="[58d8118]"></a>SyMbOl03572864</STRONG> (ARM, 332 bytes, Stack size 16 bytes, S037.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SyMbOl03572864 &rArr; SyMbOl04860167
</UL>
<BR>[Calls]<UL><LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
<LI><a href="#[596c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000002e0Lc620x44
<LI><a href="#[596c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04860167
</UL>
<BR>[Called By]<UL><LI><a href="#[575c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000388Gb153Data0x90
</UL>

<P><STRONG><a name="[596c6b4]"></a>SyMbOl03530151</STRONG> (ARM, 1660 bytes, Stack size 114776 bytes, S037.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01696647
<LI><a href="#[596c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000002e0Lc620x44
</UL>
<BR>[Called By]<UL><LI><a href="#[59623d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ecc200
<LI><a href="#[5a2a87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDsemi_island_score
<LI><a href="#[5a2aa98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526B
<LI><a href="#[5b23d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C7B77
<LI><a href="#[5b24eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08709677
<LI><a href="#[5b24fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09035529
<LI><a href="#[5b27fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdiscard_impossible_vectors
<LI><a href="#[5b286f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAA
<LI><a href="#[5b28d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009C11C
<LI><a href="#[5b28dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000345A9
<LI><a href="#[5b298c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00114E5F
<LI><a href="#[5b2b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00108EBD
<LI><a href="#[5b86e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001069DB
<LI><a href="#[5b88dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06236945
<LI><a href="#[5b88e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06410298
</UL>

<P><STRONG><a name="[596c678]"></a>SymLoc001236DB</STRONG> (ARM, 176 bytes, Stack size 32 bytes, S037.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000002e0Lc620x44
</UL>
<BR>[Called By]<UL><LI><a href="#[5b298c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00114E5F
</UL>

<P><STRONG><a name="[596c63c]"></a>ReedSolomon</STRONG> (ARM, 336 bytes, Stack size 40 bytes, S037.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[596c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000002e0Lc620x44
</UL>

<P><STRONG><a name="[58d80dc]"></a>SyMbOl04809334</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S041.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
</UL>

<P><STRONG><a name="[58d7704]"></a>SyMbOl04660209</STRONG> (ARM, 12 bytes, Stack size 0 bytes, S041.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d1200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001343C
<LI><a href="#[58d1278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000131D0
<LI><a href="#[58d6ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_find
<LI><a href="#[58d7650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00076C36
<LI><a href="#[58d777c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0006D43F
<LI><a href="#[58d77b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D52C5
<LI><a href="#[58d7a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_setup_process
<LI><a href="#[58d8064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11246859
<LI><a href="#[58d81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAQ
<LI><a href="#[5962628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02554473
<LI><a href="#[5962e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDconnection_vs_isolation
<LI><a href="#[5962ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdespeckle_isolation
<LI><a href="#[5968604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAI
<LI><a href="#[5968640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAJ
<LI><a href="#[5968a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11808193
<LI><a href="#[5968dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F4C2C
<LI><a href="#[5969bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0002E6FC
<LI><a href="#[5969cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A0D9D
<LI><a href="#[5969d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009E332
<LI><a href="#[5969d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00042EB0
<LI><a href="#[596a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007C92B
<LI><a href="#[596a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09095808
<LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[596a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_allocate_temp_storage
<LI><a href="#[596af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05090902
<LI><a href="#[596c2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hhpnfi_allocate_temp_storage
<LI><a href="#[596d668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03042738
<LI><a href="#[596d80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAR
<LI><a href="#[596dc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_allocate_temp_storage
<LI><a href="#[5a2dfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05462130
<LI><a href="#[5a2e008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05391592
<LI><a href="#[5a2e224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05390983
<LI><a href="#[5a2f0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05222885
<LI><a href="#[5b2a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BC8B3
<LI><a href="#[5b2a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6B39
<LI><a href="#[5b2a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000899D1
<LI><a href="#[5b2ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001293F5
<LI><a href="#[5b2b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00106302
<LI><a href="#[5b2b958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000915EA
<LI><a href="#[5b2bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00082AE5
<LI><a href="#[5b2cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10713657
<LI><a href="#[5b85b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134523K
<LI><a href="#[5b863f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134522Q
<LI><a href="#[5b867f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12525400
<LI><a href="#[5b86bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134523g
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
<LI><a href="#[5b8a160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00949532
<LI><a href="#[5b8a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl13222601
<LI><a href="#[5b8adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00538216
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
<LI><a href="#[5cefc68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDshadow_compensation
</UL>

<P><STRONG><a name="[596bdcc]"></a>ia_within_image</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596bd90]"></a>ia_window_A</STRONG> (ARM, 316 bytes, Stack size 24 bytes, S041.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[596bd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_frame_A
</UL>

<P><STRONG><a name="[596bd54]"></a>ia_frame_A</STRONG> (ARM, 68 bytes, Stack size 24 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_window_A
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2849c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_get_threshold_based_energy_info
<LI><a href="#[5b28550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_get_edge_based_energy_info
</UL>

<P><STRONG><a name="[596d62c]"></a>SyMbOl04673917</STRONG> (ARM, 124 bytes, Stack size 4 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SyMbOl04673917
</UL>
<BR>[Called By]<UL><LI><a href="#[5962ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdespeckle_isolation
<LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
<LI><a href="#[596b778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAY
<LI><a href="#[596d80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAR
<LI><a href="#[596d938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_hbisect
<LI><a href="#[596dc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_allocate_temp_storage
<LI><a href="#[5a2e224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05390983
<LI><a href="#[5a2e314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526U
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S145.o(.data)
</UL>
<P><STRONG><a name="[596bd18]"></a>SymLocH0001C208</STRONG> (ARM, 128 bytes, Stack size 8 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLocH0001C208
</UL>
<BR>[Called By]<UL><LI><a href="#[5969cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A0D9D
<LI><a href="#[5969d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009E332
<LI><a href="#[596bb74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_fast_pixelstep_bilinear
</UL>

<P><STRONG><a name="[596d5f0]"></a>SyMbOl04829463</STRONG> (ARM, 232 bytes, Stack size 20 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = SyMbOl04829463 &rArr;  SyMbOl04829463 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
</UL>
<BR>[Called By]<UL><LI><a href="#[5962e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDconnection_vs_isolation
<LI><a href="#[596a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09095808
<LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[596b73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAZ
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
<LI><a href="#[596d974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_vbisect
<LI><a href="#[5a2e224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05390983
<LI><a href="#[5a2e314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526U
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
</UL>
<BR>[Address Reference Count : 2]<UL><LI> S145.o(.data)
<LI> S138.o(.constdata)
</UL>
<P><STRONG><a name="[596bcdc]"></a>SymLoc000C39FA</STRONG> (ARM, 232 bytes, Stack size 40 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C39FA
</UL>
<BR>[Called By]<UL><LI><a href="#[596bb74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_fast_pixelstep_bilinear
<LI><a href="#[596bcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C39FA
</UL>

<P><STRONG><a name="[596bca0]"></a>SymLocH0001C2DA</STRONG> (ARM, 232 bytes, Stack size 20 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001C2DA
</UL>
<BR>[Called By]<UL><LI><a href="#[596bca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001C2DA
</UL>

<P><STRONG><a name="[596bc64]"></a>SyMbOl04582811</STRONG> (ARM, 196 bytes, Stack size 20 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = SyMbOl04582811 &rArr;  SyMbOl04582811 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[596bc64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04582811
</UL>
<BR>[Called By]<UL><LI><a href="#[596bc64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04582811
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S138.o(.constdata)
</UL>
<P><STRONG><a name="[596bc28]"></a>SDneural_net_threshold</STRONG> (ARM, 196 bytes, Stack size 20 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDneural_net_threshold
</UL>
<BR>[Called By]<UL><LI><a href="#[596bc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDneural_net_threshold
</UL>

<P><STRONG><a name="[596bbec]"></a>SyMbOl04611340</STRONG> (ARM, 196 bytes, Stack size 20 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = SyMbOl04611340 &rArr;  SyMbOl04611340 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[596bbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04611340
</UL>
<BR>[Called By]<UL><LI><a href="#[596bbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04611340
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S138.o(.constdata)
</UL>
<P><STRONG><a name="[596bbb0]"></a>SDtricorner_hypothesis</STRONG> (ARM, 200 bytes, Stack size 20 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDtricorner_hypothesis
</UL>
<BR>[Called By]<UL><LI><a href="#[596bbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDtricorner_hypothesis
</UL>

<P><STRONG><a name="[596bb74]"></a>ia_fast_pixelstep_bilinear</STRONG> (ARM, 384 bytes, Stack size 32 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C39FA
<LI><a href="#[596bd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001C208
</UL>
<BR>[Called By]<UL><LI><a href="#[596bb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_fast_pixelstep_bilinear_2pnt
</UL>

<P><STRONG><a name="[596bb38]"></a>ia_fast_pixelstep_bilinear_2pnt</STRONG> (ARM, 92 bytes, Stack size 24 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bb74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_fast_pixelstep_bilinear
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2849c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_get_threshold_based_energy_info
<LI><a href="#[5b28550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_get_edge_based_energy_info
</UL>

<P><STRONG><a name="[596bafc]"></a>SyMbOl04545683</STRONG> (ARM, 112 bytes, Stack size 0 bytes, S041.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[596b688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04803344
<LI><a href="#[596b6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04782647
<LI><a href="#[596ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04700961
<LI><a href="#[596ba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04493926
<LI><a href="#[596bac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04480956
<LI><a href="#[596c114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04795839
<LI><a href="#[596d668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03042738
</UL>

<P><STRONG><a name="[58d01d4]"></a>SyMbOl04457054</STRONG> (ARM, 708 bytes, Stack size 80 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
<LI><a href="#[596be08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04526112
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04444773
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
<LI><a href="#[58d1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01372474
<LI><a href="#[596db90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_single_leg
<LI><a href="#[596dc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_ell_test
<LI><a href="#[5a2c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00144D5B
<LI><a href="#[5a2c898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00096BB6
<LI><a href="#[5b256e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06990664
<LI><a href="#[5b26cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05648481
<LI><a href="#[5b270b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06290326
<LI><a href="#[5b88bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05951341
<LI><a href="#[5b88c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05925946
</UL>

<P><STRONG><a name="[58d0558]"></a>AAAAAAAAAAA</STRONG> (ARM, 1036 bytes, Stack size 216 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596be44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_gausinc_check_fxy
<LI><a href="#[596be80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAP
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04444773
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
<LI><a href="#[5962e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_dismiss
<LI><a href="#[5a2d4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09189565
<LI><a href="#[5b256e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06990664
<LI><a href="#[5b2c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAY
<LI><a href="#[5b2cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525i
<LI><a href="#[5b87370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159369
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[58d0210]"></a>SyMbOl04444773</STRONG> (ARM, 300 bytes, Stack size 20264 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
</UL>
<BR>[Called By]<UL><LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
</UL>

<P><STRONG><a name="[596bac0]"></a>SyMbOl04480956</STRONG> (ARM, 200 bytes, Stack size 24 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
</UL>

<P><STRONG><a name="[596ba84]"></a>SyMbOl04493926</STRONG> (ARM, 200 bytes, Stack size 24 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
</UL>

<P><STRONG><a name="[596ba48]"></a>SyMbOl04700961</STRONG> (ARM, 572 bytes, Stack size 40 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
</UL>
<BR>[Called By]<UL><LI><a href="#[5b88bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05951341
<LI><a href="#[5b88c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05925946
</UL>

<P><STRONG><a name="[596ba0c]"></a>SyMbOl04704747</STRONG> (ARM, 236 bytes, Stack size 16 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b9d0]"></a>SyMbOl04709961</STRONG> (ARM, 236 bytes, Stack size 16 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b994]"></a>SymLoc0012105D</STRONG> (ARM, 168 bytes, Stack size 12 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596d6a4]"></a>SDpost_row_indicator_reshape</STRONG> (ARM, 168 bytes, Stack size 12 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDpost_row_indicator_reshape
</UL>
<BR>[Called By]<UL><LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
<LI><a href="#[596d9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_process_hscanlg
</UL>

<P><STRONG><a name="[596b958]"></a>SDquantize_4</STRONG> (ARM, 180 bytes, Stack size 12 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b91c]"></a>SymLoc00196CF3</STRONG> (ARM, 212 bytes, Stack size 20 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b8e0]"></a>SymLoc00141C40</STRONG> (ARM, 740 bytes, Stack size 80 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b8a4]"></a>SymLoc001DC363</STRONG> (ARM, 592 bytes, Stack size 72 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SymLoc001DC363
</UL>
<BR>[Called By]<UL><LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596d488]"></a>SymLoc00103BA2</STRONG> (ARM, 216 bytes, Stack size 20 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SymLoc00103BA2
</UL>
<BR>[Called By]<UL><LI><a href="#[596da64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_process_vscanlg
</UL>

<P><STRONG><a name="[596b868]"></a>SymLoc00110670</STRONG> (ARM, 176 bytes, Stack size 16 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b82c]"></a>SyMbOl81134522q</STRONG> (ARM, 276 bytes, Stack size 20 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b7f0]"></a>SyMbOl04556624</STRONG> (ARM, 156 bytes, Stack size 12 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596b7b4]"></a>AAAAAAAAAAB</STRONG> (ARM, 524 bytes, Stack size 56 bytes, S041.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596be44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_gausinc_check_fxy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2687c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06367781
</UL>

<P><STRONG><a name="[596b778]"></a>AAAAAAAAAAAY</STRONG> (ARM, 724 bytes, Stack size 20 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AAAAAAAAAAAY &rArr; SyMbOl04673917
</UL>
<BR>[Calls]<UL><LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S145.o(.data)
</UL>
<P><STRONG><a name="[596b73c]"></a>AAAAAAAAAAAZ</STRONG> (ARM, 848 bytes, Stack size 32 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AAAAAAAAAAAZ &rArr; SyMbOl04829463 &rArr;  SyMbOl04829463 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S145.o(.data)
</UL>
<P><STRONG><a name="[58d0198]"></a>SyMbOl04763019</STRONG> (ARM, 632 bytes, Stack size 72 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
<LI><a href="#[596be08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04526112
</UL>
<BR>[Called By]<UL><LI><a href="#[58d07b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000985FF
<LI><a href="#[5962e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007036A
<LI><a href="#[5962f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDmax_isolation
<LI><a href="#[5962f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_reorder
<LI><a href="#[596303c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDsemi_island_recheck
<LI><a href="#[5968d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C57E0
<LI><a href="#[5968d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008852A
<LI><a href="#[5968dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F4C2C
<LI><a href="#[59695b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001121FD
<LI><a href="#[596c27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hhpnfi_iterative_find_and_decode
<LI><a href="#[596d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02482439
<LI><a href="#[596d500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009BAD8
<LI><a href="#[596da28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_hsegments
<LI><a href="#[596daa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_vsegments
<LI><a href="#[5a2c85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159978
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
<LI><a href="#[5a2c94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C89D1
<LI><a href="#[5a2c988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001961B4
<LI><a href="#[5a2d414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09213116
<LI><a href="#[5a2d540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08586034
<LI><a href="#[5a2da68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08110574
<LI><a href="#[5a2df90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000737A6
<LI><a href="#[5b22f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAN
<LI><a href="#[5b23d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C7B77
<LI><a href="#[5b25fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524L
<LI><a href="#[5b26048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000FB782
<LI><a href="#[5b26084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524x
<LI><a href="#[5b261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524m
<LI><a href="#[5b28118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDvector_weighted_average
<LI><a href="#[5b28424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_perform_sweep3
<LI><a href="#[5b28460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_perform_weighted_sweep
<LI><a href="#[5b28e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0018D2C2
<LI><a href="#[5b28e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0015BFE0
<LI><a href="#[5b28f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6CAF
<LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b871cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001284DA
<LI><a href="#[5b87334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00102D5F
<LI><a href="#[5b873e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001C5B63
<LI><a href="#[5b87460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001669CE
<LI><a href="#[5b8749c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E0AE3
<LI><a href="#[5b8758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001502F5
<LI><a href="#[5b87fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08326642
</UL>
<BR>[Address Reference Count : 4]<UL><LI> S033.o(.text)
<LI> S074.o(.text)
<LI> S108.o(.text)
<LI> S139.o(.text)
</UL>
<P><STRONG><a name="[596b700]"></a>ia_pp_nnlinear_inside</STRONG> (ARM, 152 bytes, Stack size 36 bytes, S041.o(.text), UNUSED)

<P><STRONG><a name="[596c114]"></a>SyMbOl04795839</STRONG> (ARM, 492 bytes, Stack size 40 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SyMbOl04795839
</UL>
<BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
</UL>
<BR>[Called By]<UL><LI><a href="#[5969aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A313C
<LI><a href="#[596c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hhpnfi_process_finds
<LI><a href="#[5b87fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08277684
</UL>
<BR>[Address Reference Count : 3]<UL><LI> S033.o(.text)
<LI> S074.o(.text)
<LI> S139.o(.text)
</UL>
<P><STRONG><a name="[596b6c4]"></a>SyMbOl04782647</STRONG> (ARM, 172 bytes, Stack size 24 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SyMbOl04782647
</UL>
<BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
</UL>
<BR>[Called By]<UL><LI><a href="#[5b29054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000AF9A9
<LI><a href="#[5b874d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DFFDF
</UL>
<BR>[Address Reference Count : 3]<UL><LI> S033.o(.text)
<LI> S074.o(.text)
<LI> S139.o(.text)
</UL>
<P><STRONG><a name="[596b688]"></a>SyMbOl04803344</STRONG> (ARM, 76 bytes, Stack size 8 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyMbOl04803344
</UL>
<BR>[Calls]<UL><LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
</UL>
<BR>[Address Reference Count : 3]<UL><LI> S033.o(.text)
<LI> S074.o(.text)
<LI> S139.o(.text)
</UL>
<P><STRONG><a name="[596b64c]"></a>AAAAAAAAAAC</STRONG> (ARM, 964 bytes, Stack size 200 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = AAAAAAAAAAC &rArr; AAAAAAAAP
</UL>
<BR>[Calls]<UL><LI><a href="#[596be44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_gausinc_check_fxy
<LI><a href="#[596be80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAP
</UL>
<BR>[Called By]<UL><LI><a href="#[5962f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDmax_isolation
<LI><a href="#[5962f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_reorder
<LI><a href="#[5a2c424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_orient_get_module_vector
<LI><a href="#[5a2c6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmdm_lock_segments_to_clock_modules
<LI><a href="#[5a2c85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159978
<LI><a href="#[5a2c9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011544E
<LI><a href="#[5a2ca00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAB
<LI><a href="#[5a2ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E7A4C
<LI><a href="#[5b280a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAJ
<LI><a href="#[5b87154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A14E6
<LI><a href="#[5b872bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E900F
<LI><a href="#[5b872f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0014CB30
</UL>

<P><STRONG><a name="[596b610]"></a>AAAAAAAAAAD</STRONG> (ARM, 492 bytes, Stack size 56 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AAAAAAAAAAD
</UL>
<BR>[Calls]<UL><LI><a href="#[596be44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_gausinc_check_fxy
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
<LI><a href="#[5a2a804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDauto_invert
<LI><a href="#[5a2ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E7A4C
<LI><a href="#[5a2d414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09213116
<LI><a href="#[5b27d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D8FAD
<LI><a href="#[5b27d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F97F7
<LI><a href="#[5b27f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDauto_mirror
<LI><a href="#[5b876b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08933940
<LI><a href="#[5b88cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAE
</UL>

<P><STRONG><a name="[596b5d4]"></a>SymLoc000C89A9</STRONG> (ARM, 112 bytes, Stack size 0 bytes, S041.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b87334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00102D5F
</UL>

<P><STRONG><a name="[58d80a0]"></a>SyMbOl05284028</STRONG> (ARM, 32 bytes, Stack size 0 bytes, S044.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575c8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000388Gb153Data0x90
</UL>

<P><STRONG><a name="[596acec]"></a>SymLocH0001D8F8</STRONG> (ARM, 912 bytes, Stack size 96 bytes, S044.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596ae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05220650
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2bf70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C935F
</UL>

<P><STRONG><a name="[596a698]"></a>hzfi_free_temp_storage</STRONG> (ARM, 88 bytes, Stack size 16 bytes, S055.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = hzfi_free_temp_storage &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[596a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_allocate_temp_storage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S055.o(.data)
</UL>
<P><STRONG><a name="[596a65c]"></a>hzfi_allocate_temp_storage</STRONG> (ARM, 456 bytes, Stack size 112 bytes, S055.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = hzfi_allocate_temp_storage &rArr; hzfi_free_temp_storage &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[596a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_free_temp_storage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S055.o(.data)
</UL>
<P><STRONG><a name="[596a620]"></a>SyMbOl06542079</STRONG> (ARM, 248 bytes, Stack size 16 bytes, S055.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SyMbOl06542079
</UL>
<BR>[Called By]<UL><LI><a href="#[5962e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDconnection_vs_isolation
<LI><a href="#[5962ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdespeckle_isolation
<LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[58d8028]"></a>SyMbOl11292966</STRONG> (ARM, 36 bytes, Stack size 8 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = SyMbOl11292966 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[58d8370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00011C70
</UL>

<P><STRONG><a name="[58d8064]"></a>SyMbOl11246859</STRONG> (ARM, 112 bytes, Stack size 88 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Called By]<UL><LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
</UL>

<P><STRONG><a name="[596a350]"></a>SyMbOl11668822</STRONG> (ARM, 48 bytes, Stack size 0 bytes, S092.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59623d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ecc200
<LI><a href="#[5962da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinteger_to_ASCII
<LI><a href="#[5a2bd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAF
<LI><a href="#[5a2d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BDEF8
<LI><a href="#[5a2d900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009201E
<LI><a href="#[5a2d9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05087273
<LI><a href="#[5a2d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDcodeword_hash
<LI><a href="#[5a2da2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAO
<LI><a href="#[5b24eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08709677
<LI><a href="#[5b26174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000112cLc1000x1cc
<LI><a href="#[5b27fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdiscard_impossible_vectors
<LI><a href="#[5b28d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009C11C
<LI><a href="#[5b2b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00108EBD
<LI><a href="#[5b2c330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011A04D
<LI><a href="#[5b86e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001069DB
<LI><a href="#[5b87d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08484640
<LI><a href="#[5b88504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07137306
<LI><a href="#[5b88c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05838330
</UL>

<P><STRONG><a name="[596a314]"></a>SyMbOl11667610</STRONG> (ARM, 192 bytes, Stack size 8 bytes, S092.o(.text), UNUSED)

<P><STRONG><a name="[596a2d8]"></a>SyMbOl11378685</STRONG> (ARM, 52 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524m
</UL>

<P><STRONG><a name="[596a29c]"></a>SDeigenfit</STRONG> (ARM, 48 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b25fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524L
</UL>

<P><STRONG><a name="[596a260]"></a>SyMbOl11405961</STRONG> (ARM, 60 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2dc0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07656617
<LI><a href="#[5b26cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05648481
<LI><a href="#[5b88c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05925946
</UL>

<P><STRONG><a name="[596a224]"></a>SyMbOl11430759</STRONG> (ARM, 52 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b22f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAN
</UL>

<P><STRONG><a name="[596a1e8]"></a>SyMbOl11366266</STRONG> (ARM, 48 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)

<P><STRONG><a name="[596a1ac]"></a>SyMbOl11668187</STRONG> (ARM, 48 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)

<P><STRONG><a name="[58d006c]"></a>SyMbOl11369790</STRONG> (ARM, 136 bytes, Stack size 8 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyMbOl11369790
</UL>
<BR>[Called By]<UL><LI><a href="#[58d1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01372474
<LI><a href="#[5962664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E852C
<LI><a href="#[59627cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02081784
<LI><a href="#[5962e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDconnection_vs_isolation
<LI><a href="#[5962ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdespeckle_isolation
<LI><a href="#[5962f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_preorder
<LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[596d500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009BAD8
<LI><a href="#[596d80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAR
<LI><a href="#[596db90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_single_leg
<LI><a href="#[596dc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_allocate_temp_storage
<LI><a href="#[5a2bd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAF
<LI><a href="#[5a2be0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAS
<LI><a href="#[5a2c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00144D5B
<LI><a href="#[5a2c85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159978
<LI><a href="#[5a2c898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00096BB6
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
<LI><a href="#[5a2ca00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAB
<LI><a href="#[5a2df90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000737A6
<LI><a href="#[5a2e224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05390983
<LI><a href="#[5a2e314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526U
<LI><a href="#[5b22f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAN
<LI><a href="#[5b256e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06990664
<LI><a href="#[5b28118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDvector_weighted_average
<LI><a href="#[5b28f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6CAF
<LI><a href="#[5b29018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00066AE7
<LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b2b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CD303
<LI><a href="#[5b2c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAY
<LI><a href="#[5b2cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10571854
<LI><a href="#[5b2cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525i
<LI><a href="#[5b87280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0015FA81
<LI><a href="#[5b87fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08326642
</UL>

<P><STRONG><a name="[596a170]"></a>SyMbOl11468792</STRONG> (ARM, 48 bytes, Stack size 4 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SyMbOl11468792
</UL>
<BR>[Called By]<UL><LI><a href="#[5962e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDconnection_vs_isolation
<LI><a href="#[5962ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdespeckle_isolation
<LI><a href="#[5a2c898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00096BB6
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
<LI><a href="#[5a2dc0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07656617
<LI><a href="#[5b25a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07034464
<LI><a href="#[5b25fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524L
<LI><a href="#[5b2b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CD303
<LI><a href="#[5b88bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05951341
<LI><a href="#[5b88c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05925946
</UL>

<P><STRONG><a name="[596a134]"></a>SyMbOl11493103</STRONG> (ARM, 48 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2e314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526U
</UL>

<P><STRONG><a name="[596a0f8]"></a>SyMbOl11318739</STRONG> (ARM, 28 bytes, Stack size 0 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2aa98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526B
<LI><a href="#[5a2daa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07967461
<LI><a href="#[5a2dc0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07656617
<LI><a href="#[5a2e314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526U
<LI><a href="#[5b24eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08709677
<LI><a href="#[5b286f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAA
<LI><a href="#[5b2b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00108EBD
<LI><a href="#[5b2c330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011A04D
<LI><a href="#[5b87d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08484640
<LI><a href="#[5b88bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05951341
<LI><a href="#[5b88c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05925946
<LI><a href="#[5b88dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06236945
<LI><a href="#[5b88e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06410298
<LI><a href="#[5b88f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08562463
</UL>

<P><STRONG><a name="[596a0bc]"></a>SyMbOl11518312</STRONG> (ARM, 48 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2e224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05390983
<LI><a href="#[5a2e314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134526U
<LI><a href="#[5b25fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524L
<LI><a href="#[5b270b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06290326
<LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b2b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CD303
<LI><a href="#[5b87fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08326642
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
</UL>

<P><STRONG><a name="[596ea54]"></a>SyMbOl11620173</STRONG> (ARM, 72 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01372474
<LI><a href="#[5962664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E852C
<LI><a href="#[5a2c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00087C52
<LI><a href="#[5a2c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00144D5B
<LI><a href="#[5a2c85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159978
<LI><a href="#[5a2c988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001961B4
<LI><a href="#[5a2dbd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DC43B
<LI><a href="#[5a2e224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05390983
<LI><a href="#[5b256e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06990664
<LI><a href="#[5b25aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06808327
<LI><a href="#[5b25b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07100913
<LI><a href="#[5b25fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524L
<LI><a href="#[5b2600c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134424O
<LI><a href="#[5b260c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000807D3
<LI><a href="#[5b27fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdiscard_impossible_vectors
<LI><a href="#[5b28118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDvector_weighted_average
<LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b2b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CD303
<LI><a href="#[5b2c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAY
<LI><a href="#[5b87280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0015FA81
<LI><a href="#[5b876f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09495277
<LI><a href="#[5b87fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08326642
<LI><a href="#[5b88bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05951341
<LI><a href="#[5b88f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08562463
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[596a080]"></a>SymLoc00147CA5</STRONG> (ARM, 124 bytes, Stack size 8 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b28f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6CAF
<LI><a href="#[5b872bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E900F
<LI><a href="#[5b8758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001502F5
</UL>

<P><STRONG><a name="[596d1f4]"></a>SyMbOl11593490</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5962664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E852C
<LI><a href="#[59627cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02081784
<LI><a href="#[5962880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02783692
<LI><a href="#[5962e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_dismiss
<LI><a href="#[5962f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_preorder
<LI><a href="#[596a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09095808
<LI><a href="#[596d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02482439
<LI><a href="#[5a2a804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDauto_invert
<LI><a href="#[5a2c5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010D983
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
<LI><a href="#[5a2d4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09189565
<LI><a href="#[5b22f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAN
<LI><a href="#[5b23d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C7B77
<LI><a href="#[5b23dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011CC70
<LI><a href="#[5b24fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08877877
<LI><a href="#[5b24fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09035529
<LI><a href="#[5b25fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524L
<LI><a href="#[5b26048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000FB782
<LI><a href="#[5b268b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06074826
<LI><a href="#[5b26cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05648481
<LI><a href="#[5b280a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAJ
<LI><a href="#[5b28118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDvector_weighted_average
<LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b2b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CD303
<LI><a href="#[5b2c330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011A04D
<LI><a href="#[5b2c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAY
<LI><a href="#[5b871cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001284DA
<LI><a href="#[5b87370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159369
<LI><a href="#[5b8749c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E0AE3
<LI><a href="#[5b8758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001502F5
<LI><a href="#[5b8767c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08598403
<LI><a href="#[5b876f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09495277
<LI><a href="#[5b87d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08484640
<LI><a href="#[5b87fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08277684
<LI><a href="#[5b88f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08562463
<LI><a href="#[5b89008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05059742
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[596d1b8]"></a>SyMbOl11631621</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5962664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E852C
<LI><a href="#[59627cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02081784
<LI><a href="#[5962880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02783692
<LI><a href="#[5962e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_dismiss
<LI><a href="#[5962f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDisland_preorder
<LI><a href="#[596a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09095808
<LI><a href="#[596d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02482439
<LI><a href="#[5a2a804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDauto_invert
<LI><a href="#[5a2c5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010D983
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
<LI><a href="#[5a2d4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09189565
<LI><a href="#[5a2ea94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001007D8
<LI><a href="#[5b23d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C7B77
<LI><a href="#[5b23dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011CC70
<LI><a href="#[5b24fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08877877
<LI><a href="#[5b24fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09035529
<LI><a href="#[5b26048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000FB782
<LI><a href="#[5b268b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06074826
<LI><a href="#[5b28118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDvector_weighted_average
<LI><a href="#[5b2a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008F08F
<LI><a href="#[5b2b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001548CF
<LI><a href="#[5b871cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001284DA
<LI><a href="#[5b87370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159369
<LI><a href="#[5b8749c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E0AE3
<LI><a href="#[5b8758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001502F5
<LI><a href="#[5b8767c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08598403
<LI><a href="#[5b876f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl09495277
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[596ea18]"></a>SyMbOl11623050</STRONG> (ARM, 48 bytes, Stack size 0 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01285564
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
</UL>

<P><STRONG><a name="[596e9dc]"></a>SyMbOl11660286</STRONG> (ARM, 48 bytes, Stack size 0 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01285564
<LI><a href="#[5cef344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl00424071
</UL>

<P><STRONG><a name="[596d5b4]"></a>SyMbOl11643955</STRONG> (ARM, 72 bytes, Stack size 4 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SyMbOl11643955
</UL>
<BR>[Called By]<UL><LI><a href="#[5962664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E852C
<LI><a href="#[59627cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02081784
<LI><a href="#[596d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03065151
<LI><a href="#[596d500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009BAD8
<LI><a href="#[596db90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_single_leg
<LI><a href="#[5a2c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00144D5B
<LI><a href="#[5a2c85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159978
<LI><a href="#[5a2c898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00096BB6
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
<LI><a href="#[5a2c988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001961B4
<LI><a href="#[5b256e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06990664
<LI><a href="#[5b26cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05648481
<LI><a href="#[5b280a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAJ
<LI><a href="#[5b87280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0015FA81
<LI><a href="#[5b88c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05925946
<LI><a href="#[5b88dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06236945
<LI><a href="#[5b88e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06410298
<LI><a href="#[5b8aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAM
<LI><a href="#[5cefa10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134525c
</UL>

<P><STRONG><a name="[596a044]"></a>SymLoc001716AC</STRONG> (ARM, 124 bytes, Stack size 8 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b28f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6CAF
<LI><a href="#[5b29018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00066AE7
<LI><a href="#[5b8758c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001502F5
<LI><a href="#[5b8767c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08598403
</UL>

<P><STRONG><a name="[596a008]"></a>SyMbOl11341584</STRONG> (ARM, 52 bytes, Stack size 4 bytes, S092.o(.text), UNUSED)

<P><STRONG><a name="[5969fcc]"></a>SyMbOl11307856</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S092.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a2d9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05087273
<LI><a href="#[5a2daa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07967461
<LI><a href="#[5b2b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00108EBD
<LI><a href="#[5b88f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl08562463
</UL>

<P><STRONG><a name="[596d4c4]"></a>SymLoc000C0A55</STRONG> (ARM, 32 bytes, Stack size 0 bytes, S092.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[596a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007C92B
<LI><a href="#[596db90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_single_leg
<LI><a href="#[5a2c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00144D5B
<LI><a href="#[5a2c85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159978
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
<LI><a href="#[5a2c9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011544E
<LI><a href="#[5a2ca00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAB
<LI><a href="#[5b28e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0015BFE0
<LI><a href="#[5b29018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00066AE7
</UL>

<P><STRONG><a name="[596a4f4]"></a>vp_iv_edge_finder_envelope_peak_detection</STRONG> (ARM, 756 bytes, Stack size 48 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vp_iv_edge_finder_envelope_peak_detection
</UL>
<BR>[Called By]<UL><LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
<LI><a href="#[5a2c424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_orient_get_module_vector
<LI><a href="#[5a2c6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmdm_lock_segments_to_clock_modules
<LI><a href="#[5a2ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E7A4C
<LI><a href="#[5b28550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_get_edge_based_energy_info
</UL>

<P><STRONG><a name="[596a4b8]"></a>vp_iv_envelope_min_max</STRONG> (ARM, 180 bytes, Stack size 24 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vp_iv_envelope_min_max
</UL>
<BR>[Called By]<UL><LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
<LI><a href="#[5a2c424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_orient_get_module_vector
<LI><a href="#[5a2c6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmdm_lock_segments_to_clock_modules
<LI><a href="#[5a2ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E7A4C
<LI><a href="#[5b28550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_get_edge_based_energy_info
</UL>

<P><STRONG><a name="[596d53c]"></a>SymLoc0007A808</STRONG> (ARM, 72 bytes, Stack size 8 bytes, S092.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc0007A808
</UL>
<BR>[Called By]<UL><LI><a href="#[596a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007C92B
<LI><a href="#[596dc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_ell_test
<LI><a href="#[5a2ba10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAQ
<LI><a href="#[5a2bdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAD
<LI><a href="#[5a2c118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00144D5B
<LI><a href="#[5b29018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00066AE7
<LI><a href="#[5b2c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAY
<LI><a href="#[5b872f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0014CB30
</UL>

<P><STRONG><a name="[5969f90]"></a>SyMbOl11544671</STRONG> (ARM, 84 bytes, Stack size 8 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b25580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06900088
<LI><a href="#[5b28f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6CAF
</UL>

<P><STRONG><a name="[58d00e4]"></a>SyMbOl11329682</STRONG> (ARM, 72 bytes, Stack size 12 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d00a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11330883
<LI><a href="#[58d0fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01443772
<LI><a href="#[596a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06037712
<LI><a href="#[5a2bd94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAF
<LI><a href="#[5a2be0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAS
<LI><a href="#[5a2c85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159978
<LI><a href="#[5a2c9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011544E
<LI><a href="#[5b87370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00159369
</UL>

<P><STRONG><a name="[5969f54]"></a>SyMbOl11547583</STRONG> (ARM, 68 bytes, Stack size 8 bytes, S092.o(.text), UNUSED)

<P><STRONG><a name="[58d00a8]"></a>SyMbOl11330883</STRONG> (ARM, 116 bytes, Stack size 40 bytes, S092.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d1020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01293526
</UL>

<P><STRONG><a name="[58d0030]"></a>SyMbOl11443270</STRONG> (ARM, 216 bytes, Stack size 40 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01312844
<LI><a href="#[5b22880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06825402
<LI><a href="#[5b25724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07108943
<LI><a href="#[5b270b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06290326
<LI><a href="#[5b872bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E900F
<LI><a href="#[5b881f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl07140005
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
<LI><a href="#[5b8a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0013120C
<LI><a href="#[5cef8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00184A5D
</UL>

<P><STRONG><a name="[596e7fc]"></a>SymLoc0014200A</STRONG> (ARM, 552 bytes, Stack size 56 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d060c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAX
<LI><a href="#[5a2ca3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B052C
<LI><a href="#[5b28f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6CAF
<LI><a href="#[5b872f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0014CB30
</UL>

<P><STRONG><a name="[5969f18]"></a>SyMbOl11695485</STRONG> (ARM, 36 bytes, Stack size 0 bytes, S092.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2ea94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001007D8
<LI><a href="#[5b261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl81134524m
<LI><a href="#[5b26cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05648481
<LI><a href="#[5b270b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06290326
<LI><a href="#[5b28424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_perform_sweep3
<LI><a href="#[5b28460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img_tools_perform_weighted_sweep
<LI><a href="#[5b28e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0018D2C2
<LI><a href="#[5b88b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06311100
</UL>

<P><STRONG><a name="[58d6ffc]"></a>ocrfi_find</STRONG> (ARM, 1008 bytes, Stack size 152 bytes, S121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 47320<LI>Call Chain = ocrfi_find &rArr; SymLoc000A0D9D &rArr; SymLoc000960C3 &rArr; SymLoc0009E332 &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[5969cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A0D9D
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>

<P><STRONG><a name="[58d7650]"></a>SymLoc00076C36</STRONG> (ARM, 1244 bytes, Stack size 152 bytes, S121.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[5969cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A0D9D
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
</UL>

<P><STRONG><a name="[58d768c]"></a>SymLoc00071949</STRONG> (ARM, 1540 bytes, Stack size 128 bytes, S121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 21136<LI>Call Chain = SymLoc00071949 &rArr; SymLoc0002E6FC &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d77b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D52C5
<LI><a href="#[5969a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D5FF4
<LI><a href="#[5969a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A7FD9
<LI><a href="#[5969aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A313C
<LI><a href="#[5969b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008F843
<LI><a href="#[5969bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0002E6FC
<LI><a href="#[5969d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00042EB0
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
<LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>

<P><STRONG><a name="[58d72cc]"></a>SymLoc000D117A</STRONG> (ARM, 468 bytes, Stack size 36 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SymLoc000D117A
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
<LI><a href="#[58d7a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_setup_process
<LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>

<P><STRONG><a name="[59693d8]"></a>SymLoc000E3B61</STRONG> (ARM, 84 bytes, Stack size 4 bytes, S122.o(.text), UNUSED)

<P><STRONG><a name="[596939c]"></a>SymLoc00125FA1</STRONG> (ARM, 112 bytes, Stack size 12 bytes, S122.o(.text), UNUSED)

<P><STRONG><a name="[5969360]"></a>SymLoc000C86FD</STRONG> (ARM, 112 bytes, Stack size 4 bytes, S122.o(.text), UNUSED)

<P><STRONG><a name="[5969324]"></a>SymLoc0012F78E</STRONG> (ARM, 104 bytes, Stack size 12 bytes, S122.o(.text), UNUSED)

<P><STRONG><a name="[5969b58]"></a>SymLoc000878DE</STRONG> (ARM, 968 bytes, Stack size 184 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = SymLoc000878DE &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
</UL>
<BR>[Called By]<UL><LI><a href="#[5969a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A7FD9
<LI><a href="#[5969cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000960C3
</UL>

<P><STRONG><a name="[5969a68]"></a>SymLoc000A7FD9</STRONG> (ARM, 1372 bytes, Stack size 120 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = SymLoc000A7FD9 &rArr; SymLoc000878DE &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[5969b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000878DE
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
<LI><a href="#[5969504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0005D4CB
</UL>

<P><STRONG><a name="[5969bd0]"></a>SymLoc0002E6FC</STRONG> (ARM, 748 bytes, Stack size 216 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 21008<LI>Call Chain = SymLoc0002E6FC &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d77b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D52C5
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
</UL>

<P><STRONG><a name="[5969b1c]"></a>SymLoc0008F843</STRONG> (ARM, 672 bytes, Stack size 96 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SymLoc0008F843 &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
</UL>

<P><STRONG><a name="[5969aa4]"></a>SymLoc000A313C</STRONG> (ARM, 468 bytes, Stack size 824 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = SymLoc000A313C &rArr; SyMbOl04795839
</UL>
<BR>[Calls]<UL><LI><a href="#[596c114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04795839
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
</UL>

<P><STRONG><a name="[5969a2c]"></a>SymLoc000D5FF4</STRONG> (ARM, 1056 bytes, Stack size 56 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SymLoc000D5FF4
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
</UL>

<P><STRONG><a name="[58d7308]"></a>SymLoc000C546E</STRONG> (ARM, 2076 bytes, Stack size 56 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 21064<LI>Call Chain = SymLoc000C546E &rArr; SymLoc0002E6FC &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[5969504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0005D4CB
<LI><a href="#[5969540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECC78
<LI><a href="#[596975c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011976E
<LI><a href="#[5969a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D5FF4
<LI><a href="#[5969a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A7FD9
<LI><a href="#[5969aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A313C
<LI><a href="#[5969b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008F843
<LI><a href="#[5969bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0002E6FC
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
<LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>

<P><STRONG><a name="[58d7344]"></a>SymLoc000C3D2B</STRONG> (ARM, 1472 bytes, Stack size 32 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SymLoc000C3D2B &rArr; SymLoc000D6183
</UL>
<BR>[Calls]<UL><LI><a href="#[5969450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DE55B
<LI><a href="#[596948c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6183
<LI><a href="#[59694c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009776C
</UL>
<BR>[Called By]<UL><LI><a href="#[58d70ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00116963
<LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
<LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>

<P><STRONG><a name="[58d70ec]"></a>SymLoc00116963</STRONG> (ARM, 176 bytes, Stack size 32 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SymLoc00116963 &rArr; SymLoc000C3D2B &rArr; SymLoc000D6183
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3D2B
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
<LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>

<P><STRONG><a name="[58d7074]"></a>SymLoc0011C132</STRONG> (ARM, 272 bytes, Stack size 24 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2048 + Unknown Stack Size
<LI>Call Chain = SymLoc0011C132 &rArr; SymLoc000E4279 &rArr; SymLoc000A6180 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5969108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E4279
<LI><a href="#[5969450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DE55B
<LI><a href="#[596948c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6183
<LI><a href="#[59694c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009776C
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007ADF4
<LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>

<P><STRONG><a name="[5968a3c]"></a>OCRSEMITemplateProc</STRONG> (ARM, 384 bytes, Stack size 48 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1964<LI>Call Chain = OCRSEMITemplateProc &rArr; SymLoc000F4C2C &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[5968dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F4C2C
</UL>
<BR>[Called By]<UL><LI><a href="#[58d71dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EA599
</UL>

<P><STRONG><a name="[58d71a0]"></a>SymLoc000EC78A</STRONG> (ARM, 576 bytes, Stack size 40 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2016 + Unknown Stack Size
<LI>Call Chain = SymLoc000EC78A &rArr; SymLoc000CFBD3 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5968e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CFBD3
</UL>
<BR>[Called By]<UL><LI><a href="#[58d71dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EA599
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S120.o(.data)
</UL>
<P><STRONG><a name="[58d71dc]"></a>SymLoc000EA599</STRONG> (ARM, 1044 bytes, Stack size 80 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096 + Unknown Stack Size
<LI>Call Chain = SymLoc000EA599 &rArr; SymLoc000EC78A &rArr; SymLoc000CFBD3 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d71a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EC78A
<LI><a href="#[58d77f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00096D8C
<LI><a href="#[5968a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OCRSEMITemplateProc
<LI><a href="#[5968d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C57E0
<LI><a href="#[5968e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CFBD3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S120.o(.text)
</UL>
<P><STRONG><a name="[5969108]"></a>SymLoc000E4279</STRONG> (ARM, 696 bytes, Stack size 48 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024 + Unknown Stack Size
<LI>Call Chain = SymLoc000E4279 &rArr; SymLoc000A6180 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5968c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A1592
<LI><a href="#[5968c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6180
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011C132
<LI><a href="#[58d7128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010E734
</UL>

<P><STRONG><a name="[58d7128]"></a>SymLoc0010E734</STRONG> (ARM, 140 bytes, Stack size 16 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2040 + Unknown Stack Size
<LI>Call Chain = SymLoc0010E734 &rArr; SymLoc000E4279 &rArr; SymLoc000A6180 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5968c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A1592
<LI><a href="#[5968c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6180
<LI><a href="#[5969108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E4279
</UL>
<BR>[Address Reference Count : 2]<UL><LI> S120.o(.text)
<LI> S120.o(.data)
</UL>
<P><STRONG><a name="[58d7038]"></a>SymLoc00140E3E</STRONG> (ARM, 2508 bytes, Stack size 112 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2028 + Unknown Stack Size
<LI>Call Chain = SymLoc00140E3E &rArr; SymLoc000F4C2C &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[5968ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010FCAC
<LI><a href="#[5968ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001760A9
<LI><a href="#[5968c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001103E6
<LI><a href="#[5968cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0016001C
<LI><a href="#[5968d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C57E0
<LI><a href="#[5968dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F4C2C
<LI><a href="#[5968dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BE504
<LI><a href="#[5968eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B3021
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S120.o(.data)
</UL>
<P><STRONG><a name="[58d8208]"></a>AAAAAAAAAAAL</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S148.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d8370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00011C70
</UL>

<P><STRONG><a name="[58d81cc]"></a>AAAAAAAAAAAQ</STRONG> (ARM, 88 bytes, Stack size 88 bytes, S148.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = AAAAAAAAAAAQ
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Called By]<UL><LI><a href="#[58d82f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000119F0
</UL>

<P><STRONG><a name="[596d884]"></a>AAAAAAAAAAAM</STRONG> (ARM, 12 bytes, Stack size 0 bytes, S148.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[596d500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009BAD8
<LI><a href="#[596dc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_ell_test
</UL>

<P><STRONG><a name="[596d848]"></a>AAAAAAAAAAAN</STRONG> (ARM, 12 bytes, Stack size 0 bytes, S148.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[596db90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_single_leg
<LI><a href="#[5a2c8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001022BA
</UL>

<P><STRONG><a name="[59684d8]"></a>AAAAAAAAAAAO</STRONG> (ARM, 28 bytes, Stack size 8 bytes, S148.o(.text), UNUSED)

<P><STRONG><a name="[596849c]"></a>AAAAAAAAAAAP</STRONG> (ARM, 28 bytes, Stack size 8 bytes, S148.o(.text), UNUSED)

<P><STRONG><a name="[596d80c]"></a>AAAAAAAAAAAR</STRONG> (ARM, 484 bytes, Stack size 384 bytes, S148.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
</UL>

<P><STRONG><a name="[58d5724]"></a>inflate_codes_new</STRONG> (ARM, 76 bytes, Stack size 24 bytes, infcodes.o(.text), UNUSED)

<P><STRONG><a name="[58d579c]"></a>inflate_codes</STRONG> (ARM, 1472 bytes, Stack size 48 bytes, infcodes.o(.text), UNUSED)

<P><STRONG><a name="[58d5760]"></a>inflate_codes_free</STRONG> (ARM, 20 bytes, Stack size 0 bytes, infcodes.o(.text), UNUSED)

<P><STRONG><a name="[58d5670]"></a>inflate_trees_bits</STRONG> (ARM, 188 bytes, Stack size 56 bytes, inftrees.o(.text), UNUSED)

<P><STRONG><a name="[58d5634]"></a>inflate_trees_dynamic</STRONG> (ARM, 360 bytes, Stack size 80 bytes, inftrees.o(.text), UNUSED)

<P><STRONG><a name="[58d55f8]"></a>inflate_trees_fixed</STRONG> (ARM, 304 bytes, Stack size 4 bytes, inftrees.o(.text), UNUSED)

<P><STRONG><a name="[58d56e8]"></a>inflate_flush</STRONG> (ARM, 308 bytes, Stack size 32 bytes, infutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[58d5274]"></a>jinit_c_coef_controller</STRONG> (ARM, 236 bytes, Stack size 32 bytes, jccoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jinit_c_coef_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d5184]"></a>jinit_color_converter</STRONG> (ARM, 624 bytes, Stack size 24 bytes, jccolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_color_converter
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d510c]"></a>jinit_forward_dct</STRONG> (ARM, 156 bytes, Stack size 16 bytes, jcdctmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jinit_forward_dct
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[59657d8]"></a>jpeg_make_c_derived_tbl</STRONG> (ARM, 548 bytes, Stack size 1352 bytes, jchuff.o(.text), UNUSED)

<P><STRONG><a name="[596579c]"></a>jpeg_gen_optimal_table</STRONG> (ARM, 596 bytes, Stack size 2128 bytes, jchuff.o(.text), UNUSED)

<P><STRONG><a name="[58d50d0]"></a>jinit_huff_encoder</STRONG> (ARM, 88 bytes, Stack size 8 bytes, jchuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jinit_huff_encoder
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d5238]"></a>jinit_c_main_controller</STRONG> (ARM, 176 bytes, Stack size 24 bytes, jcmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_c_main_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d51fc]"></a>jinit_c_master_control</STRONG> (ARM, 192 bytes, Stack size 24 bytes, jcmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_c_master_control
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d5094]"></a>jinit_phuff_encoder</STRONG> (ARM, 84 bytes, Stack size 8 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jinit_phuff_encoder
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d51c0]"></a>jinit_c_prep_controller</STRONG> (ARM, 220 bytes, Stack size 24 bytes, jcprepct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_c_prep_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d5148]"></a>jinit_downsampler</STRONG> (ARM, 352 bytes, Stack size 24 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_downsampler
</UL>
<BR>[Called By]<UL><LI><a href="#[58da4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_compress_master
</UL>

<P><STRONG><a name="[58d3a14]"></a>jpeg_get_small</STRONG> (ARM, 8 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[58d3a8c]"></a>jpeg_free_small</STRONG> (ARM, 8 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[58d3a50]"></a>jpeg_get_large</STRONG> (ARM, 8 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[58d3ac8]"></a>jpeg_free_large</STRONG> (ARM, 8 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[58d39d8]"></a>jpeg_mem_available</STRONG> (ARM, 8 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)

<P><STRONG><a name="[58d3924]"></a>jpeg_open_backing_store</STRONG> (ARM, 24 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)

<P><STRONG><a name="[58d399c]"></a>jpeg_mem_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)

<P><STRONG><a name="[58d3960]"></a>jpeg_mem_term</STRONG> (ARM, 4 bytes, Stack size 0 bytes, jmemnobs.o(.text), UNUSED)

<P><STRONG><a name="[5964eb4]"></a>jdiv_round_up</STRONG> (ARM, 12 bytes, Stack size 0 bytes, jutils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[596696c]"></a>jround_up</STRONG> (ARM, 28 bytes, Stack size 8 bytes, jutils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[5964374]"></a>jcopy_sample_rows</STRONG> (ARM, 56 bytes, Stack size 24 bytes, jutils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[59633c0]"></a>jcopy_block_row</STRONG> (ARM, 20 bytes, Stack size 0 bytes, jutils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[58d38e8]"></a>jzero_far</STRONG> (ARM, 4 bytes, Stack size 0 bytes, jutils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd3360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[59632d0]"></a>getTable</STRONG> (ARM, 424 bytes, Stack size 8 bytes, MonoColorTools.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d1ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFIP
</UL>

<P><STRONG><a name="[58d1ee4]"></a>CFIP</STRONG> (ARM, 2508 bytes, Stack size 200 bytes, MonoColorTools.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d1c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_memset
<LI><a href="#[59632d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTable
<LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[58d1e6c]"></a>mfth</STRONG> (ARM, 496 bytes, Stack size 64 bytes, MonoColorTools.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[596a5e4]"></a>SDcodewords_to_escaped_ASCII</STRONG> (ARM, 244 bytes, Stack size 202928 bytes, S005.o(.text), UNUSED)

<P><STRONG><a name="[59625ec]"></a>SyMbOl02454714</STRONG> (ARM, 752 bytes, Stack size 32 bytes, S033.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[59625b0]"></a>dm_mirror_square_data</STRONG> (ARM, 112 bytes, Stack size 16 bytes, S033.o(.text), UNUSED)

<P><STRONG><a name="[5962574]"></a>SyMbOl03186000</STRONG> (ARM, 80 bytes, Stack size 0 bytes, S033.o(.text), UNUSED)

<P><STRONG><a name="[596d668]"></a>SyMbOl03042738</STRONG> (ARM, 5412 bytes, Stack size 56360 bytes, S033.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
<LI><a href="#[596bafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04545683
<LI><a href="#[596d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02482439
</UL>

<P><STRONG><a name="[5962100]"></a>SyMbOl03714963</STRONG> (ARM, 804 bytes, Stack size 112 bytes, S038.o(.text), UNUSED)

<P><STRONG><a name="[59620c4]"></a>SyMbOl03762060</STRONG> (ARM, 1024 bytes, Stack size 160 bytes, S038.o(.text), UNUSED)

<P><STRONG><a name="[5962088]"></a>SyMbOl03719463</STRONG> (ARM, 400 bytes, Stack size 48 bytes, S038.o(.text), UNUSED)

<P><STRONG><a name="[596c150]"></a>SyMbOl03778602</STRONG> (ARM, 380 bytes, Stack size 64 bytes, S038.o(.text), UNUSED)

<P><STRONG><a name="[5a2f0ac]"></a>SyMbOl05222885</STRONG> (ARM, 488 bytes, Stack size 104 bytes, S043.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[596abfc]"></a>SyMbOl05152025</STRONG> (ARM, 180 bytes, Stack size 20 bytes, S043.o(.text), UNUSED)

<P><STRONG><a name="[596ac38]"></a>SyMbOl05121891</STRONG> (ARM, 196 bytes, Stack size 16 bytes, S043.o(.text), UNUSED)

<P><STRONG><a name="[596abc0]"></a>SyMbOl05280040</STRONG> (ARM, 136 bytes, Stack size 16 bytes, S043.o(.text), UNUSED)

<P><STRONG><a name="[5a2f070]"></a>AAAAAAAAAAK</STRONG> (ARM, 380 bytes, Stack size 24 bytes, S043.o(.text), UNUSED)

<P><STRONG><a name="[5a2e224]"></a>SyMbOl05390983</STRONG> (ARM, 1800 bytes, Stack size 2616 bytes, S047.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5a2e1e8]"></a>SyMbOl05467562</STRONG> (ARM, 176 bytes, Stack size 24 bytes, S047.o(.text), UNUSED)

<P><STRONG><a name="[596e838]"></a>SymLoc000A0E96</STRONG> (ARM, 272 bytes, Stack size 32 bytes, S047.o(.text), UNUSED)

<P><STRONG><a name="[5a2e1ac]"></a>lt_new_start_stop_tracker</STRONG> (ARM, 236 bytes, Stack size 32 bytes, S047.o(.text), UNUSED)

<P><STRONG><a name="[5a2e170]"></a>SyMbOl05420601</STRONG> (ARM, 824 bytes, Stack size 56 bytes, S047.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01372474
</UL>

<P><STRONG><a name="[5a2e134]"></a>SyMbOl05445434</STRONG> (ARM, 908 bytes, Stack size 56 bytes, S047.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01372474
</UL>

<P><STRONG><a name="[5a2e0f8]"></a>SymLoc000F70FA</STRONG> (ARM, 804 bytes, Stack size 248 bytes, S047.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>

<P><STRONG><a name="[5a2e0bc]"></a>SymLoc0016885B</STRONG> (ARM, 92 bytes, Stack size 32 bytes, S047.o(.text), UNUSED)

<P><STRONG><a name="[5a2e080]"></a>AAAAAAAAAAM</STRONG> (ARM, 432 bytes, Stack size 64 bytes, S047.o(.text), UNUSED)

<P><STRONG><a name="[5a2e044]"></a>SymLoc001665FC</STRONG> (ARM, 148 bytes, Stack size 32 bytes, S047.o(.text), UNUSED)

<P><STRONG><a name="[5a2e008]"></a>SyMbOl05391592</STRONG> (ARM, 876 bytes, Stack size 120 bytes, S047.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5a2dfcc]"></a>SyMbOl05462130</STRONG> (ARM, 840 bytes, Stack size 120 bytes, S047.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[596a5a8]"></a>SyMbOl06037712</STRONG> (ARM, 1288 bytes, Stack size 6648 bytes, S050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_envelope_min_max
<LI><a href="#[596a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_edge_finder_envelope_peak_detection
<LI><a href="#[596a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06542079
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
</UL>

<P><STRONG><a name="[596c0d8]"></a>SyMbOl08048802</STRONG> (ARM, 432 bytes, Stack size 8 bytes, S066.o(.text), UNUSED)

<P><STRONG><a name="[5a2d48c]"></a>AAAAAAAAAAL</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S073.o(.text), UNUSED)

<P><STRONG><a name="[5a2d450]"></a>SyMbOl09119872</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S073.o(.text), UNUSED)

<P><STRONG><a name="[596a56c]"></a>SyMbOl09095808</STRONG> (ARM, 1264 bytes, Stack size 199568 bytes, S073.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
</UL>

<P><STRONG><a name="[5a2d270]"></a>SymLoc00000000Gb163Data0xc</STRONG> (ARM, 8 bytes, Stack size 0 bytes, S091.o(.text), UNUSED)

<P><STRONG><a name="[58d03b4]"></a>SDdecode_test</STRONG> (ARM, 8 bytes, Stack size 0 bytes, S091.o(.text), UNUSED)

<P><STRONG><a name="[5a2d180]"></a>SymLoc0014BE4F</STRONG> (ARM, 592 bytes, Stack size 56 bytes, S093.o(.text), UNUSED)

<P><STRONG><a name="[5a2d144]"></a>SymLoc0019A1B2</STRONG> (ARM, 232 bytes, Stack size 40 bytes, S093.o(.text), UNUSED)

<P><STRONG><a name="[5a2d108]"></a>SyMbOl11818712</STRONG> (ARM, 40 bytes, Stack size 16 bytes, S093.o(.text), UNUSED)

<P><STRONG><a name="[5a2d0cc]"></a>SyMbOl09995147</STRONG> (ARM, 132 bytes, Stack size 12 bytes, S093.o(.text), UNUSED)

<P><STRONG><a name="[596e964]"></a>SyMbOl11788218</STRONG> (ARM, 160 bytes, Stack size 12 bytes, S093.o(.text), UNUSED)

<P><STRONG><a name="[596e9a0]"></a>SyMbOl11759525</STRONG> (ARM, 440 bytes, Stack size 40 bytes, S093.o(.text), UNUSED)

<P><STRONG><a name="[596e784]"></a>SymLocH00028AF0</STRONG> (ARM, 212 bytes, Stack size 72 bytes, S093.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00016B46
</UL>

<P><STRONG><a name="[596e748]"></a>SymLocH00028C38</STRONG> (ARM, 100 bytes, Stack size 4 bytes, S093.o(.text), UNUSED)

<P><STRONG><a name="[5968a00]"></a>SyMbOl11808193</STRONG> (ARM, 460 bytes, Stack size 104 bytes, S093.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5a2d090]"></a>SymLoc000C0AF8</STRONG> (ARM, 80 bytes, Stack size 24 bytes, S093.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[59624c0]"></a>SyMbOl81134524v</STRONG> (ARM, 44 bytes, Stack size 4 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[596d140]"></a>SyMbOl81134524w</STRONG> (ARM, 36 bytes, Stack size 0 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[5962484]"></a>SymLoc213154434901ce6c</STRONG> (ARM, 36 bytes, Stack size 0 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[596d17c]"></a>SyMbOl81134524u</STRONG> (ARM, 28 bytes, Stack size 0 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[596d104]"></a>SymLoc213154434901ceac</STRONG> (ARM, 28 bytes, Stack size 0 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[5962448]"></a>SymLoc213154434901cec8</STRONG> (ARM, 56 bytes, Stack size 16 bytes, S094.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcb5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[5dcc574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>

<P><STRONG><a name="[596e7c0]"></a>SymLoc213154434901cf54</STRONG> (ARM, 56 bytes, Stack size 16 bytes, S094.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcb5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[5dcc574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>

<P><STRONG><a name="[596240c]"></a>SymLoc213154434901cf08</STRONG> (ARM, 64 bytes, Stack size 16 bytes, S094.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcb854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[5dcd5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[5dce608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[596e928]"></a>SymLoc0001F073</STRONG> (ARM, 64 bytes, Stack size 16 bytes, S094.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcb854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[5dcd5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[5dce608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[5a2cfa0]"></a>SymLocH00028EEC</STRONG> (ARM, 36 bytes, Stack size 0 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[5a2cf64]"></a>SymLocH00028EFE</STRONG> (ARM, 180 bytes, Stack size 32 bytes, S094.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcd2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5dcd5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[5dcda8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[5dcde4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5dce248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5e04874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[5a2cf28]"></a>pp_vector_swap</STRONG> (ARM, 28 bytes, Stack size 4 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[5a2ceec]"></a>pp_point_swap</STRONG> (ARM, 28 bytes, Stack size 4 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[5a2ceb0]"></a>d_segment_swap</STRONG> (ARM, 28 bytes, Stack size 20 bytes, S094.o(.text), UNUSED)

<P><STRONG><a name="[5a2c6b8]"></a>dmdm_lock_segments_to_clock_modules</STRONG> (ARM, 888 bytes, Stack size 37672 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_envelope_min_max
<LI><a href="#[596a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_edge_finder_envelope_peak_detection
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>

<P><STRONG><a name="[596d500]"></a>SymLoc0009BAD8</STRONG> (ARM, 1948 bytes, Stack size 56888 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596d884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAM
</UL>

<P><STRONG><a name="[596d44c]"></a>SymLoc00167EEE</STRONG> (ARM, 52 bytes, Stack size 16 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[596d410]"></a>SymLoc00175A7B</STRONG> (ARM, 168 bytes, Stack size 16 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[5a2c0dc]"></a>SymLoc00063DF1</STRONG> (ARM, 72 bytes, Stack size 12 bytes, S138.o(.text), UNUSED)

<P><STRONG><a name="[596a530]"></a>SymLoc0007C92B</STRONG> (ARM, 1724 bytes, Stack size 279312 bytes, S138.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d07b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000985FF
<LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
<LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
</UL>

<P><STRONG><a name="[596acb0]"></a>AAAAAAAAAAAC</STRONG> (ARM, 64 bytes, Stack size 8 bytes, S145.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[596ac74]"></a>AAAAAAAAAAAE</STRONG> (ARM, 232 bytes, Stack size 24 bytes, S145.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[5a2bdd0]"></a>AAAAAAAAAAAD</STRONG> (ARM, 460 bytes, Stack size 2072 bytes, S145.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
</UL>

<P><STRONG><a name="[5a2bd94]"></a>AAAAAAAAAAAF</STRONG> (ARM, 1260 bytes, Stack size 2464 bytes, S145.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
</UL>

<P><STRONG><a name="[5a2f034]"></a>AAAAAAAAAAAG</STRONG> (ARM, 368 bytes, Stack size 40 bytes, S145.o(.text), UNUSED)

<P><STRONG><a name="[5a2eff8]"></a>AAAAAAAAAAAH</STRONG> (ARM, 368 bytes, Stack size 40 bytes, S145.o(.text), UNUSED)

<P><STRONG><a name="[5a2bac4]"></a>AAAAAAAAAAN</STRONG> (ARM, 608 bytes, Stack size 48 bytes, S146.o(.text), UNUSED)

<P><STRONG><a name="[5a2ba88]"></a>AAAAAAAAAAO</STRONG> (ARM, 832 bytes, Stack size 80 bytes, S146.o(.text), UNUSED)

<P><STRONG><a name="[5a2ba4c]"></a>AAAAAAAAAAP</STRONG> (ARM, 260 bytes, Stack size 16 bytes, S146.o(.text), UNUSED)

<P><STRONG><a name="[5a2ba10]"></a>AAAAAAAAAAQ</STRONG> (ARM, 568 bytes, Stack size 32 bytes, S146.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
</UL>

<P><STRONG><a name="[58d051c]"></a>AAAAAAAAAAR</STRONG> (ARM, 1072 bytes, Stack size 56 bytes, S146.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = AAAAAAAAAAR &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S013.o(.text)
</UL>
<P><STRONG><a name="[58d04e0]"></a>AAAAAAAAAAS</STRONG> (ARM, 392 bytes, Stack size 32 bytes, S146.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[58d04a4]"></a>AAAAAAAAAAT</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S146.o(.text), UNUSED)

<P><STRONG><a name="[5967d94]"></a>inflate_fast</STRONG> (ARM, 924 bytes, Stack size 56 bytes, inffast.o(.text), UNUSED)

<P><STRONG><a name="[5965f1c]"></a>jpeg_fdct_ifast</STRONG> (ARM, 508 bytes, Stack size 28 bytes, jfdctfst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = jpeg_fdct_ifast
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcdctmgr.o(.text)
</UL>
<P><STRONG><a name="[5965ee0]"></a>jpeg_fdct_islow</STRONG> (ARM, 732 bytes, Stack size 32 bytes, jfdctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jpeg_fdct_islow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcdctmgr.o(.text)
</UL>
<P><STRONG><a name="[5a2d9f0]"></a>SDcodeword_hash</STRONG> (ARM, 356 bytes, Stack size 5904 bytes, S001.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5904<LI>Call Chain = SDcodeword_hash
</UL>
<BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5962da8]"></a>SDinteger_to_ASCII</STRONG> (ARM, 432 bytes, Stack size 56 bytes, S004.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
</UL>

<P><STRONG><a name="[5a2a840]"></a>SDcircularize_square_bullseye</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S004.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2a78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDhypothesize_inverted
</UL>

<P><STRONG><a name="[5a2ef80]"></a>SDsingular_value_decomposition</STRONG> (ARM, 792 bytes, Stack size 48 bytes, S009.o(.text), UNUSED)

<P><STRONG><a name="[5a2efbc]"></a>SDset_bullseye_to_surround</STRONG> (ARM, 788 bytes, Stack size 48 bytes, S009.o(.text), UNUSED)

<P><STRONG><a name="[5a2bd1c]"></a>AAAAAAAAAAF</STRONG> (ARM, 736 bytes, Stack size 72 bytes, S009.o(.text), UNUSED)

<P><STRONG><a name="[5a2e4b8]"></a>SymLocH0002BD2C</STRONG> (ARM, 596 bytes, Stack size 128 bytes, S011.o(.text), UNUSED)

<P><STRONG><a name="[5a2e47c]"></a>SymLocH0002BE36</STRONG> (ARM, 604 bytes, Stack size 128 bytes, S011.o(.text), UNUSED)

<P><STRONG><a name="[5a2ef08]"></a>SyMbOl00330997</STRONG> (ARM, 348 bytes, Stack size 88 bytes, S011.o(.text), UNUSED)

<P><STRONG><a name="[5a2ef44]"></a>SDvestigial_ternary_coding</STRONG> (ARM, 348 bytes, Stack size 88 bytes, S011.o(.text), UNUSED)

<P><STRONG><a name="[5b8a958]"></a>AAAAAAAAAAH</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S013.o(.text), UNUSED)

<P><STRONG><a name="[5a2ee90]"></a>SyMbOl00584488</STRONG> (ARM, 572 bytes, Stack size 72 bytes, S013.o(.text), UNUSED)

<P><STRONG><a name="[5a2eecc]"></a>SyMbOl00476388</STRONG> (ARM, 508 bytes, Stack size 72 bytes, S013.o(.text), UNUSED)

<P><STRONG><a name="[5a2bce0]"></a>AAAAAAAAAAG</STRONG> (ARM, 1036 bytes, Stack size 80 bytes, S013.o(.text), UNUSED)

<P><STRONG><a name="[5a2eb84]"></a>SyMbOl13171259</STRONG> (ARM, 496 bytes, Stack size 56 bytes, S015.o(.text), UNUSED)

<P><STRONG><a name="[5a2eb48]"></a>SyMbOl13171300</STRONG> (ARM, 416 bytes, Stack size 56 bytes, S015.o(.text), UNUSED)

<P><STRONG><a name="[5a2ee18]"></a>SyMbOl00968599</STRONG> (ARM, 424 bytes, Stack size 56 bytes, S017.o(.text), UNUSED)

<P><STRONG><a name="[5a2ee54]"></a>SyMbOl00902579</STRONG> (ARM, 424 bytes, Stack size 56 bytes, S017.o(.text), UNUSED)

<P><STRONG><a name="[59623d0]"></a>dm_ecc200</STRONG> (ARM, 608 bytes, Stack size 40 bytes, S030.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>

<P><STRONG><a name="[5b8974c]"></a>dm_get_fwd_bits_and_advance</STRONG> (ARM, 112 bytes, Stack size 8 bytes, S030.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dm_get_fwd_bits_and_advance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S030.o(.constdata)
</UL>
<P><STRONG><a name="[5b89710]"></a>dm_get_rev_bits_and_advance</STRONG> (ARM, 120 bytes, Stack size 12 bytes, S030.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dm_get_rev_bits_and_advance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S030.o(.constdata)
</UL>
<P><STRONG><a name="[5a2c4d8]"></a>dm_ecc000_to_ecc140</STRONG> (ARM, 2660 bytes, Stack size 352 bytes, S030.o(.text), UNUSED)

<P><STRONG><a name="[5962538]"></a>SyMbOl03261614</STRONG> (ARM, 1848 bytes, Stack size 40 bytes, S035.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[59624fc]"></a>SyMbOl03473122</STRONG> (ARM, 1944 bytes, Stack size 48 bytes, S036.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b89224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000258Lc610xac
</UL>

<P><STRONG><a name="[5a2d9b4]"></a>SyMbOl05087273</STRONG> (ARM, 1340 bytes, Stack size 15336 bytes, S042.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 17232 + Unknown Stack Size
<LI>Call Chain = SyMbOl05087273 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[5969fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11307856
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2dea0]"></a>SyMbOl06261676</STRONG> (ARM, 160 bytes, Stack size 24344 bytes, S048.o(.text), UNUSED)

<P><STRONG><a name="[5b88324]"></a>SyMbOl07048329</STRONG> (ARM, 44 bytes, Stack size 8 bytes, S058.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01345593
</UL>

<P><STRONG><a name="[5b882e8]"></a>SyMbOl07268987</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S058.o(.text), UNUSED)

<P><STRONG><a name="[5a2eda0]"></a>SyMbOl07020873</STRONG> (ARM, 388 bytes, Stack size 56 bytes, S058.o(.text), UNUSED)

<P><STRONG><a name="[5a2eddc]"></a>SyMbOl06837157</STRONG> (ARM, 372 bytes, Stack size 56 bytes, S058.o(.text), UNUSED)

<P><STRONG><a name="[5a2bca4]"></a>AAAAAAAAAAI</STRONG> (ARM, 616 bytes, Stack size 160 bytes, S058.o(.text), UNUSED)

<P><STRONG><a name="[5a2bc68]"></a>AAAAAAAAAAJ</STRONG> (ARM, 584 bytes, Stack size 152 bytes, S058.o(.text), UNUSED)

<P><STRONG><a name="[5b882ac]"></a>SyMbOl06761983</STRONG> (ARM, 228 bytes, Stack size 24 bytes, S058.o(.text), UNUSED)

<P><STRONG><a name="[5a2d978]"></a>SyMbOl07800463</STRONG> (ARM, 268 bytes, Stack size 64 bytes, S067.o(.text), UNUSED)

<P><STRONG><a name="[5b87c94]"></a>SymLoc0014E24A</STRONG> (ARM, 384 bytes, Stack size 64 bytes, S070.o(.text), UNUSED)

<P><STRONG><a name="[5a2d93c]"></a>SyMbOl08452120</STRONG> (ARM, 800 bytes, Stack size 9640 bytes, S070.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 11536 + Unknown Stack Size
<LI>Call Chain = SyMbOl08452120 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5b87118]"></a>SyMbOl09239992</STRONG> (ARM, 104 bytes, Stack size 8 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b870dc]"></a>SyMbOl08780525</STRONG> (ARM, 428 bytes, Stack size 48 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b870a0]"></a>SyMbOl09049980</STRONG> (ARM, 84 bytes, Stack size 16 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b87064]"></a>SyMbOl09067326</STRONG> (ARM, 148 bytes, Stack size 24 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b87028]"></a>SyMbOl09144818</STRONG> (ARM, 1704 bytes, Stack size 160 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b86fec]"></a>SyMbOl09373767</STRONG> (ARM, 536 bytes, Stack size 96 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b86fb0]"></a>SyMbOl09347942</STRONG> (ARM, 204 bytes, Stack size 16 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b86f74]"></a>SyMbOl09404085</STRONG> (ARM, 80 bytes, Stack size 0 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b86f38]"></a>SyMbOl81134526c</STRONG> (ARM, 44 bytes, Stack size 0 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5a2d414]"></a>SyMbOl09213116</STRONG> (ARM, 3908 bytes, Stack size 10152 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d0684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAW
<LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
<LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
</UL>

<P><STRONG><a name="[5b86efc]"></a>SyMbOl09269746</STRONG> (ARM, 72 bytes, Stack size 0 bytes, S074.o(.text), UNUSED)

<P><STRONG><a name="[5b86830]"></a>SyMbOl81134522r</STRONG> (ARM, 276 bytes, Stack size 608 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdetect_right_angles
</UL>

<P><STRONG><a name="[5b867f4]"></a>SyMbOl12525400</STRONG> (ARM, 180 bytes, Stack size 96 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5a2ecec]"></a>SyMbOl12555733</STRONG> (ARM, 824 bytes, Stack size 56 bytes, S077.o(.text), UNUSED)

<P><STRONG><a name="[5a2ecb0]"></a>SyMbOl12573406</STRONG> (ARM, 824 bytes, Stack size 56 bytes, S077.o(.text), UNUSED)

<P><STRONG><a name="[5a2ec74]"></a>SyMbOl12593211</STRONG> (ARM, 876 bytes, Stack size 56 bytes, S079.o(.text), UNUSED)

<P><STRONG><a name="[5a2ec38]"></a>SyMbOl12600922</STRONG> (ARM, 824 bytes, Stack size 56 bytes, S079.o(.text), UNUSED)

<P><STRONG><a name="[5a2ebfc]"></a>SyMbOl12636043</STRONG> (ARM, 204 bytes, Stack size 32 bytes, S080.o(.text), UNUSED)

<P><STRONG><a name="[5a2ebc0]"></a>SyMbOl12661590</STRONG> (ARM, 204 bytes, Stack size 32 bytes, S080.o(.text), UNUSED)

<P><STRONG><a name="[5a2ed28]"></a>SyMbOl10737059</STRONG> (ARM, 408 bytes, Stack size 40 bytes, S089.o(.text), UNUSED)

<P><STRONG><a name="[5a2ed64]"></a>SyMbOl10563792</STRONG> (ARM, 408 bytes, Stack size 40 bytes, S089.o(.text), UNUSED)

<P><STRONG><a name="[5a2bd58]"></a>AAAAAAAAAAE</STRONG> (ARM, 552 bytes, Stack size 40 bytes, S089.o(.text), UNUSED)

<P><STRONG><a name="[5b2c81c]"></a>SymLoc000FF8E2</STRONG> (ARM, 288 bytes, Stack size 40 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
</UL>

<P><STRONG><a name="[5a2d810]"></a>SymLocH00043E24</STRONG> (ARM, 4 bytes, Stack size 0 bytes, S095.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2d84c]"></a>SymLocH00029DA0</STRONG> (ARM, 512 bytes, Stack size 224 bytes, S096.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2120 + Unknown Stack Size
<LI>Call Chain = SymLocH00029DA0 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2e440]"></a>SymLocH000449D8</STRONG> (ARM, 188 bytes, Stack size 48 bytes, S097.o(.text), UNUSED)

<P><STRONG><a name="[5a2e404]"></a>SymLocH00044A82</STRONG> (ARM, 188 bytes, Stack size 56 bytes, S097.o(.text), UNUSED)

<P><STRONG><a name="[5a2e800]"></a>SymLoc001355E2</STRONG> (ARM, 684 bytes, Stack size 96 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e5a8]"></a>SymLoc001559AD</STRONG> (ARM, 652 bytes, Stack size 96 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e8f0]"></a>SymLoc00129FC7</STRONG> (ARM, 636 bytes, Stack size 96 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e710]"></a>SymLoc00141FA3</STRONG> (ARM, 648 bytes, Stack size 96 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e9e0]"></a>SymLoc0011D7B0</STRONG> (ARM, 640 bytes, Stack size 104 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e5e4]"></a>SymLoc00150A8C</STRONG> (ARM, 604 bytes, Stack size 96 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e56c]"></a>SymLoc001658D2</STRONG> (ARM, 644 bytes, Stack size 104 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e620]"></a>SymLoc00149C5C</STRONG> (ARM, 612 bytes, Stack size 96 bytes, S099.o(.text), UNUSED)

<P><STRONG><a name="[5a2e4f4]"></a>SymLoc001A15C4</STRONG> (ARM, 328 bytes, Stack size 56 bytes, S101.o(.text), UNUSED)

<P><STRONG><a name="[5a2e7c4]"></a>SymLoc0013B3EB</STRONG> (ARM, 404 bytes, Stack size 56 bytes, S101.o(.text), UNUSED)

<P><STRONG><a name="[5a2e8b4]"></a>SymLoc0012AB65</STRONG> (ARM, 328 bytes, Stack size 56 bytes, S101.o(.text), UNUSED)

<P><STRONG><a name="[5a2e6d4]"></a>SymLoc0014491B</STRONG> (ARM, 364 bytes, Stack size 56 bytes, S101.o(.text), UNUSED)

<P><STRONG><a name="[5a2e698]"></a>SymLoc00144F18</STRONG> (ARM, 368 bytes, Stack size 56 bytes, S105.o(.text), UNUSED)

<P><STRONG><a name="[5a2e9a4]"></a>SymLoc00122B43</STRONG> (ARM, 428 bytes, Stack size 56 bytes, S105.o(.text), UNUSED)

<P><STRONG><a name="[5a2d900]"></a>SymLoc0009201E</STRONG> (ARM, 448 bytes, Stack size 1416 bytes, S107.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = SymLoc0009201E
</UL>
<BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2df90]"></a>SymLoc000737A6</STRONG> (ARM, 852 bytes, Stack size 1336 bytes, S108.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>

<P><STRONG><a name="[5a2eb0c]"></a>SymLoc000EE786</STRONG> (ARM, 424 bytes, Stack size 56 bytes, S109.o(.text), UNUSED)

<P><STRONG><a name="[5a2e788]"></a>SymLoc0013D79E</STRONG> (ARM, 360 bytes, Stack size 56 bytes, S109.o(.text), UNUSED)

<P><STRONG><a name="[5a2e92c]"></a>SymLoc00129EEF</STRONG> (ARM, 440 bytes, Stack size 56 bytes, S111.o(.text), UNUSED)

<P><STRONG><a name="[5a2e74c]"></a>SymLoc0014023C</STRONG> (ARM, 348 bytes, Stack size 56 bytes, S111.o(.text), UNUSED)

<P><STRONG><a name="[5a2e65c]"></a>SymLoc0014692A</STRONG> (ARM, 440 bytes, Stack size 56 bytes, S111.o(.text), UNUSED)

<P><STRONG><a name="[5a2ea1c]"></a>SymLoc0011C116</STRONG> (ARM, 348 bytes, Stack size 56 bytes, S111.o(.text), UNUSED)

<P><STRONG><a name="[5a2ea58]"></a>SymLoc0010C206</STRONG> (ARM, 988 bytes, Stack size 64 bytes, S113.o(.text), UNUSED)

<P><STRONG><a name="[5a2e968]"></a>SymLoc001247E7</STRONG> (ARM, 984 bytes, Stack size 64 bytes, S113.o(.text), UNUSED)

<P><STRONG><a name="[5a2d8c4]"></a>SymLoc000A73DB</STRONG> (ARM, 644 bytes, Stack size 2248 bytes, S125.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4144 + Unknown Stack Size
<LI>Call Chain = SymLoc000A73DB &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2e530]"></a>SymLoc0016D9B7</STRONG> (ARM, 376 bytes, Stack size 40 bytes, S127.o(.text), UNUSED)

<P><STRONG><a name="[5a2e83c]"></a>SymLoc00133A48</STRONG> (ARM, 280 bytes, Stack size 40 bytes, S127.o(.text), UNUSED)

<P><STRONG><a name="[5a2e878]"></a>SymLoc0013225B</STRONG> (ARM, 376 bytes, Stack size 40 bytes, S127.o(.text), UNUSED)

<P><STRONG><a name="[5a2ead0]"></a>SymLoc000F1E0A</STRONG> (ARM, 280 bytes, Stack size 40 bytes, S127.o(.text), UNUSED)

<P><STRONG><a name="[5a2c604]"></a>SymLoc000BDB1D</STRONG> (ARM, 104 bytes, Stack size 8 bytes, S133.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5b29dec]"></a>SymLoc000BEF88</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S133.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5a2c67c]"></a>SymLoc0006F74A</STRONG> (ARM, 88 bytes, Stack size 16 bytes, S133.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5a2c640]"></a>SymLoc000AA2F2</STRONG> (ARM, 872 bytes, Stack size 40 bytes, S133.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5a2c5c8]"></a>SymLoc0010D983</STRONG> (ARM, 804 bytes, Stack size 360 bytes, S133.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5a2c58c]"></a>SymLoc00114D1C</STRONG> (ARM, 428 bytes, Stack size 32 bytes, S133.o(.text), UNUSED)

<P><STRONG><a name="[5a2c514]"></a>SymLoc0018CAC3</STRONG> (ARM, 292 bytes, Stack size 16 bytes, S133.o(.text), UNUSED)

<P><STRONG><a name="[5a2c550]"></a>SymLoc0013C653</STRONG> (ARM, 724 bytes, Stack size 112 bytes, S133.o(.text), UNUSED)

<P><STRONG><a name="[5a2d888]"></a>SymLoc000BDEF8</STRONG> (ARM, 516 bytes, Stack size 2784 bytes, S134.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2784<LI>Call Chain = SymLoc000BDEF8
</UL>
<BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2ea94]"></a>SymLoc001007D8</STRONG> (ARM, 844 bytes, Stack size 112 bytes, S136.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
</UL>

<P><STRONG><a name="[5b28dfc]"></a>SymLoc0013A2B7</STRONG> (ARM, 184 bytes, Stack size 8 bytes, S139.o(.text), UNUSED)

<P><STRONG><a name="[5a2c0a0]"></a>SymLoc00087C52</STRONG> (ARM, 1208 bytes, Stack size 456 bytes, S139.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5a2da2c]"></a>AAAAAAO</STRONG> (ARM, 540 bytes, Stack size 5912 bytes, S149.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7808 + Unknown Stack Size
<LI>Call Chain = AAAAAAO &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5b2849c]"></a>img_tools_get_threshold_based_energy_info</STRONG> (ARM, 184 bytes, Stack size 16024 bytes, S150.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[596bb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_fast_pixelstep_bilinear_2pnt
<LI><a href="#[596bd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_frame_A
</UL>

<P><STRONG><a name="[5b28460]"></a>img_tools_perform_weighted_sweep</STRONG> (ARM, 712 bytes, Stack size 16120 bytes, S150.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
</UL>

<P><STRONG><a name="[5b28424]"></a>img_tools_perform_sweep3</STRONG> (ARM, 648 bytes, Stack size 16104 bytes, S150.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
</UL>

<P><STRONG><a name="[5a2c49c]"></a>dm_orient_estimate_top_right_corner</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S150.o(.text), UNUSED)

<P><STRONG><a name="[5a2c3e8]"></a>dm_orient_is_dead_ell</STRONG> (ARM, 532 bytes, Stack size 88 bytes, S150.o(.text), UNUSED)

<P><STRONG><a name="[5a2c460]"></a>dm_orient_find_clock_intersect</STRONG> (ARM, 260 bytes, Stack size 56 bytes, S150.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010196F
</UL>

<P><STRONG><a name="[5a2c424]"></a>dm_orient_get_module_vector</STRONG> (ARM, 1096 bytes, Stack size 69824 bytes, S150.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_envelope_min_max
<LI><a href="#[596a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_edge_finder_envelope_peak_detection
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>

<P><STRONG><a name="[5a2a7c8]"></a>SDdetect_macro_mode</STRONG> (ARM, 936 bytes, Stack size 136 bytes, S006.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
</UL>

<P><STRONG><a name="[5a2a750]"></a>SDhypothesize_mirrored</STRONG> (ARM, 1720 bytes, Stack size 96 bytes, S007.o(.text), UNUSED)

<P><STRONG><a name="[5a2a714]"></a>SDmacro_mode_raw</STRONG> (ARM, 128 bytes, Stack size 16 bytes, S007.o(.text), UNUSED)

<P><STRONG><a name="[5a2a78c]"></a>SDhypothesize_inverted</STRONG> (ARM, 460 bytes, Stack size 32 bytes, S008.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a2a840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDcircularize_square_bullseye
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
<LI><a href="#[5a2a804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDauto_invert
<LI><a href="#[5b27d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D8FAD
<LI><a href="#[5b27d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F97F7
<LI><a href="#[5b27f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDauto_mirror
</UL>

<P><STRONG><a name="[5b27f74]"></a>SDauto_mirror</STRONG> (ARM, 80 bytes, Stack size 16 bytes, S008.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
<LI><a href="#[5a2a78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDhypothesize_inverted
</UL>

<P><STRONG><a name="[5a2a804]"></a>SDauto_invert</STRONG> (ARM, 860 bytes, Stack size 152 bytes, S008.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[5a2a78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDhypothesize_inverted
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5a2a6d8]"></a>SymLoc000D6019</STRONG> (ARM, 2700 bytes, Stack size 56360 bytes, S008.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
<LI><a href="#[5a2a78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDhypothesize_inverted
<LI><a href="#[5a2a804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDauto_invert
<LI><a href="#[5a2c5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010D983
<LI><a href="#[5a2c604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BDB1D
<LI><a href="#[5a2c640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000AA2F2
<LI><a href="#[5a2c67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0006F74A
<LI><a href="#[5b27d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D8FAD
<LI><a href="#[5b27d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F97F7
<LI><a href="#[5b29dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BEF88
</UL>

<P><STRONG><a name="[5b276c8]"></a>SyMbOl12137669</STRONG> (ARM, 84 bytes, Stack size 0 bytes, S021.o(.text), UNUSED)

<P><STRONG><a name="[5b8677c]"></a>SyMbOl12125727</STRONG> (ARM, 588 bytes, Stack size 80 bytes, S021.o(.text), UNUSED)

<P><STRONG><a name="[5b2768c]"></a>SDdecompose_circular</STRONG> (ARM, 92 bytes, Stack size 16 bytes, S021.o(.text), UNUSED)

<P><STRONG><a name="[5b85e1c]"></a>SDdecompose_xy</STRONG> (ARM, 124 bytes, Stack size 12 bytes, S021.o(.text), UNUSED)

<P><STRONG><a name="[5b867b8]"></a>SDinterframe_predict</STRONG> (ARM, 164 bytes, Stack size 0 bytes, S021.o(.text), UNUSED)

<P><STRONG><a name="[5b85de0]"></a>SyMbOl12142496</STRONG> (ARM, 972 bytes, Stack size 80 bytes, S029.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[5b27344]"></a>SDdecompose_hv</STRONG> (ARM, 744 bytes, Stack size 64 bytes, S029.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[5b88c0c]"></a>SyMbOl05925946</STRONG> (ARM, 760 bytes, Stack size 3240 bytes, S049.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596a260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11405961
<LI><a href="#[596ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04700961
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>

<P><STRONG><a name="[5b88b58]"></a>SyMbOl06311100</STRONG> (ARM, 940 bytes, Stack size 5480 bytes, S049.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
<LI><a href="#[58d0ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01356050
<LI><a href="#[58d0fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01285564
<LI><a href="#[58d0fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01443772
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
</UL>

<P><STRONG><a name="[5b88bd0]"></a>SyMbOl05951341</STRONG> (ARM, 1384 bytes, Stack size 16680 bytes, S049.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04700961
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b88b94]"></a>SyMbOl06082489</STRONG> (ARM, 340 bytes, Stack size 16 bytes, S051.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SyMbOl06082489
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S048.o(.constdata)
</UL>
<P><STRONG><a name="[5b88c84]"></a>SyMbOl05838330</STRONG> (ARM, 1712 bytes, Stack size 48 bytes, S053.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
</UL>

<P><STRONG><a name="[5b88c48]"></a>SyMbOl05909304</STRONG> (ARM, 384 bytes, Stack size 40 bytes, S054.o(.text), UNUSED)

<P><STRONG><a name="[5b88b1c]"></a>SyMbOl06411943</STRONG> (ARM, 124 bytes, Stack size 16 bytes, S054.o(.text), UNUSED)

<P><STRONG><a name="[5b25f94]"></a>SDinterframe_track</STRONG> (ARM, 308 bytes, Stack size 72 bytes, S056.o(.text), UNUSED)

<P><STRONG><a name="[5b2bf34]"></a>SymLocH0004F7DC</STRONG> (ARM, 28 bytes, Stack size 8 bytes, S056.o(.text), UNUSED)

<P><STRONG><a name="[5cef68c]"></a>SDcmos_preprocess</STRONG> (ARM, 396 bytes, Stack size 72 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
</UL>

<P><STRONG><a name="[5b25f1c]"></a>SyMbOl07284214</STRONG> (ARM, 1592 bytes, Stack size 20280 bytes, S059.o(.text), UNUSED)

<P><STRONG><a name="[5b88234]"></a>SyMbOl06905310</STRONG> (ARM, 252 bytes, Stack size 24 bytes, S059.o(.text), UNUSED)

<P><STRONG><a name="[5b881bc]"></a>SyMbOl07163104</STRONG> (ARM, 288 bytes, Stack size 56 bytes, S060.o(.text), UNUSED)

<P><STRONG><a name="[5b256ac]"></a>AAAAAAAAAC</STRONG> (ARM, 84 bytes, Stack size 8 bytes, S062.o(.text), UNUSED)

<P><STRONG><a name="[5b25670]"></a>SyMbOl06847832</STRONG> (ARM, 32 bytes, Stack size 0 bytes, S062.o(.text), UNUSED)

<P><STRONG><a name="[5b25a6c]"></a>SyMbOl07034464</STRONG> (ARM, 548 bytes, Stack size 80 bytes, S062.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d05d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDretry_slow_way
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
</UL>

<P><STRONG><a name="[5b25634]"></a>SyMbOl07241761</STRONG> (ARM, 256 bytes, Stack size 40 bytes, S062.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAV
<LI><a href="#[58d0e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01312844
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
</UL>

<P><STRONG><a name="[5b255f8]"></a>SyMbOl07073698</STRONG> (ARM, 556 bytes, Stack size 56 bytes, S062.o(.text), UNUSED)

<P><STRONG><a name="[5b255bc]"></a>AAAAAAAAAB</STRONG> (ARM, 464 bytes, Stack size 104 bytes, S062.o(.text), UNUSED)

<P><STRONG><a name="[5b881f8]"></a>SyMbOl07140005</STRONG> (ARM, 2244 bytes, Stack size 296 bytes, S062.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
</UL>

<P><STRONG><a name="[5b88180]"></a>SyMbOl07229198</STRONG> (ARM, 236 bytes, Stack size 32 bytes, S062.o(.text), UNUSED)

<P><STRONG><a name="[5b88144]"></a>SyMbOl07239164</STRONG> (ARM, 280 bytes, Stack size 48 bytes, S062.o(.text), UNUSED)

<P><STRONG><a name="[5b25e68]"></a>SymLocH000549BC</STRONG> (ARM, 24 bytes, Stack size 8 bytes, S064.o(.text), UNUSED)

<P><STRONG><a name="[5b88270]"></a>SyMbOl06880173</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S064.o(.text), UNUSED)

<P><STRONG><a name="[5b88f90]"></a>SyMbOl08562463</STRONG> (ARM, 312 bytes, Stack size 192 bytes, S071.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5969fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11307856
<LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b88fcc]"></a>SyMbOl08540550</STRONG> (ARM, 156 bytes, Stack size 4 bytes, S071.o(.text), UNUSED)

<P><STRONG><a name="[5b24ef0]"></a>SymLoc00104940</STRONG> (ARM, 1472 bytes, Stack size 60208 bytes, S076.o(.text), UNUSED)

<P><STRONG><a name="[5b86ec0]"></a>SyMbOl09697261</STRONG> (ARM, 2060 bytes, Stack size 4456 bytes, S076.o(.text), UNUSED)

<P><STRONG><a name="[5b86e48]"></a>SymLoc001069DB</STRONG> (ARM, 552 bytes, Stack size 40 bytes, S115.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>

<P><STRONG><a name="[5b2a29c]"></a>SymLoc0008F08F</STRONG> (ARM, 4020 bytes, Stack size 592272 bytes, S126.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d11c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11986896
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
</UL>

<P><STRONG><a name="[5b2a2d8]"></a>SymLoc000845D6</STRONG> (ARM, 44 bytes, Stack size 0 bytes, S126.o(.text), UNUSED)

<P><STRONG><a name="[5b28dc0]"></a>SymLoc000345A9</STRONG> (ARM, 356 bytes, Stack size 808 bytes, S137.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>

<P><STRONG><a name="[5b28d0c]"></a>SymLoc0009C11C</STRONG> (ARM, 240 bytes, Stack size 48 bytes, S137.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>

<P><STRONG><a name="[5b28d84]"></a>SymLoc0003C2B3</STRONG> (ARM, 2104 bytes, Stack size 40 bytes, S140.o(.text), UNUSED)

<P><STRONG><a name="[5b28d48]"></a>SymLoc00060479</STRONG> (ARM, 1584 bytes, Stack size 4056 bytes, S141.o(.text), UNUSED)

<P><STRONG><a name="[5b28cd0]"></a>SymLoc000B0619</STRONG> (ARM, 1408 bytes, Stack size 65064 bytes, S141.o(.text), UNUSED)

<P><STRONG><a name="[5cef7f4]"></a>AAAAAAAAAAU</STRONG> (ARM, 64 bytes, Stack size 4 bytes, S142.o(.text), UNUSED)

<P><STRONG><a name="[5cef7b8]"></a>AAAAAAAAAAV</STRONG> (ARM, 128 bytes, Stack size 24 bytes, S142.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[5cef77c]"></a>AAAAAAAAAAW</STRONG> (ARM, 392 bytes, Stack size 104 bytes, S142.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd31bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[5cef740]"></a>AAAAAAAAAAX</STRONG> (ARM, 164 bytes, Stack size 16 bytes, S142.o(.text), UNUSED)

<P><STRONG><a name="[5cef704]"></a>AAAAAAAAAAY</STRONG> (ARM, 280 bytes, Stack size 24 bytes, S142.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AAAAAAAAAAY
</UL>
<BR>[Called By]<UL><LI><a href="#[5cef6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MLD_DiagonalDistanceWithBarGrowthEstimate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> S009.o(.text)
<LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5cef6c8]"></a>MLD_DiagonalDistanceWithBarGrowthEstimate</STRONG> (ARM, 804 bytes, Stack size 360 bytes, S142.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = MLD_DiagonalDistanceWithBarGrowthEstimate &rArr; AAAAAAAAAAY
</UL>
<BR>[Calls]<UL><LI><a href="#[5cef704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAY
</UL>
<BR>[Address Reference Count : 3]<UL><LI> S009.o(.text)
<LI> S013.o(.text)
<LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5cef830]"></a>AAAAAAAAAA</STRONG> (ARM, 388 bytes, Stack size 184 bytes, S144.o(.text), UNUSED)

<P><STRONG><a name="[5b22e98]"></a>AAAAAAAAAD</STRONG> (ARM, 544 bytes, Stack size 4008 bytes, S147.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAW
</UL>

<P><STRONG><a name="[5b88cfc]"></a>AAAAAAAAAE</STRONG> (ARM, 412 bytes, Stack size 8736 bytes, S147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8792<LI>Call Chain = AAAAAAAAAE &rArr; AAAAAAAAAAD
</UL>
<BR>[Calls]<UL><LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S048.o(.constdata)
</UL>
<P><STRONG><a name="[5b283e8]"></a>ppBridge_Init</STRONG> (ARM, 120 bytes, Stack size 24 bytes, S151.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[5b283ac]"></a>ppBridge_Move</STRONG> (ARM, 124 bytes, Stack size 0 bytes, S151.o(.text), UNUSED)

<P><STRONG><a name="[5b28370]"></a>ppBridge_Reset</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S151.o(.text), UNUSED)

<P><STRONG><a name="[5b25f58]"></a>SDmerge_results</STRONG> (ARM, 952 bytes, Stack size 80 bytes, S057.o(.text), UNUSED)

<P><STRONG><a name="[5b22880]"></a>SyMbOl06825402</STRONG> (ARM, 1868 bytes, Stack size 304 bytes, S065.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
</UL>

<P><STRONG><a name="[5b25580]"></a>SyMbOl06900088</STRONG> (ARM, 876 bytes, Stack size 1208 bytes, S065.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5969f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11544671
</UL>

<P><STRONG><a name="[5b24eb4]"></a>SyMbOl08709677</STRONG> (ARM, 1092 bytes, Stack size 1080 bytes, S072.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>

<P><STRONG><a name="[5b23d20]"></a>SyMbOl09019031</STRONG> (ARM, 96 bytes, Stack size 8 bytes, S075.o(.text), UNUSED)

<P><STRONG><a name="[5b22628]"></a>SyMbOl09521954</STRONG> (ARM, 2060 bytes, Stack size 40 bytes, S075.o(.text), UNUSED)

<P><STRONG><a name="[5b23924]"></a>QSortInt</STRONG> (ARM, 444 bytes, Stack size 264 bytes, S116.o(.text), UNUSED)

<P><STRONG><a name="[5b220c4]"></a>__rt_ctype_table</STRONG> (ARM, 20 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[389d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro11PreParseECIEP12CBarcodeData
<LI><a href="#[5b21cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toupper (via BLX)
<LI><a href="#[5b21db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower (via BLX)
<LI><a href="#[5dd5b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via BLX)
<LI><a href="#[5dfb88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wclass (via BLX)
<LI><a href="#[5dfb97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace (via BLX)
<LI><a href="#[5e00698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb (via BLX)
<LI><a href="#[5e00788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc (via BLX)
</UL>

<P><STRONG><a name="[5b21f5c]"></a>__aeabi_uldivmod</STRONG> (ARM, 0 bytes, Stack size 24 bytes, lludiv5.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5b21f20]"></a>_ll_udiv</STRONG> (ARM, 752 bytes, Stack size 24 bytes, lludiv5.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e040f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldiv0
</UL>

<P><STRONG><a name="[5b21ee4]"></a>_ll_udiv_donemoving</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lludiv5.o(.text), UNUSED)

<P><STRONG><a name="[5b21db8]"></a>tolower</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tolower.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>

<P><STRONG><a name="[5b21cc8]"></a>toupper</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, toupper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = toupper &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9c9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stricmp (via BLX)
</UL>

<P><STRONG><a name="[5b21bd8]"></a>_snprintf</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, _snprintf.o(.text), UNUSED)

<P><STRONG><a name="[5b21764]"></a>_vsnprintf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, _vsnprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output (via BLX)
</UL>

<P><STRONG><a name="[5b21548]"></a>__c89vsnprintf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, c89vsnprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __c89vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4402f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13DrvMenuConfig18AppendToMenuBufferEPKhz (via BLX)
</UL>

<P><STRONG><a name="[5b212f0]"></a>__2printf</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, __2printf.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5b210d4]"></a>__2sprintf</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, __2sprintf.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5b20fe4]"></a>__2snprintf</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, __2snprintf.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5b20ef4]"></a>__2swprintf</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, __2swprintf.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5b20864]"></a>_printf_pre_padding</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, _printf_pad.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfb79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[5e035f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[5b20828]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfb79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[5e035f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[5b20738]"></a>_printf_truncate_signed</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b204e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[5b206fc]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b204e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[5dd8568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[5b2060c]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e02eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[5b204e0]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b206fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[5b20738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[5e00008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via BLX)
<LI><a href="#[5e035f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd65c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u (via Veneer)
<LI><a href="#[5dd6678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d (via Veneer)
<LI><a href="#[5dd672c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i (via Veneer)
</UL>

<P><STRONG><a name="[5b20378]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd6ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n (via Veneer)
</UL>

<P><STRONG><a name="[5b20210]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e02b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[5b20030]"></a>_printf_mbtowc</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, _printf_mbtowc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e02eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[5dd8964]"></a>_printf_wc</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_wc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e02b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[5dd85a4]"></a>_printf_longlong_oct</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, _printf_oct_int_ll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e035f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd852c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[5dd8568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[5dd8568]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b206fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[5dd85a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd681c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o (via Veneer)
</UL>

<P><STRONG><a name="[5dd852c]"></a>_printf_ll_oct</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd85a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>

<P><STRONG><a name="[5dd7668]"></a>_printf_longlong_hex</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, _printf_hex_int_ll_ptr.o(.text), UNUSED)

<P><STRONG><a name="[5dd762c]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd69fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x (via Veneer)
</UL>

<P><STRONG><a name="[5dd75f0]"></a>_printf_ll_hex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text), UNUSED)

<P><STRONG><a name="[5dd75b4]"></a>_printf_hex_ptr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_hex_int_ll_ptr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd690c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p (via Veneer)
</UL>

<P><STRONG><a name="[5dd6d44]"></a>__printf</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, __printf_flags_ss_wp.o(.text), UNUSED)

<P><STRONG><a name="[5dd6150]"></a>__0sscanf</STRONG> (Thumb, 54 bytes, Stack size 72 bytes, __0sscanf.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd5fac]"></a>_scanf_int</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, _scanf_int.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[5dfb5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[5dd5e80]"></a>_scanf_string</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, _scanf_str.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfb5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[5dd5d90]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd5b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4332d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVi (via BLX)
</UL>

<P><STRONG><a name="[5dd5c64]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd5b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4332d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVb (via BLX)
<LI><a href="#[4332dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVm (via BLX)
</UL>

<P><STRONG><a name="[5dd5b74]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
<LI><a href="#[5e0191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd5c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[5dd5d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[5dd5a48]"></a>wcstol</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, wcstol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = wcstol &rArr; _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e01610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcstoul
<LI><a href="#[5e0371c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_iswspace
<LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4332e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwiRVi (via BLX)
<LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb (via BLX)
<LI><a href="#[43378c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVm (via BLX)
<LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi (via BLX)
</UL>

<P><STRONG><a name="[5dd58e0]"></a>_scanf_wstring</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, _scanf_wstr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e01700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[5dfb5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[5dd57b4]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd56c4]"></a>_do_fflush</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, fflush.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd5688]"></a>fflush</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fflush.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd4c74]"></a>setlocale</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, locale.o(.text), UNUSED)

<P><STRONG><a name="[5dd4a58]"></a>mbstowcs</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, mbstowcs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd4a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbdata (Weak Reference)
<LI><a href="#[5e00788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc
</UL>

<P><STRONG><a name="[5dd492c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd48b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[5e045a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via BLX)
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd4788]"></a>qsort</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, qsortnoex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd47c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_partition_sort
</UL>

<P><STRONG><a name="[5dd4698]"></a>memchr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, memchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[389d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacro11PreParseECIEP12CBarcodeData (via BLX)
</UL>

<P><STRONG><a name="[5dd45a8]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd44b8]"></a>strchr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, strchr.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd41e8]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[4332d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVi (via BLX)
<LI><a href="#[4332d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVb (via BLX)
<LI><a href="#[4332dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVm (via BLX)
</UL>

<P><STRONG><a name="[5dd40f8]"></a>memcmp</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, memcmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd4008]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, strcpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd3f18]"></a>strncmp</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, strncmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd3e28]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[352f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10hhpstricmpEPKcS1_b (via BLX)
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb (via BLX)
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc (via BLX)
<LI><a href="#[3758aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6InsertEPKcj (via BLX)
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb (via BLX)
<LI><a href="#[38850b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKc (via BLX)
<LI><a href="#[3e9caa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKh (via BLX)
<LI><a href="#[4332d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVi (via BLX)
<LI><a href="#[4332d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVb (via BLX)
<LI><a href="#[4332dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKhS1_RVm (via BLX)
<LI><a href="#[4d78e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReplaceAllEPKcS1_ (via BLX)
<LI><a href="#[4d78f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK7HSTRING7CompareEPKcb (via BLX)
<LI><a href="#[4d793a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6AppendEPKh (via BLX)
<LI><a href="#[5091560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_move
</UL>

<P><STRONG><a name="[5dd3d38]"></a>wcsncpy</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wcsncpy.o(.text), UNUSED)

<P><STRONG><a name="[5dd3c48]"></a>wcscmp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wcscmp.o(.text), UNUSED)

<P><STRONG><a name="[5dd3b58]"></a>wcsncmp</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wcsncmp.o(.text), UNUSED)

<P><STRONG><a name="[5dd3a68]"></a>wcschr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wcschr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4332e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwiRS1_ (via BLX)
<LI><a href="#[4332e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwiRVi (via BLX)
</UL>

<P><STRONG><a name="[5dd3978]"></a>wcsstr</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, wcsstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wcsstr
</UL>
<BR>[Called By]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb (via BLX)
<LI><a href="#[43378c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVm (via BLX)
<LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi (via BLX)
</UL>

<P><STRONG><a name="[5dd3888]"></a>wcslen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wcslen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4332e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVb (via BLX)
<LI><a href="#[43378c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVm (via BLX)
<LI><a href="#[4337900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CParseHelper7ExtractEPKwS1_RVi (via BLX)
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING (via BLX)
<LI><a href="#[4d80dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPKwbb (via BLX)
<LI><a href="#[4d811bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPwbbb (via BLX)
<LI><a href="#[4d81810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKw (via BLX)
<LI><a href="#[4d823c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING16CopyLittleEndianEPhj (via BLX)
</UL>

<P><STRONG><a name="[5dd3798]"></a>__aeabi_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5dd32e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[46d70f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CWedgeCmdC1Ev
<LI><a href="#[58d1c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_memset
</UL>

<P><STRONG><a name="[5dd366c]"></a>__aeabi_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49f35a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CUsb2HidSurePos22EPRxHandleReceivedDataEj
<LI><a href="#[4d799bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGaSES_
<LI><a href="#[5308ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[58d1d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MC_memcpy
<LI><a href="#[58d56e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_flush
<LI><a href="#[59633c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_block_row
<LI><a href="#[5964374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
<LI><a href="#[5dd34c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[5df6fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite (via BLX)
</UL>

<P><STRONG><a name="[5dd3630]"></a>__rt_memcpy</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd31bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[5dd35f4]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[5dd3504]"></a>__aeabi_memmove</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove.o(.text), UNUSED)

<P><STRONG><a name="[5dd34c8]"></a>__rt_memmove</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memmove.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd2f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5dd348c]"></a>__memmove_lastfew</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memmove.o(.text), UNUSED)

<P><STRONG><a name="[5dd3360]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2273fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[5308ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj
<LI><a href="#[570bb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CreateBMPImageP9BITSTRINGS0_iiii
<LI><a href="#[58d38e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jzero_far
<LI><a href="#[5dd2c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[5dd3324]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd2d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[5dd32e8]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd3798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5dd31bc]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5cef77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAW
<LI><a href="#[5dd2fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[5dd3630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[5dd3180]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd3144]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd3108]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd3018]"></a>__aeabi_memmove4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd2fdc]"></a>__aeabi_memmove8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd2fa0]"></a>__rt_memmove_w</STRONG> (ARM, 128 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd31bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[5dd2f64]"></a>__memmove_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd34c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[5dd2f28]"></a>__memmove_lastfew_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd2e38]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[575f274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateCompress
<LI><a href="#[5dfa4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal (via BLX)
</UL>

<P><STRONG><a name="[5dd2dfc]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd2dc0]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[5dd2d84]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd3324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[5dd2c94]"></a>strncpy</STRONG> (ARM, 104 bytes, Stack size 8 bytes, strncpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd3360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd2ba4]"></a>strcmp</STRONG> (ARM, 184 bytes, Stack size 4 bytes, strcmpfast.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd2910]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[5dd28d4]"></a>__aeabi_idivmod</STRONG> (ARM, 552 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[5e04310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv0
</UL>
<BR>[Called By]<UL><LI><a href="#[508f79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachepagecheck (via BLX)
<LI><a href="#[508f904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_writenextsector (via BLX)
<LI><a href="#[508f9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_swapbadblock (via BLX)
<LI><a href="#[58d1e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfth
<LI><a href="#[5964eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jdiv_round_up
<LI><a href="#[596696c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jround_up
<LI><a href="#[5b283e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ppBridge_Init
<LI><a href="#[5cef7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAV
</UL>

<P><STRONG><a name="[5dd1c2c]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcb368]"></a>setjmp</STRONG> (ARM, 36 bytes, Stack size 8 bytes, setjmp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcb2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__alloca_setjmp (Weak Reference)
</UL>

<P><STRONG><a name="[5dcb32c]"></a>longjmp</STRONG> (ARM, 44 bytes, Stack size 0 bytes, setjmp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcb2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__alloca_longjmp (Weak Reference)
</UL>

<P><STRONG><a name="[5e04310]"></a>__aeabi_idiv0</STRONG> (ARM, 4 bytes, Stack size 0 bytes, aeabi_idiv0_sigfpe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[5dfbcc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[5e040f4]"></a>__aeabi_ldiv0</STRONG> (ARM, 4 bytes, Stack size 0 bytes, aeabi_ldiv0_sigfpe.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dfbcc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL>
<BR>[Called By]<UL><LI><a href="#[5b21f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL>

<P><STRONG><a name="[5e03f8c]"></a>__rt_locale</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_locale.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e03cf8]"></a>__rt_new_handler_addr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_new_handler_addr.o(.text), UNUSED)

<P><STRONG><a name="[5e03aa0]"></a>__aeabi_errno_addr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_errno_addr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd5a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcstol (via BLX)
<LI><a href="#[5dd5b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via BLX)
<LI><a href="#[5dd5c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol (via BLX)
<LI><a href="#[5dd5d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via BLX)
<LI><a href="#[5dfa89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal (via BLX)
<LI><a href="#[5e01610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcstoul (via BLX)
<LI><a href="#[5e0191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul (via BLX)
<LI><a href="#[5e0380c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via BLX)
<LI><a href="#[5e03848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno (via BLX)
</UL>

<P><STRONG><a name="[5e03a64]"></a>__rt_errno_addr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[5e03848]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e0380c]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e0371c]"></a>_iswspace</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _iswspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _iswspace &rArr; _wclass &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5dfb88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wclass
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd5a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcstol
</UL>

<P><STRONG><a name="[5e035f0]"></a>_printf_int_common</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, _printf_intcommon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b20828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5b20864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[5b204e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[5dd85a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[5e029c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[5e034c4]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[5e03488]"></a>_printf_fp_dec_real</STRONG> (Thumb, 608 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dcbb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (via Veneer)
</UL>

<P><STRONG><a name="[5e031b8]"></a>_printf_char_common</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, _printf_char_common.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e0308c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL></UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[5e02f9c]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> _snprintf.o(.text)
<LI> _vsnprintf.o(.text)
<LI> c89vsnprintf.o(.text)
<LI> __2snprintf.o(.text)
</UL>
<P><STRONG><a name="[5e02eac]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b20030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc
<LI><a href="#[5b2060c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[5e02e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[5e02e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[5e02e70]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd6c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c (via Veneer)
</UL>

<P><STRONG><a name="[5e02e34]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd6ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s (via Veneer)
</UL>

<P><STRONG><a name="[5e02d08]"></a>_printf_wchar_common</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, _printf_wchar_common.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e02c18]"></a>_snputwc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputwc.o(.text))
<BR><BR>[Called By]<UL></UL>
<BR>[Address Reference Count : 1]<UL><LI> __2swprintf.o(.text)
</UL>
<P><STRONG><a name="[5e02b28]"></a>_printf_lcs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b20210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[5dd8964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc
</UL>
<BR>[Called By]<UL><LI><a href="#[5e02ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[5e02aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[5e02aec]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[5e02ab0]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e02b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[5e029c0]"></a>_printf_longlong_dec</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, _printf_longlong_dec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dfba6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via BLX)
<LI><a href="#[5e035f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[5e02060]"></a>_chval</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[5df7200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[5e01610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcstoul
<LI><a href="#[5e0191c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[5e01ebc]"></a>_scanf_really_real</STRONG> (Thumb, 694 bytes, Stack size 128 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dcb494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (via Veneer)
</UL>

<P><STRONG><a name="[5e01bb0]"></a>__vfscanf_char</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scanf_char.o(.text), UNUSED)

<P><STRONG><a name="[5e01a48]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[5e01a0c]"></a>_sbackspace</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[5e0191c]"></a>_strtoul</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e02060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd5b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[5e01700]"></a>_scanf_wcharmap</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, _scanf_wcharmap.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd58e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
</UL>

<P><STRONG><a name="[5e01610]"></a>_wcstoul</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, _wcstoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _wcstoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e02060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd5a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcstol
</UL>

<P><STRONG><a name="[5e01340]"></a>_fseek</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, fseek.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dfa89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
<LI><a href="#[5dfc3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[5dfc480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[5e01124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e01304]"></a>fseek</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, fseek.o(.text), UNUSED)

<P><STRONG><a name="[5e01124]"></a>_seterr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stdio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfaa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[5e010e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[5e01340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[5e010e8]"></a>_writebuf</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, stdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dfc444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_seek
<LI><a href="#[5dfc4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[5e01124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL><LI><a href="#[5df6fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[5dfaa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[5e010ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>

<P><STRONG><a name="[5e010ac]"></a>_fflush</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e010e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>
<BR>[Called By]<UL><LI><a href="#[5dfa4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[5e01070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
</UL>

<P><STRONG><a name="[5e01070]"></a>_deferredlazyseek</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e010ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>
<BR>[Called By]<UL><LI><a href="#[5dfaa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[5e00e54]"></a>_initio</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, initio.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e00e18]"></a>_terminateio</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, initio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df94b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_stdio_2
</UL>

<P><STRONG><a name="[5e00788]"></a>_mbrtowc</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _mbrtowc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd4a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbstowcs
</UL>

<P><STRONG><a name="[5e00698]"></a>_wcrtomb</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, _wcrtomb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>

<P><STRONG><a name="[5e00134]"></a>__rt_SIGPVFN</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_pvfn_formal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_SIGPVFN
</UL>
<BR>[Calls]<UL><LI><a href="#[22709c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_raise (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd14ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[5e00008]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b204e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via BLX)
</UL>

<P><STRONG><a name="[5dfe730]"></a>__cxa_bad_typeid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_bad_typeid_noexceptions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5df8b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZSt9terminatev
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd0f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>

<P><STRONG><a name="[5dfe514]"></a>_Z21__default_new_handlerv</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, arm_newhandler_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = _Z21__default_new_handlerv &rArr; _ZSt9terminatev &rArr; __cxa_get_globals &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5df8b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZSt9terminatev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> new.o(i._Znwj)
</UL>
<P><STRONG><a name="[5dfc570]"></a>_sys_open</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, sys_io.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dfc534]"></a>_sys_close</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_io.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfa4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
</UL>

<P><STRONG><a name="[5dfc4f8]"></a>_sys_write</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, sys_io.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e010e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[5dfc4bc]"></a>_sys_read</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, sys_io.o(.text), UNUSED)

<P><STRONG><a name="[5dfc480]"></a>_sys_istty</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_io.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfaa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[5e01340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[5dfc444]"></a>_sys_seek</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, sys_io.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e010e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[5dfc408]"></a>_sys_ensure</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_io.o(.text), UNUSED)

<P><STRONG><a name="[5dfc3cc]"></a>_sys_flen</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_io.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfaa7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[5e01340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[5dfbcc4]"></a>__rt_div0</STRONG> (ARM, 16 bytes, Stack size 16 bytes, rt_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[5df6a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGFPE (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e040f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldiv0
<LI><a href="#[5e04310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv0
</UL>

<P><STRONG><a name="[5dfbb98]"></a>__aeabi_lmul</STRONG> (ARM, 0 bytes, Stack size 4 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[5dfbb5c]"></a>_ll_mul</STRONG> (ARM, 24 bytes, Stack size 4 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[5dfba6c]"></a>_ll_udiv10</STRONG> (ARM, 152 bytes, Stack size 12 bytes, lludiv10.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e029c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via BLX)
</UL>

<P><STRONG><a name="[5dfb97c]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[5dfb88c]"></a>_wclass</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, wclass_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _wclass &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5b220c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0371c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_iswspace
</UL>

<P><STRONG><a name="[5dfb79c]"></a>_printf_fp_infnan</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b20828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5b20864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>

<P><STRONG><a name="[5dfb5bc]"></a>__vfscanf</STRONG> (Thumb, 914 bytes, Stack size 104 bytes, _scanf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcb494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (via BLX)
<LI><a href="#[5dd58e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
<LI><a href="#[5dd5e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[5dd5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[5dfb508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb (Weak Reference)
<LI><a href="#[5dfb544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc (Weak Reference)
<LI><a href="#[5dfb580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (Weak Reference)
</UL>

<P><STRONG><a name="[5dfb364]"></a>_btod_etento</STRONG> (Thumb, 192 bytes, Stack size 72 bytes, bigflt0.o(.text), UNUSED)

<P><STRONG><a name="[5dfaa7c]"></a>__flsbuf</STRONG> (Thumb, 470 bytes, Stack size 24 bytes, flsbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via BLX)
<LI><a href="#[5dfc3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[5dfc480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[5e01070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
<LI><a href="#[5e010e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[5e01124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dfaa40]"></a>__flsbuf_byte</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, flsbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __flsbuf_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5df6fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[5e0146c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[5dfaa04]"></a>__flsbuf_wide</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, flsbuf.o(.text), UNUSED)

<P><STRONG><a name="[5dfa89c]"></a>_ftell_internal</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ftell.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e03aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e01340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[5dfa860]"></a>ftell</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ftell.o(.text), UNUSED)

<P><STRONG><a name="[5dfa770]"></a>setvbuf</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, setvbuf.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dfa680]"></a>freopen</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, fopen.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dfa644]"></a>fopen</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, fopen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via BLX)
</UL>

<P><STRONG><a name="[5dfa4dc]"></a>_fclose_internal</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, fclose.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via BLX)
<LI><a href="#[5dd2e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[5dfc534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_close
<LI><a href="#[5e010ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dfa4a0]"></a>fclose</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, fclose.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5df9b7c]"></a>__rt_SIGRTRED</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_rtred_formal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22709c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_raise (via BLX)
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[5df8b8c]"></a>_ZSt9terminatev</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, arm_exceptions_terminate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = _ZSt9terminatev &rArr; __cxa_get_globals &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5df6dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[5e63dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[5df89ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[5dfe514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21__default_new_handlerv
<LI><a href="#[5dfe730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>

<P><STRONG><a name="[5df741c]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5df6dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort (via BLX)
<LI><a href="#[5dfbe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[5df732c]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[5df72f0]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[5df7200]"></a>_scanf_really_hex_real</STRONG> (Thumb, 836 bytes, Stack size 112 bytes, scanf_hexfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dcbc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via BLX)
<LI><a href="#[5df75c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow (via BLX)
<LI><a href="#[5e02060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[5e62330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp (via BLX)
<LI><a href="#[5e632e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5df7c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real (via Veneer)
</UL>

<P><STRONG><a name="[5df7098]"></a>_scanf_really_infnan</STRONG> (Thumb, 294 bytes, Stack size 64 bytes, scanf_infnan.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df7c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan (via Veneer)
</UL>

<P><STRONG><a name="[5df6fa8]"></a>fwrite</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, fwritefast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[5dfaa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf_byte
<LI><a href="#[5e010e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[5df6dc8]"></a>abort</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT
</UL>
<BR>[Calls]<UL><LI><a href="#[5df6378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[5df741c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via BLX)
<LI><a href="#[5e62eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>
<BR>[Called By]<UL><LI><a href="#[5df8b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZSt9terminatev
</UL>

<P><STRONG><a name="[5df6a44]"></a>__rt_SIGFPE</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_fpe_formal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[22709c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_raise (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dfbcc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_div0 (via BLX)
</UL>

<P><STRONG><a name="[5e643c4]"></a>__ARM_vec_cleanup</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ARM_vec_cleanup_noexceptions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df89ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[5e63dac]"></a>__cxa_get_globals</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxa_get_globals &rArr; malloc &rArr; _Z14__Heap1a_AllocP17Heap1a_Descriptorj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5df8b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZSt9terminatev
</UL>

<P><STRONG><a name="[5e63bcc]"></a>__cxa_rethrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_rethrow_noexceptions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df89ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[5e635f0]"></a>__rt_eh_globals_addr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_eh_globals_addr.o(.text), UNUSED)

<P><STRONG><a name="[5e632e4]"></a>__aeabi_llsl</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df7200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via BLX)
</UL>

<P><STRONG><a name="[5e632a8]"></a>_ll_shift_l</STRONG> (ARM, 40 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[5e62eac]"></a>__rt_SIGABRT</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_abrt_formal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_SIGABRT
</UL>
<BR>[Calls]<UL><LI><a href="#[22709c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_raise (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5df6dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[5e6281c]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arm_exceptions_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via BLX)
</UL>

<P><STRONG><a name="[5e627e0]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e627a4]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd2898]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text_udiv), UNUSED)

<P><STRONG><a name="[5dd285c]"></a>__aeabi_uidivmod</STRONG> (ARM, 40 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[5dd294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div4
<LI><a href="#[5dd2988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
<LI><a href="#[5dd29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div12
<LI><a href="#[5dd2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div16
<LI><a href="#[5dd2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large_positive
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1b738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEiij
<LI><a href="#[4331564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CSerParm16GetCharacterTimeEv
<LI><a href="#[4d79584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEijj
<LI><a href="#[4d795c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12InsertNumberEitj
<LI><a href="#[4d7fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING15SmartReallocateEj
<LI><a href="#[4d80eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING15SmartReallocateEj
<LI><a href="#[5308ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher20EcbEncryptAddPaddingEPKhjPhjPj
<LI><a href="#[5308f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher10EcbEncryptEPKhjPhj
<LI><a href="#[5308f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBlockCipher10EcbDecryptEPKhjPhj
<LI><a href="#[58d1e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfth
<LI><a href="#[58d1ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFIP
<LI><a href="#[58d1f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMF3
<LI><a href="#[58d1f5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMF2
<LI><a href="#[58dc0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adler32
<LI><a href="#[5dd47c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_partition_sort (via BLX)
</UL>

<P><STRONG><a name="[5dfadc4]"></a>_btod_d2e</STRONG> (ARM, 56 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e), UNUSED)

<P><STRONG><a name="[5dfad88]"></a>_d2e_denorm_low</STRONG> (ARM, 84 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low), UNUSED)

<P><STRONG><a name="[5dfad4c]"></a>_d2e_norm_op1</STRONG> (ARM, 104 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1), UNUSED)

<P><STRONG><a name="[5dfad10]"></a>__btod_div_common</STRONG> (ARM, 712 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common), UNUSED)

<P><STRONG><a name="[5dfacd4]"></a>_e2d</STRONG> (ARM, 88 bytes, Stack size 8 bytes, btod.o(CL$$btod_e2d), UNUSED)

<P><STRONG><a name="[5dfac98]"></a>_e2e</STRONG> (ARM, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e), UNUSED)

<P><STRONG><a name="[5dfac5c]"></a>_btod_ediv</STRONG> (ARM, 48 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv), UNUSED)

<P><STRONG><a name="[5dfac20]"></a>_btod_edivd</STRONG> (ARM, 48 bytes, Stack size 24 bytes, btod.o(CL$$btod_edivd), UNUSED)

<P><STRONG><a name="[5dfabe4]"></a>_btod_emul</STRONG> (ARM, 48 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul), UNUSED)

<P><STRONG><a name="[5dfaba8]"></a>_btod_emuld</STRONG> (ARM, 48 bytes, Stack size 24 bytes, btod.o(CL$$btod_emuld), UNUSED)

<P><STRONG><a name="[5dfab6c]"></a>__btod_mult_common</STRONG> (ARM, 612 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common), UNUSED)

<P><STRONG><a name="[352eff8]"></a>Fast_memcpy</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mem.o(FASTMEMCPY), UNUSED)

<P><STRONG><a name="[352ea58]"></a>MMU_CleanAndInvalidateBothCaches</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mmu.o(MMU_CacheCode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[352ea1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_CleanAndInvalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[352e7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_reset
<LI><a href="#[352e9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelocateAndRun
</UL>

<P><STRONG><a name="[352ea1c]"></a>MMU_CleanAndInvalidate</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mmu.o(MMU_CacheCode), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[352ea58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_CleanAndInvalidateBothCaches
</UL>

<P><STRONG><a name="[352e9e0]"></a>MMU_IsEnabled</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mmu.o(MMU_CacheCode), UNUSED)

<P><STRONG><a name="[352e9a4]"></a>RelocateAndRun</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mmu.o(MMU_CacheCode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[352ea58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_CleanAndInvalidateBothCaches
</UL>

<P><STRONG><a name="[227a6d0]"></a>MMU_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mmu.o(MMU_code), UNUSED)

<P><STRONG><a name="[352e7c4]"></a>MMU_reset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mmu.o(MMU_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[352ea58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_CleanAndInvalidateBothCaches
</UL>

<P><STRONG><a name="[352e788]"></a>Move_Vector_Table_To_Zero</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_mmu.o(MMU_mvectorss), UNUSED)

<P><STRONG><a name="[227a8ec]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, app_start.o(Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 30136 + Unknown Stack Size
<LI>Call Chain = Reset_Handler &rArr; C_Entry &rArr; _Z17ProcessEngineDatav &rArr; _ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh &rArr; _Z16ImageSnapAndShipv &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[227a8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threads_interupts.o(threads_interupts)
</UL>
<P><STRONG><a name="[227a70c]"></a>Init_Uart1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_uart.o(UARTCFG), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2277d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudRateRegisters
</UL>

<P><STRONG><a name="[2277d18]"></a>SetBaudRateRegisters</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_uart.o(UARTCFG1), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[227a70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart1
</UL>

<P><STRONG><a name="[2277d54]"></a>GetBaudRateRegisters</STRONG> (ARM, 0 bytes, Stack size unknown bytes, db_uart.o(UARTCFG1), UNUSED)

<P><STRONG><a name="[58d1f5c]"></a>CMF2</STRONG> (ARM, 64 bytes, Stack size 8 bytes, MonoColorCore.o(i.CMF2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[58d1f20]"></a>CMF3</STRONG> (ARM, 96 bytes, Stack size 24 bytes, MonoColorCore.o(i.CMF3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[41441bc]"></a>_Z17DisableInterruptsRi</STRONG> (ARM, 20 bytes, Stack size 0 bytes, HWTrigger.o(i._Z17DisableInterruptsRi), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[4144180]"></a>_Z17RestoreInterruptsi</STRONG> (ARM, 24 bytes, Stack size 0 bytes, HWTrigger.o(i._Z17RestoreInterruptsi), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[4144144]"></a>_Z21EnableInterruptNumber15vector_number_t</STRONG> (ARM, 12 bytes, Stack size 0 bytes, HWTrigger.o(i._Z21EnableInterruptNumber15vector_number_t), UNUSED)

<P><STRONG><a name="[4144108]"></a>_Z22DisableInterruptNumber15vector_number_t</STRONG> (ARM, 12 bytes, Stack size 0 bytes, HWTrigger.o(i._Z22DisableInterruptNumber15vector_number_t), UNUSED)

<P><STRONG><a name="[433bcf8]"></a>_Z25EngRead8bitStreamFromPsocv</STRONG> (ARM, 588 bytes, Stack size 8 bytes, PSoC_Engine_ISSP.o(i._Z25EngRead8bitStreamFromPsocv), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[433bcbc]"></a>_Z25send_11bit_stream_to_psocj</STRONG> (ARM, 176 bytes, Stack size 4 bytes, PSoC_Engine_ISSP.o(i._Z25send_11bit_stream_to_psocj), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[41440cc]"></a>_ZN10CHWTriggerC1Ej</STRONG> (ARM, 36 bytes, Stack size 0 bytes, HWTrigger.o(i._ZN10CHWTriggerC1Ej), UNUSED)

<P><STRONG><a name="[4144090]"></a>_ZN10CHWTriggerC2Ej</STRONG> (ARM, 0 bytes, Stack size 0 bytes, HWTrigger.o(i._ZN10CHWTriggerC1Ej), UNUSED)

<P><STRONG><a name="[36b4f74]"></a>_ZN10CRemRouter23GetBarcodeLobHeaderSizeEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, RemRouter.o(i._ZN10CRemRouter23GetBarcodeLobHeaderSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> RemRouter.o(.constdata__ZTV14CRemRouterNull)
</UL>
<P><STRONG><a name="[4888dfc]"></a>_ZN11CBitBangIBMD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, bbibm.o(i._ZN11CBitBangIBMD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _ZN11CBitBangIBMD0Ev &rArr; _ZN10CBitBangerD2Ev &rArr; _ZN13CBitBangerISRD1Ev &rArr; MT_DeleteMailbox &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CBitBangerD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bbibm.o(.constdata__ZTV11CBitBangIBM)
</UL>
<P><STRONG><a name="[432fc50]"></a>_ZN11CNullDriver11IsAnyRxDataEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, nulldriver.o(i._ZN11CNullDriver11IsAnyRxDataEv))
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[432fbd8]"></a>_ZN11CNullDriver4OpenEsPKw</STRONG> (ARM, 8 bytes, Stack size 0 bytes, nulldriver.o(i._ZN11CNullDriver4OpenEsPKw))
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[432fb60]"></a>_ZN11CNullDriver4ReadEPhj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, nulldriver.o(i._ZN11CNullDriver4ReadEPhj))
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[432fb24]"></a>_ZN11CNullDriver5CloseEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, nulldriver.o(i._ZN11CNullDriver5CloseEv))
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[432fae8]"></a>_ZN11CNullDriver5WriteEP12CBarcodeData</STRONG> (ARM, 8 bytes, Stack size 0 bytes, nulldriver.o(i._ZN11CNullDriver5WriteEP12CBarcodeData))
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[432faac]"></a>_ZN11CNullDriver5WriteEPKhj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, nulldriver.o(i._ZN11CNullDriver5WriteEPKhj))
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[432fa34]"></a>_ZN11CNullDriverD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, nulldriver.o(i._ZN11CNullDriverD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN11CNullDriverD0Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[4337e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nulldriver.o(.constdata__ZTV11CNullDriver)
</UL>
<P><STRONG><a name="[44046dc]"></a>_ZN11CSerialBase10handleISRsEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, serialbase.o(i._ZN11CSerialBase10handleISRsEv))
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata__ZTV11CSerialBase)
</UL>
<P><STRONG><a name="[4938714]"></a>_ZN11CUsb2CdcAcm12GetPidOffsetEb</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2cdcacm.o(i._ZN11CUsb2CdcAcm12GetPidOffsetEb))
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[49386d8]"></a>_ZN11CUsb2CdcAcm13IsEnabled_CTSEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2cdcacm.o(i._ZN11CUsb2CdcAcm13IsEnabled_CTSEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[493869c]"></a>_ZN11CUsb2CdcAcm14Ep0DataHandlerEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2cdcacm.o(i._ZN11CUsb2CdcAcm14Ep0DataHandlerEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[4938660]"></a>_ZN11CUsb2CdcAcm15GetMaxNumIfacesEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2cdcacm.o(i._ZN11CUsb2CdcAcm15GetMaxNumIfacesEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[4938624]"></a>_ZN11CUsb2CdcAcm19GetSizeOfConfigDescEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2cdcacm.o(i._ZN11CUsb2CdcAcm19GetSizeOfConfigDescEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[49385e8]"></a>_ZN11CUsb2CdcAcm22EPRxHandleReceivedDataEj</STRONG> (ARM, 304 bytes, Stack size 24 bytes, usb2cdcacm.o(i._ZN11CUsb2CdcAcm22EPRxHandleReceivedDataEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN11CUsb2CdcAcm22EPRxHandleReceivedDataEj &rArr; _ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49384bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh
<LI><a href="#[49401e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[49385ac]"></a>_ZN11CUsb2CdcAcm27OnChangeBandwithSavingsModeEb</STRONG> (ARM, 20 bytes, Stack size 0 bytes, usb2cdcacm.o(i._ZN11CUsb2CdcAcm27OnChangeBandwithSavingsModeEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _ZN11CUsb2CdcAcm27OnChangeBandwithSavingsModeEb &rArr; _ZN11CUsb2CdcAcm21SendResponseAvailableEj &rArr; _ZN9CUsb2Chip22MX25USB2_WriteEndpointEhjPKh &rArr; _Z23Timer3_MicroSecondDelayj &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493896c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CUsb2CdcAcm21SendResponseAvailableEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
</UL>
<P><STRONG><a name="[4b49180]"></a>_ZN11CUsb2HidKbd13ReportHandlerEv</STRONG> (ARM, 272 bytes, Stack size 8 bytes, usb2hidkbd.o(i._ZN11CUsb2HidKbd13ReportHandlerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11CUsb2HidKbd13ReportHandlerEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b49144]"></a>_ZN11CUsb2HidKbd14Ep0DataHandlerEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2hidkbd.o(i._ZN11CUsb2HidKbd14Ep0DataHandlerEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b49108]"></a>_ZN11CUsb2HidKbd15GetMaxNumIfacesEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidkbd.o(i._ZN11CUsb2HidKbd15GetMaxNumIfacesEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[4b490cc]"></a>_ZN11CUsb2HidKbd19GetSizeOfConfigDescEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidkbd.o(i._ZN11CUsb2HidKbd19GetSizeOfConfigDescEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[49f85c8]"></a>_ZN11CUsb2HidPos12GetPidOffsetEb</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2hidpos.o(i._ZN11CUsb2HidPos12GetPidOffsetEb))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f858c]"></a>_ZN11CUsb2HidPos13ReportHandlerEv</STRONG> (ARM, 144 bytes, Stack size 8 bytes, usb2hidpos.o(i._ZN11CUsb2HidPos13ReportHandlerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11CUsb2HidPos13ReportHandlerEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f8550]"></a>_ZN11CUsb2HidPos14Ep0DataHandlerEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2hidpos.o(i._ZN11CUsb2HidPos14Ep0DataHandlerEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f8514]"></a>_ZN11CUsb2HidPos15GetMaxNumIfacesEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidpos.o(i._ZN11CUsb2HidPos15GetMaxNumIfacesEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[49f84d8]"></a>_ZN11CUsb2HidPos19GetSizeOfConfigDescEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidpos.o(i._ZN11CUsb2HidPos19GetSizeOfConfigDescEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
</UL>
<P><STRONG><a name="[55e2f14]"></a>_ZN11MatrixHComm5WriteEP7HSTRING</STRONG> (ARM, 36 bytes, Stack size 8 bytes, MatrixHcomm.o(i._ZN11MatrixHComm5WriteEP7HSTRING))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN11MatrixHComm5WriteEP7HSTRING
</UL>
<BR>[Address Reference Count : 1]<UL><LI> MatrixHcomm.o(.constdata__ZTV11MatrixHComm)
</UL>
<P><STRONG><a name="[5308f80]"></a>_ZN12CBlockCipher17GetBlockSizeBytesEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, AesEncryption.o(i._ZN12CBlockCipher17GetBlockSizeBytesEv))
<BR>[Address Reference Count : 1]<UL><LI> AesEncryption.o(.constdata__ZTV14CAesEncryption)
</UL>
<P><STRONG><a name="[48850d0]"></a>_ZN12CPortDetails22DoPreparePortCheckFastEv</STRONG> (ARM, 168 bytes, Stack size 0 bytes, bitbangerisr.o(i._ZN12CPortDetails22DoPreparePortCheckFastEv), UNUSED)

<P><STRONG><a name="[3f2574c]"></a>_ZN12TiXmlCommentD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, tinyxml.o(i._ZN12TiXmlCommentD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12TiXmlCommentD0Ev &rArr; _ZN9TiXmlNodeD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
</UL>
<P><STRONG><a name="[3f25530]"></a>_ZN12TiXmlUnknownD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, tinyxml.o(i._ZN12TiXmlUnknownD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN12TiXmlUnknownD0Ev &rArr; _ZN9TiXmlNodeD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[4885094]"></a>_ZN13CBitBangerISR6DoJumpEP12CPortDetails</STRONG> (ARM, 32 bytes, Stack size 0 bytes, bitbangerisr.o(i._ZN13CBitBangerISR6DoJumpEP12CPortDetails))
<BR>[Address Reference Count : 1]<UL><LI> bitbangerisr.o(.constdata)
</UL>
<P><STRONG><a name="[4b44e00]"></a>_ZN13CDriverUsbRem17ExtractParametersEPKw</STRONG> (ARM, 8 bytes, Stack size 0 bytes, drvUsbRem.o(i._ZN13CDriverUsbRem17ExtractParametersEPKw))
<BR>[Address Reference Count : 1]<UL><LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[4b44dc4]"></a>_ZN13CDriverUsbRemD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, drvUsbRem.o(i._ZN13CDriverUsbRemD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN13CDriverUsbRemD0Ev &rArr; _ZN15CThreadedDriverD1Ev &rArr; _ZN11CDriverBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[440ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriverD1Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[36b4f38]"></a>_ZN13CRemRouterLob23GetBarcodeLobHeaderSizeEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, RemRouter.o(i._ZN13CRemRouterLob23GetBarcodeLobHeaderSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> RemRouter.o(.constdata__ZTV13CRemRouterLob)
</UL>
<P><STRONG><a name="[3f21228]"></a>_ZN13TiXmlDocumentD0Ev</STRONG> (ARM, 48 bytes, Stack size 8 bytes, tinyxmlparser.o(i._ZN13TiXmlDocumentD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN13TiXmlDocumentD0Ev &rArr; _ZN9TiXmlNodeD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
</UL>
<P><STRONG><a name="[36b4efc]"></a>_ZN14CRemRouterNull13RouteImageLobEiPK7HSTRINGS2_</STRONG> (ARM, 4 bytes, Stack size 0 bytes, RemRouter.o(i._ZN14CRemRouterNull13RouteImageLobEiPK7HSTRINGS2_))
<BR>[Address Reference Count : 1]<UL><LI> RemRouter.o(.constdata__ZTV14CRemRouterNull)
</UL>
<P><STRONG><a name="[36b4ec0]"></a>_ZN14CRemRouterNull15RouteBarcodeLobEP12CBarcodeDataPKwi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, RemRouter.o(i._ZN14CRemRouterNull15RouteBarcodeLobEP12CBarcodeDataPKwi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN14CRemRouterNull15RouteBarcodeLobEP12CBarcodeDataPKwi &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> RemRouter.o(.constdata__ZTV14CRemRouterNull)
</UL>
<P><STRONG><a name="[387ab7c]"></a>_ZN14CTransInfo7BitD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, codepagetables7bit.o(i._ZN14CTransInfo7BitD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14CTransInfo7BitD0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables7bit.o(.constdata__ZTV14CTransInfo7Bit)
</UL>
<P><STRONG><a name="[3877ef4]"></a>_ZN14CTransInfo8BitD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, codepagetables8bit.o(i._ZN14CTransInfo8BitD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14CTransInfo8BitD0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV14CTransInfo8Bit)
</UL>
<P><STRONG><a name="[38a0adc]"></a>_ZN14CTransInfoUTF8D0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, transutf8.o(i._ZN14CTransInfoUTF8D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14CTransInfoUTF8D0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf8.o(.constdata__ZTV14CTransInfoUTF8)
</UL>
<P><STRONG><a name="[4eda398]"></a>_ZN14HHPL_PROCESSOR10DisplayOffEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR10DisplayOffEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4eda35c]"></a>_ZN14HHPL_PROCESSOR10SelectFontEi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR10SelectFontEi))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4eda320]"></a>_ZN14HHPL_PROCESSOR10SendToHostEPNS_23SEND_TO_HOST_PARAMETERSE</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR10SendToHostEPNS_23SEND_TO_HOST_PARAMETERSE))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda2e4]"></a>_ZN14HHPL_PROCESSOR10TempEnableEii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR10TempEnableEii))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda2a8]"></a>_ZN14HHPL_PROCESSOR10TerminalIDEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR10TerminalIDEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda26c]"></a>_ZN14HHPL_PROCESSOR10TriggerHitEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR10TriggerHitEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda230]"></a>_ZN14HHPL_PROCESSOR11BacklightOnEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11BacklightOnEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4eda1f4]"></a>_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPhPj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPhPj))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4eda1b8]"></a>_ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj</STRONG> (ARM, 156 bytes, Stack size 80 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR11DisplayMenuEPNS_15MENU_PARAMETERSEPwPj &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4eda17c]"></a>_ZN14HHPL_PROCESSOR11GetFromHostEPc</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11GetFromHostEPc))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4eda140]"></a>_ZN14HHPL_PROCESSOR11GetFromHostEPw</STRONG> (ARM, 136 bytes, Stack size 72 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11GetFromHostEPw))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR11GetFromHostEPw &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4eda104]"></a>_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPciS1_</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPciS1_))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda0c8]"></a>_ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc</STRONG> (ARM, 188 bytes, Stack size 128 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR11InputNumberEiPiiiiPwiPc &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda08c]"></a>_ZN14HHPL_PROCESSOR11InputStringEPNS_23INPUT_STRING_PARAMETERSE</STRONG> (ARM, 80 bytes, Stack size 32 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11InputStringEPNS_23INPUT_STRING_PARAMETERSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN14HHPL_PROCESSOR11InputStringEPNS_23INPUT_STRING_PARAMETERSE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda050]"></a>_ZN14HHPL_PROCESSOR11InputStringEiP7HSTRINGiiPciS2_</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11InputStringEiP7HSTRINGiiPciS2_))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4eda014]"></a>_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc</STRONG> (ARM, 232 bytes, Stack size 152 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPc &rArr; _ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9fd8]"></a>_ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPcPi</STRONG> (ARM, 72 bytes, Stack size 40 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPcPi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN14HHPL_PROCESSOR11InputStringEiP8HWSTRINGiiPwiPcPi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9f9c]"></a>_ZN14HHPL_PROCESSOR11MenuCommandEPcPii</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11MenuCommandEPcPii))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9f60]"></a>_ZN14HHPL_PROCESSOR11MenuCommandEPwPii</STRONG> (ARM, 180 bytes, Stack size 80 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11MenuCommandEPwPii))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR11MenuCommandEPwPii &rArr; _ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9f24]"></a>_ZN14HHPL_PROCESSOR11TestRoutineEiiPPv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR11TestRoutineEiiPPv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9ee8]"></a>_ZN14HHPL_PROCESSOR12BacklightOffEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR12BacklightOffEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9eac]"></a>_ZN14HHPL_PROCESSOR12DisplayWidthEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR12DisplayWidthEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9e70]"></a>_ZN14HHPL_PROCESSOR12EraseDisplayEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR12EraseDisplayEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9e34]"></a>_ZN14HHPL_PROCESSOR12OutputStringEiiiP7HSTRING</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR12OutputStringEiiiP7HSTRING))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9df8]"></a>_ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING</STRONG> (ARM, 116 bytes, Stack size 56 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR12OutputStringEiiiP8HWSTRING &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
</UL>
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9dbc]"></a>_ZN14HHPL_PROCESSOR13DisplayHeightEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR13DisplayHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9d80]"></a>_ZN14HHPL_PROCESSOR13RadioStrengthEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR13RadioStrengthEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9d44]"></a>_ZN14HHPL_PROCESSOR13ScrollDisplayEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR13ScrollDisplayEi))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9d08]"></a>_ZN14HHPL_PROCESSOR14CharacterWidthEii</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR14CharacterWidthEii))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9ccc]"></a>_ZN14HHPL_PROCESSOR14DoBadIndicatorEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR14DoBadIndicatorEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9c90]"></a>_ZN14HHPL_PROCESSOR14InputCharacterEii</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR14InputCharacterEii))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9c54]"></a>_ZN14HHPL_PROCESSOR15BatteryStrengthEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR15BatteryStrengthEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9c18]"></a>_ZN14HHPL_PROCESSOR15CharacterHeightEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR15CharacterHeightEi))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9bdc]"></a>_ZN14HHPL_PROCESSOR15DataFormatDelayEi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR15DataFormatDelayEi))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9ba0]"></a>_ZN14HHPL_PROCESSOR15DisplayLanguageEPc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR15DisplayLanguageEPc))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9b64]"></a>_ZN14HHPL_PROCESSOR15DisplayLanguageEPw</STRONG> (ARM, 136 bytes, Stack size 72 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR15DisplayLanguageEPw))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR15DisplayLanguageEPw &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9b28]"></a>_ZN14HHPL_PROCESSOR15DoGoodIndicatorEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR15DoGoodIndicatorEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9aec]"></a>_ZN14HHPL_PROCESSOR15GetSystemTimer0Ev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR15GetSystemTimer0Ev))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9ab0]"></a>_ZN14HHPL_PROCESSOR16DisplayCursorOffEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR16DisplayCursorOffEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9a74]"></a>_ZN14HHPL_PROCESSOR16IndicatorLightOnEiii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR16IndicatorLightOnEiii))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9a38]"></a>_ZN14HHPL_PROCESSOR16LoadSystemBitmapEiii</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR16LoadSystemBitmapEiii))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed99fc]"></a>_ZN14HHPL_PROCESSOR16ProcessErrorFlagEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR16ProcessErrorFlagEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed99c0]"></a>_ZN14HHPL_PROCESSOR16ZeroSystemTimer0Ev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR16ZeroSystemTimer0Ev))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9984]"></a>_ZN14HHPL_PROCESSOR17FlushKeyPadBufferEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR17FlushKeyPadBufferEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9948]"></a>_ZN14HHPL_PROCESSOR17MoveDisplayCursorEii</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR17MoveDisplayCursorEii))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed990c]"></a>_ZN14HHPL_PROCESSOR18ProcessWarningFlagEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR18ProcessWarningFlagEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed98d0]"></a>_ZN14HHPL_PROCESSOR19ToggleAuxiliaryPortEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR19ToggleAuxiliaryPortEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9894]"></a>_ZN14HHPL_PROCESSOR20DataFormatDelayErrorEPc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR20DataFormatDelayErrorEPc))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed981c]"></a>_ZN14HHPL_PROCESSOR20DataFormatFindFailedEPc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR20DataFormatFindFailedEPc))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed97a4]"></a>_ZN14HHPL_PROCESSOR20DisplayCursorOnBlinkEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR20DisplayCursorOnBlinkEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9768]"></a>_ZN14HHPL_PROCESSOR20IsScriptingAvailableEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR20IsScriptingAvailableEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed972c]"></a>_ZN14HHPL_PROCESSOR20ProcessTerminateFlagEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR20ProcessTerminateFlagEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed96f0]"></a>_ZN14HHPL_PROCESSOR20TerminateHHPLProgramEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR20TerminateHHPLProgramEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed96b4]"></a>_ZN14HHPL_PROCESSOR21DisplayCursorOnSteadyEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR21DisplayCursorOnSteadyEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9678]"></a>_ZN14HHPL_PROCESSOR22PreserveCurrentDisplayEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR22PreserveCurrentDisplayEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed963c]"></a>_ZN14HHPL_PROCESSOR23DataFormatCompareFailedEPc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR23DataFormatCompareFailedEPc))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed95c4]"></a>_ZN14HHPL_PROCESSOR23RestorePreservedDisplayEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR23RestorePreservedDisplayEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9588]"></a>_ZN14HHPL_PROCESSOR25LastSystemOperationStatusEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR25LastSystemOperationStatusEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed954c]"></a>_ZN14HHPL_PROCESSOR26DataFormatCursorOutOfRangeEPc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR26DataFormatCursorOutOfRangeEPc))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed94d4]"></a>_ZN14HHPL_PROCESSOR27ExecuteRunTimeScriptCommandEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR27ExecuteRunTimeScriptCommandEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9498]"></a>_ZN14HHPL_PROCESSOR31CorruptDataFormatCharacterCountEPc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR31CorruptDataFormatCharacterCountEPc))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9420]"></a>_ZN14HHPL_PROCESSOR48ProcessBackgroundOperationsDuringScriptExecutionEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR48ProcessBackgroundOperationsDuringScriptExecutionEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed93e4]"></a>_ZN14HHPL_PROCESSOR4BeepEiii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR4BeepEiii))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed93a8]"></a>_ZN14HHPL_PROCESSOR5DelayEi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR5DelayEi))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed936c]"></a>_ZN14HHPL_PROCESSOR6KeyHitEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR6KeyHitEi))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9330]"></a>_ZN14HHPL_PROCESSOR7GetFontEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR7GetFontEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed92f4]"></a>_ZN14HHPL_PROCESSOR8KeyClickEi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR8KeyClickEi))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed92b8]"></a>_ZN14HHPL_PROCESSOR8LogErrorEPKc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR8LogErrorEPKc))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9240]"></a>_ZN14HHPL_PROCESSOR9DisplayOnEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR9DisplayOnEv))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed9204]"></a>_ZN14HHPL_PROCESSOR9EraseLineEii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR9EraseLineEii))
<BR>[Address Reference Count : 2]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
<LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ed91c8]"></a>_ZN14HHPL_PROCESSOR9ScannerIDEPc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR9ScannerIDEPc))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed918c]"></a>_ZN14HHPL_PROCESSOR9ScannerIDEPw</STRONG> (ARM, 136 bytes, Stack size 72 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR9ScannerIDEPw))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN14HHPL_PROCESSOR9ScannerIDEPw &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9150]"></a>_ZN14HHPL_PROCESSOR9TxSuccessEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR9TxSuccessEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ed9114]"></a>_ZN14HHPL_PROCESSOR9WorkgroupEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hhplprocessor.o(i._ZN14HHPL_PROCESSOR9WorkgroupEv))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.constdata__ZTV14HHPL_PROCESSOR)
</UL>
<P><STRONG><a name="[4ecd684]"></a>_ZN14MAIN_HHPL_PROC10TempEnableEii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC10TempEnableEii))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd648]"></a>_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPciS1_</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPciS1_))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd60c]"></a>_ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc</STRONG> (ARM, 188 bytes, Stack size 128 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _ZN14MAIN_HHPL_PROC11InputNumberEiPiiiiPwiPc &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd5d0]"></a>_ZN14MAIN_HHPL_PROC11InputStringEiP7HSTRINGiiPciS2_</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC11InputStringEiP7HSTRINGiiPciS2_))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd594]"></a>_ZN14MAIN_HHPL_PROC11InputStringEiP8HWSTRINGiiPwiPc</STRONG> (ARM, 88 bytes, Stack size 40 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC11InputStringEiP8HWSTRINGiiPwiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN14MAIN_HHPL_PROC11InputStringEiP8HWSTRINGiiPwiPc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd558]"></a>_ZN14MAIN_HHPL_PROC11MenuCommandEPwPii</STRONG> (ARM, 180 bytes, Stack size 80 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC11MenuCommandEPwPii))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _ZN14MAIN_HHPL_PROC11MenuCommandEPwPii &rArr; _ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4c4c4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING4CopyEPKwj
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING23ConvertAndCopyToHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd51c]"></a>_ZN14MAIN_HHPL_PROC11TestRoutineEiiPPv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC11TestRoutineEiiPPv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd4e0]"></a>_ZN14MAIN_HHPL_PROC14InputCharacterEii</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC14InputCharacterEii))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd4a4]"></a>_ZN14MAIN_HHPL_PROC16IndicatorLightOnEiii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC16IndicatorLightOnEiii))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd468]"></a>_ZN14MAIN_HHPL_PROC16ProcessErrorFlagEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC16ProcessErrorFlagEv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd42c]"></a>_ZN14MAIN_HHPL_PROC18ProcessWarningFlagEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC18ProcessWarningFlagEv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd3f0]"></a>_ZN14MAIN_HHPL_PROC19ToggleAuxiliaryPortEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC19ToggleAuxiliaryPortEv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd3b4]"></a>_ZN14MAIN_HHPL_PROC20ProcessTerminateFlagEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC20ProcessTerminateFlagEv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd378]"></a>_ZN14MAIN_HHPL_PROC20TerminateHHPLProgramEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC20TerminateHHPLProgramEv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd33c]"></a>_ZN14MAIN_HHPL_PROC25LastSystemOperationStatusEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC25LastSystemOperationStatusEv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd2c4]"></a>_ZN14MAIN_HHPL_PROC9ScannerIDEPw</STRONG> (ARM, 136 bytes, Stack size 72 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC9ScannerIDEPw))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _ZN14MAIN_HHPL_PROC9ScannerIDEPw &rArr; _ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING &rArr; _ZN8HWSTRING4CopyEPKwj &rArr; _ZN8HWSTRING15SmartReallocateEj &rArr; _ZN8HWSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[4d80ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING25ConvertAndCopyFromHStringEP7HSTRING
<LI><a href="#[4d80cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING14CopyFromStringEPwj
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[4ecd288]"></a>_ZN14MAIN_HHPL_PROC9TxSuccessEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mainhhplproc.o(i._ZN14MAIN_HHPL_PROC9TxSuccessEv))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.constdata__ZTV14MAIN_HHPL_PROC)
</UL>
<P><STRONG><a name="[3f21174]"></a>_ZN14TiXmlAttributeD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, tinyxmlparser.o(i._ZN14TiXmlAttributeD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN14TiXmlAttributeD0Ev &rArr; _ZN14TiXmlAttributeD1Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[3f21138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttributeD1Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV14TiXmlAttribute)
</UL>
<P><STRONG><a name="[3f21138]"></a>_ZN14TiXmlAttributeD1Ev</STRONG> (ARM, 52 bytes, Stack size 16 bytes, tinyxmlparser.o(i._ZN14TiXmlAttributeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN14TiXmlAttributeD1Ev
</UL>
<BR>[Called By]<UL><LI><a href="#[3f21174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttributeD0Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV14TiXmlAttribute)
</UL>
<P><STRONG><a name="[3f210fc]"></a>_ZN14TiXmlAttributeD2Ev</STRONG> (ARM, 0 bytes, Stack size 16 bytes, tinyxmlparser.o(i._ZN14TiXmlAttributeD1Ev), UNUSED)

<P><STRONG><a name="[4882da8]"></a>_ZN15CDriverUsb2Base5WriteEPKhj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2driverbase.o(i._ZN15CDriverUsb2Base5WriteEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN15CDriverUsb2Base5WriteEPKhj &rArr; _ZN11CDriverBase5WriteEPKhj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
</UL>
<BR>[Address Reference Count : 4]<UL><LI> drvusb2pos.o(.constdata__ZTV14CDriverUsb2Pos)
<LI> usb2driverbase.o(.constdata__ZTV15CDriverUsb2Base)
<LI> drvusb2comemu.o(.constdata__ZTV11CUsb2ComEmu)
<LI> drvusb2kbd.o(.constdata__ZTV14CDriverUsb2Kbd)
</UL>
<P><STRONG><a name="[440e9c0]"></a>_ZN15CThreadedDriver5WriteEPKhj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, threadeddriver.o(i._ZN15CThreadedDriver5WriteEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN15CThreadedDriver5WriteEPKhj &rArr; _ZN11CDriverBase5WriteEPKhj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
</UL>
<BR>[Address Reference Count : 5]<UL><LI> threadeddriver.o(.constdata__ZTV15CThreadedDriver)
<LI> serialbase.o(.constdata__ZTV11CSerialBase)
<LI> drvwedgebase.o(.constdata__ZTV12CWedgeDriver)
<LI> drvserialstd.o(.constdata__ZTV13CSerialDriver)
<LI> drvUsbRem.o(.constdata__ZTV13CDriverUsbRem)
</UL>
<P><STRONG><a name="[49f3690]"></a>_ZN15CUsb2HidSurePos13ReportHandlerEv</STRONG> (ARM, 272 bytes, Stack size 8 bytes, usb2hidsurepos.o(i._ZN15CUsb2HidSurePos13ReportHandlerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN15CUsb2HidSurePos13ReportHandlerEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f3654]"></a>_ZN15CUsb2HidSurePos14Ep0DataHandlerEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, usb2hidsurepos.o(i._ZN15CUsb2HidSurePos14Ep0DataHandlerEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f3618]"></a>_ZN15CUsb2HidSurePos15GetMaxNumIfacesEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidsurepos.o(i._ZN15CUsb2HidSurePos15GetMaxNumIfacesEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f35dc]"></a>_ZN15CUsb2HidSurePos19GetSizeOfConfigDescEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2hidsurepos.o(i._ZN15CUsb2HidSurePos19GetSizeOfConfigDescEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[49f35a0]"></a>_ZN15CUsb2HidSurePos22EPRxHandleReceivedDataEj</STRONG> (ARM, 264 bytes, Stack size 24 bytes, usb2hidsurepos.o(i._ZN15CUsb2HidSurePos22EPRxHandleReceivedDataEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN15CUsb2HidSurePos22EPRxHandleReceivedDataEj &rArr; _ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[440edbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CThreadedDriver6SignalEm
<LI><a href="#[49384bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh
<LI><a href="#[5dd366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[46d0d20]"></a>_ZN15CWedgeIBMFamily5WriteEPKhj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, drvwedgeibm.o(i._ZN15CWedgeIBMFamily5WriteEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN15CWedgeIBMFamily5WriteEPKhj &rArr; _ZN11CDriverBase5WriteEPKhj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvwedgeibm.o(.constdata__ZTV15CWedgeIBMFamily)
</UL>
<P><STRONG><a name="[500ba50]"></a>_ZN15HHPSD_interface13FrameBoundaryEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ScanDriverHi704A.o(i._ZN15HHPSD_interface13FrameBoundaryEv))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[500ba14]"></a>_ZN15HHPSD_interface14setHwLightModeEmmmi</STRONG> (ARM, 48 bytes, Stack size 16 bytes, ScanDriverHi704A.o(i._ZN15HHPSD_interface14setHwLightModeEmmmi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN15HHPSD_interface14setHwLightModeEmmmi
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
<LI> ScanDriverHi704A.o(.constdata__ZTV9HHPSD_BYD)
</UL>
<P><STRONG><a name="[49400f4]"></a>_ZN16CDescriptorQueueD1Ev</STRONG> (ARM, 132 bytes, Stack size 24 bytes, usb2base.o(i._ZN16CDescriptorQueueD1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via BLX)
<LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv (via BLX)
</UL>

<P><STRONG><a name="[49400b8]"></a>_ZN16CDescriptorQueueD2Ev</STRONG> (ARM, 0 bytes, Stack size 24 bytes, usb2base.o(i._ZN16CDescriptorQueueD1Ev), UNUSED)

<P><STRONG><a name="[500b960]"></a>_ZN16Exposure_control11frame_eventEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, ScanDriverHi704A.o(i._ZN16Exposure_control11frame_eventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _ZN16Exposure_control11frame_eventEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 3]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV21Auto_exposure_control)
<LI> ScanDriverHi704A.o(.constdata__ZTV26Exposure_control_cellphone)
<LI> ScanDriverHi704A.o(.constdata__ZTV16Exposure_control)
</UL>
<P><STRONG><a name="[500b924]"></a>_ZN16Exposure_control12deinitializeEP23ScanDriverOpenContext_ti</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScanDriverHi704A.o(i._ZN16Exposure_control12deinitializeEP23ScanDriverOpenContext_ti))
<BR>[Address Reference Count : 2]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV26Exposure_control_cellphone)
<LI> ScanDriverHi704A.o(.constdata__ZTV16Exposure_control)
</UL>
<P><STRONG><a name="[500b8e8]"></a>_ZN16Exposure_control13calc_exposureEv</STRONG> (ARM, 36 bytes, Stack size 0 bytes, ScanDriverHi704A.o(i._ZN16Exposure_control13calc_exposureEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _ZN16Exposure_control13calc_exposureEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV16Exposure_control)
</UL>
<P><STRONG><a name="[500b8ac]"></a>_ZN16Exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ScanDriverHi704A.o(i._ZN16Exposure_control13is_acceptableEP24ScanDriverLastScanInfo_t))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV16Exposure_control)
</UL>
<P><STRONG><a name="[500b870]"></a>_ZN16Exposure_control17get_pixel_samplerEv</STRONG> (ARM, 48 bytes, Stack size 8 bytes, ScanDriverHi704A.o(i._ZN16Exposure_control17get_pixel_samplerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ZN16Exposure_control17get_pixel_samplerEv &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV16Exposure_control)
</UL>
<P><STRONG><a name="[500b834]"></a>_ZN16Exposure_control6sampleEPvm30HHPScanDriverHHPExposureMethod</STRONG> (ARM, 112 bytes, Stack size 16 bytes, ScanDriverHi704A.o(i._ZN16Exposure_control6sampleEPvm30HHPScanDriverHHPExposureMethod))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN16Exposure_control6sampleEPvm30HHPScanDriverHHPExposureMethod
</UL>
<BR>[Address Reference Count : 3]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV21Auto_exposure_control)
<LI> ScanDriverHi704A.o(.constdata__ZTV26Exposure_control_cellphone)
<LI> ScanDriverHi704A.o(.constdata__ZTV16Exposure_control)
</UL>
<P><STRONG><a name="[530a894]"></a>_ZN16HCOMMAND_HANDLER12WakeupDeviceEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, MatrixSynFECommandHandler.o(i._ZN16HCOMMAND_HANDLER12WakeupDeviceEv))
<BR>[Address Reference Count : 2]<UL><LI> hcommandhandler.o(.constdata__ZTV16HCOMMAND_HANDLER)
<LI> MatrixNonMenuHmodem.o(.constdata__ZTV13NonMenuHModem)
</UL>
<P><STRONG><a name="[4e679dc]"></a>_ZN16HHPSD_Transition11ResetEngineEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition11ResetEngineEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e679a0]"></a>_ZN16HHPSD_Transition13FrameBoundaryEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition13FrameBoundaryEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e67964]"></a>_ZN16HHPSD_Transition15ScanEngineStartEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition15ScanEngineStartEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e67928]"></a>_ZN16HHPSD_Transition17ScanEngineRestartEP23ScanDriverOpenContext_t</STRONG> (ARM, 16 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition17ScanEngineRestartEP23ScanDriverOpenContext_t))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e678ec]"></a>_ZN16HHPSD_Transition19LightSettingsUpdateEPK23ScanDriverOpenContext_t</STRONG> (ARM, 16 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition19LightSettingsUpdateEPK23ScanDriverOpenContext_t))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e678b0]"></a>_ZN16HHPSD_Transition20InitializeScanEngineEP23ScanDriverOpenContext_ti</STRONG> (ARM, 20 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition20InitializeScanEngineEP23ScanDriverOpenContext_ti))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e67874]"></a>_ZN16HHPSD_Transition22DeinitializeScanEngineEP23ScanDriverOpenContext_ti</STRONG> (ARM, 20 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition22DeinitializeScanEngineEP23ScanDriverOpenContext_ti))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e67838]"></a>_ZN16HHPSD_Transition22ExposureSettingsUpdateEP23ScanDriverOpenContext_t</STRONG> (ARM, 16 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition22ExposureSettingsUpdateEP23ScanDriverOpenContext_t))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e677fc]"></a>_ZN16HHPSD_Transition22ScanManagerAutoExpCalcEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition22ScanManagerAutoExpCalcEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e677c0]"></a>_ZN16HHPSD_Transition23ScanEngineFaultOccurredEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition23ScanEngineFaultOccurredEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e67784]"></a>_ZN16HHPSD_Transition24SetDefaultScannerOptionsEP23ScanDriverOpenContext_t</STRONG> (ARM, 16 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition24SetDefaultScannerOptionsEP23ScanDriverOpenContext_t))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e67748]"></a>_ZN16HHPSD_Transition28ScanManagerAutoExpLineSampleEPvm</STRONG> (ARM, 20 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition28ScanManagerAutoExpLineSampleEPvm))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e6770c]"></a>_ZN16HHPSD_Transition28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t</STRONG> (ARM, 16 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e6761c]"></a>_ZN16HHPSD_Transition33ScanManagerFrameEventAutoExposureEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition33ScanManagerFrameEventAutoExposureEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[4e675e0]"></a>_ZN16HHPSD_Transition41ScanManagerEngineSaysOkToCaptureNextFrameEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN16HHPSD_Transition41ScanManagerEngineSaysOkToCaptureNextFrameEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.constdata__ZTV16HHPSD_Transition)
</UL>
<P><STRONG><a name="[553d020]"></a>_ZN16HTRANSFER_STATUS11MayContinueEjj</STRONG> (ARM, 16 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS11MayContinueEjj))
<BR>[Address Reference Count : 1]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
</UL>
<P><STRONG><a name="[553cfe4]"></a>_ZN16HTRANSFER_STATUS11MayContinueEjjb</STRONG> (ARM, 8 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS11MayContinueEjjb))
<BR>[Address Reference Count : 1]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
</UL>
<P><STRONG><a name="[553cf6c]"></a>_ZN16HTRANSFER_STATUS12RetryWarningEP7HSTRING</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS12RetryWarningEP7HSTRING))
<BR>[Address Reference Count : 2]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
<LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[553cef4]"></a>_ZN16HTRANSFER_STATUS16SetProgressLevelEi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS16SetProgressLevelEi))
<BR>[Address Reference Count : 2]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
<LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[553ceb8]"></a>_ZN16HTRANSFER_STATUS16SetProgressLevelEii</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS16SetProgressLevelEii))
<BR>[Address Reference Count : 2]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
<LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[553ce40]"></a>_ZN16HTRANSFER_STATUS19CloseDownloadStatusEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS19CloseDownloadStatusEv))
<BR>[Address Reference Count : 1]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
</UL>
<P><STRONG><a name="[553cdc8]"></a>_ZN16HTRANSFER_STATUS21DownloadFinishHandlerEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS21DownloadFinishHandlerEv))
<BR>[Address Reference Count : 2]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
<LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[553cd8c]"></a>_ZN16HTRANSFER_STATUS21PrepareDownloadStatusEP8HWSTRING</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS21PrepareDownloadStatusEP8HWSTRING))
<BR>[Address Reference Count : 1]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
</UL>
<P><STRONG><a name="[553cd50]"></a>_ZN16HTRANSFER_STATUS21PrepareDownloadStatusEv</STRONG> (ARM, 64 bytes, Stack size 40 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS21PrepareDownloadStatusEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ZN16HTRANSFER_STATUS21PrepareDownloadStatusEv &rArr; _ZN8HWSTRINGC1Ejb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
</UL>
<P><STRONG><a name="[553cd14]"></a>_ZN16HTRANSFER_STATUS23DownloadStartingHandlerEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS23DownloadStartingHandlerEv))
<BR>[Address Reference Count : 2]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
<LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[553cc9c]"></a>_ZN16HTRANSFER_STATUS26ReceivedProtocolCharactersEP7HSTRING</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS26ReceivedProtocolCharactersEP7HSTRING))
<BR>[Address Reference Count : 2]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
<LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[553cc60]"></a>_ZN16HTRANSFER_STATUS35ReceivedDataLockSemaphoreWasChangedEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htransferstatus.o(i._ZN16HTRANSFER_STATUS35ReceivedDataLockSemaphoreWasChangedEv))
<BR>[Address Reference Count : 2]<UL><LI> htransferstatus.o(.constdata__ZTV16HTRANSFER_STATUS)
<LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[3f2547c]"></a>_ZN16TiXmlDeclaration13ToDeclarationEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tinyxml.o(i._ZN16TiXmlDeclaration13ToDeclarationEv))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
</UL>
<P><STRONG><a name="[3f25440]"></a>_ZN16TiXmlDeclarationD0Ev</STRONG> (ARM, 72 bytes, Stack size 16 bytes, tinyxml.o(i._ZN16TiXmlDeclarationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN16TiXmlDeclarationD0Ev &rArr; _ZN9TiXmlNodeD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
</UL>
<P><STRONG><a name="[38a18ec]"></a>_ZN17CTransInfoUTF16BED0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, transutf16.o(i._ZN17CTransInfoUTF16BED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN17CTransInfoUTF16BED0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16BE)
</UL>
<P><STRONG><a name="[38a1838]"></a>_ZN17CTransInfoUTF16LED0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, transutf16.o(i._ZN17CTransInfoUTF16LED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN17CTransInfoUTF16LED0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transutf16.o(.constdata__ZTV17CTransInfoUTF16LE)
</UL>
<P><STRONG><a name="[49fbb38]"></a>_ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj</STRONG> (ARM, 440 bytes, Stack size 24 bytes, usb2hidhlp.o(i._ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _ZN17CUsb2HidPosHelper22EPRxHandleReceivedDataEj &rArr; _ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh &rArr; _ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh &rArr; _ZN9CUsb2Chip14MX25USB2_qu2epEhhjhPVKh &rArr; _ZN9CUsb2Chip16MX25USB2_filldtdEhhjhPVKh
</UL>
<BR>[Calls]<UL><LI><a href="#[49384bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip26MX25USB2_ReadEndpoint_DataEhjbPVh
<LI><a href="#[49401e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Base16StuffInputBufferEPKhj
</UL>
<BR>[Address Reference Count : 3]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[49f69a8]"></a>_ZN18CDriverUsb2SurePos5WriteEPKhj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, drvusb2surepos.o(i._ZN18CDriverUsb2SurePos5WriteEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN18CDriverUsb2SurePos5WriteEPKhj &rArr; _ZN11CDriverBase5WriteEPKhj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvusb2surepos.o(.constdata__ZTV18CDriverUsb2SurePos)
</UL>
<P><STRONG><a name="[3877e40]"></a>_ZN18CTransInfo8Bit1To1D0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, codepagetables8bit.o(i._ZN18CTransInfo8Bit1To1D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN18CTransInfo8Bit1To1D0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV18CTransInfo8Bit1To1)
</UL>
<P><STRONG><a name="[387bc5c]"></a>_ZN18CTransInfoSystemCPD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, codepagesystemcp.o(i._ZN18CTransInfoSystemCPD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN18CTransInfoSystemCPD0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagesystemcp.o(.constdata__ZTV18CTransInfoSystemCP)
</UL>
<P><STRONG><a name="[3877d8c]"></a>_ZN20CTransInfo8BitExoticD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, codepagetables8bit.o(i._ZN20CTransInfo8BitExoticD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZN20CTransInfo8BitExoticD0Ev &rArr; _ZN14CTransInfoBaseD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[387eb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoBaseD2Ev
<LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codepagetables8bit.o(.constdata__ZTV20CTransInfo8BitExotic)
</UL>
<P><STRONG><a name="[500b7f8]"></a>_ZN21Auto_exposure_control17get_pixel_samplerEv</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ScanDriverHi704A.o(i._ZN21Auto_exposure_control17get_pixel_samplerEv))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV21Auto_exposure_control)
</UL>
<P><STRONG><a name="[440fcbc]"></a>_ZN21CSerialSimpleNoThread5WriteEPKhj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, drvsimpleserialnothread.o(i._ZN21CSerialSimpleNoThread5WriteEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _ZN21CSerialSimpleNoThread5WriteEPKhj &rArr; _ZN11CDriverBase5WriteEPKhj &rArr; _ZN12CBarcodeData16StoreToNewBufferEPKhj &rArr; _ZN15CBarcodeManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferERPhRj &rArr; _ZN14CBufferManager12GetNewBufferEj &rArr;  MT_WaitMutex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4337d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CDriverBase5WriteEPKhj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drvsimpleserialnothread.o(.constdata__ZTV21CSerialSimpleNoThread)
</UL>
<P><STRONG><a name="[55e1330]"></a>_ZN21MatrixHTransferStatus11MayContinueEjj</STRONG> (ARM, 16 bytes, Stack size 0 bytes, Matrixhtransferstatus.o(i._ZN21MatrixHTransferStatus11MayContinueEjj))
<BR>[Address Reference Count : 1]<UL><LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[55e12f4]"></a>_ZN21MatrixHTransferStatus21PrepareDownloadStatusEP8HWSTRING</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Matrixhtransferstatus.o(i._ZN21MatrixHTransferStatus21PrepareDownloadStatusEP8HWSTRING))
<BR>[Address Reference Count : 1]<UL><LI> Matrixhtransferstatus.o(.constdata__ZTV21MatrixHTransferStatus)
</UL>
<P><STRONG><a name="[4e675a4]"></a>_ZN22HardwareLayerInterface10dummy_zeroEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(i._ZN22HardwareLayerInterface10dummy_zeroEv))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[3a1ccc0]"></a>_ZN26DecodePlugingConfiguration20GetAmIEnabledSettingEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, HONPluginConfiguration.o(i._ZN26DecodePlugingConfiguration20GetAmIEnabledSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.constdata__ZTV26DecodePlugingConfiguration)
</UL>
<P><STRONG><a name="[3a1cc84]"></a>_ZN26DecodePlugingConfiguration26GetMyConfigFileNameSettingEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, HONPluginConfiguration.o(i._ZN26DecodePlugingConfiguration26GetMyConfigFileNameSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.constdata__ZTV26DecodePlugingConfiguration)
</UL>
<P><STRONG><a name="[500b7bc]"></a>_ZN26Exposure_control_cellphone17get_pixel_samplerEv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ScanDriverHi704A.o(i._ZN26Exposure_control_cellphone17get_pixel_samplerEv))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV26Exposure_control_cellphone)
</UL>
<P><STRONG><a name="[3a1cc48]"></a>_ZN27ImagingPlugingConfiguration20GetAmIEnabledSettingEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, HONPluginConfiguration.o(i._ZN27ImagingPlugingConfiguration20GetAmIEnabledSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.constdata__ZTV27ImagingPlugingConfiguration)
</UL>
<P><STRONG><a name="[3a1cc0c]"></a>_ZN27ImagingPlugingConfiguration26GetMyConfigFileNameSettingEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, HONPluginConfiguration.o(i._ZN27ImagingPlugingConfiguration26GetMyConfigFileNameSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.constdata__ZTV27ImagingPlugingConfiguration)
</UL>
<P><STRONG><a name="[5367c90]"></a>_ZN28READER_CONFIGURATION_STORAGE12ProcessErrorEiPKc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, productconfiguration.o(i._ZN28READER_CONFIGURATION_STORAGE12ProcessErrorEiPKc))
<BR>[Address Reference Count : 2]<UL><LI> productconfiguration.o(.constdata__ZTV21PRODUCT_CONFIGURATION)
<LI> readerconfigurationstorage.o(.constdata__ZTV28READER_CONFIGURATION_STORAGE)
</UL>
<P><STRONG><a name="[535f1d0]"></a>_ZN28READER_CONFIGURATION_STORAGE31WorkingValueForCurrentWorkgroupEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE</STRONG> (ARM, 32 bytes, Stack size 0 bytes, readerconfigurationstorage.o(i._ZN28READER_CONFIGURATION_STORAGE31WorkingValueForCurrentWorkgroupEPN13SUB_TAG_TABLE19SUB_TAG_TABLE_ENTRYE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[3a1cbd0]"></a>_ZN30FormattingPlugingConfiguration20GetAmIEnabledSettingEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, HONPluginConfiguration.o(i._ZN30FormattingPlugingConfiguration20GetAmIEnabledSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.constdata__ZTV30FormattingPlugingConfiguration)
</UL>
<P><STRONG><a name="[3a1cb94]"></a>_ZN30FormattingPlugingConfiguration26GetMyConfigFileNameSettingEv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, HONPluginConfiguration.o(i._ZN30FormattingPlugingConfiguration26GetMyConfigFileNameSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.constdata__ZTV30FormattingPlugingConfiguration)
</UL>
<P><STRONG><a name="[54d68dc]"></a>_ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, htag.o(i._ZN4HTAG18PreLoadTaggedImageEP7HSTRINGPi))
<BR>[Address Reference Count : 11]<UL><LI> HTagReaderCode.o(.constdata__ZTV16HTAG_READER_CODE)
<LI> HTagReaderCode.o(.constdata__ZTV25HTAG_SCAN_ENGINE_FIRMWARE)
<LI> HTagFile.o(.constdata__ZTV9HTAG_FILE)
<LI> htagscript.o(.constdata__ZTV11HTAG_SCRIPT)
<LI> htagscript.o(.constdata__ZTV24HTAG_SCRIPT_HOST_COMMAND)
<LI> htagscript.o(.constdata__ZTV21HTAG_SCRIPT_HOST_DATA)
<LI> htag.o(.constdata__ZTV4HTAG)
<LI> HTagDataResult.o(.constdata__ZTV18HTAG_DECODE_RESULT)
<LI> HTagDataResult.o(.constdata__ZTV23HTAG_SYSTEM_INFORMATION)
<LI> HTagDataResult.o(.constdata__ZTV17HTAG_MENU_COMMAND)
<LI> HTagDataResult.o(.constdata__ZTV20HTAG_ACTIVITY_STATUS)
</UL>
<P><STRONG><a name="[41faf80]"></a>_ZN4HTAG19PostLoadTaggedImageEPi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Image_Send_Binarize_Himage.o(i._ZN4HTAG19PostLoadTaggedImageEPi))
<BR>[Address Reference Count : 14]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
<LI> HTagReaderCode.o(.constdata__ZTV16HTAG_READER_CODE)
<LI> HTagReaderCode.o(.constdata__ZTV25HTAG_SCAN_ENGINE_FIRMWARE)
<LI> HTagFile.o(.constdata__ZTV9HTAG_FILE)
<LI> htagimage.o(.constdata__ZTV10HTAG_IMAGE)
<LI> htagscript.o(.constdata__ZTV11HTAG_SCRIPT)
<LI> htagscript.o(.constdata__ZTV24HTAG_SCRIPT_HOST_COMMAND)
<LI> htagscript.o(.constdata__ZTV21HTAG_SCRIPT_HOST_DATA)
<LI> htag.o(.constdata__ZTV4HTAG)
<LI> HTagDataResult.o(.constdata__ZTV18HTAG_DECODE_RESULT)
<LI> HTagDataResult.o(.constdata__ZTV23HTAG_SYSTEM_INFORMATION)
<LI> HTagDataResult.o(.constdata__ZTV17HTAG_MENU_COMMAND)
<LI> HTagDataResult.o(.constdata__ZTV20HTAG_ACTIVITY_STATUS)
<LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[54d68a0]"></a>_ZN4HTAG20PreCreateTaggedImageEP7HSTRING</STRONG> (ARM, 8 bytes, Stack size 0 bytes, htag.o(i._ZN4HTAG20PreCreateTaggedImageEP7HSTRING))
<BR>[Address Reference Count : 11]<UL><LI> HTagReaderCode.o(.constdata__ZTV16HTAG_READER_CODE)
<LI> HTagReaderCode.o(.constdata__ZTV25HTAG_SCAN_ENGINE_FIRMWARE)
<LI> HTagFile.o(.constdata__ZTV9HTAG_FILE)
<LI> htagscript.o(.constdata__ZTV11HTAG_SCRIPT)
<LI> htagscript.o(.constdata__ZTV24HTAG_SCRIPT_HOST_COMMAND)
<LI> htagscript.o(.constdata__ZTV21HTAG_SCRIPT_HOST_DATA)
<LI> htag.o(.constdata__ZTV4HTAG)
<LI> HTagDataResult.o(.constdata__ZTV18HTAG_DECODE_RESULT)
<LI> HTagDataResult.o(.constdata__ZTV23HTAG_SYSTEM_INFORMATION)
<LI> HTagDataResult.o(.constdata__ZTV17HTAG_MENU_COMMAND)
<LI> HTagDataResult.o(.constdata__ZTV20HTAG_ACTIVITY_STATUS)
</UL>
<P><STRONG><a name="[54d6864]"></a>_ZN4HTAG32PostProcessParameterAfterParsingEPKcPi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, htag.o(i._ZN4HTAG32PostProcessParameterAfterParsingEPKcPi))
<BR>[Address Reference Count : 11]<UL><LI> HTagReaderCode.o(.constdata__ZTV16HTAG_READER_CODE)
<LI> HTagReaderCode.o(.constdata__ZTV25HTAG_SCAN_ENGINE_FIRMWARE)
<LI> HTagFile.o(.constdata__ZTV9HTAG_FILE)
<LI> htagscript.o(.constdata__ZTV11HTAG_SCRIPT)
<LI> htagscript.o(.constdata__ZTV24HTAG_SCRIPT_HOST_COMMAND)
<LI> htagscript.o(.constdata__ZTV21HTAG_SCRIPT_HOST_DATA)
<LI> htag.o(.constdata__ZTV4HTAG)
<LI> HTagDataResult.o(.constdata__ZTV18HTAG_DECODE_RESULT)
<LI> HTagDataResult.o(.constdata__ZTV23HTAG_SYSTEM_INFORMATION)
<LI> HTagDataResult.o(.constdata__ZTV17HTAG_MENU_COMMAND)
<LI> HTagDataResult.o(.constdata__ZTV20HTAG_ACTIVITY_STATUS)
</UL>
<P><STRONG><a name="[54d6828]"></a>_ZN4HTAG36PerformAdditionalParameterValidationEPi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htag.o(i._ZN4HTAG36PerformAdditionalParameterValidationEPi))
<BR>[Address Reference Count : 11]<UL><LI> HTagReaderCode.o(.constdata__ZTV16HTAG_READER_CODE)
<LI> HTagReaderCode.o(.constdata__ZTV25HTAG_SCAN_ENGINE_FIRMWARE)
<LI> HTagFile.o(.constdata__ZTV9HTAG_FILE)
<LI> htagscript.o(.constdata__ZTV11HTAG_SCRIPT)
<LI> htagscript.o(.constdata__ZTV24HTAG_SCRIPT_HOST_COMMAND)
<LI> htagscript.o(.constdata__ZTV21HTAG_SCRIPT_HOST_DATA)
<LI> htag.o(.constdata__ZTV4HTAG)
<LI> HTagDataResult.o(.constdata__ZTV18HTAG_DECODE_RESULT)
<LI> HTagDataResult.o(.constdata__ZTV23HTAG_SYSTEM_INFORMATION)
<LI> HTagDataResult.o(.constdata__ZTV17HTAG_MENU_COMMAND)
<LI> HTagDataResult.o(.constdata__ZTV20HTAG_ACTIVITY_STATUS)
</UL>
<P><STRONG><a name="[54d67ec]"></a>_ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, htag.o(i._ZN4HTAG39PerformAdditionalOperationsAfterParsingEPi))
<BR>[Address Reference Count : 11]<UL><LI> HTagReaderCode.o(.constdata__ZTV16HTAG_READER_CODE)
<LI> HTagReaderCode.o(.constdata__ZTV25HTAG_SCAN_ENGINE_FIRMWARE)
<LI> HTagFile.o(.constdata__ZTV9HTAG_FILE)
<LI> htagscript.o(.constdata__ZTV11HTAG_SCRIPT)
<LI> htagscript.o(.constdata__ZTV24HTAG_SCRIPT_HOST_COMMAND)
<LI> htagscript.o(.constdata__ZTV21HTAG_SCRIPT_HOST_DATA)
<LI> htag.o(.constdata__ZTV4HTAG)
<LI> HTagDataResult.o(.constdata__ZTV18HTAG_DECODE_RESULT)
<LI> HTagDataResult.o(.constdata__ZTV23HTAG_SYSTEM_INFORMATION)
<LI> HTagDataResult.o(.constdata__ZTV17HTAG_MENU_COMMAND)
<LI> HTagDataResult.o(.constdata__ZTV20HTAG_ACTIVITY_STATUS)
</UL>
<P><STRONG><a name="[54dd3bc]"></a>_ZN5HCOMM10HCommSleepEj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM10HCommSleepEj))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd380]"></a>_ZN5HCOMM11ElapsedTimeEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM11ElapsedTimeEv))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd2cc]"></a>_ZN5HCOMM15FlushReadBufferEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM15FlushReadBufferEi))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd290]"></a>_ZN5HCOMM15FlushReadBufferEv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM15FlushReadBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd254]"></a>_ZN5HCOMM15ZeroElapsedTimeEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM15ZeroElapsedTimeEv))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd218]"></a>_ZN5HCOMM16FlushWriteBufferEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM16FlushWriteBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd1dc]"></a>_ZN5HCOMM18BytesInWriteBufferEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM18BytesInWriteBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd128]"></a>_ZN5HCOMM4ReadEP7HSTRINGjj</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM4ReadEP7HSTRINGjj))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd0b0]"></a>_ZN5HCOMM5WriteEP7HSTRING</STRONG> (ARM, 36 bytes, Stack size 8 bytes, hcomm.o(i._ZN5HCOMM5WriteEP7HSTRING))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ZN5HCOMM5WriteEP7HSTRING
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[54dd074]"></a>_ZN5HCOMM5WriteEP7HSTRINGiib</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hcomm.o(i._ZN5HCOMM5WriteEP7HSTRINGiib))
<BR>[Address Reference Count : 1]<UL><LI> hcomm.o(.constdata__ZTV5HCOMM)
</UL>
<P><STRONG><a name="[41faf44]"></a>_ZN6HIMAGE16OutlinedBinarizeEP9BITSTRINGS1_iib</STRONG> (ARM, 52 bytes, Stack size 24 bytes, Image_Send_Binarize_Himage.o(i._ZN6HIMAGE16OutlinedBinarizeEP9BITSTRINGS1_iib))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN6HIMAGE16OutlinedBinarizeEP9BITSTRINGS1_iib
</UL>
<BR>[Address Reference Count : 2]<UL><LI> Image_Send_Binarize_Himage.o(.constdata__ZTV15BINARIZE_HIMAGE)
<LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[570a2e0]"></a>_ZN6HIMAGE8BinarizeEP9BITSTRINGS1_iib</STRONG> (ARM, 112 bytes, Stack size 24 bytes, himage.o(i._ZN6HIMAGE8BinarizeEP9BITSTRINGS1_iib))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _ZN6HIMAGE8BinarizeEP9BITSTRINGS1_iib &rArr; _ZN7HSTRING4CopyEPKc &rArr; _ZN7HSTRING4CopyEPKhj &rArr; _ZN7HSTRING15SmartReallocateEj &rArr; _ZN7HSTRING10ReallocateEjb &rArr; _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[4d794d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING12AppendNumberEij
</UL>
<BR>[Address Reference Count : 1]<UL><LI> himage.o(.constdata__ZTV6HIMAGE)
</UL>
<P><STRONG><a name="[36af718]"></a>_ZN9CDataEdit20CheckDestinationSizeEv</STRONG> (ARM, 48 bytes, Stack size 0 bytes, dataedit.o(i._ZN9CDataEdit20CheckDestinationSizeEv), UNUSED)

<P><STRONG><a name="[494007c]"></a>_ZN9CUsb2Base11TimeoutHackEhjb</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base11TimeoutHackEhjb))
<BR>[Address Reference Count : 1]<UL><LI> usb2base.o(.constdata__ZTV9CUsb2Base)
</UL>
<P><STRONG><a name="[4940040]"></a>_ZN9CUsb2Base11connect_USBEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base11connect_USBEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2base.o(.constdata__ZTV9CUsb2Base)
</UL>
<P><STRONG><a name="[4940004]"></a>_ZN9CUsb2Base12GetPidOffsetEb</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base12GetPidOffsetEb))
<BR>[Address Reference Count : 5]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493ffc8]"></a>_ZN9CUsb2Base12IsTxCompleteEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base12IsTxCompleteEv))
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493ff8c]"></a>_ZN9CUsb2Base13IsCtsInActiveEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base13IsCtsInActiveEv))
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493ff50]"></a>_ZN9CUsb2Base13IsEnabled_CTSEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base13IsEnabled_CTSEv))
<BR>[Address Reference Count : 8]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493ff14]"></a>_ZN9CUsb2Base14disconnect_USBEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base14disconnect_USBEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2base.o(.constdata__ZTV9CUsb2Base)
</UL>
<P><STRONG><a name="[493fed8]"></a>_ZN9CUsb2Base15GetMaxNumIfacesEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base15GetMaxNumIfacesEv))
<BR>[Address Reference Count : 5]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493fe9c]"></a>_ZN9CUsb2Base15IsRemTxCompleteEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base15IsRemTxCompleteEv))
<BR>[Address Reference Count : 3]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493fe60]"></a>_ZN9CUsb2Base19GetSizeOfConfigDescEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base19GetSizeOfConfigDescEv))
<BR>[Address Reference Count : 5]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493fe24]"></a>_ZN9CUsb2Base23GetScannerDisableStatusEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base23GetScannerDisableStatusEv))
<BR>[Address Reference Count : 4]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493fdac]"></a>_ZN9CUsb2Base5CloseEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base5CloseEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2base.o(.constdata__ZTV9CUsb2Base)
</UL>
<P><STRONG><a name="[493fd70]"></a>_ZN9CUsb2Base8GetEPnumEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base8GetEPnumEv))
<BR>[Address Reference Count : 9]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493fd34]"></a>_ZN9CUsb2Base9ReconnectEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base9ReconnectEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2base.o(.constdata__ZTV9CUsb2Base)
</UL>
<P><STRONG><a name="[493fcf8]"></a>_ZN9CUsb2Base9SendToRemEPKhi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2base.o(i._ZN9CUsb2Base9SendToRemEPKhi))
<BR>[Address Reference Count : 3]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493d73c]"></a>_ZN9CUsb2Chip14ReceiveKbdDataEj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2enum.o(i._ZN9CUsb2Chip14ReceiveKbdDataEj))
<BR>[Address Reference Count : 7]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
</UL>
<P><STRONG><a name="[4933fd4]"></a>_ZN9CUsb2Chip15control_handlerEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2chip.o(i._ZN9CUsb2Chip15control_handlerEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493d700]"></a>_ZN9CUsb2Chip22EPRxHandleReceivedDataEj</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2enum.o(i._ZN9CUsb2Chip22EPRxHandleReceivedDataEj))
<BR>[Address Reference Count : 3]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[4933f5c]"></a>_ZN9CUsb2Chip9stall_epsEhh</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2chip.o(i._ZN9CUsb2Chip9stall_epsEhh))
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
</UL>
<P><STRONG><a name="[493d6c4]"></a>_ZN9CUsb2Enum14OnClassRequestEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2enum.o(i._ZN9CUsb2Enum14OnClassRequestEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
</UL>
<P><STRONG><a name="[493d688]"></a>_ZN9CUsb2Enum14get_descriptorEv</STRONG> (ARM, 1180 bytes, Stack size 32 bytes, usb2enum.o(i._ZN9CUsb2Enum14get_descriptorEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[493d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh
<LI><a href="#[493d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip15DataStageEnableEv
<LI><a href="#[493d55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
</UL>

<P><STRONG><a name="[493d64c]"></a>_ZN9CUsb2Enum15OnVendorRequestEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, usb2enum.o(i._ZN9CUsb2Enum15OnVendorRequestEv))
<BR>[Address Reference Count : 6]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493d610]"></a>_ZN9CUsb2Enum15control_handlerEv</STRONG> (ARM, 1504 bytes, Stack size 96 bytes, usb2enum.o(i._ZN9CUsb2Enum15control_handlerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _ZN9CUsb2Enum15control_handlerEv &rArr; _ZN7CUsbRem14OnClassRequestEPVK15_device_requestPhPiPb
</UL>
<BR>[Calls]<UL><LI><a href="#[352c910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16InputPowerStatusv
<LI><a href="#[36b9f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SoundPowerupBeepv
<LI><a href="#[493d28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip26MX25USB2_SetEndpointStatusEhh
<LI><a href="#[493d2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip26MX25USB2_GetEndpointStatusEh
<LI><a href="#[493d304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip21MX25USB2_ReadEndpointEhjbPVh
<LI><a href="#[493d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip19MX25USB2_qu2ep_ctrlEhjhPVKh
<LI><a href="#[493d37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip17StatusAcknowledgeEh
<LI><a href="#[493d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CUsb2Chip15DataStageEnableEv
<LI><a href="#[493d520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7CUsbRem14OnClassRequestEPVK15_device_requestPhPiPb
</UL>
<BR>[Address Reference Count : 7]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493d5d4]"></a>_ZN9CUsb2Enum9stall_ep0Ev</STRONG> (ARM, 20 bytes, Stack size 0 bytes, usb2enum.o(i._ZN9CUsb2Enum9stall_ep0Ev))
<BR>[Address Reference Count : 7]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[493d598]"></a>_ZN9CUsb2Enum9stall_epsEhh</STRONG> (ARM, 216 bytes, Stack size 0 bytes, usb2enum.o(i._ZN9CUsb2Enum9stall_epsEhh))
<BR>[Address Reference Count : 7]<UL><LI> usb2hidpos.o(.constdata__ZTV11CUsb2HidPos)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> usb2cdcacm.o(.constdata__ZTV11CUsb2CdcAcm)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2hidsurepos.o(.constdata__ZTV15CUsb2HidSurePos)
<LI> usb2hidkbd.o(.constdata__ZTV11CUsb2HidKbd)
</UL>
<P><STRONG><a name="[3f25350]"></a>_ZN9TiXmlNode11GetDocumentEv</STRONG> (ARM, 72 bytes, Stack size 8 bytes, tinyxml.o(i._ZN9TiXmlNode11GetDocumentEv), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[3f25314]"></a>_ZN9TiXmlNode13ToDeclarationEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tinyxml.o(i._ZN9TiXmlNode13ToDeclarationEv))
<BR>[Address Reference Count : 6]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
<LI> tinyxml.o(.constdata__ZTV9TiXmlNode)
<LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
<LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
<LI> tinyxml.o(.constdata__ZTV9TiXmlText)
<LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[3f252d8]"></a>_ZN9TiXmlNode6ToTextEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tinyxml.o(i._ZN9TiXmlNode6ToTextEv))
<BR>[Address Reference Count : 6]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
<LI> tinyxml.o(.constdata__ZTV9TiXmlNode)
<LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
<LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
<LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
<LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[3f251e8]"></a>_ZN9TiXmlText6ToTextEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tinyxml.o(i._ZN9TiXmlText6ToTextEv))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlText)
</UL>
<P><STRONG><a name="[3f251ac]"></a>_ZN9TiXmlTextD0Ev</STRONG> (ARM, 16 bytes, Stack size 8 bytes, tinyxml.o(i._ZN9TiXmlTextD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ZN9TiXmlTextD0Ev &rArr; _ZN9TiXmlNodeD2Ev
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1c810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9TiXmlNodeD2Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlText)
</UL>
<P><STRONG><a name="[3f250bc]"></a>_ZNK12TiXmlElement9ToElementEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tinyxml.o(i._ZNK12TiXmlElement9ToElementEv))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
</UL>
<P><STRONG><a name="[3f210c0]"></a>_ZNK13TiXmlDocument10ToDocumentEv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tinyxmlparser.o(i._ZNK13TiXmlDocument10ToDocumentEv))
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
</UL>
<P><STRONG><a name="[3f21084]"></a>_ZNK14TiXmlAttribute5PrintEP7FS_FILEi</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tinyxmlparser.o(i._ZNK14TiXmlAttribute5PrintEP7FS_FILEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = _ZNK14TiXmlAttribute5PrintEP7FS_FILEi &rArr; _ZNK14TiXmlAttribute5PrintEP7FS_FILEiP11TiXmlString &rArr; fsm_write &rArr; fg_write &rArr; _fg_checksyncpos &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[3f25f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNK14TiXmlAttribute5PrintEP7FS_FILEiP11TiXmlString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tinyxmlparser.o(.constdata__ZTV14TiXmlAttribute)
</UL>
<P><STRONG><a name="[3f25008]"></a>_ZNK16TiXmlDeclaration5PrintEP7FS_FILEi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tinyxml.o(i._ZNK16TiXmlDeclaration5PrintEP7FS_FILEi))
<BR>[Address Reference Count : 1]<UL><LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
</UL>
<P><STRONG><a name="[3f24fcc]"></a>_ZNK9TiXmlNode10ToDocumentEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tinyxml.o(i._ZNK9TiXmlNode10ToDocumentEv))
<BR>[Address Reference Count : 6]<UL><LI> tinyxml.o(.constdata__ZTV9TiXmlNode)
<LI> tinyxml.o(.constdata__ZTV12TiXmlElement)
<LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
<LI> tinyxml.o(.constdata__ZTV9TiXmlText)
<LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
<LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[3f24edc]"></a>_ZNK9TiXmlNode9ToElementEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tinyxml.o(i._ZNK9TiXmlNode9ToElementEv))
<BR>[Address Reference Count : 6]<UL><LI> tinyxmlparser.o(.constdata__ZTV13TiXmlDocument)
<LI> tinyxml.o(.constdata__ZTV9TiXmlNode)
<LI> tinyxml.o(.constdata__ZTV12TiXmlComment)
<LI> tinyxml.o(.constdata__ZTV9TiXmlText)
<LI> tinyxml.o(.constdata__ZTV16TiXmlDeclaration)
<LI> tinyxml.o(.constdata__ZTV12TiXmlUnknown)
</UL>
<P><STRONG><a name="[5dfdb3c]"></a>_ZNKSt9type_infoeqERKS_</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, type_info_eq.o(i._ZNKSt9type_infoeqERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZNKSt9type_infoeqERKS_
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17tbc_post_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE
<LI><a href="#[5dd1074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12tbc_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE
</UL>

<P><STRONG><a name="[5dd1a88]"></a>_ZdaPv</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_del.o(i._ZdaPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd17b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdlPv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev (via Veneer)
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb (via BLX)
<LI><a href="#[4532994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4MoveEjjj (via BLX)
<LI><a href="#[49400f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueueD1Ev (via BLX)
<LI><a href="#[4d7914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26SimpleAsciiToUniCodeFormatEv (via BLX)
<LI><a href="#[4d80d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGD1Ev (via Veneer)
<LI><a href="#[4ed909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILED1Ev (via BLX)
<LI><a href="#[570c1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor12TiffCompressEP9BITSTRINGS1_m (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_vec_new.o(i.__cxa_vec_new)
</UL>
<P><STRONG><a name="[5dd17b8]"></a>_ZdlPv</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delete.o(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3877d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20CTransInfo8BitExoticD0Ev (via Veneer)
<LI><a href="#[3877e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CTransInfo8Bit1To1D0Ev (via Veneer)
<LI><a href="#[3877ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfo8BitD0Ev (via Veneer)
<LI><a href="#[387ab7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfo7BitD0Ev (via Veneer)
<LI><a href="#[387bc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN18CTransInfoSystemCPD0Ev (via Veneer)
<LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb (via BLX)
<LI><a href="#[38a0adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CTransInfoUTF8D0Ev (via Veneer)
<LI><a href="#[38a1838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CTransInfoUTF16LED0Ev (via Veneer)
<LI><a href="#[38a18ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17CTransInfoUTF16BED0Ev (via Veneer)
<LI><a href="#[3f21174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14TiXmlAttributeD0Ev (via Veneer)
<LI><a href="#[432fa34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CNullDriverD0Ev (via Veneer)
<LI><a href="#[4888dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN11CBitBangIBMD0Ev (via Veneer)
<LI><a href="#[493fc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue6RemoveEi (via BLX)
<LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi (via BLX)
<LI><a href="#[49400f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueueD1Ev (via BLX)
<LI><a href="#[4b44dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN13CDriverUsbRemD0Ev (via Veneer)
<LI><a href="#[4c6f5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN32HHPL_INSTRUCTION_PARAMETER_BLOCKD1Ev (via BLX)
<LI><a href="#[4c6fcc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_INSTRUCTION_SETD1Ev (via BLX)
<LI><a href="#[4ed909c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILED1Ev (via BLX)
<LI><a href="#[5dd1a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZdaPv
</UL>

<P><STRONG><a name="[5dd195c]"></a>_Znaj</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_new.o(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Znaj &rArr; _Znwj
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd1650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znwj
</UL>
<BR>[Called By]<UL><LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb (via BLX)
<LI><a href="#[36b8fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPcbbb (via BLX)
<LI><a href="#[387c6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRING10ReallocateEjb (via BLX)
<LI><a href="#[387c724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING10ReallocateEjb (via BLX)
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb (via BLX)
<LI><a href="#[3a1c93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ev (via BLX)
<LI><a href="#[3e9ca6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPhjbbb (via BLX)
<LI><a href="#[3f1d1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_bb (via BLX)
<LI><a href="#[41fe478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPS_ (via BLX)
<LI><a href="#[4532994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4MoveEjjj (via BLX)
<LI><a href="#[46d38b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKhjbb (via BLX)
<LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi (via BLX)
<LI><a href="#[4c6fd38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_INSTRUCTION_SETC1Ev (via BLX)
<LI><a href="#[4d7914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING26SimpleAsciiToUniCodeFormatEv (via BLX)
<LI><a href="#[4d799bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGaSES_ (via BLX)
<LI><a href="#[4d80dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPKwbb (via BLX)
<LI><a href="#[4d80e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1Ejb (via BLX)
<LI><a href="#[4d811bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPwbbb (via BLX)
<LI><a href="#[4d811f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPS_bb (via BLX)
<LI><a href="#[4d81234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPS_ (via BLX)
<LI><a href="#[4d81270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8HWSTRINGC1EPKwjbb (via BLX)
<LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji (via BLX)
<LI><a href="#[570c1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CLZWCompressor12TiffCompressEP9BITSTRINGS1_m (via BLX)
<LI><a href="#[5df89ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[5dd1650]"></a>_Znwj</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, new.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Znwj
</UL>
<BR>[Called By]<UL><LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi (via BLX)
<LI><a href="#[4ed90d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN20HHPL_PROGRAM_PROFILEC1EPKhjPKwjS3_jjji (via BLX)
<LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj
</UL>

<P><STRONG><a name="[5df89ac]"></a>__ARM_array_new_general</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, array_new_general.o(i.__ARM_array_new_general), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Znaj
<LI><a href="#[5df8b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZSt9terminatev
<LI><a href="#[5e63bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[5e643c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
</UL>

<P><STRONG><a name="[5dd0f0c]"></a>__ARM_common_get_typeid</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rtti.o(i.__ARM_common_get_typeid), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dfe730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>

<P><STRONG><a name="[5e01e80]"></a>__ARM_common_ll_mullu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scanf_fp.o(i.__ARM_common_ll_mullu), UNUSED)

<P><STRONG><a name="[4b49090]"></a>__ARM_common_memclr1_8</STRONG> (ARM, 36 bytes, Stack size 0 bytes, usb2hidkbd.o(i.__ARM_common_memclr1_8), UNUSED)

<P><STRONG><a name="[57643c8]"></a>__ARM_common_memclr4_12</STRONG> (ARM, 20 bytes, Stack size 0 bytes, DecoderInterface.o(i.__ARM_common_memclr4_12), UNUSED)

<P><STRONG><a name="[36af6dc]"></a>__ARM_common_memclr4_4</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dataedit.o(i.__ARM_common_memclr4_4), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[38859dc]"></a>__ARM_common_memclr4_8</STRONG> (ARM, 16 bytes, Stack size 0 bytes, DecodeIFace.o(i.__ARM_common_memclr4_8), UNUSED)

<P><STRONG><a name="[452e830]"></a>__ARM_common_memcpy1_3</STRONG> (ARM, 28 bytes, Stack size 0 bytes, 4683tx.o(i.__ARM_common_memcpy1_3), UNUSED)

<P><STRONG><a name="[4532a0c]"></a>__ARM_common_memcpy1_4</STRONG> (ARM, 36 bytes, Stack size 0 bytes, DirectIoParser.o(i.__ARM_common_memcpy1_4))
<BR><BR>[Called By]<UL><LI><a href="#[3757640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN19CTlvContainerParser19CalcNumPaddingBytesEPKN4CTlv8Header_tE
</UL>

<P><STRONG><a name="[5b89314]"></a>__ARM_common_memcpy1_8</STRONG> (ARM, 68 bytes, Stack size 0 bytes, S035.o(i.__ARM_common_memcpy1_8), UNUSED)

<P><STRONG><a name="[406a92c]"></a>__ARM_common_memcpy4_12</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mx25Spi.o(i.__ARM_common_memcpy4_12))
<BR><BR>[Called By]<UL><LI><a href="#[493d55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue4FindEiPNS_12Descriptor_tE
<LI><a href="#[493fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN16CDescriptorQueue3AddEiPKhi
</UL>

<P><STRONG><a name="[508b32c]"></a>__ARM_common_sdiv_36</STRONG> (ARM, 32 bytes, Stack size 0 bytes, flashdrv.o(i.__ARM_common_sdiv_36), UNUSED)

<P><STRONG><a name="[5df77a0]"></a>__ARM_fpclassify</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify), UNUSED)

<P><STRONG><a name="[5e623a8]"></a>__ARM_isfinite</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ldexp.o(i.__ARM_isfinite), UNUSED)

<P><STRONG><a name="[5dd0c78]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 34 bytes, Stack size 40 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[389d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9CEciMacroC1Ev (via BLX)
</UL>

<P><STRONG><a name="[5dd0b88]"></a>__aeabi_vec_new_nocookie</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, aeabi_vec_new_nocookie.o(i.__aeabi_vec_new_nocookie), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dfdfec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>

<P><STRONG><a name="[5dd0a5c]"></a>__cxa_guard_acquire</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd14ac]"></a>__cxa_pure_virtual</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN
</UL>
<BR>[Calls]<UL><LI><a href="#[5e00134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 17]<UL><LI> transcode.o(.constdata__ZTV14CTransInfoBase)
<LI> HONPluginConfiguration.o(.constdata__ZTV22HONPluginConfiguration)
<LI> tinyxml.o(.constdata__ZTV9TiXmlNode)
<LI> wedgeinternational.o(.constdata__ZTV19CWedgeInternational)
<LI> driverbase.o(.constdata__ZTV11CDriverBase)
<LI> wedgethread.o(.constdata__ZTV12CWedgeThread)
<LI> wedgeprokey.o(.constdata__ZTV12CWedgeProKey)
<LI> wedgemultikey.o(.constdata__ZTV14CWedgeMultiKey)
<LI> wedgelabel.o(.constdata__ZTV11CWedgeLabel)
<LI> wedgebase.o(.constdata__ZTV10CWedgeBase)
<LI> usb2enum.o(.constdata__ZTV9CUsb2Enum)
<LI> Bitbanger.o(.constdata__ZTV10CBitBanger)
<LI> usb2base.o(.constdata__ZTV9CUsb2Base)
<LI> usb2hid.o(.constdata__ZTV8CUsb2Hid)
<LI> usb2hidhlp.o(.constdata__ZTV17CUsb2HidPosHelper)
<LI> usb2chip.o(.constdata__ZTV9CUsb2Chip)
<LI> ScanDriverHi704A.o(.constdata__ZTV17Pixel_sampler_abs)
</UL>
<P><STRONG><a name="[5dfdfec]"></a>__cxa_vec_new</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, cxa_vec_new.o(i.__cxa_vec_new), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd0b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_nocookie
</UL>

<P><STRONG><a name="[5dd0ed0]"></a>__derived_to_base_conversion</STRONG> (Thumb, 102 bytes, Stack size 80 bytes, rtti.o(i.__derived_to_base_conversion), UNUSED)

<P><STRONG><a name="[5dd0e94]"></a>__dynamic_cast</STRONG> (Thumb, 160 bytes, Stack size 72 bytes, rtti.o(i.__dynamic_cast), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dfc96c]"></a>__ieee754_rem_pio2</STRONG> (ARM, 1160 bytes, Stack size 80 bytes, rred.o(i.__ieee754_rem_pio2), UNUSED)

<P><STRONG><a name="[5dfccb4]"></a>__kernel_cos</STRONG> (ARM, 352 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos), UNUSED)

<P><STRONG><a name="[5dfcbc4]"></a>__kernel_poly</STRONG> (ARM, 236 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly), UNUSED)

<P><STRONG><a name="[5dfc7c8]"></a>__kernel_sin</STRONG> (ARM, 348 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin), UNUSED)

<P><STRONG><a name="[5df75c0]"></a>__mathlib_narrow</STRONG> (ARM, 32 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df7200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via BLX)
</UL>

<P><STRONG><a name="[5df7584]"></a>__mathlib_tofloat</STRONG> (ARM, 192 bytes, Stack size 24 bytes, narrow.o(i.__mathlib_tofloat), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e62330]"></a>__support_ldexp</STRONG> (ARM, 28 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df7200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via BLX)
</UL>

<P><STRONG><a name="[5dcaeb8]"></a>ceil</STRONG> (ARM, 272 bytes, Stack size 24 bytes, ceil.o(i.ceil), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dca198]"></a>copysign</STRONG> (ARM, 16 bytes, Stack size 0 bytes, pow.o(i.copysign), UNUSED)

<P><STRONG><a name="[5dcad14]"></a>cos</STRONG> (ARM, 208 bytes, Stack size 32 bytes, cos.o(i.cos), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dca990]"></a>exp</STRONG> (ARM, 940 bytes, Stack size 64 bytes, exp.o(i.exp), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dca774]"></a>floor</STRONG> (ARM, 280 bytes, Stack size 24 bytes, floor.o(i.floor), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e0146c]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fputc &rArr; __flsbuf_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[5dfaa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf_byte
</UL>
<BR>[Called By]<UL></UL>
<BR>[Address Reference Count : 1]<UL><LI> __2printf.o(.text)
</UL>
<P><STRONG><a name="[5e63938]"></a>frexp</STRONG> (ARM, 108 bytes, Stack size 8 bytes, frexp.o(i.frexp), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e622f4]"></a>ldexp</STRONG> (ARM, 208 bytes, Stack size 24 bytes, ldexp.o(i.ldexp), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dca51c]"></a>log</STRONG> (ARM, 1216 bytes, Stack size 80 bytes, log.o(i.log), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dca15c]"></a>pow</STRONG> (ARM, 3580 bytes, Stack size 216 bytes, pow.o(i.pow), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e04a18]"></a>sin</STRONG> (ARM, 220 bytes, Stack size 32 bytes, sin.o(i.sin), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e04874]"></a>sqrt</STRONG> (ARM, 96 bytes, Stack size 16 bytes, sqrt.o(i.sqrt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2cf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00028EFE
</UL>

<P><STRONG><a name="[5e04694]"></a>sqrtf</STRONG> (ARM, 72 bytes, Stack size 8 bytes, sqrtf.o(i.sqrtf), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e00404]"></a>_get_lc_ctype</STRONG> (ARM, 72 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Called By]<UL></UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[5df9ec4]"></a>_get_lc_numeric</STRONG> (ARM, 72 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[500b780]"></a>_Z5boundItET_RKS0_S2_S2_</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ScanDriverHi704A.o(t._Z5boundItET_RKS0_S2_S2_), UNUSED)

<P><STRONG><a name="[500b744]"></a>_ZN13Pixel_samplerI25Auto_exposure_accumulatorE13center_sampleEj</STRONG> (ARM, 320 bytes, Stack size 32 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI25Auto_exposure_accumulatorE13center_sampleEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN13Pixel_samplerI25Auto_exposure_accumulatorE13center_sampleEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI25Auto_exposure_accumulatorE)
</UL>
<P><STRONG><a name="[500b708]"></a>_ZN13Pixel_samplerI25Auto_exposure_accumulatorE14uniform_sampleEj</STRONG> (ARM, 300 bytes, Stack size 32 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI25Auto_exposure_accumulatorE14uniform_sampleEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN13Pixel_samplerI25Auto_exposure_accumulatorE14uniform_sampleEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI25Auto_exposure_accumulatorE)
</UL>
<P><STRONG><a name="[500b6cc]"></a>_ZN13Pixel_samplerI25Auto_exposure_accumulatorE20center_weight_sampleEj</STRONG> (ARM, 576 bytes, Stack size 32 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI25Auto_exposure_accumulatorE20center_weight_sampleEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ZN13Pixel_samplerI25Auto_exposure_accumulatorE20center_weight_sampleEj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI25Auto_exposure_accumulatorE)
</UL>
<P><STRONG><a name="[500b690]"></a>_ZN13Pixel_samplerI25Auto_exposure_accumulatorE5resetEjj</STRONG> (ARM, 160 bytes, Stack size 0 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI25Auto_exposure_accumulatorE5resetEjj))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI25Auto_exposure_accumulatorE)
</UL>
<P><STRONG><a name="[500b654]"></a>_ZN13Pixel_samplerI29Context_sensitive_accumulatorE13center_sampleEj</STRONG> (ARM, 148 bytes, Stack size 24 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI29Context_sensitive_accumulatorE13center_sampleEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN13Pixel_samplerI29Context_sensitive_accumulatorE13center_sampleEj &rArr; _ZN29Context_sensitive_accumulator10accumulateEm
</UL>
<BR>[Calls]<UL><LI><a href="#[500bbb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN29Context_sensitive_accumulator10accumulateEm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI29Context_sensitive_accumulatorE)
</UL>
<P><STRONG><a name="[500b618]"></a>_ZN13Pixel_samplerI29Context_sensitive_accumulatorE14uniform_sampleEj</STRONG> (ARM, 124 bytes, Stack size 24 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI29Context_sensitive_accumulatorE14uniform_sampleEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN13Pixel_samplerI29Context_sensitive_accumulatorE14uniform_sampleEj &rArr; _ZN29Context_sensitive_accumulator10accumulateEm
</UL>
<BR>[Calls]<UL><LI><a href="#[500bbb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN29Context_sensitive_accumulator10accumulateEm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI29Context_sensitive_accumulatorE)
</UL>
<P><STRONG><a name="[500b5dc]"></a>_ZN13Pixel_samplerI29Context_sensitive_accumulatorE20center_weight_sampleEj</STRONG> (ARM, 224 bytes, Stack size 24 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI29Context_sensitive_accumulatorE20center_weight_sampleEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ZN13Pixel_samplerI29Context_sensitive_accumulatorE20center_weight_sampleEj &rArr; _ZN29Context_sensitive_accumulator10accumulateEm
</UL>
<BR>[Calls]<UL><LI><a href="#[500bbb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN29Context_sensitive_accumulator10accumulateEm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI29Context_sensitive_accumulatorE)
</UL>
<P><STRONG><a name="[500b5a0]"></a>_ZN13Pixel_samplerI29Context_sensitive_accumulatorE5resetEjj</STRONG> (ARM, 120 bytes, Stack size 12 bytes, ScanDriverHi704A.o(t._ZN13Pixel_samplerI29Context_sensitive_accumulatorE5resetEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ZN13Pixel_samplerI29Context_sensitive_accumulatorE5resetEjj
</UL>
<BR>[Calls]<UL><LI><a href="#[500c3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN29Context_sensitive_accumulator5resetEv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.constdata__ZTV13Pixel_samplerI29Context_sensitive_accumulatorE)
</UL>
<P><STRONG><a name="[5dce608]"></a>__aeabi_d2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[596240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc213154434901cf08
<LI><a href="#[596e928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0001F073
</UL>

<P><STRONG><a name="[5dce5cc]"></a>_d2f</STRONG> (ARM, 168 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[5dce590]"></a>__fpl_inf_d2f</STRONG> (ARM, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[5dce248]"></a>__aeabi_dadd</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2cf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00028EFE
</UL>

<P><STRONG><a name="[5dce20c]"></a>_dadd</STRONG> (ARM, 452 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[5dce1d0]"></a>__fpl_inf_dadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[5dfda10]"></a>__fpl_dcheck_NaN2</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck), UNUSED)

<P><STRONG><a name="[5dfd8e4]"></a>__fpl_dcheck_NaN1</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dfd7f4]"></a>__fpl_dcmp_InfNaN</STRONG> (ARM, 128 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[5dfd7b8]"></a>__fpl_inf_dcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[5dfd254]"></a>__fpl_fcmp_InfNaN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[5dfd218]"></a>__fpl_inf_fcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[5dcde4c]"></a>__aeabi_ddiv</STRONG> (ARM, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2cf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00028EFE
</UL>

<P><STRONG><a name="[5dcde10]"></a>_ddiv</STRONG> (ARM, 448 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[5dcddd4]"></a>__fpl_inf_ddiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[5dcdd98]"></a>_ddiv_mantissas</STRONG> (ARM, 372 bytes, Stack size 20 bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[5dcdc6c]"></a>__aeabi_cdcmpeq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcdc30]"></a>_dcmpeq</STRONG> (ARM, 132 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf), UNUSED)

<P><STRONG><a name="[5dcda8c]"></a>__aeabi_d2iz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2cf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00028EFE
</UL>

<P><STRONG><a name="[5dcda50]"></a>_dfix</STRONG> (ARM, 172 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[5dcda14]"></a>__fpl_inf_dfix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[5dcd834]"></a>__aeabi_d2uiz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu), UNUSED)

<P><STRONG><a name="[5dcd7f8]"></a>_dfixu</STRONG> (ARM, 132 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu), UNUSED)

<P><STRONG><a name="[5dcd7bc]"></a>__fpl_inf_dfixu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfixu.o(x$fpl$dfixu), UNUSED)

<P><STRONG><a name="[5dcd5dc]"></a>__aeabi_i2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[596240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc213154434901cf08
<LI><a href="#[596e928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0001F073
<LI><a href="#[5a2cf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00028EFE
</UL>

<P><STRONG><a name="[5dcd5a0]"></a>_dflt</STRONG> (ARM, 48 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[5dcd564]"></a>__dflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[5dcd528]"></a>__aeabi_ui2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcd4ec]"></a>_dfltu</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[5dcd3fc]"></a>__aeabi_cdcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[5dcd3c0]"></a>_dcmple</STRONG> (ARM, 132 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[5dcd2d0]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2cf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00028EFE
</UL>

<P><STRONG><a name="[5dcd294]"></a>_dmul</STRONG> (ARM, 448 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[5dcd258]"></a>__fpl_inf_dmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[5df81f0]"></a>_drem</STRONG> (ARM, 428 bytes, Stack size 16 bytes, drem_clz.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[5df81b4]"></a>__fpl_inf_drem</STRONG> (ARM, 0 bytes, Stack size unknown bytes, drem_clz.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[5dcd168]"></a>__aeabi_cdrcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcd12c]"></a>_drcmple</STRONG> (ARM, 156 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)

<P><STRONG><a name="[5dce194]"></a>__aeabi_drsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)

<P><STRONG><a name="[5dce158]"></a>_drsb</STRONG> (ARM, 24 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)

<P><STRONG><a name="[5dfd68c]"></a>_dsqrt</STRONG> (ARM, 364 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[5dfd650]"></a>__fpl_inf_dsqrt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[5dce11c]"></a>__aeabi_dsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dce0e0]"></a>_dsub</STRONG> (ARM, 608 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[5dce0a4]"></a>__fpl_inf_dsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[5dfd560]"></a>__dunder</STRONG> (ARM, 276 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[5dfd524]"></a>__dunder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[5dcd03c]"></a>__aeabi_f2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcd000]"></a>_f2d</STRONG> (ARM, 96 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[5dccfc4]"></a>__fpl_inf_f2d</STRONG> (ARM, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[5dcccf4]"></a>__aeabi_fadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcccb8]"></a>_fadd</STRONG> (ARM, 260 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[5dccc7c]"></a>__fpl_inf_fadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[5dfd434]"></a>__fpl_fcheck_NaN2</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)

<P><STRONG><a name="[5dfd344]"></a>__fpl_fcheck_NaN1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcc934]"></a>__aeabi_fdiv</STRONG> (ARM, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcc8f8]"></a>_fdiv</STRONG> (ARM, 476 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[5dcc8bc]"></a>__fpl_inf_fdiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[5dcc754]"></a>__aeabi_cfcmpeq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf), UNUSED)

<P><STRONG><a name="[5dcc718]"></a>_fcmpeq</STRONG> (ARM, 116 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf), UNUSED)

<P><STRONG><a name="[5dcc574]"></a>__aeabi_f2iz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5962448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc213154434901cec8
<LI><a href="#[596e7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc213154434901cf54
</UL>

<P><STRONG><a name="[5dcc538]"></a>_ffix</STRONG> (ARM, 112 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[5dcc4fc]"></a>__fpl_inf_ffix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[5dcc31c]"></a>__aeabi_i2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcc2e0]"></a>_fflt</STRONG> (ARM, 52 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[5dcc2a4]"></a>__fflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fflt_clz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcc13c]"></a>__aeabi_cfcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)

<P><STRONG><a name="[5dcc100]"></a>_fcmple</STRONG> (ARM, 116 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)

<P><STRONG><a name="[5dcc010]"></a>__aeabi_fmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcbfd4]"></a>_fmul</STRONG> (ARM, 260 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[5dcbf98]"></a>__fpl_inf_fmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[5dfd128]"></a>__fpl_normalise2</STRONG> (ARM, 80 bytes, Stack size 4 bytes, fnorm2_clz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[5dcbd7c]"></a>__aeabi_cfrcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)

<P><STRONG><a name="[5dcbd40]"></a>_frcmple</STRONG> (ARM, 128 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)

<P><STRONG><a name="[5dccc40]"></a>__aeabi_frsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)

<P><STRONG><a name="[5dccc04]"></a>_frsb</STRONG> (ARM, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)

<P><STRONG><a name="[5dfd038]"></a>_fsqrt</STRONG> (ARM, 192 bytes, Stack size 0 bytes, fsqrt.o(x$fpl$fsqrt), UNUSED)

<P><STRONG><a name="[5dfcffc]"></a>__fpl_inf_fsqrt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fsqrt.o(x$fpl$fsqrt), UNUSED)

<P><STRONG><a name="[5dccbc8]"></a>__aeabi_fsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[5dccb8c]"></a>_fsub</STRONG> (ARM, 312 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[5dccb50]"></a>__fpl_inf_fsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[5dfcf0c]"></a>__funder</STRONG> (ARM, 144 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[5dfced0]"></a>__funder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[5dcbc50]"></a>__ieee_status</STRONG> (ARM, 8 bytes, Stack size 0 bytes, istatus.o(x$fpl$ieeestatus), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df7200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via BLX)
</UL>

<P><STRONG><a name="[5dcbb60]"></a>_printf_fp_dec</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e03488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd6510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
<LI><a href="#[5e02858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[5e0290c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
</UL>

<P><STRONG><a name="[5df7d7c]"></a>__fpl_return_NaN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan), UNUSED)

<P><STRONG><a name="[5dcb854]"></a>__ARM_scalbn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[596240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc213154434901cf08
<LI><a href="#[596e928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0001F073
</UL>

<P><STRONG><a name="[5dcb818]"></a>scalbn</STRONG> (ARM, 108 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcb7dc]"></a>__fpl_inf_scalbn</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scalbn.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[5dcb5fc]"></a>__ARM_scalbnf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5962448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc213154434901cec8
<LI><a href="#[596e7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc213154434901cf54
</UL>

<P><STRONG><a name="[5dcb5c0]"></a>scalbnf</STRONG> (ARM, 96 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcb584]"></a>__fpl_inf_scalbnf</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scalbnf.o(x$fpl$scalbnf), UNUSED)

<P><STRONG><a name="[5dcb494]"></a>_scanf_real</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e01ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dfb5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf (via BLX)
</UL>

<P><STRONG><a name="[5df7c8c]"></a>_scanf_hex_real</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5df7200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via Veneer)
</UL>

<P><STRONG><a name="[5df7c50]"></a>_scanf_infnan</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5df7098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan (via Veneer)
</UL>

<P><STRONG><a name="[5df7890]"></a>__fpl_cmpreturn</STRONG> (ARM, 60 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer), UNUSED)

<P><STRONG><a name="[5dfce1c]"></a>__I$use$fp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[226f708]"></a>__sti___14_interrupts_cpp</STRONG> (ARM, 20 bytes, Stack size 0 bytes, interrupts.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> interrupts.o(.init_array)
</UL>
<P><STRONG><a name="[226e40c]"></a>_Z10OsTimerIrqPv</STRONG> (ARM, 84 bytes, Stack size 16 bytes, OsTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z10OsTimerIrqPv
</UL>
<BR>[Calls]<UL><LI><a href="#[226d9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14set_time_limitj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> OsTimer.o(.text)
</UL>
<P><STRONG><a name="[3531884]"></a>Undefined_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR><BR>[Calls]<UL><LI><a href="#[2270ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UndefinedHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threads_interupts.o(threads_interupts)
</UL>
<P><STRONG><a name="[3531848]"></a>SWI_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR><BR>[Calls]<UL><LI><a href="#[2270a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threads_interupts.o(threads_interupts)
</UL>
<P><STRONG><a name="[353180c]"></a>Prefetch_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR><BR>[Calls]<UL><LI><a href="#[2270a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threads_interupts.o(threads_interupts)
</UL>
<P><STRONG><a name="[35317d0]"></a>Abort_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR><BR>[Calls]<UL><LI><a href="#[2270a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbortHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> threads_interupts.o(threads_interupts)
</UL>
<P><STRONG><a name="[3531794]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR>[Address Reference Count : 1]<UL><LI> threads_interupts.o(threads_interupts)
</UL>
<P><STRONG><a name="[3531758]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, threads_interupts.o(threads_interupts))
<BR>[Address Reference Count : 1]<UL><LI> threads_interupts.o(threads_interupts)
</UL>
<P><STRONG><a name="[36b2db4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dataedit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dataedit.o(.text)
</UL>
<P><STRONG><a name="[36b2d78]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dataedit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dataedit.o(.text)
</UL>
<P><STRONG><a name="[36b2d3c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dataedit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dataedit.o(.text)
</UL>
<P><STRONG><a name="[375d400]"></a>_Z16PWM1_Service_IRQPv</STRONG> (ARM, 212 bytes, Stack size 16 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z16PWM1_Service_IRQPv &rArr; _Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375a3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
<LI><a href="#[375a3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Clear_ROV_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Clear_CMP_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25Read_ROV_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25Read_CMP_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15Force_Green_LEDb
<LI><a href="#[375a73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Force_Red_LEDb
<LI><a href="#[375a778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12IsGoodReadOnv
<LI><a href="#[375a7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12IsErrorLedOnv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> beep.o(.text)
</UL>
<P><STRONG><a name="[375d3c4]"></a>_Z16PWM2_Service_IRQPv</STRONG> (ARM, 212 bytes, Stack size 16 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z16PWM2_Service_IRQPv &rArr; _Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375a3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27Ill_Ctl_Sys_LED_Cir_EN_CTRLbb
<LI><a href="#[375a3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Clear_ROV_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Clear_CMP_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25Read_ROV_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25Read_CMP_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15Force_Green_LEDb
<LI><a href="#[375a73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13Force_Red_LEDb
<LI><a href="#[375a778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12IsGoodReadOnv
<LI><a href="#[375a7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12IsErrorLedOnv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> beep.o(.text)
</UL>
<P><STRONG><a name="[375d388]"></a>_Z18PWM_Interrupt_Initv</STRONG> (ARM, 192 bytes, Stack size 24 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z18PWM_Interrupt_Initv &rArr; _Z32DoesPluginHaveControlofCSPI1_SS0v
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
<LI><a href="#[375a37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32DoesPluginHaveControlofCSPI1_SS0v
<LI><a href="#[375a3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Clear_ROV_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26Clear_CMP_Interrupt_Signal8PWM_BASE
<LI><a href="#[375a4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20ROV_Interrupt_Enable8PWM_BASEb
<LI><a href="#[375a55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CMP_Interrupt_Enable8PWM_BASEb
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8BeepInitv
<LI><a href="#[375aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6BeepOnjj
</UL>

<P><STRONG><a name="[375d34c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, beep.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> beep.o(.text)
</UL>
<P><STRONG><a name="[375d310]"></a>_Z22QueueEfficientSequencePKjS0_i</STRONG> (ARM, 136 bytes, Stack size 20 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[375adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17QueueBeepSequencePKj
</UL>
<BR>[Called By]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[375acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundGoodReadBeepv
<LI><a href="#[375d2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20CondQueueTfbSequencePKji
</UL>

<P><STRONG><a name="[375d2d4]"></a>_Z20CondQueueTfbSequencePKji</STRONG> (ARM, 84 bytes, Stack size 16 bytes, beep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[375d310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22QueueEfficientSequencePKjS0_i
</UL>
<BR>[Called By]<UL><LI><a href="#[375aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ExecuteHostAckBeeph
<LI><a href="#[375abec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DecodeBeepv
<LI><a href="#[375ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SoundDifferentMenuBeepv
<LI><a href="#[375ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SoundMenuBeepv
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[375acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17SoundGoodReadBeepv
</UL>

<P><STRONG><a name="[3753f68]"></a>_Z12SD_CB_Statusii</STRONG> (ARM, 316 bytes, Stack size 16 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3816 + Unknown Stack Size
<LI>Call Chain = _Z12SD_CB_Statusii &rArr; _Z14SD_CB_Progressi &rArr; _ZN8CTrigger15IsUnitTriggeredEv &rArr; _ZN8CTrigger19UpdateTriggerStatusEv &rArr; _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3753f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SD_CB_Progressi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecodeIFace.o(.text)
</UL>
<P><STRONG><a name="[3753f2c]"></a>_Z14SD_CB_Progressi</STRONG> (ARM, 208 bytes, Stack size 16 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3800 + Unknown Stack Size
<LI>Call Chain = _Z14SD_CB_Progressi &rArr; _ZN8CTrigger15IsUnitTriggeredEv &rArr; _ZN8CTrigger19UpdateTriggerStatusEv &rArr; _Z16DecodeForMenuingPh &rArr; _Z6decodePh &rArr; _Z8OPdecodePhiiiiii &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3885004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger15IsUnitTriggeredEv
<LI><a href="#[3885784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDecode
<LI><a href="#[3885838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PauseDecode
<LI><a href="#[38859a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinueDecode
</UL>
<BR>[Called By]<UL><LI><a href="#[3753f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SD_CB_Statusii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecodeIFace.o(.text)
</UL>
<P><STRONG><a name="[3753ef0]"></a>_Z18SD_CB_ResultNotifyi</STRONG> (ARM, 88 bytes, Stack size 16 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z18SD_CB_ResultNotifyi &rArr; _Z14SoundErrorBeepb &rArr; _Z20CondQueueTfbSequencePKji &rArr; _Z22QueueEfficientSequencePKjS0_i &rArr; _Z17QueueBeepSequencePKj
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[375aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7BeepBipv
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[3885784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDecode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecodeIFace.o(.text)
</UL>
<P><STRONG><a name="[3753eb4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecodeIFace.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecodeIFace.o(.text)
</UL>
<P><STRONG><a name="[3753e78]"></a>_Z13ProcessResultiP13DecoderResult</STRONG> (ARM, 3948 bytes, Stack size 8752 bytes, DecodeIFace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 37552 + Unknown Stack Size
<LI>Call Chain = _Z13ProcessResultiP13DecoderResult &rArr; _Z10showSudokuPhiiPc &rArr; _Z28ProcessImageShipStyleCommandPhiib &rArr; _Z9SendImageP6HIMAGEPhiibb &rArr; _ZN6HIMAGE16EdgeSharpenImageEi &rArr; SharpenEdges &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[226db9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13read_ms_clockv
<LI><a href="#[2274a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMutex
<LI><a href="#[2274a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_ReleaseMutex
<LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b4e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData4FreeEv
<LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[374f4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19StoreLastDecodeInfoP13DecoderResult
<LI><a href="#[374f4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z7ShotgunP13DecoderResult
<LI><a href="#[3753dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15FindReReadDelayc
<LI><a href="#[3758b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan6printfEPKcz
<LI><a href="#[375ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5Clickv
<LI><a href="#[375ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22SoundDifferentMenuBeepv
<LI><a href="#[375ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13SoundMenuBeepv
<LI><a href="#[375aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SoundErrorBeepb
<LI><a href="#[3884f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger21IsWaitingForScanStandEv
<LI><a href="#[3885040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8CTrigger14GetShotgunModeEv
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[38850f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKhj
<LI><a href="#[3885220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4HTAG32ValidateDataStreamAsSYNFECommandEPKcii
<LI><a href="#[388525c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE30CurrentWorkTableForScannedMenuEv
<LI><a href="#[3885298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN22SYN_FE_COMMAND_HANDLER21ReceiveAndParseServerEPcPKci
<LI><a href="#[38852d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN15CEditScriptProc18DoDataEditOrScriptERP12CBarcodeDataP12CBarcodeFifo
<LI><a href="#[3885310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC30SequencePriorityTimeoutExpiredEv
<LI><a href="#[3885388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14MAIN_HHPL_PROC17IsSequenceStartedEv
<LI><a href="#[38853c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifoC1Ej
<LI><a href="#[3885400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeFifo5WriteEP12CBarcodeData
<LI><a href="#[388543c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8StoreHHPEhh
<LI><a href="#[3885478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData8StoreAimEhh
<LI><a href="#[38854b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData17GetContentsBufferERPhRj
<LI><a href="#[38854f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN12CBarcodeData16StoreToNewBufferEPKhj
<LI><a href="#[388552c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30MultiPluginMenuBarcodesProcessP7HSTRINGi
<LI><a href="#[3885568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractSystemMenuCommandsP7HSTRING
<LI><a href="#[38855a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26AbstractPluginMenuCommandsP7HSTRING
<LI><a href="#[38855e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21SendStringToInterfacePKci
<LI><a href="#[3885658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SearchLockedPluginv
<LI><a href="#[388570c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EnterScannedMenuPjPh
<LI><a href="#[3885748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10showSudokuPhiiPc
<LI><a href="#[3885784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDecode
</UL>
<BR>[Called By]<UL><LI><a href="#[374f3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26PluginDecoderProcessResultP12DecodeResult
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecodeIFace.o(.text)
</UL>
<P><STRONG><a name="[3753e3c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecodeIFace.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecodeIFace.o(.text)
</UL>
<P><STRONG><a name="[3753e00]"></a>_Z7MsTimerv</STRONG> (ARM, 12 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecodeIFace.o(.text)
</UL>
<P><STRONG><a name="[3753dc4]"></a>_Z15FindReReadDelayc</STRONG> (ARM, 72 bytes, Stack size 0 bytes, DecodeIFace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[374f558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22ClearLastReadTimestampv
<LI><a href="#[3753e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13ProcessResultiP13DecoderResult
</UL>

<P><STRONG><a name="[38832b8]"></a>_Z19GoInToPowerDownModev</STRONG> (ARM, 440 bytes, Stack size 48 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
<LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[3758c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20StoreUsageStatisticsv
<LI><a href="#[388066c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31DoesPluginHaveControlofKPP_ROW1v
<LI><a href="#[3883204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9Wake_Ctrlb
</UL>
<BR>[Called By]<UL><LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
</UL>

<P><STRONG><a name="[388327c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PowerManagement.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PowerManagement.o(.text)
</UL>
<P><STRONG><a name="[3883240]"></a>__sti___19_PowerManagement_cpp</STRONG> (ARM, 56 bytes, Stack size 8 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sti___19_PowerManagement_cpp
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PowerManagement.o(.init_array)
</UL>
<P><STRONG><a name="[3883204]"></a>_Z9Wake_Ctrlb</STRONG> (ARM, 164 bytes, Stack size 16 bytes, PowerManagement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z9Wake_Ctrlb
</UL>
<BR>[Calls]<UL><LI><a href="#[36b96b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken6IAmOEMEv
<LI><a href="#[375a1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken15IAmOEMPrototypeEv
</UL>
<BR>[Called By]<UL><LI><a href="#[3880978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13EnterStopModev
<LI><a href="#[38832b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19GoInToPowerDownModev
</UL>

<P><STRONG><a name="[389a6c8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, eci.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> eci.o(.text)
</UL>
<P><STRONG><a name="[3898a6c]"></a>_Z11isLegalUTF8PKhi</STRONG> (ARM, 196 bytes, Stack size 0 bytes, ConvertUTF.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38a09ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ConvertUTF8toUTF16PPKhS0_PPtS2_15ConversionFlags
</UL>

<P><STRONG><a name="[3a20d34]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, HONPluginConfiguration.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.text)
</UL>
<P><STRONG><a name="[3a20cf8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, HONPluginConfiguration.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> HONPluginConfiguration.o(.text)
</UL>
<P><STRONG><a name="[3f1faf4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PluginInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PluginInterface.o(.text)
</UL>
<P><STRONG><a name="[3f1fab8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PluginInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PluginInterface.o(.text)
</UL>
<P><STRONG><a name="[3f1fa7c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PluginInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PluginInterface.o(.text)
</UL>
<P><STRONG><a name="[3f1c9bc]"></a>_Z7HexAtoIPci</STRONG> (ARM, 176 bytes, Stack size 8 bytes, PluginMenuProcess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z7HexAtoIPci
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1b8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z21IsPluginMenuEnterCodePKciRiR18HONPluginClassType
<LI><a href="#[3f1b8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z22IsNormalPluginMenuCodePKciRiR18HONPluginClassType
</UL>

<P><STRONG><a name="[3f1b300]"></a>_Z15FusionImageDataPhPmS0_</STRONG> (ARM, 304 bytes, Stack size 96 bytes, PluginProcessDecoding.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2088 + Unknown Stack Size
<LI>Call Chain = _Z15FusionImageDataPhPmS0_ &rArr; ToRGB &rArr; ConvertMonoColorImage &rArr; ProcessMonoColorImage &rArr; MC_free &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3ea49ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea4a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17DecodeWithPluginsPh
</UL>

<P><STRONG><a name="[3ea0cfc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PluginGpioInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PluginGpioInterface.o(.text)
</UL>
<P><STRONG><a name="[3ea0cc0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PluginGpioInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PluginGpioInterface.o(.text)
</UL>
<P><STRONG><a name="[3ea0c84]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PluginGpioInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PluginGpioInterface.o(.text)
</UL>
<P><STRONG><a name="[3e9c2ec]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, MenuGlueDriver.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> MenuGlueDriver.o(.text)
</UL>
<P><STRONG><a name="[3e9a834]"></a>_Z27StoreConfigToFlashIfChangedPKcPhi</STRONG> (ARM, 136 bytes, Stack size 24 bytes, MenuFlash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + In Cycle
<LI>Call Chain = _Z27StoreConfigToFlashIfChangedPKcPhi &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[36b9e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17WriteAndCloseFilePKcPKhi
<LI><a href="#[36b9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ReadAndCloseFilePKcjPPh
<LI><a href="#[36ba17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12EncodeBufferPKcPhi
</UL>
<BR>[Called By]<UL><LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[3e99ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32FlashProductConfigurationChangesb
<LI><a href="#[3e99f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32StoreProductConfigurationToFlashb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
</UL>

<P><STRONG><a name="[3e99100]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Interface_Support_Functions.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Interface_Support_Functions.o(.text)
</UL>
<P><STRONG><a name="[3e990c4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Interface_Support_Functions.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Interface_Support_Functions.o(.text)
</UL>
<P><STRONG><a name="[3e99088]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Interface_Support_Functions.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Interface_Support_Functions.o(.text)
</UL>
<P><STRONG><a name="[3e9904c]"></a>__sti___29_Interface_Support_Functions_c</STRONG> (ARM, 20 bytes, Stack size 0 bytes, Interface_Support_Functions.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Interface_Support_Functions.o(.init_array)
</UL>
<P><STRONG><a name="[406b304]"></a>_Z12SpiWritePagejjPc</STRONG> (ARM, 132 bytes, Stack size 40 bytes, mx25Spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[406aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6SpiXfrjjPjjjPc
<LI><a href="#[406b2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14WriteErasePollv
</UL>
<BR>[Called By]<UL><LI><a href="#[36b7404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SpiWriteMemoryjjPc
</UL>

<P><STRONG><a name="[406b2c8]"></a>_Z14WriteErasePollv</STRONG> (ARM, 88 bytes, Stack size 24 bytes, mx25Spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z14WriteErasePollv &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[406aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6SpiXfrjjPjjjPc
</UL>
<BR>[Called By]<UL><LI><a href="#[36b7404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SpiWriteMemoryjjPc
<LI><a href="#[36b7440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SpiEraseSectorj
<LI><a href="#[406a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16SpiEraseAllFlashv
<LI><a href="#[406b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SpiWritePagejjPc
</UL>

<P><STRONG><a name="[4069aa4]"></a>_Z10I2CServicePv</STRONG> (ARM, 96 bytes, Stack size 8 bytes, i2c_drvr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z10I2CServicePv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_drvr.o(.text)
</UL>
<P><STRONG><a name="[4066e1c]"></a>_Z13RTC_Alarm_IRQPv</STRONG> (ARM, 20 bytes, Stack size 0 bytes, RTC_Driver.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> RTC_Driver.o(.text)
</UL>
<P><STRONG><a name="[4064af4]"></a>_Z18Timer3_Service_IRQPv</STRONG> (ARM, 388 bytes, Stack size 8 bytes, Timer3_Driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z18Timer3_Service_IRQPv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Timer3_Driver.o(.text)
</UL>
<P><STRONG><a name="[406204c]"></a>_Z15VsyncServiceBYDPv</STRONG> (ARM, 864 bytes, Stack size 40 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z15VsyncServiceBYDPv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[4149784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12DisableRxDmav
<LI><a href="#[41497c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16CheckDmaCompletev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Hi704A.o(.text)
</UL>
<P><STRONG><a name="[4062010]"></a>_Z16Do2ndThreadVsyncPv</STRONG> (ARM, 192 bytes, Stack size 96 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _Z16Do2ndThreadVsyncPv &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Hi704A.o(.text)
</UL>
<P><STRONG><a name="[4061fd4]"></a>_Z18Do2ndThreadLineSvcPv</STRONG> (ARM, 40 bytes, Stack size 8 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z18Do2ndThreadLineSvcPv &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Hi704A.o(.text)
</UL>
<P><STRONG><a name="[4061f98]"></a>_Z16FastLinearThreadPv</STRONG> (ARM, 80 bytes, Stack size 16 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3592 + Unknown Stack Size
<LI>Call Chain = _Z16FastLinearThreadPv &rArr; _Z17ProcessLinearScanPh &rArr; _Z10FastDecodePhi &rArr; Decode &rArr; SI_Decode &rArr; SD_Decode &rArr; SymLoc00000000Gb153Data0x2f4 &rArr; SymLocH000119F0 &rArr; SyMbOl11246859 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[374f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17ProcessLinearScanPh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Hi704A.o(.text)
</UL>
<P><STRONG><a name="[4061f5c]"></a>_Z29DisableCsiInteruptsOnshutDownv</STRONG> (ARM, 124 bytes, Stack size 4 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z29DisableCsiInteruptsOnshutDownv
</UL>
<BR>[Called By]<UL><LI><a href="#[4061f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ShutDownThreadPv
</UL>

<P><STRONG><a name="[4061f20]"></a>_Z14ShutDownThreadPv</STRONG> (ARM, 532 bytes, Stack size 56 bytes, Hi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2016 + Unknown Stack Size
<LI>Call Chain = _Z14ShutDownThreadPv &rArr; _ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji &rArr; _ZN8I2C_Drvr16Send_Message_I2CEhhtPKhPKtjiiib &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226db24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10read_timerv
<LI><a href="#[3531c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitEvent
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[4061f5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29DisableCsiInteruptsOnshutDownv
<LI><a href="#[4068b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN8I2C_Drvr37Send_Data_W_Short_W_Dual_Reg_Size_I2CEhhPKtji
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Hi704A.o(.text)
</UL>
<P><STRONG><a name="[4061ee4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Hi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Hi704A.o(.text)
</UL>
<P><STRONG><a name="[4061ea8]"></a>_Z16ConfigureBYDPinsv</STRONG> (ARM, 80 bytes, Stack size 0 bytes, Hi704A.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4060198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16ImagerPowerUpBYDv
<LI><a href="#[4149658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28InitializeVsyncProcessingBYDv
</UL>

<P><STRONG><a name="[4148104]"></a>_Z12turnon_flash20ScanAimerIllumMode_tb</STRONG> (ARM, 380 bytes, Stack size 16 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _Z12turnon_flash20ScanAimerIllumMode_tb &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[375a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9PWM_Start8PWM_BASE
<LI><a href="#[375a304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Stop8PWM_BASE
<LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[41480c8]"></a>_Z13turnoff_flash20ScanAimerIllumMode_tb</STRONG> (ARM, 100 bytes, Stack size 8 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z13turnoff_flash20ScanAimerIllumMode_tb &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[375a304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Stop8PWM_BASE
<LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[414808c]"></a>_Z12turnon_aimer20ScanAimerIllumMode_t</STRONG> (ARM, 148 bytes, Stack size 4 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z12turnon_aimer20ScanAimerIllumMode_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[4148050]"></a>_Z13turnoff_aimer20ScanAimerIllumMode_t</STRONG> (ARM, 96 bytes, Stack size 4 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z13turnoff_aimer20ScanAimerIllumMode_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[4148014]"></a>_Z23enterHi2dLowCurrentModev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Flash_Illumination_Control.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[4147fd8]"></a>_Z24enterHi2dHighCurrentModev</STRONG> (ARM, 4 bytes, Stack size 0 bytes, Flash_Illumination_Control.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[4147f9c]"></a>_Z21enterHi2dCurrentLevelj</STRONG> (ARM, 380 bytes, Stack size 8 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z21enterHi2dCurrentLevelj &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[375a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9PWM_Start8PWM_BASE
<LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[4147f60]"></a>_Z28Ill_Ctl_Sys_StateChangeToOFFv</STRONG> (ARM, 624 bytes, Stack size 24 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _Z28Ill_Ctl_Sys_StateChangeToOFFv &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[375a304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8PWM_Stop8PWM_BASE
<LI><a href="#[375a82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10PWM_Sample8PWM_BASEi
<LI><a href="#[4064fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken23IAmTwoLevelIlluminationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4147e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GPIO3_Service_IRQPv
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
</UL>

<P><STRONG><a name="[4147f24]"></a>_Z30Ill_Ctl_Sys_StateChangeToILLONv</STRONG> (ARM, 1196 bytes, Stack size 24 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z30Ill_Ctl_Sys_StateChangeToILLONv
</UL>
<BR>[Calls]<UL><LI><a href="#[375a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken14IAmVoyager1400Ev
<LI><a href="#[4064fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken23IAmTwoLevelIlluminationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4147e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GPIO3_Service_IRQPv
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
<LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
</UL>

<P><STRONG><a name="[4147ee8]"></a>_Z30Ill_Ctl_Sys_StateChangeToAIMONv</STRONG> (ARM, 528 bytes, Stack size 16 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z30Ill_Ctl_Sys_StateChangeToAIMONv &rArr; MT_SetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[4064fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN14CHardwareToken23IAmTwoLevelIlluminationEv
</UL>
<BR>[Called By]<UL><LI><a href="#[4147e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17GPIO3_Service_IRQPv
<LI><a href="#[4147eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18Ill_Ctl_Sys_ThreadPv
</UL>

<P><STRONG><a name="[4147eac]"></a>_Z18Ill_Ctl_Sys_ThreadPv</STRONG> (ARM, 812 bytes, Stack size 56 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = _Z18Ill_Ctl_Sys_ThreadPv &rArr; MT_WaitMultiEvents &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[3531c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_WaitMultiEvents
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[36af394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan15DeviceIoControlE11IoControl_tlj
<LI><a href="#[36b9fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16IsBeepInProgressv
<LI><a href="#[3880810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12Enable_Boostv
<LI><a href="#[4064860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23Timer3_MicroSecondDelayj
<LI><a href="#[4146ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17HandleCurrenEvent22ILL_CTL_CURRENT_STATESj
<LI><a href="#[4147ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToAIMONv
<LI><a href="#[4147f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToILLONv
<LI><a href="#[4147f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28Ill_Ctl_Sys_StateChangeToOFFv
<LI><a href="#[41492d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18SetLedControlStatej
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[4147e70]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Flash_Illumination_Control.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[4147e34]"></a>_Z17GPIO3_Service_IRQPv</STRONG> (ARM, 192 bytes, Stack size 8 bytes, Flash_Illumination_Control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z17GPIO3_Service_IRQPv &rArr; _Z28Ill_Ctl_Sys_StateChangeToOFFv &rArr; _Z10PWM_Sample8PWM_BASEi &rArr; _Z9PWM_Start8PWM_BASE
</UL>
<BR>[Calls]<UL><LI><a href="#[3531bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_SetEvent
<LI><a href="#[4147ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToAIMONv
<LI><a href="#[4147f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z30Ill_Ctl_Sys_StateChangeToILLONv
<LI><a href="#[4147f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28Ill_Ctl_Sys_StateChangeToOFFv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Flash_Illumination_Control.o(.text)
</UL>
<P><STRONG><a name="[41410c0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Trigger_5_5.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Trigger_5_5.o(.text)
</UL>
<P><STRONG><a name="[4141084]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Trigger_5_5.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Trigger_5_5.o(.text)
</UL>
<P><STRONG><a name="[4141048]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Trigger_5_5.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Trigger_5_5.o(.text)
</UL>
<P><STRONG><a name="[414100c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Trigger_5_5.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Trigger_5_5.o(.text)
</UL>
<P><STRONG><a name="[4140fd0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Trigger_5_5.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Trigger_5_5.o(.text)
</UL>
<P><STRONG><a name="[4140f94]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Trigger_5_5.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Trigger_5_5.o(.text)
</UL>
<P><STRONG><a name="[413cb24]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, imaging.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> imaging.o(.text)
</UL>
<P><STRONG><a name="[41fd9ec]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Image_Send_Binarize_Himage.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Image_Send_Binarize_Himage.o(.text)
</UL>
<P><STRONG><a name="[41fa0f8]"></a>_Z9Transform5Pointii</STRONG> (ARM, 112 bytes, Stack size 32 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Z9Transform5Pointii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
<LI><a href="#[41f9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ImgOutLineP9Workspace5PointS1_
<LI><a href="#[41fa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10EglOutLineP9Workspace5PointS1_
</UL>

<P><STRONG><a name="[41fa0bc]"></a>_Z11SampleImageP9Workspace</STRONG> (ARM, 7020 bytes, Stack size 144 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2016 + Unknown Stack Size
<LI>Call Chain = _Z11SampleImageP9Workspace &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
</UL>

<P><STRONG><a name="[41fa080]"></a>_Z11PointSpreadP5PointS0_iii</STRONG> (ARM, 156 bytes, Stack size 56 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z11PointSpreadP5PointS0_iii
</UL>
<BR>[Called By]<UL><LI><a href="#[3885748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10showSudokuPhiiPc
<LI><a href="#[41fa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10EglOutLineP9Workspace5PointS1_
</UL>

<P><STRONG><a name="[41fa044]"></a>_Z12CrawlEglEdgeP9WorkspacePPhP5PointPi</STRONG> (ARM, 392 bytes, Stack size 12 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Z12CrawlEglEdgeP9WorkspacePPhP5PointPi
</UL>
<BR>[Called By]<UL><LI><a href="#[41fa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10EglOutLineP9Workspace5PointS1_
</UL>

<P><STRONG><a name="[41fa008]"></a>_Z10EglOutLineP9Workspace5PointS1_</STRONG> (ARM, 1580 bytes, Stack size 264 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2136 + Unknown Stack Size
<LI>Call Chain = _Z10EglOutLineP9Workspace5PointS1_ &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[41fa044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12CrawlEglEdgeP9WorkspacePPhP5PointPi
<LI><a href="#[41fa080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11PointSpreadP5PointS0_iii
<LI><a href="#[41fa0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9Transform5Pointii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
</UL>

<P><STRONG><a name="[41f9fcc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ImagingInternal.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ImagingInternal.o(.text)
</UL>
<P><STRONG><a name="[41f9f90]"></a>_Z13LoResBinarizeP9Workspaceii</STRONG> (ARM, 896 bytes, Stack size 80 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Z13LoResBinarizeP9Workspaceii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
<LI><a href="#[41f9dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoResEdgeCheckP9Workspace5Point
</UL>

<P><STRONG><a name="[41f9f54]"></a>_Z12LoResLeftHugP9Workspace</STRONG> (ARM, 440 bytes, Stack size 16 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _Z12LoResLeftHugP9Workspace &rArr; _Z14LoResEdgeCheckP9Workspace5Point &rArr; _Z13LoResBinarizeP9Workspaceii
</UL>
<BR>[Calls]<UL><LI><a href="#[41f9dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoResEdgeCheckP9Workspace5Point
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ImgOutLineP9Workspace5PointS1_
</UL>

<P><STRONG><a name="[41f9f18]"></a>_Z10ImgOutLineP9Workspace5PointS1_</STRONG> (ARM, 1948 bytes, Stack size 416 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2288 + Unknown Stack Size
<LI>Call Chain = _Z10ImgOutLineP9Workspace5PointS1_ &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[41f9dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14LoResEdgeCheckP9Workspace5Point
<LI><a href="#[41f9f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12LoResLeftHugP9Workspace
<LI><a href="#[41fa0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z9Transform5Pointii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
</UL>

<P><STRONG><a name="[41f9edc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ImagingInternal.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ImagingInternal.o(.text)
</UL>
<P><STRONG><a name="[41f9ea0]"></a>_Z10ClosestPntP4Rail5PointS1_S1_</STRONG> (ARM, 524 bytes, Stack size 40 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z10ClosestPntP4Rail5PointS1_S1_ &rArr; _Z5AheadP4Rail
</UL>
<BR>[Calls]<UL><LI><a href="#[41f9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z4BackP4Rail
<LI><a href="#[41f9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z5AheadP4Rail
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
</UL>

<P><STRONG><a name="[41f9e64]"></a>_Z8SubDatumPhill</STRONG> (ARM, 200 bytes, Stack size 44 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Z8SubDatumPhill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingInternal.o(.text)
</UL>
<P><STRONG><a name="[41f9dec]"></a>_Z14LoResEdgeCheckP9Workspace5Point</STRONG> (ARM, 236 bytes, Stack size 24 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _Z14LoResEdgeCheckP9Workspace5Point &rArr; _Z13LoResBinarizeP9Workspaceii
</UL>
<BR>[Calls]<UL><LI><a href="#[41f9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z13LoResBinarizeP9Workspaceii
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ImgOutLineP9Workspace5PointS1_
<LI><a href="#[41f9f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12LoResLeftHugP9Workspace
</UL>

<P><STRONG><a name="[41f9db0]"></a>_Z7SetRailP4Rail5PointS1_</STRONG> (ARM, 164 bytes, Stack size 8 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z7SetRailP4Rail5PointS1_
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DoAutoCropPhiiiP5PointS1_S1_S1_
</UL>

<P><STRONG><a name="[41f9d74]"></a>_Z5AheadP4Rail</STRONG> (ARM, 164 bytes, Stack size 4 bytes, ImagingInternal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z5AheadP4Rail
</UL>
<BR>[Called By]<UL><LI><a href="#[41f9ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ClosestPntP4Rail5PointS1_S1_
</UL>

<P><STRONG><a name="[41f9d38]"></a>_Z4BackP4Rail</STRONG> (ARM, 148 bytes, Stack size 0 bytes, ImagingInternal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41f9ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ClosestPntP4Rail5PointS1_S1_
</UL>

<P><STRONG><a name="[41f7704]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, sigcapture.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sigcapture.o(.text)
</UL>
<P><STRONG><a name="[41f76c8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, sigcapture.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sigcapture.o(.text)
</UL>
<P><STRONG><a name="[41f0abc]"></a>__sti___18_PSoC_Engine_ISSP_c</STRONG> (ARM, 44 bytes, Stack size 8 bytes, PSoC_Engine_ISSP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sti___18_PSoC_Engine_ISSP_c
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PSoC_Engine_ISSP.o(.init_array)
</UL>
<P><STRONG><a name="[433a7e0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ScanEnginePSOC.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanEnginePSOC.o(.text)
</UL>
<P><STRONG><a name="[43354e8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ioman.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ioman.o(.text)
</UL>
<P><STRONG><a name="[440b7d4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, MLFlatbedSerialParser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> MLFlatbedSerialParser.o(.text)
</UL>
<P><STRONG><a name="[4534884]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DirectIoParser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.text)
</UL>
<P><STRONG><a name="[4534848]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DirectIoParser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.text)
</UL>
<P><STRONG><a name="[453480c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DirectIoParser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.text)
</UL>
<P><STRONG><a name="[45347d0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DirectIoParser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DirectIoParser.o(.text)
</UL>
<P><STRONG><a name="[453273c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, CommandHandler4683.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> CommandHandler4683.o(.text)
</UL>
<P><STRONG><a name="[4532700]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, CommandHandler4683.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> CommandHandler4683.o(.text)
</UL>
<P><STRONG><a name="[452e290]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 4683xlat.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> 4683xlat.o(.text)
</UL>
<P><STRONG><a name="[452d5ac]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 4683pro.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> 4683pro.o(.text)
</UL>
<P><STRONG><a name="[4527d8c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, Wedgeengineibm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> Wedgeengineibm.o(.text)
</UL>
<P><STRONG><a name="[45fde38]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, wedgelabel.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wedgelabel.o(.text)
</UL>
<P><STRONG><a name="[45fddfc]"></a>__sti___14_wedgelabel_cpp</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wedgelabel.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45fa1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN4CKeyC1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wedgelabel.o(.init_array)
</UL>
<P><STRONG><a name="[4884c5c]"></a>__sti___18_usb2driverbase_cpp</STRONG> (ARM, 44 bytes, Stack size 8 bytes, usb2driverbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sti___18_usb2driverbase_cpp
</UL>
<BR>[Calls]<UL><LI><a href="#[352d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18translate_ms_ticksj
<LI><a href="#[352d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12current_timev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb2driverbase.o(.init_array)
</UL>
<P><STRONG><a name="[493f014]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usb2enum.o(i._ZN9CUsb2Enum14get_descriptorEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2enum.o(i._ZN9CUsb2Enum14get_descriptorEv)
</UL>
<P><STRONG><a name="[493efd8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usb2enum.o(i._ZN9CUsb2Enum15control_handlerEv))
<BR>[Address Reference Count : 1]<UL><LI> usb2enum.o(i._ZN9CUsb2Enum15control_handlerEv)
</UL>
<P><STRONG><a name="[493b7d4]"></a>__sti___14_usb2cdcacm_cpp</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2cdcacm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2cdcacm.o(.init_array)
</UL>
<P><STRONG><a name="[493611c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usb2chip.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.text)
</UL>
<P><STRONG><a name="[49360e0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usb2chip.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.text)
</UL>
<P><STRONG><a name="[49360a4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usb2chip.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.text)
</UL>
<P><STRONG><a name="[4936068]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usb2chip.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.text)
</UL>
<P><STRONG><a name="[493602c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, usb2chip.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2chip.o(.text)
</UL>
<P><STRONG><a name="[49f9ea0]"></a>__sti___14_usb2hidpos_cpp</STRONG> (ARM, 16 bytes, Stack size 0 bytes, usb2hidpos.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb2hidpos.o(.init_array)
</UL>
<P><STRONG><a name="[4b46da4]"></a>__sti___10_UsbRem_cpp</STRONG> (ARM, 16 bytes, Stack size 0 bytes, UsbRem.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> UsbRem.o(.init_array)
</UL>
<P><STRONG><a name="[4b442fc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[4c71a0c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplimagedata.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplimagedata.o(.text)
</UL>
<P><STRONG><a name="[4c719d0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplimagedata.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplimagedata.o(.text)
</UL>
<P><STRONG><a name="[4c71994]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplimagedata.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplimagedata.o(.text)
</UL>
<P><STRONG><a name="[4c6a4dc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a4a0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a464]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a428]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a3ec]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a3b0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a374]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a338]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a2fc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a2c0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a284]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a248]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a20c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a1d0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a194]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a158]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a11c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a0e0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a0a4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a068]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c6a02c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4c69ff0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hhplprocessor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hhplprocessor.o(.text)
</UL>
<P><STRONG><a name="[4ed3d68]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, mainhhplproc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mainhhplproc.o(.text)
</UL>
<P><STRONG><a name="[5011f90]"></a>_Z12set_exp_gaintt</STRONG> (ARM, 364 bytes, Stack size 32 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _Z12set_exp_gaintt &rArr; dbg_output &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[500b528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_output
<LI><a href="#[500c428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10IIC_Shadow8WriteIICEht
<LI><a href="#[500c464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10IIC_Shadow7ReadIICEhPt
</UL>
<BR>[Called By]<UL><LI><a href="#[500ba8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13calc_exposureEv
<LI><a href="#[500bb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN26Exposure_control_cellphone13calc_exposureEv
<LI><a href="#[500bce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500bf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23AutoExpCalcPresentationEv
<LI><a href="#[500bff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD16AutoExpCalcFixedEv
<LI><a href="#[500c0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t
</UL>

<P><STRONG><a name="[5011f54]"></a>_Z20get_exposure_controlP9HHPSD_BYD31HHPScanDriverAutoExposureMode_t</STRONG> (ARM, 144 bytes, Stack size 16 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z20get_exposure_controlP9HHPSD_BYD31HHPScanDriverAutoExposureMode_t
</UL>
<BR>[Called By]<UL><LI><a href="#[500bce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22DeinitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500be88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD33ScanManagerFrameEventAutoExposureEv
<LI><a href="#[500bf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD22ScanManagerAutoExpCalcEv
<LI><a href="#[500c0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD28ScanManagerImageIsAcceptableEP24ScanDriverLastScanInfo_t
<LI><a href="#[500c158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD28ScanManagerAutoExpLineSampleEPvm
</UL>

<P><STRONG><a name="[5011f18]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ScanDriverHi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.text)
</UL>
<P><STRONG><a name="[5011edc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ScanDriverHi704A.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverHi704A.o(.text)
</UL>
<P><STRONG><a name="[5011ea0]"></a>_Z13read_exp_gainPtS_</STRONG> (ARM, 128 bytes, Stack size 24 bytes, ScanDriverHi704A.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z13read_exp_gainPtS_ &rArr; _ZN10IIC_Shadow7ReadIICEhPt
</UL>
<BR>[Calls]<UL><LI><a href="#[500c464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10IIC_Shadow7ReadIICEhPt
</UL>
<BR>[Called By]<UL><LI><a href="#[500ba8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN21Auto_exposure_control13calc_exposureEv
<LI><a href="#[500bb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN26Exposure_control_cellphone13calc_exposureEv
<LI><a href="#[500bd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD20InitializeScanEngineEP23ScanDriverOpenContext_ti
<LI><a href="#[500bf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN9HHPSD_BYD23AutoExpCalcPresentationEv
</UL>

<P><STRONG><a name="[500a628]"></a>_Z10dummy_zerov</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> scandriverscannerselect.o(.data)
<LI> scandriverscannerselect.o(.data)
</UL>
<P><STRONG><a name="[500a5ec]"></a>_Z10dummy_zerom</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> scandriverscannerselect.o(.data)
<LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[500a5b0]"></a>_Z10dummy_zeroP23ScanDriverOpenContext_t</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.data)
</UL>
<P><STRONG><a name="[500a574]"></a>_Z9dummy_onev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.text)
</UL>
<P><STRONG><a name="[500a538]"></a>_Z11dummy_FALSEv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.data)
</UL>
<P><STRONG><a name="[500a4fc]"></a>_Z11dummy_FALSEP23ScanDriverOpenContext_ti</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.data)
</UL>
<P><STRONG><a name="[500a4c0]"></a>_Z11dummy_FALSEP23ScanDriverOpenContext_t</STRONG> (ARM, 8 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.data)
</UL>
<P><STRONG><a name="[500a484]"></a>_Z10dummy_voidv</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.data)
</UL>
<P><STRONG><a name="[500a448]"></a>_Z10dummy_voidPK23ScanDriverOpenContext_t</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.data)
</UL>
<P><STRONG><a name="[500a40c]"></a>__sti___25_scandriverscannerselect_c</STRONG> (ARM, 24 bytes, Stack size 0 bytes, scandriverscannerselect.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverscannerselect.o(.init_array)
</UL>
<P><STRONG><a name="[4e66668]"></a>_Z22ScanManagementInitiatev</STRONG> (ARM, 352 bytes, Stack size 32 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _Z22ScanManagementInitiatev &rArr; _Z26ScanManagementFrameBoundryi &rArr; _Z25ScanManagementUpdateCyclem &rArr; _Z19WaitForSingleObjectjm &rArr; MT_WaitEvent &rArr;  _Z15EnterPowerState7power_t (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3530d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19WaitForSingleObjectjm
<LI><a href="#[3530dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ResetEventj
<LI><a href="#[3530df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8SetEventj
<LI><a href="#[3530e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20LeaveCriticalSectionPP15MutexStruct_tag
<LI><a href="#[3530ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20EnterCriticalSectionPP15MutexStruct_tag
<LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6527c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z23ScanDriverStartScanningP23ScanDriverOpenContext_ti
<LI><a href="#[4e652b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z29ScanManagerAttachToSameBufferP23ScanDriverOpenContext_tPvS1_
<LI><a href="#[4e652f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28ScanManagementRequestHandlerP23ScanDriverOpenContext_tPv
</UL>

<P><STRONG><a name="[4e6662c]"></a>_Z18HandleImageNotOkayv</STRONG> (ARM, 76 bytes, Stack size 16 bytes, scandriverscanmanager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _Z18HandleImageNotOkayv &rArr; _Z10ResetEventj &rArr; MT_ResetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[3530dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10ResetEventj
</UL>
<BR>[Called By]<UL><LI><a href="#[4e65510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z26ScanManagementFrameBoundryi
</UL>

<P><STRONG><a name="[4e64598]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scandriveropencontext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriveropencontext.o(.text)
</UL>
<P><STRONG><a name="[4e6455c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scandriveropencontext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriveropencontext.o(.text)
</UL>
<P><STRONG><a name="[4e64520]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scandriveropencontext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriveropencontext.o(.text)
</UL>
<P><STRONG><a name="[4e644e4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scandriveropencontext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriveropencontext.o(.text)
</UL>
<P><STRONG><a name="[4e644a8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scandriveropencontext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriveropencontext.o(.text)
</UL>
<P><STRONG><a name="[4e60038]"></a>_Z11SetScanModeP23ScanDriverOpenContext_tmPb</STRONG> (ARM, 84 bytes, Stack size 4 bytes, ScanDriverLightControl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z11SetScanModeP23ScanDriverOpenContext_tmPb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.constdata)
</UL>
<P><STRONG><a name="[4e5fffc]"></a>_Z11SetIdleModeP23ScanDriverOpenContext_tmPb</STRONG> (ARM, 44 bytes, Stack size 0 bytes, ScanDriverLightControl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.constdata)
</UL>
<P><STRONG><a name="[4e5ffc0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ScanDriverLightControl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.text)
</UL>
<P><STRONG><a name="[4e5ff84]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ScanDriverLightControl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.text)
</UL>
<P><STRONG><a name="[4e5ff48]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ScanDriverLightControl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.text)
</UL>
<P><STRONG><a name="[4e5ff0c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ScanDriverLightControl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ScanDriverLightControl.o(.text)
</UL>
<P><STRONG><a name="[4e5cb04]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scandriverinterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scandriverinterface.o(.text)
</UL>
<P><STRONG><a name="[50901b0]"></a>_Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, fsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Z17_fsm_cacheaddvptrP13FS_VOLUMEINFOPv
</UL>
<BR>[Called By]<UL><LI><a href="#[508f8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_wearleveling
<LI><a href="#[508f904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_writenextsector
<LI><a href="#[508f97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddlptr
<LI><a href="#[508f9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_swapbadblock
<LI><a href="#[508f9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddsptr
</UL>

<P><STRONG><a name="[508cf10]"></a>_Z13f_calcfilecrcP13FS_VOLUMEINFOP10FS_FILEINTPm</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, fsf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Z13f_calcfilecrcP13FS_VOLUMEINFOP10FS_FILEINTPm &rArr; _fg_getsector
</UL>
<BR>[Calls]<UL><LI><a href="#[508c844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fg_getsector
<LI><a href="#[508fdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_calccrc32 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5091524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_open
<LI><a href="#[5091a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_close
</UL>

<P><STRONG><a name="[508bd40]"></a>_Z8StoreFatP13FS_VOLUMEINFO</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _Z8StoreFatP13FS_VOLUMEINFO &rArr; _fsm_cachenext &rArr; _fsm_cachepagecheck &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[508f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachereset
<LI><a href="#[508f760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachenext
<LI><a href="#[508f7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheupdate
</UL>
<BR>[Called By]<UL><LI><a href="#[508bc8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6FormatP13FS_VOLUMEINFO
<LI><a href="#[508bd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flashdrv.o(.text)
</UL>
<P><STRONG><a name="[508bd04]"></a>_Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl</STRONG> (Thumb, 644 bytes, Stack size 80 bytes, flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _Z11StoreSectorP13FS_VOLUMEINFOP10FS_FILEINTPvl &rArr; _Z8StoreFatP13FS_VOLUMEINFO &rArr; _fsm_cachenext &rArr; _fsm_cachepagecheck &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[508bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8StoreFatP13FS_VOLUMEINFO
<LI><a href="#[508f8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_wearleveling
<LI><a href="#[508f904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_writenextsector
<LI><a href="#[508f940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_addsectorchain
<LI><a href="#[508f97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddlptr
<LI><a href="#[508f9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_swapbadblock
<LI><a href="#[508f9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cacheaddsptr
<LI><a href="#[508fa30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findfreeblock
<LI><a href="#[508fa6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_checksectorfree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flashdrv.o(.text)
</UL>
<P><STRONG><a name="[508bcc8]"></a>_Z9GetSectorPK13FS_VOLUMEINFOlPvll</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z9GetSectorPK13FS_VOLUMEINFOlPvll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flashdrv.o(.text)
</UL>
<P><STRONG><a name="[508bc8c]"></a>_Z6FormatP13FS_VOLUMEINFO</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _Z6FormatP13FS_VOLUMEINFO &rArr; _Z8StoreFatP13FS_VOLUMEINFO &rArr; _fsm_cachenext &rArr; _fsm_cachepagecheck &rArr; __aeabi_idivmod &rArr; __aeabi_idiv0 &rArr; __rt_div0 &rArr; __rt_SIGFPE
</UL>
<BR>[Calls]<UL><LI><a href="#[508bd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z8StoreFatP13FS_VOLUMEINFO
<LI><a href="#[508f724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsm_cachereset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flashdrv.o(.text)
</UL>
<P><STRONG><a name="[508af30]"></a>_Z10EraseFlashl</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, num_m25pxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _Z10EraseFlashl &rArr; _Z14SpiEraseSectorj &rArr; _Z14WriteErasePollv &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[36b7440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14SpiEraseSectorj (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> num_m25pxx.o(.text)
</UL>
<P><STRONG><a name="[508aef4]"></a>_Z10WriteFlashPvllll</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, num_m25pxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Z10WriteFlashPvllll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> num_m25pxx.o(.text)
</UL>
<P><STRONG><a name="[508aeb8]"></a>_Z11VerifyFlashPvllll</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, num_m25pxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _Z11VerifyFlashPvllll &rArr; _Z12SpiMemVerifyjjPc &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[36b747c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12SpiMemVerifyjjPc (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> num_m25pxx.o(.text)
</UL>
<P><STRONG><a name="[508ae7c]"></a>_Z9ReadFlashPvlll</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, num_m25pxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _Z9ReadFlashPvlll &rArr; _Z10SpiMemReadjjPc &rArr; _Z10SpiReadDbljjPc &rArr; _Z9MergeReadPj
</UL>
<BR>[Calls]<UL><LI><a href="#[406a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10SpiMemReadjjPc (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> num_m25pxx.o(.text)
</UL>
<P><STRONG><a name="[51d60f4]"></a>_Z28ProcessNonPluginMenuCommandsP7HSTRING</STRONG> (ARM, 420 bytes, Stack size 80 bytes, SynCommandParser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = _Z28ProcessNonPluginMenuCommandsP7HSTRING &rArr; _Z28LoadWorkingConfigurationZerov &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEPjPhbb &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b8f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGD1Ev
<LI><a href="#[36b8fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1Ejb
<LI><a href="#[36b9024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKc
<LI><a href="#[36b9114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb
<LI><a href="#[36b9a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z31FlashAndReSynchCustomerDefaultsv
<LI><a href="#[36b9d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z19FlashWorkingChangesv
<LI><a href="#[3758ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4CopyEPKS_
<LI><a href="#[388507c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRINGC1EPKcbb
<LI><a href="#[3e9cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28SaveSettingChangeToTableZerov
<LI><a href="#[3e9cbd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z28LoadWorkingConfigurationZerov
<LI><a href="#[3e9cc10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27SaveSettingChangeToTableOnev
<LI><a href="#[3e9cc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27LoadWorkingConfigurationOnev
<LI><a href="#[3f1b6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING6RemoveEjj
<LI><a href="#[4d78ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN7HSTRING4FindEPS_biPi
<LI><a href="#[51d2878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN28READER_CONFIGURATION_STORAGE16CurrentWorkTableEv
</UL>
<BR>[Called By]<UL><LI><a href="#[51d2a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN17STX_COMMAND_PARSE17ServiceSTXCommandEh
</UL>

<P><STRONG><a name="[51d607c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SynCommandParser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SynCommandParser.o(.text)
</UL>
<P><STRONG><a name="[51d1f54]"></a>_Z12DumpSPIFlashv</STRONG> (ARM, 88 bytes, Stack size 16 bytes, NonMenucommands.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _Z12DumpSPIFlashv &rArr; _Z20wait_til_tx_is_emptyv &rArr; _ZN6CIoMan13WaitUntilSentEmb &rArr; _ZN11CDriverBase11FlushTxFifoEv &rArr; _ZN12CBarcodeData4FreeEv &rArr; _ZN7HSTRINGD1Ev &rArr; _ZdaPv &rArr; _ZdlPv &rArr;  free (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN6CIoMan5WriteEPKhj
<LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[3531d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MT_Delay
<LI><a href="#[406a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10SpiMemReadjjPc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> NonMenucommands.o(.data)
</UL>
<P><STRONG><a name="[51d1f18]"></a>_Z10DeviceTypev</STRONG> (ARM, 76 bytes, Stack size 8 bytes, NonMenucommands.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Z10DeviceTypev &rArr; _Z10xputstringPKc &rArr; _Z10xputstringPKh &rArr; _ZN6CIoMan5WriteEPKh
</UL>
<BR>[Calls]<UL><LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> NonMenucommands.o(.data)
</UL>
<P><STRONG><a name="[51d1edc]"></a>_Z14GoInToStopModev</STRONG> (ARM, 68 bytes, Stack size 8 bytes, NonMenucommands.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = _Z14GoInToStopModev &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2277e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z20wait_til_tx_is_emptyv
<LI><a href="#[2277ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10xputstringPKc
<LI><a href="#[35319ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15EnterPowerState7power_t
<LI><a href="#[4403f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16MX25USB2_suspendv
<LI><a href="#[4403fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15MX25USB2_resumev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> NonMenucommands.o(.data)
</UL>
<P><STRONG><a name="[51d1ea0]"></a>_Z13EraseAllFlashv</STRONG> (ARM, 20 bytes, Stack size 8 bytes, NonMenucommands.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _Z13EraseAllFlashv &rArr; _Z16EraseEntireFlashv &rArr; _Z16SpiEraseAllFlashv &rArr; _Z14WriteErasePollv &rArr; _Z6SpiXfrjjPjjjPc
</UL>
<BR>[Calls]<UL><LI><a href="#[5097140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z16EraseEntireFlashv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> NonMenucommands.o(.data)
</UL>
<P><STRONG><a name="[53073d8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecoderMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[530739c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecoderMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecoderMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53056c8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DiagnosticAndDebugMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DiagnosticAndDebugMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5301b04]"></a>_Z18GPIO3_Service_IRQ1Pv</STRONG> (ARM, 124 bytes, Stack size 16 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z18GPIO3_Service_IRQ1Pv &rArr; _Z27DoesPluginHaveControlofNFRBv
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea03d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27DoesPluginHaveControlofNFRBv
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ImagingMenuSettings.o(.text)
<LI> ImagingMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[5301ac8]"></a>__sti___23_ImagingMenuSettings_cpp</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ImagingMenuSettings.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[226ea9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZN10CIrqVectorC1Ev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ImagingMenuSettings.o(.init_array)
</UL>
<P><STRONG><a name="[52ffe6c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, IndicatorMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> IndicatorMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[53618f4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, readerconfigurationstorage.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> readerconfigurationstorage.o(.text)
</UL>
<P><STRONG><a name="[54e3320]"></a>_Z25CreateFormatCommandStringPK14FormatString_ttPcj</STRONG> (ARM, 164 bytes, Stack size 40 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z25CreateFormatCommandStringPK14FormatString_ttPcj
</UL>
<BR>[Called By]<UL><LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
</UL>

<P><STRONG><a name="[54e32e4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, PlugAndPlayMenuSettings.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> PlugAndPlayMenuSettings.o(.text)
</UL>
<P><STRONG><a name="[54e32a8]"></a>_Z26PlugAndPlayIBM_4683_Commoni</STRONG> (ARM, 36 bytes, Stack size 0 bytes, PlugAndPlayMenuSettings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = _Z26PlugAndPlayIBM_4683_Commoni &rArr; _Z27PlugAndPlayIBM_4683_SurePosiii &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54e1e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z27PlugAndPlayIBM_4683_SurePosiii
</UL>
<BR>[Called By]<UL><LI><a href="#[54e1d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayIBM_4683Port17v
<LI><a href="#[54e1d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32PlugAndPlayIBM_4683Port9B_HHBCR2v
<LI><a href="#[54e1dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z32PlugAndPlayIBM_4683Port9B_HHBCR1v
<LI><a href="#[54e1e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z25PlugAndPlayIBM_4683Port5Bv
</UL>

<P><STRONG><a name="[54d7f20]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, htag.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> htag.o(.text)
</UL>
<P><STRONG><a name="[54d7ee4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, htag.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> htag.o(.text)
</UL>
<P><STRONG><a name="[5546ad0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, htagimage.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> htagimage.o(.text)
</UL>
<P><STRONG><a name="[570cc5c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, tiffimage.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tiffimage.o(.text)
</UL>
<P><STRONG><a name="[570ad30]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, himage.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> himage.o(.text)
</UL>
<P><STRONG><a name="[5765520]"></a>_Z10CopyResultP13DecoderResultS0_</STRONG> (ARM, 252 bytes, Stack size 20 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[5765160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreResultiP13DecoderResult
<LI><a href="#[576546c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SortResultsv
<LI><a href="#[57654e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17CheckEANEmulationv
</UL>

<P><STRONG><a name="[57654e4]"></a>_Z17CheckEANEmulationv</STRONG> (ARM, 1024 bytes, Stack size 8424 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8444<LI>Call Chain = _Z17CheckEANEmulationv &rArr; _Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Calls]<UL><LI><a href="#[576519c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15InsertCharacterPhPihi
<LI><a href="#[5765520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[576546c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SortResultsv
</UL>

<P><STRONG><a name="[57654a8]"></a>_Z14CombineResultsi</STRONG> (ARM, 128 bytes, Stack size 24 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z14CombineResultsi
</UL>
<BR>[Called By]<UL><LI><a href="#[57653f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CheckAppendTypeP13DecoderResult
<LI><a href="#[576546c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SortResultsv
</UL>

<P><STRONG><a name="[576546c]"></a>_Z11SortResultsv</STRONG> (ARM, 1316 bytes, Stack size 88 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8532 + Unknown Stack Size
<LI>Call Chain = _Z11SortResultsv &rArr; _Z17CheckEANEmulationv &rArr; _Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[57654a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CombineResultsi
<LI><a href="#[57654e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17CheckEANEmulationv
<LI><a href="#[5765520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
<LI><a href="#[57653f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CheckAppendTypeP13DecoderResult
</UL>

<P><STRONG><a name="[5765430]"></a>_Z18ClearStoredResultsi</STRONG> (ARM, 296 bytes, Stack size 40 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z18ClearStoredResultsi
</UL>
<BR>[Called By]<UL><LI><a href="#[3885964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode
<LI><a href="#[5764404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeReset
<LI><a href="#[5765160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreResultiP13DecoderResult
<LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
</UL>

<P><STRONG><a name="[57653f4]"></a>_Z15CheckAppendTypeP13DecoderResult</STRONG> (ARM, 6388 bytes, Stack size 144 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8676 + Unknown Stack Size
<LI>Call Chain = _Z15CheckAppendTypeP13DecoderResult &rArr; _Z11SortResultsv &rArr; _Z17CheckEANEmulationv &rArr; _Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[576519c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15InsertCharacterPhPihi
<LI><a href="#[57651d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15DeleteCharacterP13DecoderResulti
<LI><a href="#[576546c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SortResultsv
<LI><a href="#[57654a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14CombineResultsi
</UL>
<BR>[Called By]<UL><LI><a href="#[5765160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreResultiP13DecoderResult
</UL>

<P><STRONG><a name="[57653b8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecoderInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecoderInterface.o(.text)
</UL>
<P><STRONG><a name="[576537c]"></a>_Z2ToP7outline9Point_tag</STRONG> (ARM, 460 bytes, Stack size 24 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z2ToP7outline9Point_tag
</UL>
<BR>[Calls]<UL><LI><a href="#[5765124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z6UpdateP7outlineii
</UL>
<BR>[Called By]<UL><LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
</UL>

<P><STRONG><a name="[5765340]"></a>_Z14ResultCallbackiP13DecoderResult</STRONG> (ARM, 868 bytes, Stack size 88 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8788 + Unknown Stack Size
<LI>Call Chain = _Z14ResultCallbackiP13DecoderResult &rArr; _Z11StoreResultiP13DecoderResult &rArr; _Z15CheckAppendTypeP13DecoderResult &rArr; _Z11SortResultsv &rArr; _Z17CheckEANEmulationv &rArr; _Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5764170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_DecodeGet
<LI><a href="#[57644b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBorder
<LI><a href="#[5765160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11StoreResultiP13DecoderResult
<LI><a href="#[57651d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15DeleteCharacterP13DecoderResulti
<LI><a href="#[576537c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z2ToP7outline9Point_tag
<LI><a href="#[5765430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ClearStoredResultsi
<LI><a href="#[576546c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z11SortResultsv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderInterface.o(.text)
</UL>
<P><STRONG><a name="[5765304]"></a>_Z14StatusCallbackii</STRONG> (ARM, 20 bytes, Stack size 0 bytes, DecoderInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecoderInterface.o(.text)
</UL>
<P><STRONG><a name="[57652c8]"></a>_Z16ProgressCallbacki</STRONG> (ARM, 132 bytes, Stack size 24 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Z16ProgressCallbacki &rArr; SI_StopDecode &rArr; SD_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5763fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_StopDecode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> DecoderInterface.o(.text)
</UL>
<P><STRONG><a name="[576528c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecoderInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecoderInterface.o(.text)
</UL>
<P><STRONG><a name="[5765250]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecoderInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecoderInterface.o(.text)
</UL>
<P><STRONG><a name="[5765214]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, DecoderInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> DecoderInterface.o(.text)
</UL>
<P><STRONG><a name="[57651d8]"></a>_Z15DeleteCharacterP13DecoderResulti</STRONG> (ARM, 68 bytes, Stack size 0 bytes, DecoderInterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
<LI><a href="#[57653f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CheckAppendTypeP13DecoderResult
</UL>

<P><STRONG><a name="[576519c]"></a>_Z15InsertCharacterPhPihi</STRONG> (ARM, 80 bytes, Stack size 4 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Z15InsertCharacterPhPihi
</UL>
<BR>[Called By]<UL><LI><a href="#[38858ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeSet
<LI><a href="#[57653f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CheckAppendTypeP13DecoderResult
<LI><a href="#[57654e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z17CheckEANEmulationv
</UL>

<P><STRONG><a name="[5765160]"></a>_Z11StoreResultiP13DecoderResult</STRONG> (ARM, 156 bytes, Stack size 24 bytes, DecoderInterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8700 + Unknown Stack Size
<LI>Call Chain = _Z11StoreResultiP13DecoderResult &rArr; _Z15CheckAppendTypeP13DecoderResult &rArr; _Z11SortResultsv &rArr; _Z17CheckEANEmulationv &rArr; _Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Calls]<UL><LI><a href="#[57653f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z15CheckAppendTypeP13DecoderResult
<LI><a href="#[5765430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z18ClearStoredResultsi
<LI><a href="#[5765520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10CopyResultP13DecoderResultS0_
</UL>
<BR>[Called By]<UL><LI><a href="#[5765340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14ResultCallbackiP13DecoderResult
</UL>

<P><STRONG><a name="[5765124]"></a>_Z6UpdateP7outlineii</STRONG> (ARM, 156 bytes, Stack size 0 bytes, DecoderInterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[576537c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z2ToP7outline9Point_tag
</UL>

<P><STRONG><a name="[5762280]"></a>_Z12FormatResultv</STRONG> (ARM, 1436 bytes, Stack size 40 bytes, SwiftInterface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5761e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DeleteChari
<LI><a href="#[5761ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10InsertCharih
</UL>
<BR>[Called By]<UL><LI><a href="#[5761b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ResultCallback
</UL>

<P><STRONG><a name="[5762244]"></a>_Z12CheckAddendav</STRONG> (ARM, 1244 bytes, Stack size 72 bytes, SwiftInterface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[5761b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ResultCallback
</UL>

<P><STRONG><a name="[5762208]"></a>_Z11CheckLengthv</STRONG> (ARM, 996 bytes, Stack size 0 bytes, SwiftInterface.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5761b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ResultCallback
</UL>

<P><STRONG><a name="[57621cc]"></a>_Z14FillResultInfoi</STRONG> (ARM, 2448 bytes, Stack size 48 bytes, SwiftInterface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[576195c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetLastError
<LI><a href="#[5761998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Get
<LI><a href="#[5761e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z10DeleteChari
</UL>
<BR>[Called By]<UL><LI><a href="#[5761b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI_ResultCallback
</UL>

<P><STRONG><a name="[5762190]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5762154]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5762118]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[57620dc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[57620a0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5762064]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5762028]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5761fec]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5761fb0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5761f74]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5761f38]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5761efc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, SwiftInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> SwiftInterface.o(.text)
</UL>
<P><STRONG><a name="[5761ec0]"></a>_Z10InsertCharih</STRONG> (ARM, 72 bytes, Stack size 4 bytes, SwiftInterface.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5762280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12FormatResultv
</UL>

<P><STRONG><a name="[5761e84]"></a>_Z10DeleteChari</STRONG> (ARM, 72 bytes, Stack size 0 bytes, SwiftInterface.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57621cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z14FillResultInfoi
<LI><a href="#[5762280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Z12FormatResultv
</UL>

<P><STRONG><a name="[5760b4c]"></a>_Z14FillResultInfoP15RS_DecodeResult</STRONG> (ARM, 992 bytes, Stack size 32 bytes, RapidScanInterface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57605ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[576069c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSI_ResultCallback
</UL>

<P><STRONG><a name="[5760b10]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, RapidScanInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> RapidScanInterface.o(.text)
</UL>
<P><STRONG><a name="[5760ad4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, RapidScanInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> RapidScanInterface.o(.text)
</UL>
<P><STRONG><a name="[5760a98]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, RapidScanInterface.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> RapidScanInterface.o(.text)
</UL>
<P><STRONG><a name="[575eab8]"></a>Transform</STRONG> (ARM, 120 bytes, Stack size 32 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
<LI><a href="#[575e89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImgOutLine
<LI><a href="#[575e9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EglOutLine
</UL>

<P><STRONG><a name="[575ea7c]"></a>EstablishWorkspace</STRONG> (ARM, 260 bytes, Stack size 24 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
</UL>

<P><STRONG><a name="[575ea40]"></a>SampleImage</STRONG> (ARM, 6992 bytes, Stack size 144 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
</UL>

<P><STRONG><a name="[575ea04]"></a>CrawlEglEdge</STRONG> (ARM, 396 bytes, Stack size 12 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EglOutLine
</UL>

<P><STRONG><a name="[575e9c8]"></a>EglOutLine</STRONG> (ARM, 1684 bytes, Stack size 264 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575ea04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrawlEglEdge
<LI><a href="#[575eab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
</UL>

<P><STRONG><a name="[575e98c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ImageCore.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ImageCore.o(.text)
</UL>
<P><STRONG><a name="[575e950]"></a>LoResBinarize</STRONG> (ARM, 920 bytes, Stack size 80 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575e770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResEdgeCheck
<LI><a href="#[575e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResBit
</UL>

<P><STRONG><a name="[575e914]"></a>LoResLeftHug</STRONG> (ARM, 448 bytes, Stack size 16 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResEdgeCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[575e89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImgOutLine
</UL>

<P><STRONG><a name="[575e8d8]"></a>LoResBit</STRONG> (ARM, 116 bytes, Stack size 16 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResBinarize
</UL>
<BR>[Called By]<UL><LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
</UL>

<P><STRONG><a name="[575e89c]"></a>ImgOutLine</STRONG> (ARM, 1936 bytes, Stack size 416 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[575e770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResEdgeCheck
<LI><a href="#[575e914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResLeftHug
<LI><a href="#[575eab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
</UL>

<P><STRONG><a name="[575e860]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ImageCore.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ImageCore.o(.text)
</UL>
<P><STRONG><a name="[575e824]"></a>ClosestPnt</STRONG> (ARM, 524 bytes, Stack size 36 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575dd20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[575dd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ahead
</UL>
<BR>[Called By]<UL><LI><a href="#[575e7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearestPnts
</UL>

<P><STRONG><a name="[575e7e8]"></a>NearestPnts</STRONG> (ARM, 236 bytes, Stack size 152 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRail
<LI><a href="#[575e824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClosestPnt
</UL>
<BR>[Called By]<UL><LI><a href="#[575dca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCropMod
<LI><a href="#[575dce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCrop
</UL>

<P><STRONG><a name="[575e7ac]"></a>Sum9Pixels</STRONG> (ARM, 196 bytes, Stack size 28 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[575dc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocateSpot
</UL>

<P><STRONG><a name="[575e770]"></a>LoResEdgeCheck</STRONG> (ARM, 216 bytes, Stack size 24 bytes, ImageCore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[575e950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResBinarize
</UL>
<BR>[Called By]<UL><LI><a href="#[575e89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImgOutLine
<LI><a href="#[575e914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoResLeftHug
</UL>

<P><STRONG><a name="[575d3fc]"></a>SymLoc0000132cLc40x68</STRONG> (ARM, 104 bytes, Stack size 0 bytes, S002.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProgressiveDecode
<LI><a href="#[575ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PrivateFunction1
<LI><a href="#[575ca9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ComputeAGC
<LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
<LI><a href="#[5761998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Get
<LI><a href="#[57619d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Destroy
<LI><a href="#[5761a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Decode
</UL>

<P><STRONG><a name="[575d3c0]"></a>SymLoc000A25AC</STRONG> (ARM, 72 bytes, Stack size 16 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SymLoc000A25AC
</UL>
<BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d384]"></a>SymLoc00000540Lc40x424</STRONG> (ARM, 2284 bytes, Stack size 32 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SymLoc00000540Lc40x424
</UL>
<BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d348]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d30c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d2d0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d294]"></a>SymLoc0000050cLc40x34</STRONG> (ARM, 60 bytes, Stack size 8 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc0000050cLc40x34
</UL>
<BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d258]"></a>SymLoc000004e4Lc40x28</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc000004e4Lc40x28
</UL>
<BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d21c]"></a>SymLoc000004bcLc40x28</STRONG> (ARM, 40 bytes, Stack size 8 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc000004bcLc40x28
</UL>
<BR>[Calls]<UL><LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d1e0]"></a>SymLoc000A452B</STRONG> (ARM, 3612 bytes, Stack size 32 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SymLoc000A452B
</UL>
<BR>[Calls]<UL><LI><a href="#[575c934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000002f4Gb153Data0x94
</UL>
<BR>[Called By]<UL><LI><a href="#[5761a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Decode
</UL>

<P><STRONG><a name="[575d1a4]"></a>SymLoc00000e88Lc40xec</STRONG> (ARM, 1332 bytes, Stack size 24 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12088 + Unknown Stack Size
<LI>Call Chain = SymLoc00000e88Lc40xec &rArr; SymLoc0005817C &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575c8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0005817C
<LI><a href="#[575cad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000012f4Lc40x38
</UL>
<BR>[Called By]<UL><LI><a href="#[5761a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Create
</UL>

<P><STRONG><a name="[575d168]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.text)
</UL>
<P><STRONG><a name="[575d12c]"></a>SymLoc000013b4Lc40x74</STRONG> (ARM, 104 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575d0f0]"></a>SymLoc0012EC83</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575d0b4]"></a>SymLoc00001428Lc40x20</STRONG> (ARM, 32 bytes, Stack size 8 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc00001428Lc40x20
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575d078]"></a>SymLoc00001448Lc40xa0</STRONG> (ARM, 476 bytes, Stack size 4 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SymLoc00001448Lc40xa0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575d03c]"></a>SymLoc000014e8Lc40x24</STRONG> (ARM, 80 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575d000]"></a>SymLoc00128C4C</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cfc4]"></a>SymLoc00110210</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cf88]"></a>SymLoc00115212</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cf4c]"></a>SymLoc000F942B</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cf10]"></a>SymLoc0011E4CE</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575ced4]"></a>SymLoc0000150cLc40x5c</STRONG> (ARM, 96 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575ce98]"></a>SymLoc001324BC</STRONG> (ARM, 60 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575ce5c]"></a>SymLoc000F06D7</STRONG> (ARM, 48 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575ce20]"></a>SymLoc001385AA</STRONG> (ARM, 36 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cde4]"></a>SymLoc000EFB3B</STRONG> (ARM, 36 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cda8]"></a>SymLoc00117635</STRONG> (ARM, 84 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cd6c]"></a>SymLoc00140B01</STRONG> (ARM, 64 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cd30]"></a>SymLoc0012C53B</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575ccf4]"></a>SymLoc0015D576</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575ccb8]"></a>SymLoc001571D1</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cc7c]"></a>SymLoc00127166</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cc40]"></a>SymLoc00131427</STRONG> (ARM, 52 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cc04]"></a>SymLoc000C9F5E</STRONG> (ARM, 84 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cbc8]"></a>SymLoc0009C1A8</STRONG> (ARM, 384 bytes, Stack size 32 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12096 + Unknown Stack Size
<LI>Call Chain = SymLoc0009C1A8 &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F8942
</UL>
<BR>[Called By]<UL><LI><a href="#[575cb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00155452
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cb8c]"></a>SymLoc00102AF2</STRONG> (ARM, 8 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cb50]"></a>SymLoc000BC8B4</STRONG> (ARM, 8 bytes, Stack size 0 bytes, S002.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cb14]"></a>SymLoc00155452</STRONG> (ARM, 172 bytes, Stack size 16 bytes, S002.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12112 + Unknown Stack Size
<LI>Call Chain = SymLoc00155452 &rArr; SymLoc0009C1A8 &rArr; SymLoc000F8942 &rArr; SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575cbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009C1A8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S002.o(.data)
</UL>
<P><STRONG><a name="[575cad8]"></a>SymLoc000012f4Lc40x38</STRONG> (ARM, 60 bytes, Stack size 0 bytes, S002.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProgressiveDecode
<LI><a href="#[575ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PrivateFunction1
<LI><a href="#[575ca9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ComputeAGC
<LI><a href="#[575d1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000e88Lc40xec
<LI><a href="#[575d21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000004bcLc40x28
<LI><a href="#[575d258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000004e4Lc40x28
<LI><a href="#[575d294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0000050cLc40x34
<LI><a href="#[575d384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00000540Lc40x424
<LI><a href="#[575d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A25AC
<LI><a href="#[5761920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Set
<LI><a href="#[5761998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Get
<LI><a href="#[57619d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Destroy
<LI><a href="#[5761a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Decode
</UL>

<P><STRONG><a name="[58de4b4]"></a>ExtendA</STRONG> (ARM, 304 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ExtendA
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutwardScan
</UL>

<P><STRONG><a name="[58de478]"></a>SetRAIL</STRONG> (ARM, 176 bytes, Stack size 12 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetRAIL
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutwardScan
<LI><a href="#[58dd3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewEnergy
<LI><a href="#[58ddaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastScan
<LI><a href="#[58ddb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnergyToo
<LI><a href="#[58ddb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Energy
</UL>

<P><STRONG><a name="[58de43c]"></a>AHEAD</STRONG> (ARM, 172 bytes, Stack size 4 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = AHEAD
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutwardScan
<LI><a href="#[58dd3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewEnergy
<LI><a href="#[58ddaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastScan
<LI><a href="#[58ddb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnergyToo
<LI><a href="#[58ddb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Energy
</UL>

<P><STRONG><a name="[58de400]"></a>TcToPnt</STRONG> (ARM, 136 bytes, Stack size 32 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TcToPnt
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RapidSetCorners
<LI><a href="#[58ddd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code128
</UL>

<P><STRONG><a name="[58de3c4]"></a>Accell</STRONG> (ARM, 336 bytes, Stack size 56 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Accell
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastUpcEan
<LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
<LI><a href="#[58ddd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code128
<LI><a href="#[58ddf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code39
<LI><a href="#[58de040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I25Body
</UL>

<P><STRONG><a name="[58de388]"></a>Insert</STRONG> (ARM, 84 bytes, Stack size 8 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58dd53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int25
<LI><a href="#[58ddbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUpcEan
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
<LI><a href="#[58ddf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code39
<LI><a href="#[58de0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpretRssExp
</UL>

<P><STRONG><a name="[58de34c]"></a>NextMessageSegment</STRONG> (ARM, 96 bytes, Stack size 4 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NextMessageSegment
</UL>
<BR>[Called By]<UL><LI><a href="#[58dde60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Intrpt128
<LI><a href="#[58de130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPData
</UL>

<P><STRONG><a name="[58de310]"></a>Reverse</STRONG> (ARM, 72 bytes, Stack size 4 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Reverse
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58dd4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codabar
<LI><a href="#[58dd53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int25
<LI><a href="#[58ddbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUpcEan
<LI><a href="#[58ddf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code39
</UL>

<P><STRONG><a name="[58de2d4]"></a>CSum31</STRONG> (ARM, 100 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58dd53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int25
<LI><a href="#[58ddbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUpcEan
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
</UL>

<P><STRONG><a name="[58de298]"></a>LsBars</STRONG> (ARM, 136 bytes, Stack size 24 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LsBars
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharCbr
<LI><a href="#[58ddfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char39
</UL>

<P><STRONG><a name="[58de25c]"></a>ClearRss</STRONG> (ARM, 136 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58dd668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRssLimited
<LI><a href="#[58dd758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRss14
<LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58de220]"></a>nkDcd</STRONG> (ARM, 680 bytes, Stack size 80 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = nkDcd
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rss174
<LI><a href="#[58dd6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rss267
<LI><a href="#[58dd71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RssLimChk
<LI><a href="#[58de1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRss14
</UL>

<P><STRONG><a name="[58de1e4]"></a>EoeRss14</STRONG> (ARM, 3048 bytes, Stack size 80 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = EoeRss14 &rArr; nkDcd
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rss14Check
<LI><a href="#[58dd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fndr14
<LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
<LI><a href="#[58de220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nkDcd
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58de1a8]"></a>NextC</STRONG> (ARM, 148 bytes, Stack size 20 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NextC
</UL>
<BR>[Called By]<UL><LI><a href="#[58de0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpretRssExp
<LI><a href="#[58de130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPData
<LI><a href="#[58de16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrimaryID
</UL>

<P><STRONG><a name="[58de16c]"></a>PrimaryID</STRONG> (ARM, 224 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PrimaryID &rArr; NextC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringStuff
<LI><a href="#[58de1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextC
</UL>
<BR>[Called By]<UL><LI><a href="#[58de0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpretRssExp
</UL>

<P><STRONG><a name="[58de130]"></a>GPData</STRONG> (ARM, 1080 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GPData &rArr; NextC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringStuff
<LI><a href="#[58de1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextC
<LI><a href="#[58de34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMessageSegment
</UL>
<BR>[Called By]<UL><LI><a href="#[58de0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpretRssExp
</UL>

<P><STRONG><a name="[58de0f4]"></a>InterpretRssExp</STRONG> (ARM, 1252 bytes, Stack size 56 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = InterpretRssExp &rArr; GPData &rArr; NextC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringStuff
<LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58de130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPData
<LI><a href="#[58de16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrimaryID
<LI><a href="#[58de1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextC
<LI><a href="#[58de388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58de0b8]"></a>EoeRssExp</STRONG> (ARM, 2288 bytes, Stack size 96 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = EoeRssExp &rArr; Rss174 &rArr; nkDcd
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FndrExp
<LI><a href="#[58dd5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rss174
<LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58de07c]"></a>Tree25</STRONG> (ARM, 120 bytes, Stack size 16 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Tree25
</UL>
<BR>[Called By]<UL><LI><a href="#[58de004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tree39
<LI><a href="#[58de040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I25Body
</UL>

<P><STRONG><a name="[58de040]"></a>I25Body</STRONG> (ARM, 572 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I25Body &rArr; Accell
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I25Mod
<LI><a href="#[58dd80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WnPat
<LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58de07c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tree25
<LI><a href="#[58de3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accell
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int25
</UL>

<P><STRONG><a name="[58de004]"></a>Tree39</STRONG> (ARM, 196 bytes, Stack size 24 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Tree39 &rArr; Tree25
</UL>
<BR>[Calls]<UL><LI><a href="#[58de07c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tree25
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char39
</UL>

<P><STRONG><a name="[58ddfc8]"></a>Char39</STRONG> (ARM, 328 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Char39 &rArr; TryBiasC39
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryBiasC39
<LI><a href="#[58de004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tree39
<LI><a href="#[58de298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LsBars
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code39
</UL>

<P><STRONG><a name="[58ddf8c]"></a>Code39</STRONG> (ARM, 1916 bytes, Stack size 56 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Code39 &rArr; Char39 &rArr; TryBiasC39
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58dd8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete
<LI><a href="#[58ddfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char39
<LI><a href="#[58de310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverse
<LI><a href="#[58de388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert
<LI><a href="#[58de3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accell
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58ddf50]"></a>CharCbr</STRONG> (ARM, 388 bytes, Stack size 24 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CharCbr &rArr; LsBars
</UL>
<BR>[Calls]<UL><LI><a href="#[58de298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LsBars
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codabar
</UL>

<P><STRONG><a name="[58ddf14]"></a>AnotherCodabar</STRONG> (ARM, 200 bytes, Stack size 36 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AnotherCodabar
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codabar
</UL>

<P><STRONG><a name="[58dded8]"></a>FastChar128</STRONG> (ARM, 532 bytes, Stack size 48 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FastChar128
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code128
</UL>

<P><STRONG><a name="[58dde9c]"></a>Fnc1</STRONG> (ARM, 236 bytes, Stack size 16 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Fnc1
</UL>
<BR>[Called By]<UL><LI><a href="#[58dde60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Intrpt128
</UL>

<P><STRONG><a name="[58dde60]"></a>Intrpt128</STRONG> (ARM, 1568 bytes, Stack size 56 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Intrpt128 &rArr; Fnc1
</UL>
<BR>[Calls]<UL><LI><a href="#[58dde9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fnc1
<LI><a href="#[58de34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextMessageSegment
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code128
</UL>

<P><STRONG><a name="[58dde24]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rapidscan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rapidscan.o(.text)
</UL>
<P><STRONG><a name="[58ddde8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rapidscan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rapidscan.o(.text)
</UL>
<P><STRONG><a name="[58dddac]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rapidscan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rapidscan.o(.text)
</UL>
<P><STRONG><a name="[58ddd70]"></a>Code128</STRONG> (ARM, 2684 bytes, Stack size 48 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Code128 &rArr; Intrpt128 &rArr; Fnc1
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58dde60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Intrpt128
<LI><a href="#[58dded8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastChar128
<LI><a href="#[58de3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accell
<LI><a href="#[58de400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TcToPnt
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58ddd34]"></a>CharUPC</STRONG> (ARM, 1064 bytes, Stack size 80 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastUpcEan
<LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
<LI><a href="#[58ddcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendRvs
<LI><a href="#[58ddcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendFwd
</UL>

<P><STRONG><a name="[58ddcf8]"></a>AddendFwd</STRONG> (ARM, 852 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AddendFwd &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkAddn
<LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
<LI><a href="#[58ddd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharUPC
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryAddend
</UL>

<P><STRONG><a name="[58ddcbc]"></a>AddendRvs</STRONG> (ARM, 760 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkAddn
<LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
<LI><a href="#[58ddd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharUPC
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryAddend
</UL>

<P><STRONG><a name="[58ddc80]"></a>TryAddend</STRONG> (ARM, 640 bytes, Stack size 32 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58ddcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendRvs
<LI><a href="#[58ddcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendFwd
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58ddbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUpcEan
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
</UL>

<P><STRONG><a name="[58ddc44]"></a>UpcE</STRONG> (ARM, 2880 bytes, Stack size 48 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = UpcE &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
<LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58dd8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete
<LI><a href="#[58ddc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryAddend
<LI><a href="#[58ddd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharUPC
<LI><a href="#[58de2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSum31
<LI><a href="#[58de388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert
<LI><a href="#[58de3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accell
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58ddc08]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rapidscan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rapidscan.o(.text)
</UL>
<P><STRONG><a name="[58ddbcc]"></a>ProcessUpcEan</STRONG> (ARM, 1380 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ProcessUpcEan &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete
<LI><a href="#[58ddc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryAddend
<LI><a href="#[58de2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSum31
<LI><a href="#[58de310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverse
<LI><a href="#[58de388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastUpcEan
</UL>

<P><STRONG><a name="[58ddb90]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rapidscan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rapidscan.o(.text)
</UL>
<P><STRONG><a name="[58ddb54]"></a>Energy</STRONG> (ARM, 224 bytes, Stack size 80 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Energy &rArr; SetRAIL
</UL>
<BR>[Calls]<UL><LI><a href="#[58de43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHEAD
<LI><a href="#[58de478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRAIL
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindLinearSymbol
</UL>

<P><STRONG><a name="[58ddb18]"></a>EnergyToo</STRONG> (ARM, 884 bytes, Stack size 136 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = EnergyToo &rArr; SetRAIL
</UL>
<BR>[Calls]<UL><LI><a href="#[58de43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHEAD
<LI><a href="#[58de478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRAIL
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindLinearSymbol
</UL>

<P><STRONG><a name="[58ddadc]"></a>FindEdges</STRONG> (ARM, 1304 bytes, Stack size 120 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = FindEdges
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutwardScan
<LI><a href="#[58ddaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastScan
</UL>

<P><STRONG><a name="[58ddaa0]"></a>FastScan</STRONG> (ARM, 1012 bytes, Stack size 104 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = FastScan &rArr; FindEdges
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle
<LI><a href="#[58dd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameA
<LI><a href="#[58ddadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindEdges
<LI><a href="#[58de43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHEAD
<LI><a href="#[58de478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRAIL
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastRead
</UL>

<P><STRONG><a name="[58dda64]"></a>RapidSetCorners</STRONG> (ARM, 280 bytes, Stack size 32 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RapidSetCorners &rArr; TcToPnt
</UL>
<BR>[Calls]<UL><LI><a href="#[58de400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TcToPnt
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dda28]"></a>FastDecode</STRONG> (ARM, 3108 bytes, Stack size 160 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = FastDecode &rArr; FastUpcEan &rArr; ProcessUpcEan &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoteIt
<LI><a href="#[58dd410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastUpcEan
<LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58dd4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codabar
<LI><a href="#[58dd53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int25
<LI><a href="#[58dd668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRssLimited
<LI><a href="#[58dd6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rss267
<LI><a href="#[58dd6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RssLimCheck
<LI><a href="#[58dd71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RssLimChk
<LI><a href="#[58dd758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRss14
<LI><a href="#[58dd848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMod
<LI><a href="#[58dda64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RapidSetCorners
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
<LI><a href="#[58ddd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code128
<LI><a href="#[58ddf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code39
<LI><a href="#[58de0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRssExp
<LI><a href="#[58de0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpretRssExp
<LI><a href="#[58de1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRss14
<LI><a href="#[58de25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearRss
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastRead
</UL>

<P><STRONG><a name="[58dd9ec]"></a>FindLinearSymbol</STRONG> (ARM, 1484 bytes, Stack size 192 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = FindLinearSymbol &rArr; EnergyToo &rArr; SetRAIL
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewEnergy
<LI><a href="#[58ddb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnergyToo
<LI><a href="#[58ddb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Energy
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastRead
</UL>

<P><STRONG><a name="[58dd9b0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rapidscan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rapidscan.o(.text)
</UL>
<P><STRONG><a name="[58dd974]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rapidscan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rapidscan.o(.text)
</UL>
<P><STRONG><a name="[58dd938]"></a>FrameA</STRONG> (ARM, 248 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrameA
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastScan
</UL>

<P><STRONG><a name="[58dd8fc]"></a>Delete</STRONG> (ARM, 56 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58dd4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codabar
<LI><a href="#[58ddbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUpcEan
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
<LI><a href="#[58ddf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code39
</UL>

<P><STRONG><a name="[58dd8c0]"></a>OpenMessageBuffer</STRONG> (ARM, 40 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58dd410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastUpcEan
<LI><a href="#[58dd44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ean8
<LI><a href="#[58dd4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codabar
<LI><a href="#[58dd668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRssLimited
<LI><a href="#[58dd758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRss14
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
<LI><a href="#[58ddd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code128
<LI><a href="#[58ddf8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code39
<LI><a href="#[58de040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I25Body
<LI><a href="#[58de0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpretRssExp
</UL>

<P><STRONG><a name="[58dd884]"></a>Angle</STRONG> (ARM, 256 bytes, Stack size 32 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Angle
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutwardScan
<LI><a href="#[58ddaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastScan
</UL>

<P><STRONG><a name="[58dd848]"></a>TMod</STRONG> (ARM, 60 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
<LI><a href="#[58ddc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpcE
<LI><a href="#[58ddcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendRvs
<LI><a href="#[58ddcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendFwd
<LI><a href="#[58ddd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharUPC
<LI><a href="#[58dded8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastChar128
<LI><a href="#[58de0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRssExp
<LI><a href="#[58de1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRss14
</UL>

<P><STRONG><a name="[58dd80c]"></a>WnPat</STRONG> (ARM, 132 bytes, Stack size 20 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WnPat
</UL>
<BR>[Called By]<UL><LI><a href="#[58de040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I25Body
</UL>

<P><STRONG><a name="[58dd7d0]"></a>Fndr14</STRONG> (ARM, 152 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58de1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRss14
</UL>

<P><STRONG><a name="[58dd794]"></a>Rss14Check</STRONG> (ARM, 76 bytes, Stack size 4 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Rss14Check
</UL>
<BR>[Called By]<UL><LI><a href="#[58de1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRss14
</UL>

<P><STRONG><a name="[58dd758]"></a>CheckRss14</STRONG> (ARM, 748 bytes, Stack size 56 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CheckRss14
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58de25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearRss
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd71c]"></a>RssLimChk</STRONG> (ARM, 92 bytes, Stack size 16 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RssLimChk &rArr; nkDcd
</UL>
<BR>[Calls]<UL><LI><a href="#[58de220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nkDcd
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd6e0]"></a>RssLimCheck</STRONG> (ARM, 88 bytes, Stack size 4 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RssLimCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd6a4]"></a>Rss267</STRONG> (ARM, 124 bytes, Stack size 16 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Rss267 &rArr; nkDcd
</UL>
<BR>[Calls]<UL><LI><a href="#[58de220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nkDcd
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd668]"></a>CheckRssLimited</STRONG> (ARM, 600 bytes, Stack size 56 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CheckRssLimited
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58de25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearRss
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd62c]"></a>StringStuff</STRONG> (ARM, 56 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58de0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterpretRssExp
<LI><a href="#[58de130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPData
<LI><a href="#[58de16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrimaryID
</UL>

<P><STRONG><a name="[58dd5f0]"></a>Rss174</STRONG> (ARM, 136 bytes, Stack size 16 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Rss174 &rArr; nkDcd
</UL>
<BR>[Calls]<UL><LI><a href="#[58de220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nkDcd
</UL>
<BR>[Called By]<UL><LI><a href="#[58de0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRssExp
</UL>

<P><STRONG><a name="[58dd5b4]"></a>FndrExp</STRONG> (ARM, 116 bytes, Stack size 0 bytes, rapidscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58de0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EoeRssExp
</UL>

<P><STRONG><a name="[58dd578]"></a>I25Mod</STRONG> (ARM, 144 bytes, Stack size 12 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I25Mod
</UL>
<BR>[Called By]<UL><LI><a href="#[58de040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I25Body
</UL>

<P><STRONG><a name="[58dd53c]"></a>Int25</STRONG> (ARM, 964 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Int25 &rArr; I25Body &rArr; Accell
</UL>
<BR>[Calls]<UL><LI><a href="#[58de040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I25Body
<LI><a href="#[58de2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSum31
<LI><a href="#[58de310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverse
<LI><a href="#[58de388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd500]"></a>TryBiasC39</STRONG> (ARM, 836 bytes, Stack size 72 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TryBiasC39
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char39
</UL>

<P><STRONG><a name="[58dd4c4]"></a>Codabar</STRONG> (ARM, 916 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Codabar &rArr; CharCbr &rArr; LsBars
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58dd8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete
<LI><a href="#[58ddf14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnotherCodabar
<LI><a href="#[58ddf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharCbr
<LI><a href="#[58de310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverse
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd488]"></a>ChkAddn</STRONG> (ARM, 200 bytes, Stack size 16 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChkAddn
</UL>
<BR>[Called By]<UL><LI><a href="#[58ddcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendRvs
<LI><a href="#[58ddcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddendFwd
</UL>

<P><STRONG><a name="[58dd44c]"></a>Ean8</STRONG> (ARM, 948 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Ean8 &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58ddc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryAddend
<LI><a href="#[58ddd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharUPC
<LI><a href="#[58de2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSum31
<LI><a href="#[58de310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverse
<LI><a href="#[58de388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert
<LI><a href="#[58de3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accell
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd410]"></a>FastUpcEan</STRONG> (ARM, 516 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = FastUpcEan &rArr; ProcessUpcEan &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMessageBuffer
<LI><a href="#[58ddbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessUpcEan
<LI><a href="#[58ddd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharUPC
<LI><a href="#[58de3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accell
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd3d4]"></a>NewEnergy</STRONG> (ARM, 248 bytes, Stack size 80 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = NewEnergy &rArr; SetRAIL
</UL>
<BR>[Calls]<UL><LI><a href="#[58de43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHEAD
<LI><a href="#[58de478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRAIL
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindLinearSymbol
</UL>

<P><STRONG><a name="[58dd398]"></a>VoteIt</STRONG> (ARM, 624 bytes, Stack size 40 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VoteIt
</UL>
<BR>[Called By]<UL><LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
</UL>

<P><STRONG><a name="[58dd35c]"></a>FastRead</STRONG> (ARM, 600 bytes, Stack size 56 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = FastRead &rArr; FastDecode &rArr; FastUpcEan &rArr; ProcessUpcEan &rArr; TryAddend &rArr; AddendRvs &rArr; CharUPC
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutwardScan
<LI><a href="#[58dd9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindLinearSymbol
<LI><a href="#[58dda28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastDecode
<LI><a href="#[58ddaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastScan
</UL>
<BR>[Called By]<UL><LI><a href="#[5760624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_Decode
</UL>

<P><STRONG><a name="[58dd320]"></a>OutwardScan</STRONG> (ARM, 1596 bytes, Stack size 152 bytes, rapidscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = OutwardScan &rArr; FindEdges
</UL>
<BR>[Calls]<UL><LI><a href="#[58dd884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle
<LI><a href="#[58ddadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindEdges
<LI><a href="#[58de43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHEAD
<LI><a href="#[58de478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRAIL
<LI><a href="#[58de4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendA
</UL>
<BR>[Called By]<UL><LI><a href="#[58dd35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastRead
</UL>

<P><STRONG><a name="[58dcdbc]"></a>flush_pending</STRONG> (ARM, 136 bytes, Stack size 16 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flush_pending
</UL>
<BR>[Called By]<UL><LI><a href="#[575f3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate
<LI><a href="#[58dcc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_slow
<LI><a href="#[58dcccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_fast
<LI><a href="#[58dcd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_stored
</UL>

<P><STRONG><a name="[58dcd80]"></a>longest_match</STRONG> (ARM, 412 bytes, Stack size 48 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = longest_match
</UL>
<BR>[Called By]<UL><LI><a href="#[58dcc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_slow
<LI><a href="#[58dcccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_fast
</UL>

<P><STRONG><a name="[58dcd44]"></a>fill_window</STRONG> (ARM, 464 bytes, Stack size 32 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = fill_window &rArr; adler32
</UL>
<BR>[Calls]<UL><LI><a href="#[58dc0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adler32
</UL>
<BR>[Called By]<UL><LI><a href="#[58dcc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_slow
<LI><a href="#[58dcccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_fast
<LI><a href="#[58dcd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate_stored
</UL>

<P><STRONG><a name="[58dcd08]"></a>deflate_stored</STRONG> (ARM, 444 bytes, Stack size 16 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = deflate_stored &rArr; _tr_flush_block &rArr; send_all_trees &rArr; send_tree
</UL>
<BR>[Calls]<UL><LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
<LI><a href="#[58dcd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_window
<LI><a href="#[58dcdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deflate.o(.constdata)
</UL>
<P><STRONG><a name="[58dcccc]"></a>deflate_fast</STRONG> (ARM, 980 bytes, Stack size 32 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = deflate_fast &rArr; _tr_flush_block &rArr; send_all_trees &rArr; send_tree
</UL>
<BR>[Calls]<UL><LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
<LI><a href="#[58dcd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_window
<LI><a href="#[58dcd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longest_match
<LI><a href="#[58dcdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deflate.o(.constdata)
</UL>
<P><STRONG><a name="[58dcc90]"></a>deflate_slow</STRONG> (ARM, 1240 bytes, Stack size 40 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = deflate_slow &rArr; _tr_flush_block &rArr; send_all_trees &rArr; send_tree
</UL>
<BR>[Calls]<UL><LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
<LI><a href="#[58dcd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_window
<LI><a href="#[58dcd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longest_match
<LI><a href="#[58dcdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deflate.o(.constdata)
</UL>
<P><STRONG><a name="[58dcc54]"></a>lm_init</STRONG> (ARM, 144 bytes, Stack size 16 bytes, deflate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflateReset
</UL>

<P><STRONG><a name="[58dcc18]"></a>putShortMSB</STRONG> (ARM, 48 bytes, Stack size 0 bytes, deflate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[575f3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deflate
</UL>

<P><STRONG><a name="[58d9fcc]"></a>add_huff_table</STRONG> (ARM, 160 bytes, Stack size 24 bytes, JCPARAM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = add_huff_table &rArr; jpeg_alloc_huff_table
</UL>
<BR>[Calls]<UL><LI><a href="#[58d9c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_huff_table
</UL>
<BR>[Called By]<UL><LI><a href="#[575f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_set_defaults
</UL>

<P><STRONG><a name="[58d9f90]"></a>fill_dc_scans</STRONG> (ARM, 88 bytes, Stack size 16 bytes, JCPARAM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_scans
</UL>
<BR>[Called By]<UL><LI><a href="#[58d9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_simple_progression
</UL>

<P><STRONG><a name="[58d9f54]"></a>fill_a_scan</STRONG> (ARM, 36 bytes, Stack size 8 bytes, JCPARAM.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_simple_progression
</UL>

<P><STRONG><a name="[58d9f18]"></a>fill_scans</STRONG> (ARM, 48 bytes, Stack size 12 bytes, JCPARAM.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_simple_progression
<LI><a href="#[58d9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_dc_scans
</UL>

<P><STRONG><a name="[58d98c4]"></a>init_destination</STRONG> (ARM, 48 bytes, Stack size 8 bytes, Jdatadst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_destination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Jdatadst.o(.text)
</UL>
<P><STRONG><a name="[58d9888]"></a>empty_output_buffer</STRONG> (ARM, 152 bytes, Stack size 16 bytes, Jdatadst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = empty_output_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Jdatadst.o(.text)
</UL>
<P><STRONG><a name="[58d984c]"></a>term_destination</STRONG> (ARM, 216 bytes, Stack size 24 bytes, Jdatadst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = term_destination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Jdatadst.o(.text)
</UL>
<P><STRONG><a name="[58d8fdc]"></a>error_exit</STRONG> (ARM, 44 bytes, Stack size 8 bytes, JERROR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = error_exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> JERROR.o(.text)
</UL>
<P><STRONG><a name="[58d8fa0]"></a>output_message</STRONG> (ARM, 32 bytes, Stack size 208 bytes, JERROR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = output_message
</UL>
<BR>[Address Reference Count : 1]<UL><LI> JERROR.o(.text)
</UL>
<P><STRONG><a name="[58d8f64]"></a>emit_message</STRONG> (ARM, 80 bytes, Stack size 8 bytes, JERROR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = emit_message
</UL>
<BR>[Address Reference Count : 1]<UL><LI> JERROR.o(.text)
</UL>
<P><STRONG><a name="[58d8f28]"></a>format_message</STRONG> (ARM, 244 bytes, Stack size 40 bytes, JERROR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = format_message
</UL>
<BR>[Address Reference Count : 1]<UL><LI> JERROR.o(.text)
</UL>
<P><STRONG><a name="[58d8eec]"></a>reset_error_mgr</STRONG> (ARM, 24 bytes, Stack size 0 bytes, JERROR.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> JERROR.o(.text)
</UL>
<P><STRONG><a name="[58d8a00]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, MonoColorImplementation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> MonoColorImplementation.o(.text)
</UL>
<P><STRONG><a name="[58d7ac4]"></a>ocrfi_allocate_temp_storage</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S120.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S120.o(.data)
</UL>
<P><STRONG><a name="[58d7a88]"></a>ocrfi_process</STRONG> (ARM, 820 bytes, Stack size 40 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 47360 + Unknown Stack Size
<LI>Call Chain = ocrfi_process &rArr; ocrfi_find &rArr; SymLoc000A0D9D &rArr; SymLoc000960C3 &rArr; SymLoc0009E332 &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d6ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_find
<LI><a href="#[58d7074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011C132
<LI><a href="#[58d70ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00116963
<LI><a href="#[58d72cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D117A
<LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[58d7344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3D2B
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[58d7a4c]"></a>ocrfi_setup_process</STRONG> (ARM, 488 bytes, Stack size 112 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ocrfi_setup_process &rArr; SymLoc000D117A
</UL>
<BR>[Calls]<UL><LI><a href="#[58d72cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D117A
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[58d7a10]"></a>ocrfi_iterative_find_and_decode</STRONG> (ARM, 468 bytes, Stack size 32 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 47392 + Unknown Stack Size
<LI>Call Chain = ocrfi_iterative_find_and_decode &rArr; ocrfi_process &rArr; ocrfi_find &rArr; SymLoc000A0D9D &rArr; SymLoc000960C3 &rArr; SymLoc0009E332 &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_setup_process
<LI><a href="#[58d7a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S120.o(.data)
</UL>
<P><STRONG><a name="[58d79d4]"></a>ocrfi_free_temp_storage</STRONG> (ARM, 4 bytes, Stack size 0 bytes, S120.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S120.o(.data)
</UL>
<P><STRONG><a name="[58d7998]"></a>SymLoc0007ADF4</STRONG> (ARM, 1084 bytes, Stack size 74392 bytes, S120.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011C132
<LI><a href="#[58d70ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00116963
<LI><a href="#[58d72cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D117A
<LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[58d7344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3D2B
<LI><a href="#[58d7650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00076C36
<LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009B887
</UL>

<P><STRONG><a name="[58d795c]"></a>SymLoc000CA325</STRONG> (ARM, 1884 bytes, Stack size 80 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SymLoc000CA325
</UL>
<BR>[Called By]<UL><LI><a href="#[575c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F8942
<LI><a href="#[58d78a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001194A7
</UL>

<P><STRONG><a name="[58d7920]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S120.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S120.o(.text)
</UL>
<P><STRONG><a name="[58d78e4]"></a>SymLoc000D838B</STRONG> (ARM, 292 bytes, Stack size 24 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SymLoc000D838B
</UL>
<BR>[Called By]<UL><LI><a href="#[58d78a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001194A7
</UL>

<P><STRONG><a name="[58d78a8]"></a>SymLoc001194A7</STRONG> (ARM, 2888 bytes, Stack size 5104 bytes, S120.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6976 + Unknown Stack Size
<LI>Call Chain = SymLoc001194A7 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d78e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D838B
<LI><a href="#[58d795c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CA325
</UL>
<BR>[Called By]<UL><LI><a href="#[575c808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F8942
</UL>

<P><STRONG><a name="[58d4e00]"></a>emit_dqt</STRONG> (ARM, 232 bytes, Stack size 32 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = emit_dqt &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_tables_only
<LI><a href="#[58d4c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_frame_header
</UL>

<P><STRONG><a name="[58d4dc4]"></a>emit_dht</STRONG> (ARM, 228 bytes, Stack size 24 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = emit_dht &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_tables_only
<LI><a href="#[58d4c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_scan_header
</UL>

<P><STRONG><a name="[58d4d88]"></a>emit_sof</STRONG> (ARM, 220 bytes, Stack size 16 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = emit_sof &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_frame_header
</UL>

<P><STRONG><a name="[58d4d4c]"></a>write_marker_header</STRONG> (ARM, 88 bytes, Stack size 16 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = write_marker_header &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmarker.o(.text)
</UL>
<P><STRONG><a name="[58d4d10]"></a>write_marker_byte</STRONG> (ARM, 4 bytes, Stack size 0 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = write_marker_byte &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmarker.o(.text)
</UL>
<P><STRONG><a name="[58d4cd4]"></a>write_file_header</STRONG> (ARM, 68 bytes, Stack size 16 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = write_file_header &rArr; emit_adobe_app14 &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_adobe_app14
<LI><a href="#[58d4ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_jfif_app0
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmarker.o(.text)
</UL>
<P><STRONG><a name="[58d4c98]"></a>write_frame_header</STRONG> (ARM, 208 bytes, Stack size 24 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = write_frame_header &rArr; emit_dqt &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sof
<LI><a href="#[58d4e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dqt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmarker.o(.text)
</UL>
<P><STRONG><a name="[58d4c5c]"></a>write_scan_header</STRONG> (ARM, 216 bytes, Stack size 24 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = write_scan_header &rArr; emit_dht &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sos
<LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dht
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmarker.o(.text)
</UL>
<P><STRONG><a name="[58d4c20]"></a>write_file_trailer</STRONG> (ARM, 8 bytes, Stack size 0 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_file_trailer &rArr; emit_marker &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmarker.o(.text)
</UL>
<P><STRONG><a name="[58d4be4]"></a>write_tables_only</STRONG> (ARM, 152 bytes, Stack size 16 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = write_tables_only &rArr; emit_dqt &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dht
<LI><a href="#[58d4e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dqt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmarker.o(.text)
</UL>
<P><STRONG><a name="[58d4ba8]"></a>emit_byte</STRONG> (ARM, 96 bytes, Stack size 8 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_adobe_app14
<LI><a href="#[58d4ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_jfif_app0
<LI><a href="#[58d4af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sos
<LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_marker_byte
<LI><a href="#[58d4d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sof
<LI><a href="#[58d4dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dht
<LI><a href="#[58d4e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dqt
</UL>

<P><STRONG><a name="[58d4b6c]"></a>emit_marker</STRONG> (ARM, 36 bytes, Stack size 16 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = emit_marker &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_adobe_app14
<LI><a href="#[58d4ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_jfif_app0
<LI><a href="#[58d4af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sos
<LI><a href="#[58d4be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_tables_only
<LI><a href="#[58d4c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file_trailer
<LI><a href="#[58d4c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_scan_header
<LI><a href="#[58d4cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file_header
<LI><a href="#[58d4d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_marker_header
<LI><a href="#[58d4d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sof
<LI><a href="#[58d4dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dht
<LI><a href="#[58d4e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dqt
</UL>

<P><STRONG><a name="[58d4b30]"></a>emit_2bytes</STRONG> (ARM, 44 bytes, Stack size 16 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_adobe_app14
<LI><a href="#[58d4ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_jfif_app0
<LI><a href="#[58d4af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sos
<LI><a href="#[58d4c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_scan_header
<LI><a href="#[58d4d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_marker_header
<LI><a href="#[58d4d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_sof
<LI><a href="#[58d4dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dht
<LI><a href="#[58d4e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_dqt
</UL>

<P><STRONG><a name="[58d4af4]"></a>emit_sos</STRONG> (ARM, 216 bytes, Stack size 16 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = emit_sos &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_scan_header
</UL>

<P><STRONG><a name="[58d4ab8]"></a>emit_jfif_app0</STRONG> (ARM, 176 bytes, Stack size 8 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = emit_jfif_app0 &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file_header
</UL>

<P><STRONG><a name="[58d4a7c]"></a>emit_adobe_app14</STRONG> (ARM, 164 bytes, Stack size 8 bytes, jcmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = emit_adobe_app14 &rArr; emit_2bytes &rArr; emit_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_2bytes
<LI><a href="#[58d4b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_marker
<LI><a href="#[58d4ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emit_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_file_header
</UL>

<P><STRONG><a name="[58d4284]"></a>alloc_small</STRONG> (ARM, 320 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = alloc_small
</UL>
<BR>[Calls]<UL><LI><a href="#[58d3f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_of_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_virt_barray
<LI><a href="#[58d4194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_virt_sarray
<LI><a href="#[58d41d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
<LI><a href="#[58d420c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d4248]"></a>alloc_large</STRONG> (ARM, 172 bytes, Stack size 24 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = alloc_large
</UL>
<BR>[Calls]<UL><LI><a href="#[58d3f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_of_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[58d41d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
<LI><a href="#[58d420c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d420c]"></a>alloc_sarray</STRONG> (ARM, 192 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = alloc_sarray &rArr; alloc_small
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
<LI><a href="#[58d4284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Called By]<UL><LI><a href="#[58d411c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d41d0]"></a>alloc_barray</STRONG> (ARM, 196 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = alloc_barray &rArr; alloc_small
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
<LI><a href="#[58d4284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Called By]<UL><LI><a href="#[58d411c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d4194]"></a>request_virt_sarray</STRONG> (ARM, 132 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = request_virt_sarray &rArr; alloc_small
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d4158]"></a>request_virt_barray</STRONG> (ARM, 132 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = request_virt_barray &rArr; alloc_small
</UL>
<BR>[Calls]<UL><LI><a href="#[58d4284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d411c]"></a>realize_virt_arrays</STRONG> (ARM, 488 bytes, Stack size 40 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = realize_virt_arrays &rArr; alloc_barray &rArr; alloc_small
</UL>
<BR>[Calls]<UL><LI><a href="#[58d41d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
<LI><a href="#[58d420c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d40e0]"></a>do_sarray_io</STRONG> (ARM, 172 bytes, Stack size 40 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = do_sarray_io
</UL>
<BR>[Called By]<UL><LI><a href="#[58d4068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_sarray
</UL>

<P><STRONG><a name="[58d40a4]"></a>do_barray_io</STRONG> (ARM, 176 bytes, Stack size 40 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = do_barray_io
</UL>
<BR>[Called By]<UL><LI><a href="#[58d402c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_barray
</UL>

<P><STRONG><a name="[58d4068]"></a>access_virt_sarray</STRONG> (ARM, 428 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = access_virt_sarray &rArr; do_sarray_io
</UL>
<BR>[Calls]<UL><LI><a href="#[58d40e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_sarray_io
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d402c]"></a>access_virt_barray</STRONG> (ARM, 432 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = access_virt_barray &rArr; do_barray_io
</UL>
<BR>[Calls]<UL><LI><a href="#[58d40a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_barray_io
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d3ff0]"></a>free_pool</STRONG> (ARM, 312 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = free_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[58d3fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_destruct
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d3fb4]"></a>self_destruct</STRONG> (ARM, 68 bytes, Stack size 16 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = self_destruct &rArr; free_pool
</UL>
<BR>[Calls]<UL><LI><a href="#[58d3ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_pool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[58d3f78]"></a>out_of_memory</STRONG> (ARM, 108 bytes, Stack size 0 bytes, jmemmgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d4248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
<LI><a href="#[58d4284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>

<P><STRONG><a name="[58d3294]"></a>init_block</STRONG> (ARM, 124 bytes, Stack size 0 bytes, trees.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58dc150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_init
<LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
</UL>

<P><STRONG><a name="[58d3258]"></a>pqdownheap</STRONG> (ARM, 212 bytes, Stack size 20 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pqdownheap
</UL>
<BR>[Called By]<UL><LI><a href="#[58d31e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_tree
</UL>

<P><STRONG><a name="[58d321c]"></a>gen_bitlen</STRONG> (ARM, 464 bytes, Stack size 40 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gen_bitlen
</UL>
<BR>[Called By]<UL><LI><a href="#[58d31e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_tree
</UL>

<P><STRONG><a name="[58d31e0]"></a>build_tree</STRONG> (ARM, 552 bytes, Stack size 32 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = build_tree &rArr; gen_codes
</UL>
<BR>[Calls]<UL><LI><a href="#[58d303c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_codes
<LI><a href="#[58d321c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_bitlen
<LI><a href="#[58d3258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pqdownheap
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
</UL>

<P><STRONG><a name="[58d31a4]"></a>scan_tree</STRONG> (ARM, 252 bytes, Stack size 24 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = scan_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
</UL>

<P><STRONG><a name="[58d3168]"></a>send_tree</STRONG> (ARM, 1244 bytes, Stack size 48 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = send_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[58d312c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_trees
</UL>

<P><STRONG><a name="[58d312c]"></a>send_all_trees</STRONG> (ARM, 580 bytes, Stack size 32 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = send_all_trees &rArr; send_tree
</UL>
<BR>[Calls]<UL><LI><a href="#[58d3168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
</UL>

<P><STRONG><a name="[58d30f0]"></a>bi_windup</STRONG> (ARM, 140 bytes, Stack size 4 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = bi_windup
</UL>
<BR>[Called By]<UL><LI><a href="#[58d3000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_block
<LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
</UL>

<P><STRONG><a name="[58d30b4]"></a>bi_flush</STRONG> (ARM, 148 bytes, Stack size 4 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = bi_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_align
</UL>

<P><STRONG><a name="[58d3078]"></a>compress_block</STRONG> (ARM, 956 bytes, Stack size 48 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = compress_block
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_flush_block
</UL>

<P><STRONG><a name="[58d303c]"></a>gen_codes</STRONG> (ARM, 160 bytes, Stack size 48 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gen_codes
</UL>
<BR>[Called By]<UL><LI><a href="#[58d31e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_tree
</UL>

<P><STRONG><a name="[58d3000]"></a>copy_block</STRONG> (ARM, 180 bytes, Stack size 24 bytes, trees.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = copy_block &rArr; bi_windup
</UL>
<BR>[Calls]<UL><LI><a href="#[58d30f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bi_windup
</UL>
<BR>[Called By]<UL><LI><a href="#[58dc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tr_stored_block
</UL>

<P><STRONG><a name="[58d1548]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S020.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S020.o(.text)
</UL>
<P><STRONG><a name="[58d150c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S020.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S020.o(.text)
</UL>
<P><STRONG><a name="[58d14d0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S020.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S020.o(.text)
</UL>
<P><STRONG><a name="[58d1494]"></a>AAAAAAAAO</STRONG> (ARM, 940 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d13a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAL
<LI><a href="#[58d13e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAM
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01578497
</UL>

<P><STRONG><a name="[58d1458]"></a>AAAAAAAAK</STRONG> (ARM, 344 bytes, Stack size 40 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d0bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAV
</UL>

<P><STRONG><a name="[58d141c]"></a>SymLoc000F2FCA</STRONG> (ARM, 340 bytes, Stack size 72 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[58d13e0]"></a>AAAAAAAAM</STRONG> (ARM, 220 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d1494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAO
</UL>

<P><STRONG><a name="[58d13a4]"></a>AAAAAAAAL</STRONG> (ARM, 116 bytes, Stack size 16 bytes, S020.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58d1494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAO
</UL>

<P><STRONG><a name="[596dc80]"></a>dmfi_free_temp_storage</STRONG> (ARM, 100 bytes, Stack size 16 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = dmfi_free_temp_storage &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[596dc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_allocate_temp_storage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S031.o(.data)
</UL>
<P><STRONG><a name="[596dc44]"></a>dmfi_allocate_temp_storage</STRONG> (ARM, 1468 bytes, Stack size 248 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2136 + Unknown Stack Size
<LI>Call Chain = dmfi_allocate_temp_storage &rArr; dmfi_free_temp_storage &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
<LI><a href="#[596dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_free_temp_storage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S031.o(.data)
</UL>
<P><STRONG><a name="[596dc08]"></a>dmfi_ell_test</STRONG> (ARM, 1692 bytes, Stack size 560 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = dmfi_ell_test &rArr; SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
<LI><a href="#[596d884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAM
</UL>
<BR>[Called By]<UL><LI><a href="#[596dadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_hv_segments
<LI><a href="#[596db18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_vh_segments
</UL>

<P><STRONG><a name="[596dbcc]"></a>dmfi_intersect</STRONG> (ARM, 268 bytes, Stack size 56 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dmfi_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[596dadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_hv_segments
<LI><a href="#[596db18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_vh_segments
<LI><a href="#[596db54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_legs
</UL>

<P><STRONG><a name="[596db90]"></a>dmfi_refine_single_leg</STRONG> (ARM, 332 bytes, Stack size 88 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = dmfi_refine_single_leg &rArr; SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[58d114c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01547567
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596d848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAN
</UL>
<BR>[Called By]<UL><LI><a href="#[596db54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_legs
</UL>

<P><STRONG><a name="[596db54]"></a>dmfi_refine_legs</STRONG> (ARM, 1532 bytes, Stack size 96 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = dmfi_refine_legs &rArr; dmfi_refine_single_leg &rArr; SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[596db90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_single_leg
<LI><a href="#[596dbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[596dadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_hv_segments
<LI><a href="#[596db18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_vh_segments
</UL>

<P><STRONG><a name="[596db18]"></a>dmfi_pair_vh_segments</STRONG> (ARM, 1612 bytes, Stack size 136 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = dmfi_pair_vh_segments &rArr; dmfi_ell_test &rArr; SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
<LI><a href="#[596db54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_legs
<LI><a href="#[596dbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_intersect
<LI><a href="#[596dc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_ell_test
</UL>
<BR>[Called By]<UL><LI><a href="#[596d8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596dadc]"></a>dmfi_pair_hv_segments</STRONG> (ARM, 1600 bytes, Stack size 136 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = dmfi_pair_hv_segments &rArr; dmfi_ell_test &rArr; SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
<LI><a href="#[596db54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_refine_legs
<LI><a href="#[596dbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_intersect
<LI><a href="#[596dc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_ell_test
</UL>
<BR>[Called By]<UL><LI><a href="#[596d8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596daa0]"></a>dmfi_find_vsegments</STRONG> (ARM, 632 bytes, Stack size 200 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = dmfi_find_vsegments &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_vbisect
</UL>
<BR>[Called By]<UL><LI><a href="#[596da64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_process_vscanlg
</UL>

<P><STRONG><a name="[596da64]"></a>dmfi_process_vscanlg</STRONG> (ARM, 568 bytes, Stack size 120 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = dmfi_process_vscanlg &rArr; dmfi_find_vsegments &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[596d488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00103BA2
<LI><a href="#[596daa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_vsegments
</UL>
<BR>[Called By]<UL><LI><a href="#[596d8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596da28]"></a>dmfi_find_hsegments</STRONG> (ARM, 704 bytes, Stack size 192 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = dmfi_find_hsegments &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_hbisect
</UL>
<BR>[Called By]<UL><LI><a href="#[596d9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_process_hscanlg
</UL>

<P><STRONG><a name="[596d9ec]"></a>dmfi_process_hscanlg</STRONG> (ARM, 536 bytes, Stack size 120 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = dmfi_process_hscanlg &rArr; dmfi_find_hsegments &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[596d6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDpost_row_indicator_reshape
<LI><a href="#[596da28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_hsegments
</UL>
<BR>[Called By]<UL><LI><a href="#[596d8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596d9b0]"></a>dmfi_find_and_decode</STRONG> (ARM, 96 bytes, Stack size 8 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 868<LI>Call Chain = dmfi_find_and_decode &rArr; dmfi_iterative_find_and_decode &rArr; dmfi_pair_hv_segments &rArr; dmfi_ell_test &rArr; SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596d8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_iterative_find_and_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S031.o(.data)
</UL>
<P><STRONG><a name="[596d974]"></a>dmfi_vbisect</STRONG> (ARM, 156 bytes, Stack size 40 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = dmfi_vbisect &rArr; SyMbOl04829463 &rArr;  SyMbOl04829463 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
</UL>
<BR>[Called By]<UL><LI><a href="#[596daa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_vsegments
</UL>

<P><STRONG><a name="[596d938]"></a>dmfi_hbisect</STRONG> (ARM, 156 bytes, Stack size 40 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = dmfi_hbisect &rArr; SyMbOl04673917
</UL>
<BR>[Calls]<UL><LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
</UL>
<BR>[Called By]<UL><LI><a href="#[596da28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_hsegments
</UL>

<P><STRONG><a name="[596d8fc]"></a>dmfi_iterative_find_and_decode</STRONG> (ARM, 872 bytes, Stack size 48 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = dmfi_iterative_find_and_decode &rArr; dmfi_pair_hv_segments &rArr; dmfi_ell_test &rArr; SyMbOl04457054 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[596d8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_hash_vqueue
<LI><a href="#[596d9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_process_hscanlg
<LI><a href="#[596da64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_process_vscanlg
<LI><a href="#[596dadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_hv_segments
<LI><a href="#[596db18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_pair_vh_segments
</UL>
<BR>[Called By]<UL><LI><a href="#[596d9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_find_and_decode
</UL>

<P><STRONG><a name="[596d8c0]"></a>dmfi_hash_vqueue</STRONG> (ARM, 108 bytes, Stack size 8 bytes, S031.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dmfi_hash_vqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[596d8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596d26c]"></a>SyMbOl03065151</STRONG> (ARM, 904 bytes, Stack size 20520 bytes, S034.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>
<BR>[Called By]<UL><LI><a href="#[596d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl02482439
</UL>

<P><STRONG><a name="[596c7e0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S037.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S037.o(.text)
</UL>
<P><STRONG><a name="[596c7a4]"></a>SyMbOl04860167</STRONG> (ARM, 132 bytes, Stack size 8 bytes, S037.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyMbOl04860167
</UL>
<BR>[Called By]<UL><LI><a href="#[58d8118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03572864
</UL>

<P><STRONG><a name="[596c768]"></a>SymLoc000002e0Lc620x44</STRONG> (ARM, 68 bytes, Stack size 0 bytes, S037.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d8118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03572864
<LI><a href="#[596c63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReedSolomon
<LI><a href="#[596c678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001236DB
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01696647
</UL>

<P><STRONG><a name="[596c72c]"></a>SyMbOl01696647</STRONG> (ARM, 724 bytes, Stack size 33080 bytes, S037.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000002e0Lc620x44
</UL>
<BR>[Called By]<UL><LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
</UL>

<P><STRONG><a name="[596c2f4]"></a>hhpnfi_allocate_temp_storage</STRONG> (ARM, 648 bytes, Stack size 48 bytes, S040.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hhpnfi_allocate_temp_storage
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S040.o(.data)
</UL>
<P><STRONG><a name="[596c2b8]"></a>SymLoc000003e4Lc700x68</STRONG> (ARM, 92 bytes, Stack size 32 bytes, S040.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SymLoc000003e4Lc700x68
</UL>
<BR>[Called By]<UL><LI><a href="#[596c27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hhpnfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596c27c]"></a>hhpnfi_iterative_find_and_decode</STRONG> (ARM, 764 bytes, Stack size 304 bytes, S040.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8640<LI>Call Chain = hhpnfi_iterative_find_and_decode &rArr; hhpnfi_process_finds &rArr; SyMbOl04795839
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d1278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH000131D0
<LI><a href="#[596c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hhpnfi_process_finds
<LI><a href="#[596c2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000003e4Lc700x68
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S040.o(.data)
</UL>
<P><STRONG><a name="[596c240]"></a>hhpnfi_free_temp_storage</STRONG> (ARM, 4 bytes, Stack size 0 bytes, S040.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S040.o(.data)
</UL>
<P><STRONG><a name="[596c204]"></a>hhpnfi_process_finds</STRONG> (ARM, 1236 bytes, Stack size 8296 bytes, S040.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8336<LI>Call Chain = hhpnfi_process_finds &rArr; SyMbOl04795839
</UL>
<BR>[Calls]<UL><LI><a href="#[596c114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04795839
</UL>
<BR>[Called By]<UL><LI><a href="#[596c27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hhpnfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596be80]"></a>AAAAAAAAP</STRONG> (ARM, 568 bytes, Stack size 80 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AAAAAAAAP
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>

<P><STRONG><a name="[596be44]"></a>ia_gausinc_check_fxy</STRONG> (ARM, 120 bytes, Stack size 0 bytes, S041.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
<LI><a href="#[596b7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAB
</UL>

<P><STRONG><a name="[596be08]"></a>SyMbOl04526112</STRONG> (ARM, 220 bytes, Stack size 36 bytes, S041.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SyMbOl04526112
</UL>
<BR>[Called By]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
</UL>

<P><STRONG><a name="[596af80]"></a>SyMbOl05210141</STRONG> (ARM, 120 bytes, Stack size 24 bytes, S044.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896 + Unknown Stack Size
<LI>Call Chain = SyMbOl05210141 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[596af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05090902
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S044.o(.data)
</UL>
<P><STRONG><a name="[596af44]"></a>SyMbOl05090902</STRONG> (ARM, 768 bytes, Stack size 128 bytes, S044.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024 + Unknown Stack Size
<LI>Call Chain = SyMbOl05090902 &rArr; SyMbOl05210141 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[596af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05210141
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S044.o(.data)
</UL>
<P><STRONG><a name="[596af08]"></a>SyMbOl05342085</STRONG> (ARM, 272 bytes, Stack size 72 bytes, S044.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SyMbOl05342085
</UL>
<BR>[Called By]<UL><LI><a href="#[596aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05276961
</UL>

<P><STRONG><a name="[596aecc]"></a>SyMbOl05276961</STRONG> (ARM, 460 bytes, Stack size 40 bytes, S044.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SyMbOl05276961 &rArr; SyMbOl05342085
</UL>
<BR>[Calls]<UL><LI><a href="#[596ae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05220650
<LI><a href="#[596af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05342085
</UL>
<BR>[Called By]<UL><LI><a href="#[596ae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lafi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[596ae90]"></a>lafi_find_and_decode</STRONG> (ARM, 60 bytes, Stack size 8 bytes, S044.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lafi_find_and_decode &rArr; lafi_iterative_find_and_decode &rArr; SyMbOl05276961 &rArr; SyMbOl05342085
</UL>
<BR>[Calls]<UL><LI><a href="#[596ae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lafi_iterative_find_and_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S044.o(.data)
</UL>
<P><STRONG><a name="[596ae54]"></a>SyMbOl05220650</STRONG> (ARM, 168 bytes, Stack size 12 bytes, S044.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SyMbOl05220650
</UL>
<BR>[Called By]<UL><LI><a href="#[596acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001D8F8
<LI><a href="#[596aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05276961
</UL>

<P><STRONG><a name="[596ae18]"></a>lafi_iterative_find_and_decode</STRONG> (ARM, 844 bytes, Stack size 40 bytes, S044.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lafi_iterative_find_and_decode &rArr; SyMbOl05276961 &rArr; SyMbOl05342085
</UL>
<BR>[Calls]<UL><LI><a href="#[596aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl05276961
</UL>
<BR>[Called By]<UL><LI><a href="#[596ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lafi_find_and_decode
</UL>

<P><STRONG><a name="[596a74c]"></a>hzfi_find_and_decode</STRONG> (ARM, 56 bytes, Stack size 8 bytes, S055.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hzfi_find_and_decode &rArr; hzfi_iterative_find_and_decode &rArr; SymLoc001DC363
</UL>
<BR>[Calls]<UL><LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S055.o(.data)
</UL>
<P><STRONG><a name="[596a710]"></a>hzfi_iterative_find_and_decode</STRONG> (ARM, 876 bytes, Stack size 64 bytes, S055.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = hzfi_iterative_find_and_decode &rArr; SymLoc001DC363
</UL>
<BR>[Calls]<UL><LI><a href="#[596a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_envelope_min_max
<LI><a href="#[596a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_edge_finder_envelope_peak_detection
<LI><a href="#[596a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06542079
<LI><a href="#[596a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_horizontal_test
<LI><a href="#[596b8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001DC363
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
<LI><a href="#[596d6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDpost_row_indicator_reshape
</UL>
<BR>[Called By]<UL><LI><a href="#[596a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_find_and_decode
</UL>

<P><STRONG><a name="[596a6d4]"></a>hzfi_horizontal_test</STRONG> (ARM, 128 bytes, Stack size 32 bytes, S055.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hzfi_horizontal_test
</UL>
<BR>[Called By]<UL><LI><a href="#[596a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzfi_iterative_find_and_decode
</UL>

<P><STRONG><a name="[5969db0]"></a>SymLoc0004EECF</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S121.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S121.o(.text)
</UL>
<P><STRONG><a name="[5969d74]"></a>SymLoc00042EB0</STRONG> (ARM, 1172 bytes, Stack size 152 bytes, S121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SymLoc00042EB0
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Called By]<UL><LI><a href="#[58d768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00071949
<LI><a href="#[5969d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009E332
</UL>

<P><STRONG><a name="[5969d38]"></a>SymLoc0009E332</STRONG> (ARM, 856 bytes, Stack size 312 bytes, S121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 21104<LI>Call Chain = SymLoc0009E332 &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d7740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AE3D
<LI><a href="#[58d77b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D52C5
<LI><a href="#[5969c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A16C9
<LI><a href="#[5969d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00042EB0
<LI><a href="#[596bd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001C208
</UL>
<BR>[Called By]<UL><LI><a href="#[5969cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000960C3
</UL>

<P><STRONG><a name="[5969cfc]"></a>SymLoc000960C3</STRONG> (ARM, 1912 bytes, Stack size 5288 bytes, S121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 26392<LI>Call Chain = SymLoc000960C3 &rArr; SymLoc0009E332 &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AE3D
<LI><a href="#[5969b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000878DE
<LI><a href="#[5969d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009E332
</UL>
<BR>[Called By]<UL><LI><a href="#[5969cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A0D9D
</UL>

<P><STRONG><a name="[5969cc0]"></a>SymLoc000A0D9D</STRONG> (ARM, 1304 bytes, Stack size 20776 bytes, S121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 47168<LI>Call Chain = SymLoc000A0D9D &rArr; SymLoc000960C3 &rArr; SymLoc0009E332 &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d7740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AE3D
<LI><a href="#[58d77b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D52C5
<LI><a href="#[5969cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000960C3
<LI><a href="#[596bd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001C208
</UL>
<BR>[Called By]<UL><LI><a href="#[58d6ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocrfi_find
<LI><a href="#[58d7650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00076C36
</UL>

<P><STRONG><a name="[5969c84]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S121.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S121.o(.text)
</UL>
<P><STRONG><a name="[5969c48]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S121.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S121.o(.text)
</UL>
<P><STRONG><a name="[5969c0c]"></a>SymLoc000A16C9</STRONG> (ARM, 964 bytes, Stack size 96 bytes, S121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SymLoc000A16C9
</UL>
<BR>[Called By]<UL><LI><a href="#[5969d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009E332
</UL>

<P><STRONG><a name="[596975c]"></a>SymLoc0011976E</STRONG> (ARM, 184 bytes, Stack size 12 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SymLoc0011976E
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
<LI><a href="#[5969720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CEFCF
</UL>

<P><STRONG><a name="[5969720]"></a>SymLoc000CEFCF</STRONG> (ARM, 204 bytes, Stack size 24 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SymLoc000CEFCF &rArr; SymLoc0011976E
</UL>
<BR>[Calls]<UL><LI><a href="#[596975c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011976E
</UL>
<BR>[Called By]<UL><LI><a href="#[59695b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001121FD
</UL>

<P><STRONG><a name="[59696e4]"></a>SymLoc00048C37</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S122.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S122.o(.text)
</UL>
<P><STRONG><a name="[59696a8]"></a>SymLoc00140113</STRONG> (ARM, 1816 bytes, Stack size 1768 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816<LI>Call Chain = SymLoc00140113 &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
</UL>
<BR>[Called By]<UL><LI><a href="#[5969540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECC78
<LI><a href="#[596957c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C53E9
<LI><a href="#[59695b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001121FD
</UL>

<P><STRONG><a name="[596966c]"></a>SymLoc00044874</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S122.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S122.o(.text)
</UL>
<P><STRONG><a name="[5969630]"></a>SymLoc0009EC92</STRONG> (ARM, 1876 bytes, Stack size 488 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = SymLoc0009EC92
</UL>
<BR>[Called By]<UL><LI><a href="#[59695b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001121FD
</UL>

<P><STRONG><a name="[59695f4]"></a>SymLoc0004EECF</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S122.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S122.o(.text)
</UL>
<P><STRONG><a name="[59695b8]"></a>SymLoc001121FD</STRONG> (ARM, 2536 bytes, Stack size 5672 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7488<LI>Call Chain = SymLoc001121FD &rArr; SymLoc00140113 &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d777c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0006D43F
<LI><a href="#[5969630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0009EC92
<LI><a href="#[59696a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140113
<LI><a href="#[5969720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CEFCF
</UL>
<BR>[Called By]<UL><LI><a href="#[5969540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECC78
</UL>

<P><STRONG><a name="[596957c]"></a>SymLoc000C53E9</STRONG> (ARM, 368 bytes, Stack size 72 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888<LI>Call Chain = SymLoc000C53E9 &rArr; SymLoc00140113 &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[59696a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140113
</UL>
<BR>[Called By]<UL><LI><a href="#[5969414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C70C0
</UL>

<P><STRONG><a name="[5969540]"></a>SymLoc000ECC78</STRONG> (ARM, 1396 bytes, Stack size 136 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7624<LI>Call Chain = SymLoc000ECC78 &rArr; SymLoc001121FD &rArr; SymLoc00140113 &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007AE3D
<LI><a href="#[5969414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C70C0
<LI><a href="#[59695b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001121FD
<LI><a href="#[59696a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140113
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
</UL>

<P><STRONG><a name="[5969504]"></a>SymLoc0005D4CB</STRONG> (ARM, 940 bytes, Stack size 128 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20920<LI>Call Chain = SymLoc0005D4CB &rArr; SymLoc000D52C5
</UL>
<BR>[Calls]<UL><LI><a href="#[58d77b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D52C5
<LI><a href="#[5969a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A7FD9
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C546E
</UL>

<P><STRONG><a name="[59694c8]"></a>SymLoc0009776C</STRONG> (ARM, 472 bytes, Stack size 20 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SymLoc0009776C
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011C132
<LI><a href="#[58d7344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3D2B
</UL>

<P><STRONG><a name="[596948c]"></a>SymLoc000D6183</STRONG> (ARM, 336 bytes, Stack size 48 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SymLoc000D6183
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011C132
<LI><a href="#[58d7344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3D2B
</UL>

<P><STRONG><a name="[5969450]"></a>SymLoc000DE55B</STRONG> (ARM, 348 bytes, Stack size 40 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SymLoc000DE55B
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011C132
<LI><a href="#[58d7344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C3D2B
</UL>

<P><STRONG><a name="[5969414]"></a>SymLoc000C70C0</STRONG> (ARM, 1116 bytes, Stack size 104 bytes, S122.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992<LI>Call Chain = SymLoc000C70C0 &rArr; SymLoc000C53E9 &rArr; SymLoc00140113 &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[58d114c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01547567
<LI><a href="#[596957c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C53E9
</UL>
<BR>[Called By]<UL><LI><a href="#[5969540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000ECC78
</UL>

<P><STRONG><a name="[5968eb0]"></a>SymLoc000B3021</STRONG> (ARM, 180 bytes, Stack size 8 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
<LI><a href="#[5968c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A1592
<LI><a href="#[5968c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6180
<LI><a href="#[5968e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CFBD3
</UL>

<P><STRONG><a name="[5968e74]"></a>SymLoc000BB546</STRONG> (ARM, 2120 bytes, Stack size 200 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SymLoc000BB546 &rArr; SyMbOl01504971
</UL>
<BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
</UL>
<BR>[Called By]<UL><LI><a href="#[5968e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000CFBD3
</UL>

<P><STRONG><a name="[5968e38]"></a>SymLoc000CFBD3</STRONG> (ARM, 1388 bytes, Stack size 72 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = SymLoc000CFBD3 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d77f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00096D8C
<LI><a href="#[5968e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BB546
<LI><a href="#[5968eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B3021
</UL>
<BR>[Called By]<UL><LI><a href="#[58d71a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EC78A
<LI><a href="#[58d71dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EA599
</UL>

<P><STRONG><a name="[5968dfc]"></a>SymLoc000BE504</STRONG> (ARM, 172 bytes, Stack size 0 bytes, S123.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
<LI><a href="#[5968dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000F4C2C
</UL>

<P><STRONG><a name="[5968dc0]"></a>SymLoc000F4C2C</STRONG> (ARM, 1908 bytes, Stack size 1808 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1916<LI>Call Chain = SymLoc000F4C2C &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[5968dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000BE504
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
<LI><a href="#[5968a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OCRSEMITemplateProc
</UL>

<P><STRONG><a name="[5968d84]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S123.o(.text)
</UL>
<P><STRONG><a name="[5968d48]"></a>SymLoc0008852A</STRONG> (ARM, 396 bytes, Stack size 128 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SymLoc0008852A &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>
<BR>[Called By]<UL><LI><a href="#[5968d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C57E0
</UL>

<P><STRONG><a name="[5968d0c]"></a>SymLoc000C57E0</STRONG> (ARM, 1968 bytes, Stack size 424 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = SymLoc000C57E0 &rArr; SymLoc0008852A &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[5968d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0008852A
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
<LI><a href="#[58d71dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000EA599
</UL>

<P><STRONG><a name="[5968cd0]"></a>SymLoc0016001C</STRONG> (ARM, 492 bytes, Stack size 40 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SymLoc0016001C
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
<LI><a href="#[5968c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A1592
<LI><a href="#[5968c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6180
</UL>

<P><STRONG><a name="[5968c94]"></a>SymLoc001103E6</STRONG> (ARM, 328 bytes, Stack size 32 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SymLoc001103E6
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
<LI><a href="#[5968c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A1592
<LI><a href="#[5968c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000A6180
</UL>

<P><STRONG><a name="[5968c58]"></a>SymLoc000A6180</STRONG> (ARM, 960 bytes, Stack size 72 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = SymLoc000A6180 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5968c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001103E6
<LI><a href="#[5968cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0016001C
<LI><a href="#[5968eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B3021
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010E734
<LI><a href="#[5969108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E4279
</UL>

<P><STRONG><a name="[5968c1c]"></a>SymLoc000A1592</STRONG> (ARM, 1172 bytes, Stack size 48 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1952 + Unknown Stack Size
<LI>Call Chain = SymLoc000A1592 &rArr; SymLoc000B3021 &rArr; SyMbOl01476036 &rArr; free &rArr; _Z13__Heap1a_FreeP17Heap1a_DescriptorPv &rArr; MT_WaitMutex &rArr; _Z15EnterPowerState7power_t &rArr; _Z19GoInToPowerDownModev &rArr; _Z20StoreUsageStatisticsv &rArr; _Z19FlashWorkingChangesv &rArr; _ZN28READER_CONFIGURATION_STORAGE4MenuEP7HSTRINGbb &rArr; _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb &rArr;  _ZN28READER_CONFIGURATION_STORAGE19ProcessMenuCommandsEP7HSTRINGcbbPb (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5968c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001103E6
<LI><a href="#[5968cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0016001C
<LI><a href="#[5968eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000B3021
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010E734
<LI><a href="#[5969108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000E4279
</UL>

<P><STRONG><a name="[5968be0]"></a>SymLoc000DD7BD</STRONG> (ARM, 1348 bytes, Stack size 72 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SymLoc000DD7BD
</UL>
<BR>[Called By]<UL><LI><a href="#[5968af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001A9C0A
<LI><a href="#[5968ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001760A9
</UL>

<P><STRONG><a name="[5968ba4]"></a>SymLoc001760A9</STRONG> (ARM, 1988 bytes, Stack size 40 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SymLoc001760A9 &rArr; SymLoc001A9C0A &rArr; SymLoc000DD7BD
</UL>
<BR>[Calls]<UL><LI><a href="#[5968af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001A9C0A
<LI><a href="#[5968be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DD7BD
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
</UL>

<P><STRONG><a name="[5968b68]"></a>SymLoc000C404B</STRONG> (ARM, 20 bytes, Stack size 0 bytes, S123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S123.o(.text)
</UL>
<P><STRONG><a name="[5968b2c]"></a>SymLoc00171558</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S123.o(.text)
</UL>
<P><STRONG><a name="[5968af0]"></a>SymLoc001A9C0A</STRONG> (ARM, 196 bytes, Stack size 16 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SymLoc001A9C0A &rArr; SymLoc000DD7BD
</UL>
<BR>[Calls]<UL><LI><a href="#[5968be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DD7BD
</UL>
<BR>[Called By]<UL><LI><a href="#[5968ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001760A9
</UL>

<P><STRONG><a name="[5968ab4]"></a>SymLoc0010FCAC</STRONG> (ARM, 664 bytes, Stack size 40 bytes, S123.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SymLoc0010FCAC
</UL>
<BR>[Calls]<UL><LI><a href="#[5968a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001336CF
</UL>
<BR>[Called By]<UL><LI><a href="#[58d7038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00140E3E
</UL>

<P><STRONG><a name="[5968a78]"></a>SymLoc001336CF</STRONG> (ARM, 80 bytes, Stack size 0 bytes, S123.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5968ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010FCAC
</UL>

<P><STRONG><a name="[5968640]"></a>AAAAAAAAJ</STRONG> (ARM, 268 bytes, Stack size 104 bytes, S148.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AAAAAAAAJ
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S148.o(.text)
</UL>
<P><STRONG><a name="[5968604]"></a>AAAAAAAAI</STRONG> (ARM, 264 bytes, Stack size 104 bytes, S148.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AAAAAAAAI
</UL>
<BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S148.o(.text)
</UL>
<P><STRONG><a name="[59685c8]"></a>AAAAAAAAH</STRONG> (ARM, 56 bytes, Stack size 0 bytes, S148.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S148.o(.text)
</UL>
<P><STRONG><a name="[596858c]"></a>AAAAAAAAG</STRONG> (ARM, 56 bytes, Stack size 0 bytes, S148.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S148.o(.text)
</UL>
<P><STRONG><a name="[5968550]"></a>AAAAAAAAE</STRONG> (ARM, 56 bytes, Stack size 0 bytes, S148.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S148.o(.text)
</UL>
<P><STRONG><a name="[5968514]"></a>AAAAAAAAD</STRONG> (ARM, 12 bytes, Stack size 0 bytes, S148.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S148.o(.text)
</UL>
<P><STRONG><a name="[5966b88]"></a>compress_output</STRONG> (ARM, 356 bytes, Stack size 56 bytes, jccoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = compress_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccoefct.o(.text)
</UL>
<P><STRONG><a name="[5966b4c]"></a>compress_first_pass</STRONG> (ARM, 512 bytes, Stack size 72 bytes, jccoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = compress_first_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccoefct.o(.text)
</UL>
<P><STRONG><a name="[5966b10]"></a>compress_data</STRONG> (ARM, 560 bytes, Stack size 80 bytes, jccoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = compress_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccoefct.o(.text)
</UL>
<P><STRONG><a name="[5966ad4]"></a>start_pass_coef</STRONG> (ARM, 208 bytes, Stack size 16 bytes, jccoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_pass_coef
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccoefct.o(.text)
</UL>
<P><STRONG><a name="[59666d8]"></a>rgb_ycc_start</STRONG> (ARM, 160 bytes, Stack size 8 bytes, jccolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rgb_ycc_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccolor.o(.text)
</UL>
<P><STRONG><a name="[596669c]"></a>rgb_ycc_convert</STRONG> (ARM, 224 bytes, Stack size 40 bytes, jccolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rgb_ycc_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccolor.o(.text)
</UL>
<P><STRONG><a name="[5966660]"></a>rgb_gray_convert</STRONG> (ARM, 124 bytes, Stack size 28 bytes, jccolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rgb_gray_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccolor.o(.text)
</UL>
<P><STRONG><a name="[5966624]"></a>cmyk_ycck_convert</STRONG> (ARM, 260 bytes, Stack size 44 bytes, jccolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cmyk_ycck_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccolor.o(.text)
</UL>
<P><STRONG><a name="[59665e8]"></a>grayscale_convert</STRONG> (ARM, 72 bytes, Stack size 20 bytes, jccolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = grayscale_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccolor.o(.text)
</UL>
<P><STRONG><a name="[59665ac]"></a>null_convert</STRONG> (ARM, 100 bytes, Stack size 24 bytes, jccolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = null_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jccolor.o(.text)
</UL>
<P><STRONG><a name="[5966570]"></a>null_method</STRONG> (ARM, 4 bytes, Stack size 0 bytes, jccolor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jccolor.o(.text)
</UL>
<P><STRONG><a name="[5966174]"></a>start_pass_fdctmgr</STRONG> (ARM, 360 bytes, Stack size 32 bytes, jcdctmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = start_pass_fdctmgr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcdctmgr.o(.text)
</UL>
<P><STRONG><a name="[5966138]"></a>forward_DCT</STRONG> (ARM, 312 bytes, Stack size 312 bytes, jcdctmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = forward_DCT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcdctmgr.o(.text)
</UL>
<P><STRONG><a name="[5965c10]"></a>finish_pass_huff</STRONG> (ARM, 156 bytes, Stack size 56 bytes, jchuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = finish_pass_huff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jchuff.o(.text)
</UL>
<P><STRONG><a name="[5965b98]"></a>encode_mcu_huff</STRONG> (ARM, 332 bytes, Stack size 72 bytes, jchuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = encode_mcu_huff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jchuff.o(.text)
</UL>
<P><STRONG><a name="[5965b5c]"></a>finish_pass_gather</STRONG> (ARM, 216 bytes, Stack size 48 bytes, jchuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = finish_pass_gather &rArr; jpeg_alloc_huff_table
</UL>
<BR>[Calls]<UL><LI><a href="#[58d9c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_huff_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jchuff.o(.text)
</UL>
<P><STRONG><a name="[5965b20]"></a>encode_mcu_gather</STRONG> (ARM, 192 bytes, Stack size 32 bytes, jchuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = encode_mcu_gather
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jchuff.o(.text)
</UL>
<P><STRONG><a name="[5965ae4]"></a>start_pass_huff</STRONG> (ARM, 368 bytes, Stack size 40 bytes, jchuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = start_pass_huff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jchuff.o(.text)
</UL>
<P><STRONG><a name="[5965508]"></a>process_data_simple_main</STRONG> (ARM, 216 bytes, Stack size 40 bytes, jcmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = process_data_simple_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmainct.o(.text)
</UL>
<P><STRONG><a name="[59654cc]"></a>start_pass_main</STRONG> (ARM, 76 bytes, Stack size 0 bytes, jcmainct.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jcmainct.o(.text)
</UL>
<P><STRONG><a name="[5965058]"></a>prepare_for_pass</STRONG> (ARM, 556 bytes, Stack size 16 bytes, jcmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prepare_for_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmaster.o(.text)
</UL>
<P><STRONG><a name="[596501c]"></a>pass_startup</STRONG> (ARM, 56 bytes, Stack size 8 bytes, jcmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pass_startup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmaster.o(.text)
</UL>
<P><STRONG><a name="[5964fe0]"></a>finish_pass_master</STRONG> (ARM, 128 bytes, Stack size 16 bytes, jcmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = finish_pass_master
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcmaster.o(.text)
</UL>
<P><STRONG><a name="[5964ba8]"></a>finish_pass_phuff</STRONG> (ARM, 80 bytes, Stack size 16 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = finish_pass_phuff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcphuff.o(.text)
</UL>
<P><STRONG><a name="[5964b6c]"></a>finish_pass_gather_phuff</STRONG> (ARM, 188 bytes, Stack size 40 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = finish_pass_gather_phuff &rArr; jpeg_alloc_huff_table
</UL>
<BR>[Calls]<UL><LI><a href="#[58d9c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_huff_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcphuff.o(.text)
</UL>
<P><STRONG><a name="[5964af4]"></a>encode_mcu_AC_refine</STRONG> (ARM, 576 bytes, Stack size 304 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = encode_mcu_AC_refine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcphuff.o(.text)
</UL>
<P><STRONG><a name="[5964ab8]"></a>encode_mcu_DC_refine</STRONG> (ARM, 208 bytes, Stack size 24 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = encode_mcu_DC_refine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcphuff.o(.text)
</UL>
<P><STRONG><a name="[5964a7c]"></a>encode_mcu_AC_first</STRONG> (ARM, 436 bytes, Stack size 48 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = encode_mcu_AC_first
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcphuff.o(.text)
</UL>
<P><STRONG><a name="[5964a40]"></a>encode_mcu_DC_first</STRONG> (ARM, 332 bytes, Stack size 40 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = encode_mcu_DC_first
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcphuff.o(.text)
</UL>
<P><STRONG><a name="[5964a04]"></a>start_pass_phuff</STRONG> (ARM, 392 bytes, Stack size 40 bytes, jcphuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = start_pass_phuff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcphuff.o(.text)
</UL>
<P><STRONG><a name="[5964590]"></a>start_pass_prep</STRONG> (ARM, 84 bytes, Stack size 16 bytes, jcprepct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_pass_prep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcprepct.o(.text)
</UL>
<P><STRONG><a name="[5964554]"></a>pre_process_data</STRONG> (ARM, 392 bytes, Stack size 40 bytes, jcprepct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pre_process_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcprepct.o(.text)
</UL>
<P><STRONG><a name="[5964518]"></a>pre_process_context</STRONG> (ARM, 496 bytes, Stack size 64 bytes, jcprepct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pre_process_context
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcprepct.o(.text)
</UL>
<P><STRONG><a name="[59640e0]"></a>start_pass_downsample</STRONG> (ARM, 4 bytes, Stack size 0 bytes, jcsample.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[59640a4]"></a>sep_downsample</STRONG> (ARM, 108 bytes, Stack size 40 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sep_downsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[5964068]"></a>int_downsample</STRONG> (ARM, 272 bytes, Stack size 64 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = int_downsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[596402c]"></a>fullsize_downsample</STRONG> (ARM, 80 bytes, Stack size 24 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fullsize_downsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[5963ff0]"></a>h2v1_downsample</STRONG> (ARM, 132 bytes, Stack size 24 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = h2v1_downsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[5963fb4]"></a>h2v2_downsample</STRONG> (ARM, 172 bytes, Stack size 32 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = h2v2_downsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[5963f78]"></a>h2v2_smooth_downsample</STRONG> (ARM, 604 bytes, Stack size 64 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = h2v2_smooth_downsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[5963f3c]"></a>fullsize_smooth_downsample</STRONG> (ARM, 336 bytes, Stack size 56 bytes, jcsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fullsize_smooth_downsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcsample.o(.text)
</UL>
<P><STRONG><a name="[596303c]"></a>SDsemi_island_recheck</STRONG> (ARM, 932 bytes, Stack size 392 bytes, S005.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>

<P><STRONG><a name="[5963000]"></a>SDisland_loop</STRONG> (ARM, 172 bytes, Stack size 16 bytes, S005.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDisland_loop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S005.o(.text)
</UL>
<P><STRONG><a name="[5962f88]"></a>SDisland_preorder</STRONG> (ARM, 528 bytes, Stack size 432 bytes, S005.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5962f4c]"></a>SDisland_reorder</STRONG> (ARM, 312 bytes, Stack size 848 bytes, S005.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = SDisland_reorder &rArr; AAAAAAAAAAC &rArr; AAAAAAAAP
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S005.o(.text)
</UL>
<P><STRONG><a name="[5962f10]"></a>SDmax_isolation</STRONG> (ARM, 344 bytes, Stack size 848 bytes, S005.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = SDmax_isolation &rArr; AAAAAAAAAAC &rArr; AAAAAAAAP
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S005.o(.text)
</UL>
<P><STRONG><a name="[5962ed4]"></a>SDdespeckle_isolation</STRONG> (ARM, 460 bytes, Stack size 2528 bytes, S005.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2544<LI>Call Chain = SDdespeckle_isolation &rArr; SyMbOl06542079
</UL>
<BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06542079
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S005.o(.text)
</UL>
<P><STRONG><a name="[5962e98]"></a>SDconnection_vs_isolation</STRONG> (ARM, 512 bytes, Stack size 2528 bytes, S005.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2548<LI>Call Chain = SDconnection_vs_isolation &rArr; SyMbOl04829463 &rArr;  SyMbOl04829463 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl06542079
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S005.o(.text)
</UL>
<P><STRONG><a name="[5962e5c]"></a>SDisland_dismiss</STRONG> (ARM, 1208 bytes, Stack size 1896 bytes, S005.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5962e20]"></a>SymLoc0007036A</STRONG> (ARM, 1160 bytes, Stack size 312 bytes, S005.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>

<P><STRONG><a name="[5962880]"></a>SyMbOl02783692</STRONG> (ARM, 220 bytes, Stack size 32 bytes, S033.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[59627cc]"></a>SyMbOl02081784</STRONG> (ARM, 1804 bytes, Stack size 272 bytes, S033.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>

<P><STRONG><a name="[5962664]"></a>SymLoc000E852C</STRONG> (ARM, 1808 bytes, Stack size 544 bytes, S033.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5962628]"></a>SyMbOl02554473</STRONG> (ARM, 2268 bytes, Stack size 168 bytes, S033.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
</UL>

<P><STRONG><a name="[5a2e314]"></a>SyMbOl81134526U</STRONG> (ARM, 612 bytes, Stack size 24 bytes, S047.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
<LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11493103
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
</UL>

<P><STRONG><a name="[5a2e29c]"></a>AAAAAAAU</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S047.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S047.o(.text)
</UL>
<P><STRONG><a name="[5a2dc0c]"></a>SyMbOl07656617</STRONG> (ARM, 608 bytes, Stack size 8760 bytes, S066.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596a260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11405961
</UL>

<P><STRONG><a name="[5a2dbd0]"></a>SymLoc000DC43B</STRONG> (ARM, 4044 bytes, Stack size 176 bytes, S066.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d123c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00164836
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5a2db94]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S066.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2db58]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S066.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2db1c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S066.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S066.o(.text)
</UL>
<P><STRONG><a name="[5a2daa4]"></a>SyMbOl07967461</STRONG> (ARM, 992 bytes, Stack size 8744 bytes, S066.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5969fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11307856
<LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
</UL>

<P><STRONG><a name="[5a2da68]"></a>SyMbOl08110574</STRONG> (ARM, 740 bytes, Stack size 48 bytes, S066.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>

<P><STRONG><a name="[5a2d540]"></a>SyMbOl08586034</STRONG> (ARM, 1056 bytes, Stack size 272 bytes, S073.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>

<P><STRONG><a name="[5a2d4c8]"></a>SyMbOl09189565</STRONG> (ARM, 1356 bytes, Stack size 2288 bytes, S073.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5a2ca78]"></a>SymLoc000E7A4C</STRONG> (ARM, 4072 bytes, Stack size 146992 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010196F
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_envelope_min_max
<LI><a href="#[596a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_edge_finder_envelope_peak_detection
<LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>

<P><STRONG><a name="[5a2ca3c]"></a>SymLoc000B052C</STRONG> (ARM, 668 bytes, Stack size 64 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0014200A
</UL>

<P><STRONG><a name="[5a2ca00]"></a>AAAAAAAB</STRONG> (ARM, 1028 bytes, Stack size 5624 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
</UL>

<P><STRONG><a name="[5a2c9c4]"></a>SymLoc0011544E</STRONG> (ARM, 764 bytes, Stack size 72 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
</UL>

<P><STRONG><a name="[5a2c988]"></a>SymLoc001961B4</STRONG> (ARM, 584 bytes, Stack size 2424 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5a2c94c]"></a>SymLoc000C89D1</STRONG> (ARM, 320 bytes, Stack size 104 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>

<P><STRONG><a name="[5a2c910]"></a>SymLoc000AA221</STRONG> (ARM, 796 bytes, Stack size 192 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0010196F
</UL>

<P><STRONG><a name="[5a2c8d4]"></a>SymLoc001022BA</STRONG> (ARM, 1068 bytes, Stack size 2664 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596d848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAN
</UL>

<P><STRONG><a name="[5a2c898]"></a>SymLoc00096BB6</STRONG> (ARM, 1040 bytes, Stack size 57640 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>

<P><STRONG><a name="[5a2c85c]"></a>SymLoc00159978</STRONG> (ARM, 1548 bytes, Stack size 392 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5a2c7e4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S117.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S117.o(.text)
</UL>
<P><STRONG><a name="[5a2c76c]"></a>AAAAAAAAZ</STRONG> (ARM, 240 bytes, Stack size 88 bytes, S117.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00016B46
<LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
</UL>

<P><STRONG><a name="[5a2c118]"></a>SymLoc00144D5B</STRONG> (ARM, 932 bytes, Stack size 1720 bytes, S138.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
<LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5a2be0c]"></a>AAAAAAAAAS</STRONG> (ARM, 468 bytes, Stack size 24 bytes, S145.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
</UL>

<P><STRONG><a name="[5a2aa98]"></a>SyMbOl81134526B</STRONG> (ARM, 1380 bytes, Stack size 472 bytes, S001.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
</UL>

<P><STRONG><a name="[5a2aa5c]"></a>SyMbOl81134526D</STRONG> (ARM, 1180 bytes, Stack size 320 bytes, S001.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5a2a87c]"></a>SDsemi_island_score</STRONG> (ARM, 260 bytes, Stack size 16 bytes, S004.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
</UL>

<P><STRONG><a name="[5cefc68]"></a>SDshadow_compensation</STRONG> (ARM, 924 bytes, Stack size 152 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5cefc2c]"></a>SDschedule_background_activity</STRONG> (ARM, 3288 bytes, Stack size 544 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
<LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5cefbb4]"></a>SymLoc000E8126</STRONG> (ARM, 992 bytes, Stack size 48 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5cefb78]"></a>SymLoc00118267</STRONG> (ARM, 972 bytes, Stack size 72 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5cefb3c]"></a>SymLoc000873D2</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S009.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S009.o(.text)
</UL>
<P><STRONG><a name="[5cefb00]"></a>SDtotal_unimodularity</STRONG> (ARM, 64 bytes, Stack size 0 bytes, S009.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S009.o(.text)
</UL>
<P><STRONG><a name="[5cefac4]"></a>SDsystolic_pixel_pump</STRONG> (ARM, 240 bytes, Stack size 8 bytes, S009.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDsystolic_pixel_pump
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S009.o(.text)
</UL>
<P><STRONG><a name="[5cefa88]"></a>SDstochastic_reverification</STRONG> (ARM, 196 bytes, Stack size 8 bytes, S009.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDstochastic_reverification &rArr; SyMbOl01249397 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01249397
<LI><a href="#[58d0c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011EB2F
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S009.o(.text)
</UL>
<P><STRONG><a name="[5cefa4c]"></a>AAAAAAAC</STRONG> (ARM, 588 bytes, Stack size 984 bytes, S009.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = AAAAAAAC
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S009.o(.text)
</UL>
<P><STRONG><a name="[5cefa10]"></a>SyMbOl81134525c</STRONG> (ARM, 3356 bytes, Stack size 293048 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[58d0918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12038322
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5cef9d4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S009.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S009.o(.text)
</UL>
<P><STRONG><a name="[5cef998]"></a>SDstacked_symbol_warp_mapping</STRONG> (ARM, 208 bytes, Stack size 16 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
</UL>

<P><STRONG><a name="[5cef95c]"></a>SDtriaxial_rotation</STRONG> (ARM, 212 bytes, Stack size 16 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
</UL>

<P><STRONG><a name="[5cef8e4]"></a>SymLoc00184A5D</STRONG> (ARM, 1008 bytes, Stack size 232 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
<LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>

<P><STRONG><a name="[5cef86c]"></a>SymLoc000DB5BB</STRONG> (ARM, 800 bytes, Stack size 40 bytes, S009.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5cef4ac]"></a>SyMbOl00447702</STRONG> (ARM, 288 bytes, Stack size 16 bytes, S011.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5cef470]"></a>SyMbOl00346868</STRONG> (ARM, 308 bytes, Stack size 16 bytes, S011.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5cef3f8]"></a>SDupdate_minimum_spanning_tree</STRONG> (ARM, 1316 bytes, Stack size 360 bytes, S011.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5cef3bc]"></a>SyMbOl00401061</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S011.o(.text)
</UL>
<P><STRONG><a name="[5cef380]"></a>SyMbOl00364383</STRONG> (ARM, 232 bytes, Stack size 24 bytes, S011.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SyMbOl00364383
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S011.o(.text)
</UL>
<P><STRONG><a name="[5cef344]"></a>SyMbOl00424071</STRONG> (ARM, 3164 bytes, Stack size 257848 bytes, S011.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d0918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12038322
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[596d5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04829463
<LI><a href="#[596d62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04673917
<LI><a href="#[596e9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11660286
<LI><a href="#[596ea18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11623050
</UL>

<P><STRONG><a name="[5b8adcc]"></a>SyMbOl00538216</STRONG> (ARM, 984 bytes, Stack size 160 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b8ad90]"></a>SymLoc000E74F0</STRONG> (ARM, 820 bytes, Stack size 32 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b8ad54]"></a>SyMbOl00697941</STRONG> (ARM, 396 bytes, Stack size 16 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
</UL>

<P><STRONG><a name="[5b8ad18]"></a>SyMbOl00467304</STRONG> (ARM, 3092 bytes, Stack size 264 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
<LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b8acdc]"></a>SymLoc000F1C32</STRONG> (ARM, 828 bytes, Stack size 48 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
</UL>

<P><STRONG><a name="[5b8aca0]"></a>SymLoc000EE8A0</STRONG> (ARM, 824 bytes, Stack size 56 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5b8ac64]"></a>SymLoc000873D2</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S013.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S013.o(.text)
</UL>
<P><STRONG><a name="[5b8ac28]"></a>SyMbOl00769538</STRONG> (ARM, 152 bytes, Stack size 4 bytes, S013.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SyMbOl00769538
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S013.o(.text)
</UL>
<P><STRONG><a name="[5b8abec]"></a>SyMbOl00709308</STRONG> (ARM, 468 bytes, Stack size 56 bytes, S013.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SyMbOl00709308
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S013.o(.text)
</UL>
<P><STRONG><a name="[5b8abb0]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S013.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S013.o(.text)
</UL>
<P><STRONG><a name="[5b8ab74]"></a>SymLoc000CF7FB</STRONG> (ARM, 1364 bytes, Stack size 144 bytes, S013.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = SymLoc000CF7FB &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S013.o(.text)
</UL>
<P><STRONG><a name="[5b8ab38]"></a>AAAAAAAG</STRONG> (ARM, 740 bytes, Stack size 784 bytes, S013.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = AAAAAAAG &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
<LI><a href="#[58d0be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S013.o(.text)
</UL>
<P><STRONG><a name="[5b8aafc]"></a>AAAAAAAM</STRONG> (ARM, 1920 bytes, Stack size 277896 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b8aac0]"></a>SymLoc000BB221</STRONG> (ARM, 896 bytes, Stack size 1032 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12038322
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b8aa48]"></a>SyMbOl00667135</STRONG> (ARM, 104 bytes, Stack size 8 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
</UL>

<P><STRONG><a name="[5b8a9d0]"></a>SymLoc0013120C</STRONG> (ARM, 1048 bytes, Stack size 232 bytes, S013.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
<LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>

<P><STRONG><a name="[5b8a64c]"></a>SyMbOl13383606</STRONG> (ARM, 2240 bytes, Stack size 376 bytes, S015.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b8a610]"></a>SyMbOl13325292</STRONG> (ARM, 88 bytes, Stack size 0 bytes, S015.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S015.o(.text)
</UL>
<P><STRONG><a name="[5b8a5d4]"></a>SyMbOl13298330</STRONG> (ARM, 88 bytes, Stack size 8 bytes, S015.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyMbOl13298330
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S015.o(.text)
</UL>
<P><STRONG><a name="[5b8a598]"></a>SyMbOl13257494</STRONG> (ARM, 100 bytes, Stack size 8 bytes, S015.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SyMbOl13257494 &rArr; SyMbOl01249397 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01249397
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S015.o(.text)
</UL>
<P><STRONG><a name="[5b8a55c]"></a>SyMbOl13222601</STRONG> (ARM, 1808 bytes, Stack size 267480 bytes, S015.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b8a520]"></a>SyMbOl13349756</STRONG> (ARM, 220 bytes, Stack size 16 bytes, S015.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b8a4e4]"></a>SyMbOl13355461</STRONG> (ARM, 268 bytes, Stack size 16 bytes, S015.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b8a2c8]"></a>SyMbOl00874185</STRONG> (ARM, 1608 bytes, Stack size 96 bytes, S017.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b8a28c]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S017.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S017.o(.text)
</UL>
<P><STRONG><a name="[5b8a250]"></a>SymLoc000DBAC8</STRONG> (ARM, 1360 bytes, Stack size 296 bytes, S017.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = SymLoc000DBAC8 &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S017.o(.text)
</UL>
<P><STRONG><a name="[5b8a214]"></a>SyMbOl01130080</STRONG> (ARM, 88 bytes, Stack size 0 bytes, S017.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S017.o(.text)
</UL>
<P><STRONG><a name="[5b8a1d8]"></a>SyMbOl01087564</STRONG> (ARM, 80 bytes, Stack size 8 bytes, S017.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyMbOl01087564
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S017.o(.text)
</UL>
<P><STRONG><a name="[5b8a19c]"></a>SyMbOl01091707</STRONG> (ARM, 932 bytes, Stack size 263640 bytes, S017.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
</UL>

<P><STRONG><a name="[5b8a160]"></a>SyMbOl00949532</STRONG> (ARM, 896 bytes, Stack size 160 bytes, S017.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b8a124]"></a>SyMbOl01055479</STRONG> (ARM, 192 bytes, Stack size 16 bytes, S017.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b89da0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S030.o(.text)
</UL>
<P><STRONG><a name="[5b89d64]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S030.o(.text)
</UL>
<P><STRONG><a name="[5b89d28]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S030.o(.text)
</UL>
<P><STRONG><a name="[5b89cec]"></a>dm_create_unprotected_bit_stream</STRONG> (ARM, 952 bytes, Stack size 7584 bytes, S030.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[5b89cb0]"></a>SolveEcc</STRONG> (ARM, 1208 bytes, Stack size 40 bytes, S030.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2274064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[5b89404]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S035.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S035.o(.text)
</UL>
<P><STRONG><a name="[5b893c8]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S035.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S035.o(.text)
</UL>
<P><STRONG><a name="[5b89224]"></a>SymLoc00000258Lc610xac</STRONG> (ARM, 180 bytes, Stack size 8 bytes, S036.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59624fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03473122
</UL>

<P><STRONG><a name="[5b89008]"></a>SyMbOl05059742</STRONG> (ARM, 1104 bytes, Stack size 160 bytes, S042.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b88e28]"></a>SyMbOl06410298</STRONG> (ARM, 416 bytes, Stack size 792 bytes, S048.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>

<P><STRONG><a name="[5b88dec]"></a>SyMbOl06236945</STRONG> (ARM, 1912 bytes, Stack size 960 bytes, S048.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
<LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>

<P><STRONG><a name="[5b88db0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S048.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S048.o(.text)
</UL>
<P><STRONG><a name="[5b88d74]"></a>SyMbOl06136380</STRONG> (ARM, 92 bytes, Stack size 16 bytes, S048.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[5b88d38]"></a>SyMbOl06161699</STRONG> (ARM, 168 bytes, Stack size 32 bytes, S048.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[5b88504]"></a>SyMbOl07137306</STRONG> (ARM, 3924 bytes, Stack size 75312 bytes, S058.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22740a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01345593
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d132c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00116CD4
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[58d82bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000DCD8F
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
</UL>

<P><STRONG><a name="[5b87fdc]"></a>SyMbOl08277684</STRONG> (ARM, 960 bytes, Stack size 400 bytes, S067.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596c114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04795839
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b87fa0]"></a>SyMbOl08326642</STRONG> (ARM, 888 bytes, Stack size 2528 bytes, S067.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d1110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01402457
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b87d0c]"></a>SyMbOl08484640</STRONG> (ARM, 1964 bytes, Stack size 648 bytes, S070.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b87cd0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S070.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S070.o(.text)
</UL>
<P><STRONG><a name="[5b876f4]"></a>SyMbOl09495277</STRONG> (ARM, 756 bytes, Stack size 104 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b876b8]"></a>SyMbOl08933940</STRONG> (ARM, 416 bytes, Stack size 48 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAW
<LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
</UL>

<P><STRONG><a name="[5b8767c]"></a>SyMbOl08598403</STRONG> (ARM, 1616 bytes, Stack size 248 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001716AC
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b87640]"></a>SymLoc000E7B45</STRONG> (ARM, 3364 bytes, Stack size 80 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
</UL>

<P><STRONG><a name="[5b8758c]"></a>SymLoc001502F5</STRONG> (ARM, 608 bytes, Stack size 1064 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[596a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001716AC
<LI><a href="#[596a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00147CA5
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b874d8]"></a>SymLoc000DFFDF</STRONG> (ARM, 1636 bytes, Stack size 288 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04782647
</UL>

<P><STRONG><a name="[5b8749c]"></a>SymLoc000E0AE3</STRONG> (ARM, 1132 bytes, Stack size 712 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b87460]"></a>SymLoc001669CE</STRONG> (ARM, 1608 bytes, Stack size 552 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>

<P><STRONG><a name="[5b873e8]"></a>SymLoc001C5B63</STRONG> (ARM, 584 bytes, Stack size 1576 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d10d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01571821
</UL>

<P><STRONG><a name="[5b87370]"></a>SymLoc00159369</STRONG> (ARM, 1400 bytes, Stack size 680 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d00e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11329682
<LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b87334]"></a>SymLoc00102D5F</STRONG> (ARM, 972 bytes, Stack size 512 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596b5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C89A9
</UL>

<P><STRONG><a name="[5b872f8]"></a>SymLoc0014CB30</STRONG> (ARM, 900 bytes, Stack size 168 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
<LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
<LI><a href="#[596e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0014200A
</UL>

<P><STRONG><a name="[5b872bc]"></a>SymLoc000E900F</STRONG> (ARM, 2408 bytes, Stack size 1560 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
<LI><a href="#[596a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00147CA5
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>

<P><STRONG><a name="[5b87280]"></a>SymLoc0015FA81</STRONG> (ARM, 296 bytes, Stack size 224 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b871cc]"></a>SymLoc001284DA</STRONG> (ARM, 1608 bytes, Stack size 200 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b87154]"></a>SymLoc000A14E6</STRONG> (ARM, 860 bytes, Stack size 1336 bytes, S074.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
</UL>

<P><STRONG><a name="[5b86bf0]"></a>SyMbOl81134523g</STRONG> (ARM, 488 bytes, Stack size 136 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b86bb4]"></a>SymLoc000B4CCE</STRONG> (ARM, 1904 bytes, Stack size 176 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d1188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12013858
</UL>

<P><STRONG><a name="[5b86b78]"></a>SymLoc000BC183</STRONG> (ARM, 2152 bytes, Stack size 1240 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d06c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12095453
<LI><a href="#[58d06fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12072172
<LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
<LI><a href="#[58d0918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12038322
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b86b3c]"></a>SyMbOl81134523Y</STRONG> (ARM, 72 bytes, Stack size 4 bytes, S077.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SyMbOl81134523Y
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S077.o(.text)
</UL>
<P><STRONG><a name="[5b86b00]"></a>SyMbOl81134523X</STRONG> (ARM, 380 bytes, Stack size 16 bytes, S077.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SyMbOl81134523X
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S077.o(.text)
</UL>
<P><STRONG><a name="[5b86ac4]"></a>SyMbOl81134523W</STRONG> (ARM, 568 bytes, Stack size 36 bytes, S077.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SyMbOl81134523W
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S077.o(.text)
</UL>
<P><STRONG><a name="[5b86a88]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S077.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S077.o(.text)
</UL>
<P><STRONG><a name="[5b86a4c]"></a>SyMbOl81134523V</STRONG> (ARM, 1232 bytes, Stack size 72 bytes, S077.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SyMbOl81134523V &rArr; SyMbOl01249397 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01249397
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S077.o(.text)
</UL>
<P><STRONG><a name="[5b86a10]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S077.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S077.o(.text)
</UL>
<P><STRONG><a name="[5b869d4]"></a>SyMbOl81134523b</STRONG> (ARM, 816 bytes, Stack size 264 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
</UL>

<P><STRONG><a name="[5b86998]"></a>SymLoc00132917</STRONG> (ARM, 692 bytes, Stack size 72 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
</UL>

<P><STRONG><a name="[5b868a8]"></a>SyMbOl81134523R</STRONG> (ARM, 856 bytes, Stack size 33312 bytes, S077.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5b863f8]"></a>SyMbOl81134522Q</STRONG> (ARM, 680 bytes, Stack size 144 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b86344]"></a>SyMbOl81134522P</STRONG> (ARM, 364 bytes, Stack size 72 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d11c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11986896
</UL>

<P><STRONG><a name="[5b862cc]"></a>SyMbOl81134522K</STRONG> (ARM, 440 bytes, Stack size 1000 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12038322
</UL>

<P><STRONG><a name="[5b86290]"></a>SymLoc001126BF</STRONG> (ARM, 1280 bytes, Stack size 136 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d1188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12013858
</UL>

<P><STRONG><a name="[5b86254]"></a>SyMbOl81134522N</STRONG> (ARM, 672 bytes, Stack size 256 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
</UL>

<P><STRONG><a name="[5b86218]"></a>SymLoc000F8C94</STRONG> (ARM, 2764 bytes, Stack size 96 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5b861dc]"></a>SymLoc000D75E8</STRONG> (ARM, 1648 bytes, Stack size 1816 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b861a0]"></a>SyMbOl81134522z</STRONG> (ARM, 932 bytes, Stack size 80 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b86164]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S079.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b86128]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S079.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b860ec]"></a>SyMbOl81134522E</STRONG> (ARM, 32 bytes, Stack size 0 bytes, S079.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b860b0]"></a>SyMbOl81134522D</STRONG> (ARM, 52 bytes, Stack size 8 bytes, S079.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyMbOl81134522D
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b86074]"></a>SyMbOl81134522C</STRONG> (ARM, 420 bytes, Stack size 36 bytes, S079.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SyMbOl81134522C
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b86038]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S079.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b85ffc]"></a>SyMbOl81134522B</STRONG> (ARM, 760 bytes, Stack size 40 bytes, S079.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SyMbOl81134522B &rArr; SyMbOl01249397 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01249397
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b85fc0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S079.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S079.o(.text)
</UL>
<P><STRONG><a name="[5b85e94]"></a>SyMbOl81134522x</STRONG> (ARM, 1068 bytes, Stack size 268168 bytes, S079.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5b85b10]"></a>SyMbOl81134523K</STRONG> (ARM, 492 bytes, Stack size 144 bytes, S080.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b85ad4]"></a>SyMbOl81134522Y</STRONG> (ARM, 1676 bytes, Stack size 1240 bytes, S080.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
<LI><a href="#[58d06c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12095453
<LI><a href="#[58d06fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12072172
<LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
<LI><a href="#[58d0918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12038322
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b85a98]"></a>SyMbOl81134523D</STRONG> (ARM, 68 bytes, Stack size 4 bytes, S080.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SyMbOl81134523D
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S080.o(.text)
</UL>
<P><STRONG><a name="[5b85a5c]"></a>SyMbOl81134523C</STRONG> (ARM, 488 bytes, Stack size 40 bytes, S080.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SyMbOl81134523C
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S080.o(.text)
</UL>
<P><STRONG><a name="[5b85a20]"></a>SyMbOl81134523B</STRONG> (ARM, 284 bytes, Stack size 20 bytes, S080.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SyMbOl81134523B
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S080.o(.text)
</UL>
<P><STRONG><a name="[5b859e4]"></a>SyMbOl81134523A</STRONG> (ARM, 892 bytes, Stack size 104 bytes, S080.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SyMbOl81134523A &rArr; SyMbOl01249397 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01249397
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S080.o(.text)
</UL>
<P><STRONG><a name="[5b859a8]"></a>SyMbOl81134522U</STRONG> (ARM, 804 bytes, Stack size 22296 bytes, S080.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5b2d44c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d3d4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d35c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d320]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d2e4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d26c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d230]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d17c]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d104]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d0c8]"></a>SymLoc0007C063</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2d050]"></a>SyMbOl10687023</STRONG> (ARM, 1140 bytes, Stack size 48 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01468279
</UL>

<P><STRONG><a name="[5b2d014]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cfd8]"></a>SyMbOl81134525u</STRONG> (ARM, 1128 bytes, Stack size 72 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2cf9c]"></a>SyMbOl81134525s</STRONG> (ARM, 1140 bytes, Stack size 120 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAV
<LI><a href="#[58d0cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01193210
</UL>

<P><STRONG><a name="[5b2cf60]"></a>return_value_hold</STRONG> (ARM, 4 bytes, Stack size 0 bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cf24]"></a>SyMbOl11126701</STRONG> (ARM, 572 bytes, Stack size 40 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2cee8]"></a>uc_validate_search_array</STRONG> (ARM, 124 bytes, Stack size 4 bytes, S089.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uc_validate_search_array
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2ceac]"></a>SyMbOl10928819</STRONG> (ARM, 124 bytes, Stack size 4 bytes, S089.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SyMbOl10928819
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2ce70]"></a>AAAAAAAAS</STRONG> (ARM, 12 bytes, Stack size 0 bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2ce34]"></a>SyMbOl10863418</STRONG> (ARM, 232 bytes, Stack size 24 bytes, S089.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SyMbOl10863418 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0011EB2F
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cdf8]"></a>AAAAAAAAW</STRONG> (ARM, 1020 bytes, Stack size 496 bytes, S089.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = AAAAAAAAW
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cdbc]"></a>SyMbOl81134525i</STRONG> (ARM, 2836 bytes, Stack size 65592 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d0d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDdetect_right_angles
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2cd80]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cd44]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cccc]"></a>AAAAAAAAX</STRONG> (ARM, 916 bytes, Stack size 40 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2cc90]"></a>SyMbOl10713657</STRONG> (ARM, 1000 bytes, Stack size 168 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b2cc54]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cc18]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cbdc]"></a>SyMbOl10652292</STRONG> (ARM, 992 bytes, Stack size 4264 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>

<P><STRONG><a name="[5b2cba0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2cb28]"></a>SyMbOl10571854</STRONG> (ARM, 1328 bytes, Stack size 216 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01193210
</UL>

<P><STRONG><a name="[5b2cab0]"></a>SyMbOl11002535</STRONG> (ARM, 1076 bytes, Stack size 48 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01468279
</UL>

<P><STRONG><a name="[5b2ca74]"></a>SyMbOl81134525j</STRONG> (ARM, 1144 bytes, Stack size 256 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl12122732
</UL>

<P><STRONG><a name="[5b2ca38]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2c9fc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2c9c0]"></a>SymLoc000975F4</STRONG> (ARM, 1040 bytes, Stack size 168 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
</UL>

<P><STRONG><a name="[5b2c984]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2c948]"></a>SyMbOl11073468</STRONG> (ARM, 972 bytes, Stack size 88 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2c90c]"></a>AAAAAAAAV</STRONG> (ARM, 784 bytes, Stack size 72 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01443772
<LI><a href="#[58d105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01314266
</UL>

<P><STRONG><a name="[5b2c8d0]"></a>AAAAAAAAY</STRONG> (ARM, 1124 bytes, Stack size 528 bytes, S089.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b2c858]"></a>SyMbOl81134525p</STRONG> (ARM, 100 bytes, Stack size 0 bytes, S089.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S089.o(.text)
</UL>
<P><STRONG><a name="[5b2c510]"></a>SymLoc000D1BB5</STRONG> (ARM, 980 bytes, Stack size 176 bytes, S095.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2c330]"></a>SymLoc0011A04D</STRONG> (ARM, 688 bytes, Stack size 6760 bytes, S096.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b2c2f4]"></a>SymLoc001B4BF6</STRONG> (ARM, 1264 bytes, Stack size 200 bytes, S096.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2bfe8]"></a>SymLoc0008BE2D</STRONG> (ARM, 24 bytes, Stack size 0 bytes, S097.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S097.o(.text)
</UL>
<P><STRONG><a name="[5b2bfac]"></a>SymLoc000A7FE7</STRONG> (ARM, 368 bytes, Stack size 48 bytes, S097.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d05d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDretry_slow_way
</UL>

<P><STRONG><a name="[5b2bf70]"></a>SymLoc000C935F</STRONG> (ARM, 548 bytes, Stack size 48 bytes, S097.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH0001D8F8
</UL>

<P><STRONG><a name="[5b2be44]"></a>SymLoc000BE2E1</STRONG> (ARM, 308 bytes, Stack size 24 bytes, S099.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2be08]"></a>SymLoc000CA9B3</STRONG> (ARM, 288 bytes, Stack size 24 bytes, S099.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2bdcc]"></a>SymLoc000E57D1</STRONG> (ARM, 1044 bytes, Stack size 208 bytes, S099.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2bd90]"></a>SymLoc000ECF23</STRONG> (ARM, 1292 bytes, Stack size 360 bytes, S099.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2bd54]"></a>SymLoc000CC481</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S099.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S099.o(.text)
</UL>
<P><STRONG><a name="[5b2bd18]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S099.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S099.o(.text)
</UL>
<P><STRONG><a name="[5b2bcdc]"></a>SymLoc0008B606</STRONG> (ARM, 264 bytes, Stack size 56 bytes, S099.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SymLoc0008B606 &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S099.o(.text)
</UL>
<P><STRONG><a name="[5b2bca0]"></a>SymLoc00082AE5</STRONG> (ARM, 1756 bytes, Stack size 253480 bytes, S099.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b2bc64]"></a>SymLoc000DE9D0</STRONG> (ARM, 208 bytes, Stack size 16 bytes, S099.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2bc28]"></a>SymLoc000A455F</STRONG> (ARM, 208 bytes, Stack size 16 bytes, S099.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2bafc]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S101.o(.text)
</UL>
<P><STRONG><a name="[5b2bac0]"></a>SymLoc00070E3A</STRONG> (ARM, 536 bytes, Stack size 128 bytes, S101.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SymLoc00070E3A &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S101.o(.text)
</UL>
<P><STRONG><a name="[5b2ba84]"></a>SymLoc000AD5E2</STRONG> (ARM, 392 bytes, Stack size 24 bytes, S101.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2ba48]"></a>SymLoc000BE742</STRONG> (ARM, 336 bytes, Stack size 24 bytes, S101.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2b9d0]"></a>SymLoc000A6571</STRONG> (ARM, 1388 bytes, Stack size 368 bytes, S101.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2b994]"></a>SymLoc000C3505</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S101.o(.text)
</UL>
<P><STRONG><a name="[5b2b958]"></a>SymLoc000915EA</STRONG> (ARM, 1644 bytes, Stack size 260784 bytes, S101.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b2b6c4]"></a>SymLoc000EF7A8</STRONG> (ARM, 1668 bytes, Stack size 112 bytes, S105.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2b688]"></a>SymLoc000E10F2</STRONG> (ARM, 88 bytes, Stack size 0 bytes, S105.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S105.o(.text)
</UL>
<P><STRONG><a name="[5b2b64c]"></a>SymLoc000E4B83</STRONG> (ARM, 88 bytes, Stack size 8 bytes, S105.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc000E4B83
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S105.o(.text)
</UL>
<P><STRONG><a name="[5b2b610]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S105.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S105.o(.text)
</UL>
<P><STRONG><a name="[5b2b5d4]"></a>SymLoc0009F2CE</STRONG> (ARM, 700 bytes, Stack size 88 bytes, S105.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = SymLoc0009F2CE &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S105.o(.text)
</UL>
<P><STRONG><a name="[5b2b598]"></a>SymLoc0007CE91</STRONG> (ARM, 732 bytes, Stack size 266544 bytes, S105.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
</UL>

<P><STRONG><a name="[5b2b55c]"></a>SymLoc00106302</STRONG> (ARM, 904 bytes, Stack size 160 bytes, S105.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b2b250]"></a>SymLoc00108EBD</STRONG> (ARM, 1580 bytes, Stack size 320 bytes, S107.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[5969fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11307856
<LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
</UL>

<P><STRONG><a name="[5b2b124]"></a>SymLoc000CD303</STRONG> (ARM, 1072 bytes, Stack size 544 bytes, S108.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b2b0e8]"></a>SymLoc001548CF</STRONG> (ARM, 1176 bytes, Stack size 8360 bytes, S108.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d08a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01504971
<LI><a href="#[58d10d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01571821
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b2af44]"></a>SymLoc000C62CB</STRONG> (ARM, 1824 bytes, Stack size 400 bytes, S109.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2af08]"></a>SymLoc000BDBA6</STRONG> (ARM, 108 bytes, Stack size 0 bytes, S109.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S109.o(.text)
</UL>
<P><STRONG><a name="[5b2aecc]"></a>SymLoc000F7595</STRONG> (ARM, 88 bytes, Stack size 0 bytes, S109.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S109.o(.text)
</UL>
<P><STRONG><a name="[5b2ae90]"></a>SymLoc000F133A</STRONG> (ARM, 104 bytes, Stack size 16 bytes, S109.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SymLoc000F133A
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S109.o(.text)
</UL>
<P><STRONG><a name="[5b2ae54]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S109.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S109.o(.text)
</UL>
<P><STRONG><a name="[5b2ae18]"></a>SymLoc00074153</STRONG> (ARM, 980 bytes, Stack size 96 bytes, S109.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = SymLoc00074153 &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S109.o(.text)
</UL>
<P><STRONG><a name="[5b2addc]"></a>SymLoc000C3146</STRONG> (ARM, 832 bytes, Stack size 266640 bytes, S109.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
</UL>

<P><STRONG><a name="[5b2ada0]"></a>SymLoc001293F5</STRONG> (ARM, 904 bytes, Stack size 160 bytes, S109.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b2ab0c]"></a>SymLoc000B7DC9</STRONG> (ARM, 376 bytes, Stack size 24 bytes, S111.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2aad0]"></a>SymLoc0006F842</STRONG> (ARM, 268 bytes, Stack size 24 bytes, S111.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2aa58]"></a>SymLoc000E6904</STRONG> (ARM, 1408 bytes, Stack size 400 bytes, S111.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2aa1c]"></a>SymLoc000B26F5</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S111.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S111.o(.text)
</UL>
<P><STRONG><a name="[5b2a9e0]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S111.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S111.o(.text)
</UL>
<P><STRONG><a name="[5b2a9a4]"></a>SymLoc000B6830</STRONG> (ARM, 884 bytes, Stack size 96 bytes, S111.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = SymLoc000B6830 &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S111.o(.text)
</UL>
<P><STRONG><a name="[5b2a968]"></a>SymLoc000899D1</STRONG> (ARM, 1728 bytes, Stack size 267728 bytes, S111.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b2a6d4]"></a>SymLoc0010CC72</STRONG> (ARM, 2316 bytes, Stack size 376 bytes, S113.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2a698]"></a>SymLoc000C0051</STRONG> (ARM, 76 bytes, Stack size 0 bytes, S113.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S113.o(.text)
</UL>
<P><STRONG><a name="[5b2a65c]"></a>SymLoc000EBC76</STRONG> (ARM, 120 bytes, Stack size 8 bytes, S113.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc000EBC76
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S113.o(.text)
</UL>
<P><STRONG><a name="[5b2a620]"></a>SymLoc0007D831</STRONG> (ARM, 952 bytes, Stack size 40 bytes, S113.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SymLoc0007D831
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S113.o(.text)
</UL>
<P><STRONG><a name="[5b2a5e4]"></a>SymLoc000A6B39</STRONG> (ARM, 2032 bytes, Stack size 264304 bytes, S113.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b2a5a8]"></a>SymLoc0010073B</STRONG> (ARM, 164 bytes, Stack size 16 bytes, S113.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2a56c]"></a>SymLoc0011622C</STRONG> (ARM, 216 bytes, Stack size 16 bytes, S113.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01218044
<LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2a350]"></a>SymLoc0008447A</STRONG> (ARM, 1016 bytes, Stack size 2248 bytes, S125.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2a170]"></a>SymLoc000CF46D</STRONG> (ARM, 336 bytes, Stack size 24 bytes, S127.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2a134]"></a>SymLoc001076D9</STRONG> (ARM, 820 bytes, Stack size 208 bytes, S127.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b2a0f8]"></a>SymLoc000B41CF</STRONG> (ARM, 1132 bytes, Stack size 384 bytes, S127.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2a0bc]"></a>SymLoc000E70F3</STRONG> (ARM, 40 bytes, Stack size 0 bytes, S127.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S127.o(.text)
</UL>
<P><STRONG><a name="[5b2a080]"></a>SyMbOl09981249</STRONG> (ARM, 16 bytes, Stack size 0 bytes, S127.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S127.o(.text)
</UL>
<P><STRONG><a name="[5b2a044]"></a>SymLoc0007B909</STRONG> (ARM, 840 bytes, Stack size 88 bytes, S127.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = SymLoc0007B909 &rArr; SDrandomize_find_elements
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrandomize_find_elements
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S127.o(.text)
</UL>
<P><STRONG><a name="[5b2a008]"></a>SymLoc000BC8B3</STRONG> (ARM, 1756 bytes, Stack size 267728 bytes, S127.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d08dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01250317
<LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
<LI><a href="#[58d12f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLocH00012B2C
<LI><a href="#[58d7704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04660209
</UL>

<P><STRONG><a name="[5b29fcc]"></a>SymLoc000BE838</STRONG> (ARM, 220 bytes, Stack size 24 bytes, S127.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
</UL>

<P><STRONG><a name="[5b298c4]"></a>SymLoc00114E5F</STRONG> (ARM, 2628 bytes, Stack size 208 bytes, S134.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
<LI><a href="#[596c678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001236DB
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
</UL>

<P><STRONG><a name="[5b295b8]"></a>SymLoc000C5F21</STRONG> (ARM, 1048 bytes, Stack size 80 bytes, S136.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01260761
<LI><a href="#[58d0d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDright_angle_density
<LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b2957c]"></a>SymLoc000EF2E8</STRONG> (ARM, 72 bytes, Stack size 0 bytes, S136.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S136.o(.text)
</UL>
<P><STRONG><a name="[5b29540]"></a>SymLoc000D86E9</STRONG> (ARM, 44 bytes, Stack size 0 bytes, S136.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S136.o(.text)
</UL>
<P><STRONG><a name="[5b29504]"></a>SymLoc0007E634</STRONG> (ARM, 100 bytes, Stack size 8 bytes, S136.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SymLoc0007E634 &rArr; SyMbOl01249397 &rArr; SymLoc0011EB2F
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01249397
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S136.o(.text)
</UL>
<P><STRONG><a name="[5b294c8]"></a>SymLoc000F4979</STRONG> (ARM, 216 bytes, Stack size 8 bytes, S136.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SymLoc000F4979
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S136.o(.text)
</UL>
<P><STRONG><a name="[5b2948c]"></a>SymLoc000CC5F2</STRONG> (ARM, 64 bytes, Stack size 0 bytes, S136.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S136.o(.text)
</UL>
<P><STRONG><a name="[5b29450]"></a>SymLoc000A2985</STRONG> (ARM, 324 bytes, Stack size 24 bytes, S136.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SymLoc000A2985
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S136.o(.text)
</UL>
<P><STRONG><a name="[5b29414]"></a>SymLoc0007AB08</STRONG> (ARM, 648 bytes, Stack size 36384 bytes, S136.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d09cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01357995
<LI><a href="#[58d0a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01573235
<LI><a href="#[58d0a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01559305
<LI><a href="#[58d0a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01452031
<LI><a href="#[58d0b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01533577
</UL>

<P><STRONG><a name="[5b290cc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S139.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S139.o(.text)
</UL>
<P><STRONG><a name="[5b29054]"></a>SymLoc000AF9A9</STRONG> (ARM, 340 bytes, Stack size 48 bytes, S139.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04782647
</UL>

<P><STRONG><a name="[5b29018]"></a>SymLoc00066AE7</STRONG> (ARM, 1432 bytes, Stack size 256 bytes, S139.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[596a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001716AC
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
<LI><a href="#[596d53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0007A808
</UL>

<P><STRONG><a name="[5b28f64]"></a>SymLoc000D6CAF</STRONG> (ARM, 2504 bytes, Stack size 2888 bytes, S139.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[5969f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11544671
<LI><a href="#[596a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc001716AC
<LI><a href="#[596a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc00147CA5
<LI><a href="#[596e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc0014200A
</UL>

<P><STRONG><a name="[5b28f28]"></a>SymLoc00071763</STRONG> (ARM, 2556 bytes, Stack size 168 bytes, S139.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
</UL>

<P><STRONG><a name="[5b28e74]"></a>SymLoc0015BFE0</STRONG> (ARM, 1140 bytes, Stack size 192 bytes, S139.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000C0A55
</UL>

<P><STRONG><a name="[5b28e38]"></a>SymLoc0018D2C2</STRONG> (ARM, 800 bytes, Stack size 104 bytes, S139.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
</UL>

<P><STRONG><a name="[5b286f4]"></a>AAAAAAA</STRONG> (ARM, 952 bytes, Stack size 456 bytes, S149.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11318739
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
</UL>

<P><STRONG><a name="[5b28550]"></a>img_tools_get_edge_based_energy_info</STRONG> (ARM, 288 bytes, Stack size 32288 bytes, S150.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_envelope_min_max
<LI><a href="#[596a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vp_iv_edge_finder_envelope_peak_detection
<LI><a href="#[596bb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_fast_pixelstep_bilinear_2pnt
<LI><a href="#[596bd54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ia_frame_A
</UL>

<P><STRONG><a name="[5b28118]"></a>SDvector_weighted_average</STRONG> (ARM, 1488 bytes, Stack size 360 bytes, S006.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b280dc]"></a>SDchoose_best_vector</STRONG> (ARM, 960 bytes, Stack size 112 bytes, S006.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
</UL>

<P><STRONG><a name="[5b280a0]"></a>AAAAAAJ</STRONG> (ARM, 444 bytes, Stack size 176 bytes, S006.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d060c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAX
<LI><a href="#[596b64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAC
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>

<P><STRONG><a name="[5b27fec]"></a>SDdiscard_impossible_vectors</STRONG> (ARM, 1116 bytes, Stack size 304 bytes, S006.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b27d58]"></a>SymLoc000F97F7</STRONG> (ARM, 156 bytes, Stack size 40 bytes, S008.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
<LI><a href="#[5a2a78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDhypothesize_inverted
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5b27d1c]"></a>SymLoc000D8FAD</STRONG> (ARM, 144 bytes, Stack size 48 bytes, S008.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAD
<LI><a href="#[5a2a78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDhypothesize_inverted
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2a6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SymLoc000D6019
</UL>

<P><STRONG><a name="[5b27434]"></a>SymLoc000003f4Lc450xac</STRONG> (ARM, 172 bytes, Stack size 40 bytes, S029.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[5b27380]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S029.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S029.o(.text)
</UL>
<P><STRONG><a name="[5b270b0]"></a>SyMbOl06290326</STRONG> (ARM, 732 bytes, Stack size 1320 bytes, S049.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[58d0ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01356050
<LI><a href="#[58d0fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01285564
<LI><a href="#[58d0fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01443772
<LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
</UL>

<P><STRONG><a name="[5b26cf0]"></a>SyMbOl05648481</STRONG> (ARM, 1200 bytes, Stack size 688 bytes, S051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
<LI><a href="#[596a260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11405961
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
</UL>

<P><STRONG><a name="[5b26b4c]"></a>SyMbOl05874340</STRONG> (ARM, 188 bytes, Stack size 24 bytes, S053.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[5b26b10]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S053.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S053.o(.text)
</UL>
<P><STRONG><a name="[5b26ad4]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S053.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S053.o(.text)
</UL>
<P><STRONG><a name="[5b268b8]"></a>SyMbOl06074826</STRONG> (ARM, 552 bytes, Stack size 48 bytes, S054.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b2687c]"></a>SyMbOl06367781</STRONG> (ARM, 848 bytes, Stack size 56 bytes, S054.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596b7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAB
</UL>

<P><STRONG><a name="[5b26228]"></a>SyMbOl81134524J</STRONG> (ARM, 32 bytes, Stack size 0 bytes, S056.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S056.o(.text)
</UL>
<P><STRONG><a name="[5b261ec]"></a>SyMbOl81134524p</STRONG> (ARM, 1472 bytes, Stack size 1160 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d05d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDretry_slow_way
</UL>

<P><STRONG><a name="[5b261b0]"></a>SyMbOl81134524m</STRONG> (ARM, 2056 bytes, Stack size 1080 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[5969f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11695485
<LI><a href="#[596a2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11378685
</UL>

<P><STRONG><a name="[5b26174]"></a>SymLoc0000112cLc1000x1cc</STRONG> (ARM, 544 bytes, Stack size 32 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11668822
</UL>

<P><STRONG><a name="[5b260fc]"></a>SyMbOl81134424P</STRONG> (ARM, 656 bytes, Stack size 2056 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d12b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDrank_algorithmic_options
<LI><a href="#[58d8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01476036
</UL>

<P><STRONG><a name="[5b260c0]"></a>SymLoc000807D3</STRONG> (ARM, 1372 bytes, Stack size 45368 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b26084]"></a>SyMbOl81134524x</STRONG> (ARM, 40 bytes, Stack size 16 bytes, S056.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SyMbOl81134524x &rArr; SyMbOl04763019 &rArr; SyMbOl04526112
</UL>
<BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
</UL>
<BR>[Address Reference Count : 1]<UL><LI> S056.o(.text)
</UL>
<P><STRONG><a name="[5b26048]"></a>SymLoc000FB782</STRONG> (ARM, 1540 bytes, Stack size 304 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d0f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01634753
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b2600c]"></a>SyMbOl81134424O</STRONG> (ARM, 736 bytes, Stack size 9128 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b25fd0]"></a>SyMbOl81134524L</STRONG> (ARM, 1236 bytes, Stack size 3344 bytes, S056.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[58d8334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl10132084
<LI><a href="#[596a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11518312
<LI><a href="#[596a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11468792
<LI><a href="#[596a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDeigenfit
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b25b20]"></a>SyMbOl07100913</STRONG> (ARM, 960 bytes, Stack size 2848 bytes, S060.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01421208
<LI><a href="#[58d0bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAAV
<LI><a href="#[58d0e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01312844
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b25aa8]"></a>SyMbOl06808327</STRONG> (ARM, 224 bytes, Stack size 32 bytes, S060.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b25724]"></a>SyMbOl07108943</STRONG> (ARM, 604 bytes, Stack size 600 bytes, S062.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11443270
</UL>

<P><STRONG><a name="[5b256e8]"></a>SyMbOl06990664</STRONG> (ARM, 584 bytes, Stack size 72 bytes, S062.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d01d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04457054
<LI><a href="#[58d0558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAAAAAAAAAA
<LI><a href="#[596d5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11643955
<LI><a href="#[596ea54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11620173
</UL>

<P><STRONG><a name="[5b25364]"></a>SymLoc0018456F</STRONG> (ARM, 2312 bytes, Stack size 88 bytes, S064.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl01491665
</UL>

<P><STRONG><a name="[5b25328]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S064.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S064.o(.text)
</UL>
<P><STRONG><a name="[5b25058]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S076.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S076.o(.text)
</UL>
<P><STRONG><a name="[5b24fe0]"></a>SyMbOl09035529</STRONG> (ARM, 636 bytes, Stack size 176 bytes, S076.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b24fa4]"></a>SyMbOl08877877</STRONG> (ARM, 116 bytes, Stack size 24 bytes, S076.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b23dd4]"></a>SymLoc0011CC70</STRONG> (ARM, 1512 bytes, Stack size 104 bytes, S115.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b23d5c]"></a>SymLoc000C7B77</STRONG> (ARM, 1096 bytes, Stack size 312 bytes, S115.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596c6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03530151
<LI><a href="#[596c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl03549640
<LI><a href="#[596d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11631621
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b235dc]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S140.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S140.o(.text)
</UL>
<P><STRONG><a name="[5b22f10]"></a>AAAAAAN</STRONG> (ARM, 644 bytes, Stack size 1456 bytes, S147.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d006c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11369790
<LI><a href="#[58d0198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl04763019
<LI><a href="#[596a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11430759
<LI><a href="#[596d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyMbOl11593490
</UL>

<P><STRONG><a name="[5b223d0]"></a>__switch$$</STRONG> (ARM, 0 bytes, Stack size unknown bytes, S075.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> S075.o(.text)
</UL>
<P><STRONG><a name="[5dd47c4]"></a>_partition_sort</STRONG> (Thumb, 502 bytes, Stack size 304 bytes, qsortnoex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd4788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>

<P><STRONG><a name="[5dd2a3c]"></a>__arm_div_large_positive</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[5dd2a00]"></a>__arm_div16</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[5dd29c4]"></a>__arm_div12</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[5dd2988]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[5dd294c]"></a>__arm_div4</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[5dd1074]"></a>_Z12tbc_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtti.o(i._Z12tbc_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Z12tbc_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE &rArr; _ZNKSt9type_infoeqERKS_
</UL>
<BR>[Calls]<UL><LI><a href="#[5dfdb3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNKSt9type_infoeqERKS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtti.o(i.__dynamic_cast)
</UL>
<P><STRONG><a name="[5dd1038]"></a>_Z17tbc_post_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtti.o(i._Z17tbc_post_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Z17tbc_post_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE &rArr; _ZNKSt9type_infoeqERKS_
</UL>
<BR>[Calls]<UL><LI><a href="#[5dfdb3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNKSt9type_infoeqERKS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtti.o(i.__dynamic_cast)
</UL>
<P><STRONG><a name="[5dcde88]"></a>ddiv_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dcc970]"></a>_fdiv1</STRONG> (ARM, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e031f4]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[5e02d44]"></a>_printf_input_wchar</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_wchar_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_wchar_common.o(.text)
</UL>
<P><STRONG><a name="[5e01bec]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[5e63de8]"></a>_Z27__default_terminate_handlerv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_exceptions_globs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[5dcb2f0]"></a>__alloca_longjmp</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dcb32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longjmp
</UL>

<P><STRONG><a name="[5dcb2b4]"></a>__alloca_setjmp</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dcb368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setjmp
</UL>

<P><STRONG><a name="[5df8de4]"></a>__cxa_type_match</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd48b4]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd492c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5df651c]"></a>_handle_redirection</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd4a1c]"></a>_mbdata</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd4a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbstowcs
</UL>

<P><STRONG><a name="[5dd5034]"></a>_mutex_acquire</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e00878]"></a>_mutex_free</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5dd4ff8]"></a>_mutex_release</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[5e02768]"></a>_printf_fp_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e027a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[5dfb580]"></a>_scanf_longlong</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfb5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[5dfb544]"></a>_scanf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfb5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[5dfb508]"></a>_scanf_wctomb</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dfb5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<HR></body></html>
