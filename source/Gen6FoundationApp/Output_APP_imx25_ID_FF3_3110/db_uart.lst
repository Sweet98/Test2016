


ARM Macro Assembler    Page 1 


    1 00000000         ;;
    2 00000000         ;    Assembly defines and code to support uart stuff I w
                       ished I could do in C code
    3 00000000         ;;
    4 00000000         ;;
    5 00000000         ;;======================================================
                       ================================
    6 00000000         ;; Revision information
    7 00000000         ;;======================================================
                       ================================
    8 00000000         ;; $RCSfile: db_shared/db_uart.s $
    9 00000000         ;; $Revision: 1.1.2.11 $
   10 00000000         ;; $Date: 2011/02/25 10:09:51EST $
   11 00000000         ;;======================================================
                       ================================
   12 00000000         
   13 00000000         ;INCLUDE   db_memap.s    ; Defines how we're allocating 
                       RAM for application code, stacks, etc.
   14 00000000                 INCLUDE          db_hdw.s    ; Definitions of SA
                                                            -11x0 registers and
                                                             bit settings
    1 00000000         ;;
    2 00000000         ;    Code attempting to build from scratch assembly nece
                       ssary internal regs for Dragonball processor
    3 00000000         ;;
    4 00000000         ;;
    5 00000000         ;;======================================================
                       ================================
    6 00000000         ;; Revision information
    7 00000000         ;;======================================================
                       ================================
    8 00000000         ;; $RCSfile: db_shared/db_hdw.s $
    9 00000000         ;; $Revision: 1.3.3.29 $
   10 00000000         ;; $Date: 2009/01/22 11:52:55EST $
   11 00000000         ;;======================================================
                       ================================
   12 00000000         
   13 00000000         ;;
   14 00000000         ;;Define flag to allow memory tests to run
   15 00000000         ;;
   16 00000000                 GBLL             MEMORY_DEBUG
   17 00000000 FALSE    
                       MEMORY_DEBUG
                               SETL             {FALSE}
   18 00000000         ;MEMORY_DEBUG SETL {TRUE}
   19 00000000         
   20 00000000         ;;
   21 00000000         ;;Define flag to allow for DDR memory width for use in c
                       onfiguration
   22 00000000         ;;
   23 00000000         ;;GBLL  Eval_Bd_with_MEMORY_32W
   24 00000000         ;;Eval_Bd_with_MEMORY_32W  SETL {TRUE}
   25 00000000         ;;Eval_Bd_with_MEMORY_32W  SETL {FALSE}
   26 00000000         
   27 00000000         ;;
   28 00000000         ;;This is set by assembler build options in "Mks_project
                       _target_foundations.mk"
   29 00000000         ;;
   30 00000000         ;;GBLS    platform_current



ARM Macro Assembler    Page 2 


   31 00000000         ;;platform_current SETS "mxl"  ;;"mxl"
   32 00000000         ;;platform_current SETS "imx27"  ;;"imx27"
   33 00000000         ;;platform_current SETS "imx25"  ;;"imx25"
   34 00000000         ;;
   35 00000000         ;;
   36 00000000         ;;This is set by assembler build options in "Mks_project
                       _target_foundations.mk"
   37 00000000         ;;
   38 00000000         ;;GBLS    Board_TARGET
   39 00000000         ;;Board_TARGET SETS "MXL_Matrix"   ;;MXL Matrix Board (G
                       EN 5)
   40 00000000         ;;Board_TARGET SETS "iMX27_Development"  ;;Logic PD Deve
                       lopment Board For iMX27
   41 00000000         ;;Board_TARGET SETS "iMX27_FF1"    ;;Form Factor Board f
                       or iMX27
   42 00000000         ;;Board_TARGET SETS "iMX25_Development"  ;;Development B
                       oard For iMX25 (plugs into Logic PD board)
   43 00000000         ;;Board_TARGET SETS "iMX25_Gen6_Board"  ;;Cordless/Corde
                       d Form Factor Boards for iMX25
   44 00000000         ;;Board_TARGET SETS "iMX25_Trace"   ;;Form Factor Board 
                       for iMX25 with Trace Lines initilized
   45 00000000         
   46 00000000         
   47 00000000         
   48 00000000         ;; ARM Program Status Register
   49 00000000         ;; 31  30  29  28  27  .........  7   6   5  4  3  2  1 
                        0
   50 00000000         ;; -----------------------------------------------------
                       -----
   51 00000000         ;; | N | Z | C | V | Q |         | I | F | T |   M4 - M0
                           |
   52 00000000         ;; -----------------------------------------------------
                       -----
   53 00000000         ;;
   54 00000000         ;; #########################################
   55 00000000         ;; # ARM INTERRUPTS                        #
   56 00000000         ;; #########################################
   57 00000000 000000C0 
                       INTERRUPT_BITS
                               EQU              0xC0
   58 00000000 00000040 
                       DISABLE_FIQ
                               EQU              0x40
   59 00000000 00000080 
                       DISABLE_IRQ
                               EQU              0x80
   60 00000000         ;;
   61 00000000         ;;Setup for the status register control bits, can only b
                       e changed on a privilaged mode
   62 00000000         ;;
   63 00000000 00000080 
                       I_Bit   EQU              0x80        ;;disables IRQ inte
                                                            rupts when set
   64 00000000 00000040 
                       F_Bit   EQU              0x40        ;;disables FIQ inte
                                                            rupts when set
   65 00000000         
   66 00000000         ;;
   67 00000000         ;; #########################################



ARM Macro Assembler    Page 3 


   68 00000000         ;; # ARM MODES = {M4, M3, M2, M1, M0}      #
   69 00000000         ;; #########################################
   70 00000000         ;;
   71 00000000         ;; The M_bits for status register
   72 00000000         ;;
   73 00000000         ;; Some standard ARM v4T definitions, assuming for the m
                       oment none of this changes from StrongArm's implementati
                       on.
   74 00000000         ;; Current program status register (CSPR) bits.
   75 00000000         ;; Bits [4:0] are used to define the processor modes as 
                       detailed below.
   76 00000000         ;;
   77 00000000 00000010 
                       Mode_USR
                               EQU              0x10        ;;User mode
   78 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11        ;;FIQ - fast interu
                                                            pt request,  a priv
                                                            ilaged mode
   79 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12        ;;IRQ - interupt re
                                                            quest,  a privilage
                                                            d mode
   80 00000000 00000013 
                       Mode_SVC
                               EQU              0x13        ;;Supervisor,  a pr
                                                            ivilaged mode
   81 00000000 00000017 
                       Mode_ABT
                               EQU              0x17        ;;Abort,  a privila
                                                            ged mode
   82 00000000 0000001B 
                       Mode_UNDEF
                               EQU              0x1B        ;;Undefined,  a pri
                                                            vilaged mode
   83 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F        ;;System,  a privil
                                                            aged mode , only av
                                                            ailable on ARM Arch
                                                            . v4 and above
   84 00000000 00000016 
                       Mode_MON
                               EQU              0x16        ;;Security Extensio
                                                            ns only , only avai
                                                            lable on ARM Arch. 
                                                            v6 and above
   85 00000000         
   86 00000000         ;;
   87 00000000         ;; #########################################
   88 00000000         ;; # ARM CONDITION CODE FLAG = {N,Z,C,V,Q} #
   89 00000000         ;; #########################################
   90 00000000 F8000000 
                       FLAG_BITS
                               EQU              0xF8000000
   91 00000000 80000000 
                       NFLAG   EQU              0x80000000



ARM Macro Assembler    Page 4 


   92 00000000 40000000 
                       ZFLAG   EQU              0x40000000
   93 00000000 20000000 
                       CFLAG   EQU              0x20000000
   94 00000000 10000000 
                       VFLAG   EQU              0x10000000
   95 00000000 08000000 
                       QFLAG   EQU              0x08000000
   96 00000000         
   97 00000000         
   98 00000000         ;;
   99 00000000         ;;Platform Check
  100 00000000         ;;******************************************************
                       *******************
  101 00000000         
  102 00000000                 IF               platform_current = "imx25"
  103 00000000                 INCLUDE          iMX25_hdw.i
    1 00000000         ;*******************************************************
                       ********************************/
    2 00000000         ;*
    3 00000000         ;* HSM 48X0G GENERATION 6 SOFTWARE
    4 00000000         ;*
    5 00000000         ;*  HARDWARE MACROS 
    6 00000000         ;*  Date:       9/29/2008
    7 00000000         ;*  Tools:      RVCT Build 674
    8 00000000         ;*  Target:     Freescale iMX25
    9 00000000         ;*
   10 00000000         ;*======================================================
                       ================================
   11 00000000         ;* Revision information
   12 00000000         ;*======================================================
                       ================================
   13 00000000         ;* $RCSfile: db_shared/Hardware_Header_Files/iMX25/iMX25
                       _hdw.i $
   14 00000000         ;* $Revision: 1.30 $
   15 00000000         ;* $Date: 2010/12/20 14:15:29EST $
   16 00000000         ;*======================================================
                       ================================
   17 00000000         ;*------------------------------------------------------
                       ------------------------
   18 00000000         ;* Header:  iMX25_hdw.i
   19 00000000         ;*
   20 00000000         ;* This File defines the iMX25 ASM Hardware
   21 00000000         ;*
   22 00000000         ;*------------------------------------------------------
                       ------------------------  
   23 00000000         
   24 00000000         ;; #########################################
   25 00000000         ;; # AIPS1        #
   26 00000000         ;; #########################################
   27 00000000 43F00000 
                       AIPS1_BASE_ADDR
                               EQU              0x43F00000
   28 00000000 43F00000 
                       AIPS1_MPROT0_7
                               EQU              (AIPS1_BASE_ADDR+0x00) ;; Maste
                                                            r Privilege Reg 0-7
                                                            
   29 00000000 43F00004 



ARM Macro Assembler    Page 5 


                       AIPS1_MPROT8_15
                               EQU              (AIPS1_BASE_ADDR+0x04) ;; Maste
                                                            r Privilege Reg 8-1
                                                            5
   30 00000000 43F00020 
                       AIPS1_PACR0_7
                               EQU              (AIPS1_BASE_ADDR+0x20) ;; Perip
                                                            heral Access Contro
                                                            l Reg 0-7
   31 00000000 43F00024 
                       AIPS1_PACR8_15
                               EQU              (AIPS1_BASE_ADDR+0x24) ;; Perip
                                                            heral Access Contro
                                                            l Reg 8-15
   32 00000000 43F00028 
                       AIPS1_PACR16_23
                               EQU              (AIPS1_BASE_ADDR+0x28) ;; Perip
                                                            heral Access Contro
                                                            l Reg 16-23
   33 00000000 43F0002C 
                       AIPS1_PACR24_31
                               EQU              (AIPS1_BASE_ADDR+0x2C) ;; Perip
                                                            heral Access Contro
                                                            l Reg 24-32
   34 00000000 43F00040 
                       AIPS1_OPACR0_7
                               EQU              (AIPS1_BASE_ADDR+0x40) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 0-7
   35 00000000 43F00044 
                       AIPS1_OPACR8_15
                               EQU              (AIPS1_BASE_ADDR+0x44) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 8-15
   36 00000000 43F00048 
                       AIPS1_OPACR16_23
                               EQU              (AIPS1_BASE_ADDR+0x48) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 16-23
   37 00000000 43F0004C 
                       AIPS1_OPACR24_31
                               EQU              (AIPS1_BASE_ADDR+0x4C) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 24-31
   38 00000000 43F00050 
                       AIPS1_OPACR32_33
                               EQU              (AIPS1_BASE_ADDR+0x50) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 32-33
   39 00000000         
   40 00000000 77777777 
                       AIPS1_MPROT0_7_Setting
                               EQU              0x77777777  ;; Master Privilege
                                                             Reg 0-7
   41 00000000 77777777 
                       AIPS1_MPROT8_15_Setting
                               EQU              0x77777777  ;; Master Privilege
                                                             Reg 8-15
   42 00000000 00000000 



ARM Macro Assembler    Page 6 


                       AIPS1_PACR0_7_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 0-7
   43 00000000 00000000 
                       AIPS1_PACR8_15_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 8-15
   44 00000000 00000000 
                       AIPS1_PACR16_23_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 16-23
                                                            
   45 00000000 00000000 
                       AIPS1_PACR24_31_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 24-32
                                                            
   46 00000000 00000000 
                       AIPS1_OPACR0_7_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 0-
                                                            7
   47 00000000 00000000 
                       AIPS1_OPACR8_15_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 8-
                                                            15
   48 00000000 00000000 
                       AIPS1_OPACR16_23_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 16
                                                            -23
   49 00000000 00000000 
                       AIPS1_OPACR24_31_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 24
                                                            -31
   50 00000000 00000000 
                       AIPS1_OPACR32_33_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 32
                                                            -33
   51 00000000 00000000 
                       AIPS1_ZERO_Setting
                               EQU              0x00000000  ;; Zero Value
   52 00000000         
   53 00000000         
   54 00000000         ;; #########################################
   55 00000000         ;; # AIPS2        #
   56 00000000         ;; #########################################
   57 00000000 53F00000 
                       AIPS2_BASE_ADDR
                               EQU              0x53F00000
   58 00000000 53F00000 
                       AIPS2_MPROT0_7
                               EQU              (AIPS2_BASE_ADDR+0x00) ;; Maste
                                                            r Privilege Reg 0-7
                                                            
   59 00000000 53F00004 



ARM Macro Assembler    Page 7 


                       AIPS2_MPROT8_15
                               EQU              (AIPS2_BASE_ADDR+0x04) ;; Maste
                                                            r Privilege Reg 8-1
                                                            5
   60 00000000 53F00020 
                       AIPS2_PACR0_7
                               EQU              (AIPS2_BASE_ADDR+0x20) ;; Perip
                                                            heral Access Contro
                                                            l Reg 0-7
   61 00000000 53F00024 
                       AIPS2_PACR8_15
                               EQU              (AIPS2_BASE_ADDR+0x24) ;; Perip
                                                            heral Access Contro
                                                            l Reg 8-15
   62 00000000 53F00028 
                       AIPS2_PACR16_23
                               EQU              (AIPS2_BASE_ADDR+0x28) ;; Perip
                                                            heral Access Contro
                                                            l Reg 16-23
   63 00000000 53F0002C 
                       AIPS2_PACR24_31
                               EQU              (AIPS2_BASE_ADDR+0x2C) ;; Perip
                                                            heral Access Contro
                                                            l Reg 24-32
   64 00000000 53F00040 
                       AIPS2_OPACR0_7
                               EQU              (AIPS2_BASE_ADDR+0x40) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 0-7
   65 00000000 53F00044 
                       AIPS2_OPACR8_15
                               EQU              (AIPS2_BASE_ADDR+0x44) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 8-15
   66 00000000 53F00048 
                       AIPS2_OPACR16_23
                               EQU              (AIPS2_BASE_ADDR+0x48) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 16-23
   67 00000000 53F0004C 
                       AIPS2_OPACR24_31
                               EQU              (AIPS2_BASE_ADDR+0x4C) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 24-31
   68 00000000 53F00050 
                       AIPS2_OPACR32_33
                               EQU              (AIPS2_BASE_ADDR+0x50) ;; Off-P
                                                            latform Peri Access
                                                             Ctl Reg 32-33
   69 00000000         
   70 00000000 77777777 
                       AIPS2_MPROT0_7_Setting
                               EQU              0x77777777  ;; Master Privilege
                                                             Reg 0-7
   71 00000000 77777777 
                       AIPS2_MPROT8_15_Setting
                               EQU              0x77777777  ;; Master Privilege
                                                             Reg 8-15
   72 00000000 00000000 



ARM Macro Assembler    Page 8 


                       AIPS2_PACR0_7_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 0-7
   73 00000000 00000000 
                       AIPS2_PACR8_15_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 8-15
   74 00000000 00000000 
                       AIPS2_PACR16_23_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 16-23
                                                            
   75 00000000 00000000 
                       AIPS2_PACR24_31_Setting
                               EQU              0x00000000  ;; Peripheral Acces
                                                            s Control Reg 24-32
                                                            
   76 00000000 00000000 
                       AIPS2_OPACR0_7_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 0-
                                                            7
   77 00000000 00000000 
                       AIPS2_OPACR8_15_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 8-
                                                            15
   78 00000000 00000000 
                       AIPS2_OPACR16_23_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 16
                                                            -23
   79 00000000 00000000 
                       AIPS2_OPACR24_31_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 24
                                                            -31
   80 00000000 00000000 
                       AIPS2_OPACR32_33_Setting
                               EQU              0x00000000  ;; Off-Platform Per
                                                            i Access Ctl Reg 32
                                                            -33
   81 00000000 00000000 
                       AIPS2_ZERO_Setting
                               EQU              0x00000000  ;; Zero Value
   82 00000000         
   83 00000000         ;; #########################################
   84 00000000         ;; # ASIC        #
   85 00000000         ;; #########################################
   86 00000000 68000000 
                       ASIC_BASE_ADDR
                               EQU              0x68000000
   87 00000000 68000000 
                       ASIC_INTCNTL
                               EQU              (ASIC_BASE_ADDR+0x00) ;; 32bit 
                                                            ASIC int control re
                                                            g
   88 00000000 68000004 
                       ASIC_NIMASK



ARM Macro Assembler    Page 9 


                               EQU              (ASIC_BASE_ADDR+0x04) ;; 32bit 
                                                            ASIC int mask reg
   89 00000000 68000008 
                       ASIC_INTENNUM
                               EQU              (ASIC_BASE_ADDR+0x08) ;; 32bit 
                                                            ASIC int enable num
                                                            ber reg
   90 00000000 6800000C 
                       ASIC_INTDISNUM
                               EQU              (ASIC_BASE_ADDR+0x0C) ;; 32bit 
                                                            ASIC int disable nu
                                                            mber reg
   91 00000000 68000010 
                       ASIC_INTENABLEH
                               EQU              (ASIC_BASE_ADDR+0x10) ;; 32bit 
                                                            ASIC int enable reg
                                                             high
   92 00000000 68000014 
                       ASIC_INTENABLEL
                               EQU              (ASIC_BASE_ADDR+0x14) ;; 32bit 
                                                            ASIC int enable reg
                                                             low
   93 00000000 68000018 
                       ASIC_INTTYPEH
                               EQU              (ASIC_BASE_ADDR+0x18) ;; 32bit 
                                                            ASIC int type reg h
                                                            igh
   94 00000000 6800001C 
                       ASIC_INTTYPEL
                               EQU              (ASIC_BASE_ADDR+0x1C) ;; 32bit 
                                                            ASIC int type reg l
                                                            ow
   95 00000000 68000020 
                       ASIC_NIPRIORITY7
                               EQU              (ASIC_BASE_ADDR+0x20) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl7
   96 00000000 68000024 
                       ASIC_NIPRIORITY6
                               EQU              (ASIC_BASE_ADDR+0x24) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl6
   97 00000000 68000028 
                       ASIC_NIPRIORITY5
                               EQU              (ASIC_BASE_ADDR+0x28) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl5
   98 00000000 6800002C 
                       ASIC_NIPRIORITY4
                               EQU              (ASIC_BASE_ADDR+0x2C) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl4
   99 00000000 68000030 
                       ASIC_NIPRIORITY3
                               EQU              (ASIC_BASE_ADDR+0x30) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl3
  100 00000000 68000034 
                       ASIC_NIPRIORITY2



ARM Macro Assembler    Page 10 


                               EQU              (ASIC_BASE_ADDR+0x34) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl2
  101 00000000 68000038 
                       ASIC_NIPRIORITY1
                               EQU              (ASIC_BASE_ADDR+0x38) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl1
  102 00000000 6800003C 
                       ASIC_NIPRIORITY0
                               EQU              (ASIC_BASE_ADDR+0x3C) ;; 32bit 
                                                            ASIC norm int prior
                                                            ity lvl0
  103 00000000 68000040 
                       ASIC_NIVECSR
                               EQU              (ASIC_BASE_ADDR+0x40) ;; 32bit 
                                                            ASIC norm int vecto
                                                            r/status
  104 00000000 68000044 
                       ASIC_FIVECSR
                               EQU              (ASIC_BASE_ADDR+0x44) ;; 32bit 
                                                            ASIC fast int vecto
                                                            r/status
  105 00000000 68000048 
                       ASIC_INTSRCH
                               EQU              (ASIC_BASE_ADDR+0x48) ;; 32bit 
                                                            ASIC int source reg
                                                             high
  106 00000000 6800004C 
                       ASIC_INTSRCL
                               EQU              (ASIC_BASE_ADDR+0x4C) ;; 32bit 
                                                            ASIC int source reg
                                                             low
  107 00000000 68000050 
                       ASIC_INTFRCH
                               EQU              (ASIC_BASE_ADDR+0x50) ;; 32bit 
                                                            ASIC int force reg 
                                                            high
  108 00000000 68000054 
                       ASIC_INTFRCL
                               EQU              (ASIC_BASE_ADDR+0x54) ;; 32bit 
                                                            ASIC int force reg 
                                                            low
  109 00000000 68000058 
                       ASIC_NIPNDH
                               EQU              (ASIC_BASE_ADDR+0x58) ;; 32bit 
                                                            ASIC norm int pendi
                                                            ng high
  110 00000000 6800005C 
                       ASIC_NIPNDL
                               EQU              (ASIC_BASE_ADDR+0x5C) ;; 32bit 
                                                            ASIC norm int pendi
                                                            ng low
  111 00000000 68000060 
                       ASIC_FIPNDH
                               EQU              (ASIC_BASE_ADDR+0x60) ;; 32bit 
                                                            ASIC fast int pendi
                                                            ng high
  112 00000000 68000064 



ARM Macro Assembler    Page 11 


                       ASIC_FIPNDL
                               EQU              (ASIC_BASE_ADDR+0x64) ;; 32bit 
                                                            ASIC fast int pendi
                                                            ng low
  113 00000000         
  114 00000000         ;;AITC name conversion table
  115 00000000         ;; mxl has the following nomenclature, so to ease the co
                       nversion of manual to platform naming convention, redund
                       antly re-define pin names.
  116 00000000         ;;
  117 00000000 68000040 
                       NIVESCR EQU              ASIC_NIVECSR ;;NIVECSR - Normal
                                                             Interrupt Vector a
                                                            nd Status Register
  118 00000000 68000044 
                       FIVESCR EQU              ASIC_FIVECSR ;;FIVECSR - Fast I
                                                            nterrupt Vector and
                                                             Status Register
  119 00000000         ;; to avoid literal pool entering the game -- not even s
                       ure what the time/other implications are, but...
  120 00000000 68000000 
                       BASE_INT_REG
                               EQU              0x68000000  ;;Upper half of reg
                                                            ister base address
  121 00000000 00000000 
                       AITC_OFFSET
                               EQU              0x00000000  ;;Lower half of reg
                                                            ister base address
  122 00000000 00000040 
                       NIVESCR_REG_OFFSET
                               EQU              0x40        ;;offset for NIVECS
                                                            R
  123 00000000 00000044 
                       FIVESCR_REG_OFFSET
                               EQU              0x44        ;;offset for FIVECS
                                                            R
  124 00000000         
  125 00000000         ;; #########################################
  126 00000000         ;; # CRM        #
  127 00000000         ;; # $53F8_0000 to $53F8_3FFF     #
  128 00000000         ;; #########################################
  129 00000000 53F80000 
                       CRM_BASE_ADDR
                               EQU              0x53F80000
  130 00000000 53F80000 
                       CRM_MPCTL
                               EQU              (CRM_BASE_ADDR+0x00) ;; MCU PLL
                                                             Control Register
  131 00000000 53F80004 
                       CRM_UPCTL
                               EQU              (CRM_BASE_ADDR+0x04) ;; USB PLL
                                                             Control Register
  132 00000000 53F80008 
                       CRM_CCTL
                               EQU              (CRM_BASE_ADDR+0x08) ;; Clock C
                                                            ontrol Register
  133 00000000 53F8000C 
                       CRM_CGR0
                               EQU              (CRM_BASE_ADDR+0x0C) ;; Clock G



ARM Macro Assembler    Page 12 


                                                            ating Register 0
  134 00000000 53F80010 
                       CRM_CGR1
                               EQU              (CRM_BASE_ADDR+0x10) ;; Clock G
                                                            ating Register 1
  135 00000000 53F80014 
                       CRM_CGR2
                               EQU              (CRM_BASE_ADDR+0x14) ;; Clock G
                                                            ating Register 2
  136 00000000 53F80018 
                       CRM_PDR0
                               EQU              (CRM_BASE_ADDR+0x18) ;; perclk 
                                                            Divider Register 0
  137 00000000 53F8001C 
                       CRM_PDR1
                               EQU              (CRM_BASE_ADDR+0x1C) ;; perclk 
                                                            Divider Register 1
  138 00000000 53F80020 
                       CRM_PDR2
                               EQU              (CRM_BASE_ADDR+0x20) ;; perclk 
                                                            Divider Register 2
  139 00000000 53F80024 
                       CRM_PDR3
                               EQU              (CRM_BASE_ADDR+0x24) ;; perclk 
                                                            Divider Register 3
  140 00000000 53F80028 
                       CRM_CRSR
                               EQU              (CRM_BASE_ADDR+0x28) ;; CRM Sta
                                                            tus Register
  141 00000000 53F8002C 
                       CRM_CRDR
                               EQU              (CRM_BASE_ADDR+0x2C) ;; CRM Deb
                                                            ug Register
  142 00000000 53F80030 
                       CRM_DCVR0
                               EQU              (CRM_BASE_ADDR+0x30) ;; DPTC Co
                                                            mparator Value Regi
                                                            ster 0
  143 00000000 53F80034 
                       CRM_DCVR1
                               EQU              (CRM_BASE_ADDR+0x34) ;; DPTC Co
                                                            mparator Value Regi
                                                            ster 1
  144 00000000 53F80038 
                       CRM_DCVR2
                               EQU              (CRM_BASE_ADDR+0x38) ;; DPTC Co
                                                            mparator Value Regi
                                                            ster 2
  145 00000000 53F8003C 
                       CRM_DCVR3
                               EQU              (CRM_BASE_ADDR+0x3C) ;; DPTC Co
                                                            mparator Value Regi
                                                            ster 3
  146 00000000 53F80040 
                       CRM_LTR0
                               EQU              (CRM_BASE_ADDR+0x40) ;; Load Tr
                                                            acking Register 0
  147 00000000 53F80044 
                       CRM_LTR1



ARM Macro Assembler    Page 13 


                               EQU              (CRM_BASE_ADDR+0x44) ;; Load Tr
                                                            acking Register 1
  148 00000000 53F80048 
                       CRM_LTR2
                               EQU              (CRM_BASE_ADDR+0x48) ;; Load Tr
                                                            acking Register 2
  149 00000000 53F8004C 
                       CRM_LTR3
                               EQU              (CRM_BASE_ADDR+0x4C) ;; Load Tr
                                                            acking Register 3
  150 00000000 53F80050 
                       CRM_LTBR0
                               EQU              (CRM_BASE_ADDR+0x50) ;; Load Tr
                                                            acking Buffer Regis
                                                            ter 0
  151 00000000 53F80054 
                       CRM_LTBR1
                               EQU              (CRM_BASE_ADDR+0x54) ;; Load Tr
                                                            acking Buffer Regis
                                                            ter 1
  152 00000000 53F80058 
                       CRM_PMCR0
                               EQU              (CRM_BASE_ADDR+0x58) ;; Power M
                                                            anagement Control R
                                                            egister 0
  153 00000000 53F8005C 
                       CRM_PMCR1
                               EQU              (CRM_BASE_ADDR+0x5C) ;; Power M
                                                            anagement Control R
                                                            egister 1
  154 00000000 53F80060 
                       CRM_PMCR2
                               EQU              (CRM_BASE_ADDR+0x60) ;; Power M
                                                            anagement Control R
                                                            egister 2
  155 00000000 53F80064 
                       CRM_MCR EQU              (CRM_BASE_ADDR+0x64) ;; CRM Mis
                                                            c Control Register
  156 00000000         
  157 00000000         ;;Bit Masks
  158 00000000         ;;
  159 00000000         ;;Settings were generated from Excel Doc "ds018_iMX25_Cl
                       ock_Calculator.xls"
  160 00000000 00008000 
                       CRM_MPCTL1_MASK_LOCK
                               EQU              0x00008000  ;;CRM - MPCTL1 MASK
                                                             for determing if t
                                                            he MPLL has locked 
                                                            in the new frequenc
                                                            y
  161 00000000 800B2C01 
                       CRM_MPCTL_SETTING
                               EQU              0x800B2C01
  162 00000000 84002800 
                       CRM_UPCTL_SETTING
                               EQU              0x84002800
  163 00000000 20004000 
                       CRM_CCTL_SETTING
                               EQU              0x20004000



ARM Macro Assembler    Page 14 


  164 00000000 00088020 
                       CRM_CGR0_SETTING
                               EQU              0x00088020
  165 00000000 080F0040 
                       CRM_CGR1_SETTING
                               EQU              0x080F0040
  166 00000000 00084000 
                       CRM_CGR2_SETTING
                               EQU              0x00084000
  167 00000000 00000000 
                       CRM_PDR0_SETTING
                               EQU              0x00000000
  168 00000000 00000300 
                       CRM_PDR1_SETTING
                               EQU              0x00000300
  169 00000000 00000000 
                       CRM_PDR2_SETTING
                               EQU              0x00000000
  170 00000000 02000000 
                       CRM_PDR3_SETTING
                               EQU              0x02000000
  171 00000000 00000000 
                       CRM_MCR_SETTING
                               EQU              0x00000000
  172 00000000 28004000 
                       CRM_MPLL_RST
                               EQU              0x28004000
  173 00000000 24004000 
                       CRM_UPLL_RST
                               EQU              0x24004000
  174 00000000         
  175 00000000         ;;CLOCK name conversion table
  176 00000000         ;; mx27 has the following nomenclature, so to ease the c
                       onversion of manual to platform naming convention, redun
                       dantly re-define pin names.
  177 00000000         ;;
  178 00000000 53F80000 
                       CLOCK_BASE
                               EQU              CRM_BASE_ADDR
  179 00000000 53F80000 
                       MPCTL0  EQU              CRM_MPCTL
  180 00000000 800B2C01 
                       MPCTL0_SETTING
                               EQU              CRM_MPCTL_SETTING
  181 00000000 53F80024 
                       PCDR    EQU              CRM_PDR3    ;;UART1 setup on PE
                                                            R15
  182 00000000 02000000 
                       PCDR_SETTINGS
                               EQU              CRM_PDR3_SETTING
  183 00000000         
  184 00000000         
  185 00000000         ;; #########################################
  186 00000000         ;; # ESDCTL       #
  187 00000000         ;; #########################################
  188 00000000 00000000 
                       ESDCTL0_OFFSET
                               EQU              (0x00)
  189 00000000 00000004 



ARM Macro Assembler    Page 15 


                       ESDCFG0_OFFSET
                               EQU              (0x04)
  190 00000000 00000008 
                       ESDCTL1_OFFSET
                               EQU              (0x08)
  191 00000000 0000000C 
                       ESDCFG1_OFFSET
                               EQU              (0x0C)
  192 00000000 00000010 
                       ESDMISC_OFFSET
                               EQU              (0x10)
  193 00000000         
  194 00000000 B8001000 
                       ESDCTL_BASE_ADDR
                               EQU              0xB8001000
  195 00000000 B8001000 
                       ESD_ESDCTL0
                               EQU              (ESDCTL_BASE_ADDR+ESDCTL0_OFFSE
T)
  196 00000000 B8001004 
                       ESD_ESDCFG0
                               EQU              (ESDCTL_BASE_ADDR+ESDCFG0_OFFSE
T)
  197 00000000 B8001008 
                       ESD_ESDCTL1
                               EQU              (ESDCTL_BASE_ADDR+ESDCTL1_OFFSE
T)
  198 00000000 B800100C 
                       ESD_ESDCFG1
                               EQU              (ESDCTL_BASE_ADDR+ESDCFG1_OFFSE
T)
  199 00000000 B8001010 
                       ESD_ESDMISC
                               EQU              (ESDCTL_BASE_ADDR+ESDMISC_OFFSE
T)
  200 00000000 B8001020 
                       CONFIG_DATA_MDDR1
                               EQU              (ESDCTL_BASE_ADDR+0x20)
  201 00000000 B8001024 
                       CONFIG_DATA_MDDR2
                               EQU              (ESDCTL_BASE_ADDR+0x24)
  202 00000000 B8001028 
                       CONFIG_DATA_MDDR3
                               EQU              (ESDCTL_BASE_ADDR+0x28)
  203 00000000 B800102C 
                       CONFIG_DATA_MDDR4
                               EQU              (ESDCTL_BASE_ADDR+0x2C)
  204 00000000 B8001030 
                       CONFIG_DATA_MDDR5
                               EQU              (ESDCTL_BASE_ADDR+0x30)
  205 00000000 B8001034 
                       DEL_CYCL_LEN_MDDR
                               EQU              (ESDCTL_BASE_ADDR+0x34)
  206 00000000 B8001038 
                       CONFIG_DATA_MDDR6
                               EQU              (ESDCTL_BASE_ADDR+0x38)
  207 00000000         
  208 00000000 00000004 
                       ESDMISC_VAL1



ARM Macro Assembler    Page 16 


                               EQU              0x00000004  ;; MISC Register, n
                                                            ormal settings (ddr
                                                             enabled)
  209 00000000 0000000C 
                       ESDMISC_VAL2
                               EQU              0x0000000C  ;; MISC Register, r
                                                            eset delay line wit
                                                            h ddr enabled
  210 00000000 00000008 
                       ESDMISC_VAL3
                               EQU              0x00000008  ;; MISC Register, r
                                                            eset delay line wit
                                                            h ddr disabled
  211 00000000 80000000 
                       ESDMISC_VAL4
                               EQU              0x80000000  ;; MISC Register, c
                                                            heck for 200 uSec t
                                                            o be completed
  212 00000000 0000000D 
                       ESD_ESDMISC_RESET
                               EQU              0x0000000D  ;; MISC Register, R
                                                            eset
  213 00000000         
  214 00000000         ;; #########################################
  215 00000000         ;; # WEIM        #
  216 00000000         ;; #########################################
  217 00000000 B8002000 
                       WEIM_BASE_ADDR
                               EQU              0xB8002000
  218 00000000 B8002000 
                       WEIM_CS0U
                               EQU              (WEIM_BASE_ADDR+0x00)
  219 00000000 B8002004 
                       WEIM_CS0L
                               EQU              (WEIM_BASE_ADDR+0x04)
  220 00000000 B8002008 
                       WEIM_CS0A
                               EQU              (WEIM_BASE_ADDR+0x08)
  221 00000000 B8002010 
                       WEIM_CS1U
                               EQU              (WEIM_BASE_ADDR+0x10)
  222 00000000 B8002014 
                       WEIM_CS1L
                               EQU              (WEIM_BASE_ADDR+0x14)
  223 00000000 B8002018 
                       WEIM_CS1A
                               EQU              (WEIM_BASE_ADDR+0x18)
  224 00000000 B8002020 
                       WEIM_CS2U
                               EQU              (WEIM_BASE_ADDR+0x20)
  225 00000000 B8002024 
                       WEIM_CS2L
                               EQU              (WEIM_BASE_ADDR+0x24)
  226 00000000 B8002028 
                       WEIM_CS2A
                               EQU              (WEIM_BASE_ADDR+0x28)
  227 00000000 B8002030 
                       WEIM_CS3U
                               EQU              (WEIM_BASE_ADDR+0x30)



ARM Macro Assembler    Page 17 


  228 00000000 B8002034 
                       WEIM_CS3L
                               EQU              (WEIM_BASE_ADDR+0x34)
  229 00000000 B8002038 
                       WEIM_CS3A
                               EQU              (WEIM_BASE_ADDR+0x38)
  230 00000000 B8002040 
                       WEIM_CS4U
                               EQU              (WEIM_BASE_ADDR+0x40)
  231 00000000 B8002044 
                       WEIM_CS4L
                               EQU              (WEIM_BASE_ADDR+0x44)
  232 00000000 B8002048 
                       WEIM_CS4A
                               EQU              (WEIM_BASE_ADDR+0x48)
  233 00000000 B8002050 
                       WEIM_CS5U
                               EQU              (WEIM_BASE_ADDR+0x50)
  234 00000000 B8002054 
                       WEIM_CS5L
                               EQU              (WEIM_BASE_ADDR+0x54)
  235 00000000 B8002058 
                       WEIM_CS5A
                               EQU              (WEIM_BASE_ADDR+0x58)
  236 00000000 B8002060 
                       WEIM_EIM
                               EQU              (WEIM_BASE_ADDR+0x60)
  237 00000000         
  238 00000000         ;;CS0 NOR Flash name conversion table
  239 00000000         ;; mx27 has the following nomenclature, so to ease the c
                       onversion of manual to platform naming convention, redun
                       dantly re-define pin names.
  240 00000000         ;;
  241 00000000 B8002000 
                       CS0U    EQU              WEIM_CS0U   ;; CS0 upper contro
                                                            l register
  242 00000000 B8002004 
                       CS0L    EQU              WEIM_CS0L   ;; CS0 lower contro
                                                            l register
  243 00000000 00001563 
                       APPWSCEQU1
                               EQU              0x00001563  ;; wait states = 16
                                                            , works for APP (13
                                                            3Mhz system Hclk, 7
                                                            0 ns Flash)
  244 00000000 76002D61 
                       APPWSCEQUL
                               EQU              0x76002d61  ;; 16 bit wide deas
                                                            sert cs 2 cycles be
                                                            fore end
  245 00000000 00AD5000 
                       APPWSCEQUA
                               EQU              0x00ad5000  ;; ext boot set lah
                                                            /lbn to these vaues
                                                             
  246 00000000         
  247 00000000         
  248 00000000         ;; #########################################
  249 00000000         ;; # NFC        #



ARM Macro Assembler    Page 18 


  250 00000000         ;; #########################################
  251 00000000 BB000000 
                       NFC_BASE_ADDR
                               EQU              0xBB000000
  252 00000000 BB001E00 
                       NFC_REG_BASE_ADDR
                               EQU              (NFC_BASE_ADDR+0x1E00)
  253 00000000 BB001E04 
                       NFC_RAM_BUF_ADDR
                               EQU              (NFC_REG_BASE_ADDR+0x04)
  254 00000000 BB001E06 
                       NFC_NAND_FLASH_ADDR
                               EQU              (NFC_REG_BASE_ADDR+0x06)
  255 00000000 BB001E08 
                       NFC_NAND_FLASH_CMD
                               EQU              (NFC_REG_BASE_ADDR+0x08)
  256 00000000 BB001E0A 
                       NFC_CONFIG
                               EQU              (NFC_REG_BASE_ADDR+0x0A)
  257 00000000 BB001E0C 
                       NFC_ECC_STAT_RSLT1
                               EQU              (NFC_REG_BASE_ADDR+0x0C)
  258 00000000 BB001E0E 
                       NFC_ECC_STAT_RSLT2
                               EQU              (NFC_REG_BASE_ADDR+0x0E)
  259 00000000 BB001E10 
                       NFC_ECC_SPAS
                               EQU              (NFC_REG_BASE_ADDR+0x10)
  260 00000000 BB001E12 
                       NFC_NF_WR_PROT
                               EQU              (NFC_REG_BASE_ADDR+0x12)
  261 00000000 BB001E18 
                       NFC_NF_WR_PROT_STAT
                               EQU              (NFC_REG_BASE_ADDR+0x18)
  262 00000000 BB001E1A 
                       NFC_NF_CONFIG1
                               EQU              (NFC_REG_BASE_ADDR+0x1A)
  263 00000000 BB001E1C 
                       NFC_NF_CONFIG2
                               EQU              (NFC_REG_BASE_ADDR+0x1C)
  264 00000000 BB001E20 
                       NFC_ULOCK_START_BLK0
                               EQU              (NFC_REG_BASE_ADDR+0x20)
  265 00000000 BB001E22 
                       NFC_ULOCK_END_BLK0
                               EQU              (NFC_REG_BASE_ADDR+0x22)
  266 00000000 BB001E24 
                       NFC_ULOCK_START_BLK1
                               EQU              (NFC_REG_BASE_ADDR+0x24)
  267 00000000 BB001E26 
                       NFC_ULOCK_END_BLK1
                               EQU              (NFC_REG_BASE_ADDR+0x26)
  268 00000000 BB001E28 
                       NFC_ULOCK_START_BLK2
                               EQU              (NFC_REG_BASE_ADDR+0x28)
  269 00000000 BB001E2A 
                       NFC_ULOCK_END_BLK2
                               EQU              (NFC_REG_BASE_ADDR+0x2A)
  270 00000000 BB001E2C 



ARM Macro Assembler    Page 19 


                       NFC_ULOCK_START_BLK3
                               EQU              (NFC_REG_BASE_ADDR+0x2C)
  271 00000000 BB001E2E 
                       NFC_ULOCK_END_BLK3
                               EQU              (NFC_REG_BASE_ADDR+0x2E)
  272 00000000         
  273 00000000         ;; #########################################
  274 00000000         ;; # UART1        #
  275 00000000         ;; #########################################
  276 00000000 43F90000 
                       UART1_BASE_ADDR
                               EQU              0x43F90000
  277 00000000 43F90000 
                       UART1_URXD_1
                               EQU              (UART1_BASE_ADDR+0x00) ;; 32bit
                                                             uart1 receiver reg
                                                            
  278 00000000 43F90040 
                       UART1_UTXD_1
                               EQU              (UART1_BASE_ADDR+0x40) ;; 32bit
                                                             uart1 transmitter 
                                                            reg
  279 00000000 43F90080 
                       UART1_UCR1_1
                               EQU              (UART1_BASE_ADDR+0x80) ;; 32bit
                                                             uart1 control 1 re
                                                            g
  280 00000000 43F90084 
                       UART1_UCR2_1
                               EQU              (UART1_BASE_ADDR+0x84) ;; 32bit
                                                             uart1 control 2 re
                                                            g
  281 00000000 43F90088 
                       UART1_UCR3_1
                               EQU              (UART1_BASE_ADDR+0x88) ;; 32bit
                                                             uart1 control 3 re
                                                            g
  282 00000000 43F9008C 
                       UART1_UCR4_1
                               EQU              (UART1_BASE_ADDR+0x8C) ;; 32bit
                                                             uart1 control 4 re
                                                            g
  283 00000000 43F90090 
                       UART1_UFCR_1
                               EQU              (UART1_BASE_ADDR+0x90) ;; 32bit
                                                             uart1 fifo control
                                                             reg
  284 00000000 43F90094 
                       UART1_USR1_1
                               EQU              (UART1_BASE_ADDR+0x94) ;; 32bit
                                                             uart1 status 1 reg
                                                            
  285 00000000 43F90098 
                       UART1_USR2_1
                               EQU              (UART1_BASE_ADDR+0x98) ;; 32bit
                                                             uart1 status 2 reg
                                                            
  286 00000000 43F9009C 
                       UART1_UESC_1



ARM Macro Assembler    Page 20 


                               EQU              (UART1_BASE_ADDR+0x9C) ;; 32bit
                                                             uart1 escape char 
                                                            reg
  287 00000000 43F900A0 
                       UART1_UTIM_1
                               EQU              (UART1_BASE_ADDR+0xA0) ;; 32bit
                                                             uart1 escape timer
                                                             reg
  288 00000000 43F900A4 
                       UART1_UBIR_1
                               EQU              (UART1_BASE_ADDR+0xA4) ;; 32bit
                                                             uart1 BRM incremen
                                                            tal reg
  289 00000000 43F900A8 
                       UART1_UBMR_1
                               EQU              (UART1_BASE_ADDR+0xA8) ;; 32bit
                                                             uart1 BRM modulato
                                                            r reg
  290 00000000 43F900AC 
                       UART1_UBRC_1
                               EQU              (UART1_BASE_ADDR+0xAC) ;; 32bit
                                                             uart1 baud rate co
                                                            unt reg
  291 00000000 43F900B0 
                       UART1_ONEMS_1
                               EQU              (UART1_BASE_ADDR+0xB0) ;; 32bit
                                                             uart1 one ms reg
  292 00000000 43F900B4 
                       UART1_UTS_1
                               EQU              (UART1_BASE_ADDR+0xB4) ;; 32bit
                                                             uart1 test reg
  293 00000000         
  294 00000000         ;;Uart1 masks
  295 00000000         ;;
  296 00000000 00004000 
                       USR2_1_BIT_14_TRANS_BUF_EMPTY_MASK
                               EQU              0x4000
  297 00000000         
  298 00000000         ;;UART1 name conversion table
  299 00000000         ;; mx27 has the following nomenclature, so to ease the c
                       onversion of manual to platform naming convention, redun
                       dantly re-define pin names.
  300 00000000         ;;
  301 00000000 43F90090 
                       UFCR_1  EQU              UART1_UFCR_1
  302 00000000 00000A81 
                       UFCR_1_SETTINGS
                               EQU              0x0A81      ;; sets refdiv / to
                                                             1, which means clo
                                                            ck into uart IS per
                                                            clk1 above
  303 00000000         ;UFCR_1_SETTINGS EQU  0x0981    ;; sets refdiv / to 3, w
                       hich means clock into uart IS perclk1(133MHz)/3 = 44.33M
                       Hz
  304 00000000 43F90080 
                       UCR1_1  EQU              UART1_UCR1_1
  305 00000000 00000001 
                       UCR1_1_SETTINGS
                               EQU              0x00000001  ;;Enable UART1, dis



ARM Macro Assembler    Page 21 


                                                            able interupts
  306 00000000 43F90084 
                       UCR2_1  EQU              UART1_UCR2_1
  307 00000000 00005026 
                       UCR2_1_SETTINGS
                               EQU              0x00005026  ;;set up rts,cts, a
                                                            nd message paramete
                                                            rs
  308 00000000 43F90088 
                       UCR3_1  EQU              UART1_UCR3_1
  309 00000000 00000004 
                       UCR3_1_SETTINGS
                               EQU              0x00000004  ;;mux input selecte
                                                            d for UART receiver
                                                            
  310 00000000 43F9008C 
                       UCR4_1  EQU              UART1_UCR4_1
  311 00000000 00008000 
                       UCR4_1_SETTINGS
                               EQU              0x00008000  ;;SET cts trigger l
                                                            evel
  312 00000000 43F900A4 
                       UBIR_1  EQU              UART1_UBIR_1
  313 00000000         ;UBIR_1_SETTINGS EQU     575     ;; So 575 NUM and 20780
                        DENOM works good for imx27 with 66.5 mhz PERCLK1, (with
                        / 4) clock DIV
  314 00000000 00000732 
                       UBIR_1_SETTINGS
                               EQU              0x0732      ;;(732) So 1842 NUM
                                                             and 44329 DENOM wo
                                                            rks good for imx27 
                                                            with 44.33 mhz PERC
                                                            LK1, (with / 6) clo
                                                            ck DIV
  315 00000000 43F900A8 
                       UBMR_1  EQU              UART1_UBMR_1
  316 00000000         ;;UBMR_1_SETTINGS EQU     20780    ;; So 575 NUM and 207
                       80 DENOM works good for imx27 with 66.5 mhz PERCLK1, (wi
                       th / 4) clock DIV
  317 00000000 0000AD29 
                       UBMR_1_SETTINGS
                               EQU              0xAD29      ;; So 1842 NUM and 
                                                            44329 DENOM works g
                                                            ood for imx27 with 
                                                            44.33 mhz PERCLK1, 
                                                            (with / 6) clock DI
                                                            V
  318 00000000 43F90040 
                       UTXDn_1 EQU              UART1_UTXD_1
  319 00000000 43F90098 
                       USR2_1  EQU              UART1_USR2_1
  320 00000000 43F900B4 
                       UTS_1   EQU              UART1_UTS_1
  321 00000000 00000800 
                       UTS_1_SETTINGS
                               EQU              0x00000800  ;; Allow UART to Ru
                                                            n in DEBUG mode
  322 00000000         
  323 00000000         ;; #########################################



ARM Macro Assembler    Page 22 


  324 00000000         ;; # UART2        #
  325 00000000         ;; #########################################
  326 00000000 43F94000 
                       UART2_BASE_ADDR
                               EQU              0x43F94000
  327 00000000 43F94000 
                       UART2_URXD_2
                               EQU              (UART2_BASE_ADDR+0x00) ;; 32bit
                                                             uart2 receiver reg
                                                            
  328 00000000 43F94040 
                       UART2_UTXD_2
                               EQU              (UART2_BASE_ADDR+0x40) ;; 32bit
                                                             uart2 transmitter 
                                                            reg
  329 00000000 43F94080 
                       UART2_UCR1_2
                               EQU              (UART2_BASE_ADDR+0x80) ;; 32bit
                                                             uart2 control 1 re
                                                            g
  330 00000000 43F94084 
                       UART2_UCR2_2
                               EQU              (UART2_BASE_ADDR+0x84) ;; 32bit
                                                             uart2 control 2 re
                                                            g
  331 00000000 43F94088 
                       UART2_UCR3_2
                               EQU              (UART2_BASE_ADDR+0x88) ;; 32bit
                                                             uart2 control 3 re
                                                            g
  332 00000000 43F9408C 
                       UART2_UCR4_2
                               EQU              (UART2_BASE_ADDR+0x8C) ;; 32bit
                                                             uart2 control 4 re
                                                            g
  333 00000000 43F94090 
                       UART2_UFCR_2
                               EQU              (UART2_BASE_ADDR+0x90) ;; 32bit
                                                             uart2 fifo control
                                                             reg
  334 00000000 43F94094 
                       UART2_USR1_2
                               EQU              (UART2_BASE_ADDR+0x94) ;; 32bit
                                                             uart2 status 1 reg
                                                            
  335 00000000 43F94098 
                       UART2_USR2_2
                               EQU              (UART2_BASE_ADDR+0x98) ;; 32bit
                                                             uart2 status 2 reg
                                                            
  336 00000000 43F9409C 
                       UART2_UESC_2
                               EQU              (UART2_BASE_ADDR+0x9C) ;; 32bit
                                                             uart2 escape char 
                                                            reg
  337 00000000 43F940A0 
                       UART2_UTIM_2
                               EQU              (UART2_BASE_ADDR+0xA0) ;; 32bit
                                                             uart2 escape timer



ARM Macro Assembler    Page 23 


                                                             reg
  338 00000000 43F940A4 
                       UART2_UBIR_2
                               EQU              (UART2_BASE_ADDR+0xA4) ;; 32bit
                                                             uart2 BRM incremen
                                                            tal reg
  339 00000000 43F940A8 
                       UART2_UBMR_2
                               EQU              (UART2_BASE_ADDR+0xA8) ;; 32bit
                                                             uart2 BRM modulato
                                                            r reg
  340 00000000 43F940AC 
                       UART2_UBRC_2
                               EQU              (UART2_BASE_ADDR+0xAC) ;; 32bit
                                                             uart2 baud rate co
                                                            unt reg
  341 00000000 43F940B0 
                       UART2_ONEMS_2
                               EQU              (UART2_BASE_ADDR+0xB0) ;; 32bit
                                                             uart2 one ms reg
  342 00000000 43F940B4 
                       UART2_UTS_2
                               EQU              (UART2_BASE_ADDR+0xB4) ;; 32bit
                                                             uart2 test reg
  343 00000000         
  344 00000000         ;; #########################################
  345 00000000         ;; # GPIO1        #
  346 00000000         ;; #########################################
  347 00000000 53FCC000 
                       GPIO1_BASE_ADDR
                               EQU              0x53FCC000
  348 00000000 53FCC000 
                       GPIO1_DR0
                               EQU              (GPIO1_BASE_ADDR+0x00)
  349 00000000 53FCC004 
                       GPIO1_GDIR0
                               EQU              (GPIO1_BASE_ADDR+0x04)
  350 00000000 53FCC008 
                       GPIO1_PSR0
                               EQU              (GPIO1_BASE_ADDR+0x08)
  351 00000000 53FCC00C 
                       GPIO1_ICR1
                               EQU              (GPIO1_BASE_ADDR+0x0C)
  352 00000000 53FCC010 
                       GPIO1_ICR2
                               EQU              (GPIO1_BASE_ADDR+0x10)
  353 00000000 53FCC014 
                       GPIO1_IMR
                               EQU              (GPIO1_BASE_ADDR+0x14)
  354 00000000 53FCC018 
                       GPIO1_ISR
                               EQU              (GPIO1_BASE_ADDR+0x18)
  355 00000000         
  356 00000000         ;; #########################################
  357 00000000         ;; # GPIO2        #
  358 00000000         ;; #########################################
  359 00000000 53FD0000 
                       GPIO2_BASE_ADDR
                               EQU              0x53FD0000



ARM Macro Assembler    Page 24 


  360 00000000 53FD0000 
                       GPIO2_DR0
                               EQU              (GPIO2_BASE_ADDR+0x00)
  361 00000000 53FD0004 
                       GPIO2_GDIR0
                               EQU              (GPIO2_BASE_ADDR+0x04)
  362 00000000 53FD0008 
                       GPIO2_PSR0
                               EQU              (GPIO2_BASE_ADDR+0x08)
  363 00000000 53FD000C 
                       GPIO2_ICR1
                               EQU              (GPIO2_BASE_ADDR+0x0C)
  364 00000000 53FD0010 
                       GPIO2_ICR2
                               EQU              (GPIO2_BASE_ADDR+0x10)
  365 00000000 53FD0014 
                       GPIO2_IMR
                               EQU              (GPIO2_BASE_ADDR+0x14)
  366 00000000 53FD0018 
                       GPIO2_ISR
                               EQU              (GPIO2_BASE_ADDR+0x18)
  367 00000000         
  368 00000000         ;; #########################################
  369 00000000         ;; # GPIO3        #
  370 00000000         ;; #########################################
  371 00000000 53FA4000 
                       GPIO3_BASE_ADDR
                               EQU              0x53FA4000
  372 00000000 53FA4000 
                       GPIO3_DR0
                               EQU              (GPIO3_BASE_ADDR+0x00)
  373 00000000 53FA4004 
                       GPIO3_GDIR0
                               EQU              (GPIO3_BASE_ADDR+0x04)
  374 00000000 53FA4008 
                       GPIO3_PSR0
                               EQU              (GPIO3_BASE_ADDR+0x08)
  375 00000000 53FA400C 
                       GPIO3_ICR1
                               EQU              (GPIO3_BASE_ADDR+0x0C)
  376 00000000 53FA4010 
                       GPIO3_ICR2
                               EQU              (GPIO3_BASE_ADDR+0x10)
  377 00000000 53FA4014 
                       GPIO3_IMR
                               EQU              (GPIO3_BASE_ADDR+0x14)
  378 00000000 53FA4018 
                       GPIO3_ISR
                               EQU              (GPIO3_BASE_ADDR+0x18)
  379 00000000         
  380 00000000         ;; #########################################
  381 00000000         ;; # GPIO4        #
  382 00000000         ;; #########################################
  383 00000000 53F9C000 
                       GPIO4_BASE_ADDR
                               EQU              0x53F9C000
  384 00000000 53F9C000 
                       GPIO4_DR0
                               EQU              (GPIO4_BASE_ADDR+0x00)



ARM Macro Assembler    Page 25 


  385 00000000 53F9C004 
                       GPIO4_GDIR0
                               EQU              (GPIO4_BASE_ADDR+0x04)
  386 00000000 53F9C008 
                       GPIO4_PSR0
                               EQU              (GPIO4_BASE_ADDR+0x08)
  387 00000000 53F9C00C 
                       GPIO4_ICR1
                               EQU              (GPIO4_BASE_ADDR+0x0C)
  388 00000000 53F9C010 
                       GPIO4_ICR2
                               EQU              (GPIO4_BASE_ADDR+0x10)
  389 00000000 53F9C014 
                       GPIO4_IMR
                               EQU              (GPIO4_BASE_ADDR+0x14)
  390 00000000 53F9C018 
                       GPIO4_ISR
                               EQU              (GPIO4_BASE_ADDR+0x18)
  391 00000000         
  392 00000000         ;; #########################################
  393 00000000         ;; # GPT1        #
  394 00000000         ;; #########################################
  395 00000000 53F90000 
                       GPT1_BASE_ADDR
                               EQU              0x53F90000
  396 00000000 53F90000 
                       GPT1_GPT1CR
                               EQU              (GPT1_BASE_ADDR+0x00)
  397 00000000 53F90004 
                       GPT1_GPT1PR
                               EQU              (GPT1_BASE_ADDR+0x04)
  398 00000000 53F90008 
                       GPT1_GPT1SR
                               EQU              (GPT1_BASE_ADDR+0x08)
  399 00000000 53F9000C 
                       GPT1_GPT1IR
                               EQU              (GPT1_BASE_ADDR+0x0C)
  400 00000000 53F90010 
                       GPT1_GPT1OCR1
                               EQU              (GPT1_BASE_ADDR+0x10)
  401 00000000 53F90014 
                       GPT1_GPT1OCR2
                               EQU              (GPT1_BASE_ADDR+0x14)
  402 00000000 53F90018 
                       GPT1_GPT1OCR3
                               EQU              (GPT1_BASE_ADDR+0x18)
  403 00000000 53F9001C 
                       GPT1_GPT1ICR1
                               EQU              (GPT1_BASE_ADDR+0x1C)
  404 00000000 53F90020 
                       GPT1_GPT1ICR2
                               EQU              (GPT1_BASE_ADDR+0x20)
  405 00000000 53F90024 
                       GPT1_GPT1CNT
                               EQU              (GPT1_BASE_ADDR+0x24)
  406 00000000         
  407 00000000         ;;RTC name conversion table
  408 00000000         ;; mxl has the following nomenclature, so to ease the co
                       nversion of manual to platform naming convention, redund



ARM Macro Assembler    Page 26 


                       antly re-define pin names.
  409 00000000         ;; iMX25 does not have a RTC
  410 00000000         
  411 00000000 53F90000 
                       RTC_BASE_ADDR_UPPER
                               EQU              GPT1_BASE_ADDR
  412 00000000 00000000 
                       RTC_BASE_ADDR_LOWER
                               EQU              0x00000000
  413 00000000 00000004 
                       RTC_BASE_ADDR_RTC_SECOND_OFFSET
                               EQU              0x00000004
  414 00000000         
  415 00000000         ;; #########################################
  416 00000000         ;; # GPT2        #
  417 00000000         ;; #########################################
  418 00000000 53F8C000 
                       GPT2_BASE_ADDR
                               EQU              0x53F8C000
  419 00000000 53F8C000 
                       GPT2_GPT2CR
                               EQU              (GPT2_BASE_ADDR+0x00)
  420 00000000 53F8C004 
                       GPT2_GPT2PR
                               EQU              (GPT2_BASE_ADDR+0x04)
  421 00000000 53F8C008 
                       GPT2_GPT2SR
                               EQU              (GPT2_BASE_ADDR+0x08)
  422 00000000 53F8C00C 
                       GPT2_GPT2IR
                               EQU              (GPT2_BASE_ADDR+0x0C)
  423 00000000 53F8C010 
                       GPT2_GPT2OCR1
                               EQU              (GPT2_BASE_ADDR+0x10)
  424 00000000 53F8C014 
                       GPT2_GPT2OCR2
                               EQU              (GPT2_BASE_ADDR+0x14)
  425 00000000 53F8C018 
                       GPT2_GPT2OCR3
                               EQU              (GPT2_BASE_ADDR+0x18)
  426 00000000 53F8C01C 
                       GPT2_GPT2ICR1
                               EQU              (GPT2_BASE_ADDR+0x1C)
  427 00000000 53F8C020 
                       GPT2_GPT2ICR2
                               EQU              (GPT2_BASE_ADDR+0x20)
  428 00000000 53F8C024 
                       GPT2_GPT2CNT
                               EQU              (GPT2_BASE_ADDR+0x24)
  429 00000000         
  430 00000000         ;; #########################################
  431 00000000         ;; # GPT3        #
  432 00000000         ;; #########################################
  433 00000000 53F88000 
                       GPT3_BASE_ADDR
                               EQU              0x53F88000
  434 00000000 53F88000 
                       GPT3_GPT3CR
                               EQU              (GPT3_BASE_ADDR+0x00)



ARM Macro Assembler    Page 27 


  435 00000000 53F88004 
                       GPT3_GPT3PR
                               EQU              (GPT3_BASE_ADDR+0x04)
  436 00000000 53F88008 
                       GPT3_GPT3SR
                               EQU              (GPT3_BASE_ADDR+0x08)
  437 00000000 53F8800C 
                       GPT3_GPT3IR
                               EQU              (GPT3_BASE_ADDR+0x0C)
  438 00000000 53F88010 
                       GPT3_GPT3OCR1
                               EQU              (GPT3_BASE_ADDR+0x10)
  439 00000000 53F88014 
                       GPT3_GPT3OCR2
                               EQU              (GPT3_BASE_ADDR+0x14)
  440 00000000 53F88018 
                       GPT3_GPT3OCR3
                               EQU              (GPT3_BASE_ADDR+0x18)
  441 00000000 53F8801C 
                       GPT3_GPT3ICR1
                               EQU              (GPT3_BASE_ADDR+0x1C)
  442 00000000 53F88020 
                       GPT3_GPT3ICR2
                               EQU              (GPT3_BASE_ADDR+0x20)
  443 00000000 53F88024 
                       GPT3_GPT3CNT
                               EQU              (GPT3_BASE_ADDR+0x24)
  444 00000000         
  445 00000000         ;; ##########################################
  446 00000000         ;; # GPT4           #
  447 00000000         ;; ##########################################
  448 00000000 53F84000 
                       GPT4_BASE_ADDR
                               EQU              0x53F84000
  449 00000000 53F84000 
                       GPT4_GPT4CR
                               EQU              (GPT4_BASE_ADDR+0x00)
  450 00000000 53F84004 
                       GPT4_GPT4PR
                               EQU              (GPT4_BASE_ADDR+0x04)
  451 00000000 53F84008 
                       GPT4_GPT4SR
                               EQU              (GPT4_BASE_ADDR+0x08)
  452 00000000 53F8400C 
                       GPT4_GPT4IR
                               EQU              (GPT4_BASE_ADDR+0x0C)
  453 00000000 53F84010 
                       GPT4_GPT4OCR1
                               EQU              (GPT4_BASE_ADDR+0x10)
  454 00000000 53F84014 
                       GPT4_GPT4OCR2
                               EQU              (GPT4_BASE_ADDR+0x14)
  455 00000000 53F84018 
                       GPT4_GPT4OCR3
                               EQU              (GPT4_BASE_ADDR+0x18)
  456 00000000 53F8401C 
                       GPT4_GPT4ICR1
                               EQU              (GPT4_BASE_ADDR+0x1C)
  457 00000000 53F84020 



ARM Macro Assembler    Page 28 


                       GPT4_GPT4ICR2
                               EQU              (GPT4_BASE_ADDR+0x20)
  458 00000000 53F84024 
                       GPT4_GPT4CNT
                               EQU              (GPT4_BASE_ADDR+0x24)
  459 00000000         
  460 00000000         ;; ##########################################
  461 00000000         ;; # WDOG           #
  462 00000000         ;; ##########################################
  463 00000000 53FDC000 
                       WDOG_BASE_ADDR
                               EQU              0x53FDC000
  464 00000000 53FDC000 
                       WDOG_WCR
                               EQU              (WDOG_BASE_ADDR+0x00) ;; 16bit 
                                                            watchdog control re
                                                            g
  465 00000000 53FDC002 
                       WDOG_WSR
                               EQU              (WDOG_BASE_ADDR+0x02) ;; 16bit 
                                                            watchdog service re
                                                            g
  466 00000000 53FDC004 
                       WDOG_WRSR
                               EQU              (WDOG_BASE_ADDR+0x04) ;; 16bit 
                                                            watchdog reset stat
                                                            us reg
  467 00000000         
  468 00000000         ;;Watchdog name conversion table
  469 00000000         ;; mxl has the following nomenclature, so to ease the co
                       nversion of manual to platform naming convention, redund
                       antly re-define pin names.
  470 00000000         ;;
  471 00000000 53FD0000 
                       WATCHDOG_BASE_ADDR_UPPER
                               EQU              0x53FD0000
  472 00000000 0000C000 
                       WATCHDOG_BASE_ADDR_LOWER
                               EQU              0x0000C000
  473 00000000 00000000 
                       WATCHDOG_BASE_ADDR_WCR_OFFSET
                               EQU              0x00000000
  474 00000000 00000002 
                       WATCHDOG_BASE_ADDR_WSR_OFFSET
                               EQU              0x00000002
  475 00000000 00000004 
                       WATCHDOG_BASE_ADDR_WRSR_OFFSET
                               EQU              0x00000004
  476 00000000         
  477 00000000         ;; ##########################################
  478 00000000         ;; # External Memory CSD0 CSD1     #
  479 00000000         ;; ##########################################
  480 00000000 80000000 
                       CSD0_BASE_ADDR
                               EQU              0x80000000
  481 00000000 8FFFFFFF 
                       CSD0_END_ADDR
                               EQU              0x8FFFFFFF
  482 00000000 90000000 



ARM Macro Assembler    Page 29 


                       CSD1_BASE_ADDR
                               EQU              0x90000000
  483 00000000 9FFFFFFF 
                       CSD1_END_ADDR
                               EQU              0x9FFFFFFF
  484 00000000         
  485 00000000         ;; ##########################################
  486 00000000         ;; # External Memory CS0 - CS5     #
  487 00000000         ;; # $A000_0000 to $A7FF_FFFF (CS0)   #
  488 00000000         ;; # $A800_0000 to $AFFF_FFFF (CS1)   #
  489 00000000         ;; # $B000_0000 to $B1FF_FFFF (CS2)   #
  490 00000000         ;; # $B200_0000 to $B3FF_FFFF (CS3)   #
  491 00000000         ;; # $B400_0000 to $B5FF_FFFF (CS4)   #
  492 00000000         ;; # $B600_0000 to $B7FF_FFFF (CS5)   #
  493 00000000         ;; ##########################################
  494 00000000 A0000000 
                       CS0_BASE_ADDR
                               EQU              0xA0000000
  495 00000000 A7FFFFFF 
                       CS0_END_ADDR
                               EQU              (CS0_BASE_ADDR+0x7FFFFFF)
  496 00000000 A8000000 
                       CS1_BASE_ADDR
                               EQU              0xA8000000
  497 00000000 AFFFFFFF 
                       CS1_END_ADDR
                               EQU              (CS1_BASE_ADDR+0x7FFFFFF)
  498 00000000 B0000000 
                       CS2_BASE_ADDR
                               EQU              0xB0000000
  499 00000000 B1FFFFFF 
                       CS2_END_ADDR
                               EQU              (CS2_BASE_ADDR+0x1FFFFFF)
  500 00000000 B2000000 
                       CS3_BASE_ADDR
                               EQU              0xB2000000
  501 00000000 B3FFFFFF 
                       CS3_END_ADDR
                               EQU              (CS3_BASE_ADDR+0x1FFFFFF)
  502 00000000 B4000000 
                       CS4_BASE_ADDR
                               EQU              0xB4000000
  503 00000000 B5FFFFFF 
                       CS4_END_ADDR
                               EQU              (CS4_BASE_ADDR+0x1FFFFFF)
  504 00000000 B6000000 
                       CS5_BASE_ADDR
                               EQU              0xB6000000
  505 00000000 B7FFFFFF 
                       CS5_END_ADDR
                               EQU              (CS5_BASE_ADDR+0x1FFFFFF)
  506 00000000         
  507 00000000         ;; ##########################################
  508 00000000         ;; # RAM (128KB)         #
  509 00000000         ;; # $7800_0000 to $7801_FFFF     #
  510 00000000         ;; ##########################################
  511 00000000 78000000 
                       RAM_BASE_ADDR
                               EQU              0x78000000



ARM Macro Assembler    Page 30 


  512 00000000         
  513 00000000         
  514 00000000         ;; #########################################
  515 00000000         ;; # IOMUXC           #
  516 00000000         ;; #########################################
  517 00000000 43FAC000 
                       IOMUXC_BASE_ADDR
                               EQU              0x43FAC000
  518 00000000         
  519 00000000 43FAC000 
                       IOMUXC_GPR1
                               EQU              (IOMUXC_BASE_ADDR+0x0)
  520 00000000 43FAC004 
                       IOMUXC_OBSERVE_INT_MUX
                               EQU              (IOMUXC_BASE_ADDR+0x4)
  521 00000000         
  522 00000000 43FAC008 
                       IOMUXC_SW_MUX_CTL_PAD_A10
                               EQU              (IOMUXC_BASE_ADDR+0x8)
  523 00000000 43FAC00C 
                       IOMUXC_SW_MUX_CTL_PAD_A13
                               EQU              (IOMUXC_BASE_ADDR+0xc)
  524 00000000 43FAC010 
                       IOMUXC_SW_MUX_CTL_PAD_A14
                               EQU              (IOMUXC_BASE_ADDR+0x10)
  525 00000000 43FAC014 
                       IOMUXC_SW_MUX_CTL_PAD_A15
                               EQU              (IOMUXC_BASE_ADDR+0x14)
  526 00000000 43FAC018 
                       IOMUXC_SW_MUX_CTL_PAD_A16
                               EQU              (IOMUXC_BASE_ADDR+0x18)
  527 00000000 43FAC01C 
                       IOMUXC_SW_MUX_CTL_PAD_A17
                               EQU              (IOMUXC_BASE_ADDR+0x1c)
  528 00000000 43FAC020 
                       IOMUXC_SW_MUX_CTL_PAD_A18
                               EQU              (IOMUXC_BASE_ADDR+0x20)
  529 00000000 43FAC024 
                       IOMUXC_SW_MUX_CTL_PAD_A19
                               EQU              (IOMUXC_BASE_ADDR+0x24)
  530 00000000 43FAC028 
                       IOMUXC_SW_MUX_CTL_PAD_A20
                               EQU              (IOMUXC_BASE_ADDR+0x28)
  531 00000000 43FAC02C 
                       IOMUXC_SW_MUX_CTL_PAD_A21
                               EQU              (IOMUXC_BASE_ADDR+0x2c)
  532 00000000 43FAC030 
                       IOMUXC_SW_MUX_CTL_PAD_A22
                               EQU              (IOMUXC_BASE_ADDR+0x30)
  533 00000000 43FAC034 
                       IOMUXC_SW_MUX_CTL_PAD_A23
                               EQU              (IOMUXC_BASE_ADDR+0x34)
  534 00000000 43FAC038 
                       IOMUXC_SW_MUX_CTL_PAD_A24
                               EQU              (IOMUXC_BASE_ADDR+0x38)
  535 00000000 43FAC03C 
                       IOMUXC_SW_MUX_CTL_PAD_A25
                               EQU              (IOMUXC_BASE_ADDR+0x3c)
  536 00000000 43FAC040 



ARM Macro Assembler    Page 31 


                       IOMUXC_SW_MUX_CTL_PAD_EB0
                               EQU              (IOMUXC_BASE_ADDR+0x40)
  537 00000000 43FAC044 
                       IOMUXC_SW_MUX_CTL_PAD_EB1
                               EQU              (IOMUXC_BASE_ADDR+0x44)
  538 00000000 43FAC048 
                       IOMUXC_SW_MUX_CTL_PAD_OE
                               EQU              (IOMUXC_BASE_ADDR+0x48)
  539 00000000 43FAC04C 
                       IOMUXC_SW_MUX_CTL_PAD_CS0
                               EQU              (IOMUXC_BASE_ADDR+0x4c)
  540 00000000 43FAC050 
                       IOMUXC_SW_MUX_CTL_PAD_CS1
                               EQU              (IOMUXC_BASE_ADDR+0x50)
  541 00000000 43FAC054 
                       IOMUXC_SW_MUX_CTL_PAD_CS4
                               EQU              (IOMUXC_BASE_ADDR+0x54)
  542 00000000 43FAC058 
                       IOMUXC_SW_MUX_CTL_PAD_CS5
                               EQU              (IOMUXC_BASE_ADDR+0x58)
  543 00000000 43FAC05C 
                       IOMUXC_SW_MUX_CTL_PAD_NF_CE0
                               EQU              (IOMUXC_BASE_ADDR+0x5c)
  544 00000000 43FAC060 
                       IOMUXC_SW_MUX_CTL_PAD_ECB
                               EQU              (IOMUXC_BASE_ADDR+0x60)
  545 00000000 43FAC064 
                       IOMUXC_SW_MUX_CTL_PAD_LBA
                               EQU              (IOMUXC_BASE_ADDR+0x64)
  546 00000000 43FAC068 
                       IOMUXC_SW_MUX_CTL_PAD_BCLK
                               EQU              (IOMUXC_BASE_ADDR+0x68)
  547 00000000 43FAC06C 
                       IOMUXC_SW_MUX_CTL_PAD_RW
                               EQU              (IOMUXC_BASE_ADDR+0x6c)
  548 00000000 43FAC070 
                       IOMUXC_SW_MUX_CTL_PAD_NFWE_B
                               EQU              (IOMUXC_BASE_ADDR+0x70)
  549 00000000 43FAC074 
                       IOMUXC_SW_MUX_CTL_PAD_NFRE_B
                               EQU              (IOMUXC_BASE_ADDR+0x74)
  550 00000000 43FAC078 
                       IOMUXC_SW_MUX_CTL_PAD_NFALE
                               EQU              (IOMUXC_BASE_ADDR+0x78)
  551 00000000 43FAC07C 
                       IOMUXC_SW_MUX_CTL_PAD_NFCLE
                               EQU              (IOMUXC_BASE_ADDR+0x7c)
  552 00000000 43FAC080 
                       IOMUXC_SW_MUX_CTL_PAD_NFWP_B
                               EQU              (IOMUXC_BASE_ADDR+0x80)
  553 00000000 43FAC084 
                       IOMUXC_SW_MUX_CTL_PAD_NFRB
                               EQU              (IOMUXC_BASE_ADDR+0x84)
  554 00000000 43FAC088 
                       IOMUXC_SW_MUX_CTL_PAD_D15
                               EQU              (IOMUXC_BASE_ADDR+0x88)
  555 00000000 43FAC08C 
                       IOMUXC_SW_MUX_CTL_PAD_D14
                               EQU              (IOMUXC_BASE_ADDR+0x8c)



ARM Macro Assembler    Page 32 


  556 00000000 43FAC090 
                       IOMUXC_SW_MUX_CTL_PAD_D13
                               EQU              (IOMUXC_BASE_ADDR+0x90)
  557 00000000 43FAC094 
                       IOMUXC_SW_MUX_CTL_PAD_D12
                               EQU              (IOMUXC_BASE_ADDR+0x94)
  558 00000000 43FAC098 
                       IOMUXC_SW_MUX_CTL_PAD_D11
                               EQU              (IOMUXC_BASE_ADDR+0x98)
  559 00000000 43FAC09C 
                       IOMUXC_SW_MUX_CTL_PAD_D10
                               EQU              (IOMUXC_BASE_ADDR+0x9c)
  560 00000000 43FAC0A0 
                       IOMUXC_SW_MUX_CTL_PAD_D9
                               EQU              (IOMUXC_BASE_ADDR+0xa0)
  561 00000000 43FAC0A4 
                       IOMUXC_SW_MUX_CTL_PAD_D8
                               EQU              (IOMUXC_BASE_ADDR+0xa4)
  562 00000000 43FAC0A8 
                       IOMUXC_SW_MUX_CTL_PAD_D7
                               EQU              (IOMUXC_BASE_ADDR+0xa8)
  563 00000000 43FAC0AC 
                       IOMUXC_SW_MUX_CTL_PAD_D6
                               EQU              (IOMUXC_BASE_ADDR+0xac)
  564 00000000 43FAC0B0 
                       IOMUXC_SW_MUX_CTL_PAD_D5
                               EQU              (IOMUXC_BASE_ADDR+0xb0)
  565 00000000 43FAC0B4 
                       IOMUXC_SW_MUX_CTL_PAD_D4
                               EQU              (IOMUXC_BASE_ADDR+0xb4)
  566 00000000 43FAC0B8 
                       IOMUXC_SW_MUX_CTL_PAD_D3
                               EQU              (IOMUXC_BASE_ADDR+0xb8)
  567 00000000 43FAC0BC 
                       IOMUXC_SW_MUX_CTL_PAD_D2
                               EQU              (IOMUXC_BASE_ADDR+0xbc)
  568 00000000 43FAC0C0 
                       IOMUXC_SW_MUX_CTL_PAD_D1
                               EQU              (IOMUXC_BASE_ADDR+0xc0)
  569 00000000 43FAC0C4 
                       IOMUXC_SW_MUX_CTL_PAD_D0
                               EQU              (IOMUXC_BASE_ADDR+0xc4)
  570 00000000 43FAC0C8 
                       IOMUXC_SW_MUX_CTL_PAD_LD0
                               EQU              (IOMUXC_BASE_ADDR+0xc8)
  571 00000000 43FAC0CC 
                       IOMUXC_SW_MUX_CTL_PAD_LD1
                               EQU              (IOMUXC_BASE_ADDR+0xcc)
  572 00000000 43FAC0D0 
                       IOMUXC_SW_MUX_CTL_PAD_LD2
                               EQU              (IOMUXC_BASE_ADDR+0xd0)
  573 00000000 43FAC0D4 
                       IOMUXC_SW_MUX_CTL_PAD_LD3
                               EQU              (IOMUXC_BASE_ADDR+0xd4)
  574 00000000 43FAC0D8 
                       IOMUXC_SW_MUX_CTL_PAD_LD4
                               EQU              (IOMUXC_BASE_ADDR+0xd8)
  575 00000000 43FAC0DC 
                       IOMUXC_SW_MUX_CTL_PAD_LD5



ARM Macro Assembler    Page 33 


                               EQU              (IOMUXC_BASE_ADDR+0xdc)
  576 00000000 43FAC0E0 
                       IOMUXC_SW_MUX_CTL_PAD_LD6
                               EQU              (IOMUXC_BASE_ADDR+0xe0)
  577 00000000 43FAC0E4 
                       IOMUXC_SW_MUX_CTL_PAD_LD7
                               EQU              (IOMUXC_BASE_ADDR+0xe4)
  578 00000000 43FAC0E8 
                       IOMUXC_SW_MUX_CTL_PAD_LD8
                               EQU              (IOMUXC_BASE_ADDR+0xe8)
  579 00000000 43FAC0EC 
                       IOMUXC_SW_MUX_CTL_PAD_LD9
                               EQU              (IOMUXC_BASE_ADDR+0xec)
  580 00000000 43FAC0F0 
                       IOMUXC_SW_MUX_CTL_PAD_LD10
                               EQU              (IOMUXC_BASE_ADDR+0xf0)
  581 00000000 43FAC0F4 
                       IOMUXC_SW_MUX_CTL_PAD_LD11
                               EQU              (IOMUXC_BASE_ADDR+0xf4)
  582 00000000 43FAC0F8 
                       IOMUXC_SW_MUX_CTL_PAD_LD12
                               EQU              (IOMUXC_BASE_ADDR+0xf8)
  583 00000000 43FAC0FC 
                       IOMUXC_SW_MUX_CTL_PAD_LD13
                               EQU              (IOMUXC_BASE_ADDR+0xfc)
  584 00000000 43FAC100 
                       IOMUXC_SW_MUX_CTL_PAD_LD14
                               EQU              (IOMUXC_BASE_ADDR+0x100)
  585 00000000 43FAC104 
                       IOMUXC_SW_MUX_CTL_PAD_LD15
                               EQU              (IOMUXC_BASE_ADDR+0x104)
  586 00000000 43FAC108 
                       IOMUXC_SW_MUX_CTL_PAD_HSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x108)
  587 00000000 43FAC10C 
                       IOMUXC_SW_MUX_CTL_PAD_VSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x10c)
  588 00000000 43FAC110 
                       IOMUXC_SW_MUX_CTL_PAD_LSCLK
                               EQU              (IOMUXC_BASE_ADDR+0x110)
  589 00000000 43FAC114 
                       IOMUXC_SW_MUX_CTL_PAD_OE_ACD
                               EQU              (IOMUXC_BASE_ADDR+0x114)
  590 00000000 43FAC118 
                       IOMUXC_SW_MUX_CTL_PAD_CONTRAST
                               EQU              (IOMUXC_BASE_ADDR+0x118)
  591 00000000 43FAC11C 
                       IOMUXC_SW_MUX_CTL_PAD_PWM
                               EQU              (IOMUXC_BASE_ADDR+0x11c)
  592 00000000 43FAC120 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_D2
                               EQU              (IOMUXC_BASE_ADDR+0x120)
  593 00000000 43FAC124 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_D3
                               EQU              (IOMUXC_BASE_ADDR+0x124)
  594 00000000 43FAC128 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_D4
                               EQU              (IOMUXC_BASE_ADDR+0x128)
  595 00000000 43FAC12C 



ARM Macro Assembler    Page 34 


                       IOMUXC_SW_MUX_CTL_PAD_CSI_D5
                               EQU              (IOMUXC_BASE_ADDR+0x12c)
  596 00000000 43FAC130 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_D6
                               EQU              (IOMUXC_BASE_ADDR+0x130)
  597 00000000 43FAC134 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_D7
                               EQU              (IOMUXC_BASE_ADDR+0x134)
  598 00000000 43FAC138 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_D8
                               EQU              (IOMUXC_BASE_ADDR+0x138)
  599 00000000 43FAC13C 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_D9
                               EQU              (IOMUXC_BASE_ADDR+0x13c)
  600 00000000 43FAC140 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_MCLK
                               EQU              (IOMUXC_BASE_ADDR+0x140)
  601 00000000 43FAC144 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_VSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x144)
  602 00000000 43FAC148 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_HSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x148)
  603 00000000 43FAC14C 
                       IOMUXC_SW_MUX_CTL_PAD_CSI_PIXCLK
                               EQU              (IOMUXC_BASE_ADDR+0x14c)
  604 00000000 43FAC150 
                       IOMUXC_SW_MUX_CTL_PAD_I2C1_CLK
                               EQU              (IOMUXC_BASE_ADDR+0x150)
  605 00000000 43FAC154 
                       IOMUXC_SW_MUX_CTL_PAD_I2C1_DAT
                               EQU              (IOMUXC_BASE_ADDR+0x154)
  606 00000000 43FAC158 
                       IOMUXC_SW_MUX_CTL_PAD_CSPI1_MOSI
                               EQU              (IOMUXC_BASE_ADDR+0x158)
  607 00000000 43FAC15C 
                       IOMUXC_SW_MUX_CTL_PAD_CSPI1_MISO
                               EQU              (IOMUXC_BASE_ADDR+0x15c)
  608 00000000 43FAC160 
                       IOMUXC_SW_MUX_CTL_PAD_CSPI1_SS0
                               EQU              (IOMUXC_BASE_ADDR+0x160)
  609 00000000 43FAC164 
                       IOMUXC_SW_MUX_CTL_PAD_CSPI1_SS1
                               EQU              (IOMUXC_BASE_ADDR+0x164)
  610 00000000 43FAC168 
                       IOMUXC_SW_MUX_CTL_PAD_CSPI1_SCLK
                               EQU              (IOMUXC_BASE_ADDR+0x168)
  611 00000000 43FAC16C 
                       IOMUXC_SW_MUX_CTL_PAD_CSPI1_RDY
                               EQU              (IOMUXC_BASE_ADDR+0x16c)
  612 00000000 43FAC170 
                       IOMUXC_SW_MUX_CTL_PAD_UART1_RXD
                               EQU              (IOMUXC_BASE_ADDR+0x170)
  613 00000000 43FAC174 
                       IOMUXC_SW_MUX_CTL_PAD_UART1_TXD
                               EQU              (IOMUXC_BASE_ADDR+0x174)
  614 00000000 43FAC178 
                       IOMUXC_SW_MUX_CTL_PAD_UART1_RTS
                               EQU              (IOMUXC_BASE_ADDR+0x178)



ARM Macro Assembler    Page 35 


  615 00000000 43FAC17C 
                       IOMUXC_SW_MUX_CTL_PAD_UART1_CTS
                               EQU              (IOMUXC_BASE_ADDR+0x17c)
  616 00000000 43FAC180 
                       IOMUXC_SW_MUX_CTL_PAD_UART2_RXD
                               EQU              (IOMUXC_BASE_ADDR+0x180)
  617 00000000 43FAC184 
                       IOMUXC_SW_MUX_CTL_PAD_UART2_TXD
                               EQU              (IOMUXC_BASE_ADDR+0x184)
  618 00000000 43FAC188 
                       IOMUXC_SW_MUX_CTL_PAD_UART2_RTS
                               EQU              (IOMUXC_BASE_ADDR+0x188)
  619 00000000 43FAC18C 
                       IOMUXC_SW_MUX_CTL_PAD_UART2_CTS
                               EQU              (IOMUXC_BASE_ADDR+0x18c)
  620 00000000 43FAC190 
                       IOMUXC_SW_MUX_CTL_PAD_SD1_CMD
                               EQU              (IOMUXC_BASE_ADDR+0x190)
  621 00000000 43FAC194 
                       IOMUXC_SW_MUX_CTL_PAD_SD1_CLK
                               EQU              (IOMUXC_BASE_ADDR+0x194)
  622 00000000 43FAC198 
                       IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0
                               EQU              (IOMUXC_BASE_ADDR+0x198)
  623 00000000 43FAC19C 
                       IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1
                               EQU              (IOMUXC_BASE_ADDR+0x19c)
  624 00000000 43FAC1A0 
                       IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2
                               EQU              (IOMUXC_BASE_ADDR+0x1a0)
  625 00000000 43FAC1A4 
                       IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3
                               EQU              (IOMUXC_BASE_ADDR+0x1a4)
  626 00000000 43FAC1A8 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_ROW0
                               EQU              (IOMUXC_BASE_ADDR+0x1a8)
  627 00000000 43FAC1AC 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_ROW1
                               EQU              (IOMUXC_BASE_ADDR+0x1ac)
  628 00000000 43FAC1B0 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_ROW2
                               EQU              (IOMUXC_BASE_ADDR+0x1b0)
  629 00000000 43FAC1B4 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_ROW3
                               EQU              (IOMUXC_BASE_ADDR+0x1b4)
  630 00000000 43FAC1B8 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_COL0
                               EQU              (IOMUXC_BASE_ADDR+0x1b8)
  631 00000000 43FAC1BC 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_COL1
                               EQU              (IOMUXC_BASE_ADDR+0x1bc)
  632 00000000 43FAC1C0 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_COL2
                               EQU              (IOMUXC_BASE_ADDR+0x1c0)
  633 00000000 43FAC1C4 
                       IOMUXC_SW_MUX_CTL_PAD_KPP_COL3
                               EQU              (IOMUXC_BASE_ADDR+0x1c4)
  634 00000000 43FAC1C8 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_MDC



ARM Macro Assembler    Page 36 


                               EQU              (IOMUXC_BASE_ADDR+0x1c8)
  635 00000000 43FAC1CC 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_MDIO
                               EQU              (IOMUXC_BASE_ADDR+0x1cc)
  636 00000000 43FAC1D0 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_TDATA0
                               EQU              (IOMUXC_BASE_ADDR+0x1d0)
  637 00000000 43FAC1D4 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_TDATA1
                               EQU              (IOMUXC_BASE_ADDR+0x1d4)
  638 00000000 43FAC1D8 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_TX_EN
                               EQU              (IOMUXC_BASE_ADDR+0x1d8)
  639 00000000 43FAC1DC 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_RDATA0
                               EQU              (IOMUXC_BASE_ADDR+0x1dc)
  640 00000000 43FAC1E0 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_RDATA1
                               EQU              (IOMUXC_BASE_ADDR+0x1e0)
  641 00000000 43FAC1E4 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_RX_DV
                               EQU              (IOMUXC_BASE_ADDR+0x1e4)
  642 00000000 43FAC1E8 
                       IOMUXC_SW_MUX_CTL_PAD_FEC_TX_CLK
                               EQU              (IOMUXC_BASE_ADDR+0x1e8)
  643 00000000 43FAC1EC 
                       IOMUXC_SW_MUX_CTL_PAD_RTCK
                               EQU              (IOMUXC_BASE_ADDR+0x1ec)
  644 00000000 43FAC1F0 
                       IOMUXC_SW_MUX_CTL_PAD_DE_B
                               EQU              (IOMUXC_BASE_ADDR+0x1f0)
  645 00000000 43FAC1F4 
                       IOMUXC_SW_MUX_CTL_PAD_GPIO_A
                               EQU              (IOMUXC_BASE_ADDR+0x1f4)
  646 00000000 43FAC1F8 
                       IOMUXC_SW_MUX_CTL_PAD_GPIO_B
                               EQU              (IOMUXC_BASE_ADDR+0x1f8)
  647 00000000 43FAC1FC 
                       IOMUXC_SW_MUX_CTL_PAD_GPIO_C
                               EQU              (IOMUXC_BASE_ADDR+0x1fc)
  648 00000000 43FAC200 
                       IOMUXC_SW_MUX_CTL_PAD_GPIO_D
                               EQU              (IOMUXC_BASE_ADDR+0x200)
  649 00000000 43FAC204 
                       IOMUXC_SW_MUX_CTL_PAD_GPIO_E
                               EQU              (IOMUXC_BASE_ADDR+0x204)
  650 00000000 43FAC208 
                       IOMUXC_SW_MUX_CTL_PAD_GPIO_F
                               EQU              (IOMUXC_BASE_ADDR+0x208)
  651 00000000 43FAC20C 
                       IOMUXC_SW_MUX_CTL_PAD_EXT_ARMCLK
                               EQU              (IOMUXC_BASE_ADDR+0x20c)
  652 00000000 43FAC210 
                       IOMUXC_SW_MUX_CTL_PAD_UPLL_BYPCLK
                               EQU              (IOMUXC_BASE_ADDR+0x210)
  653 00000000 43FAC214 
                       IOMUXC_SW_MUX_CTL_PAD_VSTBY_REQ
                               EQU              (IOMUXC_BASE_ADDR+0x214)
  654 00000000 43FAC218 



ARM Macro Assembler    Page 37 


                       IOMUXC_SW_MUX_CTL_PAD_VSTBY_ACK
                               EQU              (IOMUXC_BASE_ADDR+0x218)
  655 00000000 43FAC21C 
                       IOMUXC_SW_MUX_CTL_PAD_POWER_FAIL
                               EQU              (IOMUXC_BASE_ADDR+0x21c)
  656 00000000 43FAC220 
                       IOMUXC_SW_MUX_CTL_PAD_CLKO
                               EQU              (IOMUXC_BASE_ADDR+0x220)
  657 00000000 43FAC224 
                       IOMUXC_SW_MUX_CTL_PAD_BOOT_MODE0
                               EQU              (IOMUXC_BASE_ADDR+0x224)
  658 00000000 43FAC228 
                       IOMUXC_SW_MUX_CTL_PAD_BOOT_MODE1
                               EQU              (IOMUXC_BASE_ADDR+0x228)
  659 00000000         
  660 00000000 43FAC22C 
                       IOMUXC_SW_PAD_CTL_PAD_A13
                               EQU              (IOMUXC_BASE_ADDR+0x22c)
  661 00000000 43FAC230 
                       IOMUXC_SW_PAD_CTL_PAD_A14
                               EQU              (IOMUXC_BASE_ADDR+0x230)
  662 00000000 43FAC234 
                       IOMUXC_SW_PAD_CTL_PAD_A15
                               EQU              (IOMUXC_BASE_ADDR+0x234)
  663 00000000 43FAC238 
                       IOMUXC_SW_PAD_CTL_PAD_A17
                               EQU              (IOMUXC_BASE_ADDR+0x238)
  664 00000000 43FAC23C 
                       IOMUXC_SW_PAD_CTL_PAD_A18
                               EQU              (IOMUXC_BASE_ADDR+0x23c)
  665 00000000 43FAC240 
                       IOMUXC_SW_PAD_CTL_PAD_A19
                               EQU              (IOMUXC_BASE_ADDR+0x240)
  666 00000000 43FAC244 
                       IOMUXC_SW_PAD_CTL_PAD_A20
                               EQU              (IOMUXC_BASE_ADDR+0x244)
  667 00000000 43FAC248 
                       IOMUXC_SW_PAD_CTL_PAD_A21
                               EQU              (IOMUXC_BASE_ADDR+0x248)
  668 00000000 43FAC24C 
                       IOMUXC_SW_PAD_CTL_PAD_A23
                               EQU              (IOMUXC_BASE_ADDR+0x24c)
  669 00000000 43FAC250 
                       IOMUXC_SW_PAD_CTL_PAD_A24
                               EQU              (IOMUXC_BASE_ADDR+0x250)
  670 00000000 43FAC254 
                       IOMUXC_SW_PAD_CTL_PAD_A25
                               EQU              (IOMUXC_BASE_ADDR+0x254)
  671 00000000 43FAC258 
                       IOMUXC_SW_PAD_CTL_PAD_EB0
                               EQU              (IOMUXC_BASE_ADDR+0x258)
  672 00000000 43FAC25C 
                       IOMUXC_SW_PAD_CTL_PAD_EB1
                               EQU              (IOMUXC_BASE_ADDR+0x25c)
  673 00000000 43FAC260 
                       IOMUXC_SW_PAD_CTL_PAD_OE
                               EQU              (IOMUXC_BASE_ADDR+0x260)
  674 00000000 43FAC264 
                       IOMUXC_SW_PAD_CTL_PAD_CS4



ARM Macro Assembler    Page 38 


                               EQU              (IOMUXC_BASE_ADDR+0x264)
  675 00000000 43FAC268 
                       IOMUXC_SW_PAD_CTL_PAD_CS5
                               EQU              (IOMUXC_BASE_ADDR+0x268)
  676 00000000 43FAC26C 
                       IOMUXC_SW_PAD_CTL_PAD_NF_CE0
                               EQU              (IOMUXC_BASE_ADDR+0x26c)
  677 00000000 43FAC270 
                       IOMUXC_SW_PAD_CTL_PAD_ECB
                               EQU              (IOMUXC_BASE_ADDR+0x270)
  678 00000000 43FAC274 
                       IOMUXC_SW_PAD_CTL_PAD_LBA
                               EQU              (IOMUXC_BASE_ADDR+0x274)
  679 00000000 43FAC278 
                       IOMUXC_SW_PAD_CTL_PAD_RW
                               EQU              (IOMUXC_BASE_ADDR+0x278)
  680 00000000 43FAC27C 
                       IOMUXC_SW_PAD_CTL_PAD_NFRB
                               EQU              (IOMUXC_BASE_ADDR+0x27c)
  681 00000000 43FAC280 
                       IOMUXC_SW_PAD_CTL_PAD_D15
                               EQU              (IOMUXC_BASE_ADDR+0x280)
  682 00000000 43FAC284 
                       IOMUXC_SW_PAD_CTL_PAD_D14
                               EQU              (IOMUXC_BASE_ADDR+0x284)
  683 00000000 43FAC288 
                       IOMUXC_SW_PAD_CTL_PAD_D13
                               EQU              (IOMUXC_BASE_ADDR+0x288)
  684 00000000 43FAC28C 
                       IOMUXC_SW_PAD_CTL_PAD_D12
                               EQU              (IOMUXC_BASE_ADDR+0x28c)
  685 00000000 43FAC290 
                       IOMUXC_SW_PAD_CTL_PAD_D11
                               EQU              (IOMUXC_BASE_ADDR+0x290)
  686 00000000 43FAC294 
                       IOMUXC_SW_PAD_CTL_PAD_D10
                               EQU              (IOMUXC_BASE_ADDR+0x294)
  687 00000000 43FAC298 
                       IOMUXC_SW_PAD_CTL_PAD_D9
                               EQU              (IOMUXC_BASE_ADDR+0x298)
  688 00000000 43FAC29C 
                       IOMUXC_SW_PAD_CTL_PAD_D8
                               EQU              (IOMUXC_BASE_ADDR+0x29c)
  689 00000000 43FAC2A0 
                       IOMUXC_SW_PAD_CTL_PAD_D7
                               EQU              (IOMUXC_BASE_ADDR+0x2a0)
  690 00000000 43FAC2A4 
                       IOMUXC_SW_PAD_CTL_PAD_D6
                               EQU              (IOMUXC_BASE_ADDR+0x2a4)
  691 00000000 43FAC2A8 
                       IOMUXC_SW_PAD_CTL_PAD_D5
                               EQU              (IOMUXC_BASE_ADDR+0x2a8)
  692 00000000 43FAC2AC 
                       IOMUXC_SW_PAD_CTL_PAD_D4
                               EQU              (IOMUXC_BASE_ADDR+0x2ac)
  693 00000000 43FAC2B0 
                       IOMUXC_SW_PAD_CTL_PAD_D3
                               EQU              (IOMUXC_BASE_ADDR+0x2b0)
  694 00000000 43FAC2B4 



ARM Macro Assembler    Page 39 


                       IOMUXC_SW_PAD_CTL_PAD_D2
                               EQU              (IOMUXC_BASE_ADDR+0x2b4)
  695 00000000 43FAC2B8 
                       IOMUXC_SW_PAD_CTL_PAD_D1
                               EQU              (IOMUXC_BASE_ADDR+0x2b8)
  696 00000000 43FAC2BC 
                       IOMUXC_SW_PAD_CTL_PAD_D0
                               EQU              (IOMUXC_BASE_ADDR+0x2bc)
  697 00000000 43FAC2C0 
                       IOMUXC_SW_PAD_CTL_PAD_LD0
                               EQU              (IOMUXC_BASE_ADDR+0x2c0)
  698 00000000 43FAC2C4 
                       IOMUXC_SW_PAD_CTL_PAD_LD1
                               EQU              (IOMUXC_BASE_ADDR+0x2c4)
  699 00000000 43FAC2C8 
                       IOMUXC_SW_PAD_CTL_PAD_LD2
                               EQU              (IOMUXC_BASE_ADDR+0x2c8)
  700 00000000 43FAC2CC 
                       IOMUXC_SW_PAD_CTL_PAD_LD3
                               EQU              (IOMUXC_BASE_ADDR+0x2cc)
  701 00000000 43FAC2D0 
                       IOMUXC_SW_PAD_CTL_PAD_LD4
                               EQU              (IOMUXC_BASE_ADDR+0x2d0)
  702 00000000 43FAC2D4 
                       IOMUXC_SW_PAD_CTL_PAD_LD5
                               EQU              (IOMUXC_BASE_ADDR+0x2d4)
  703 00000000 43FAC2D8 
                       IOMUXC_SW_PAD_CTL_PAD_LD6
                               EQU              (IOMUXC_BASE_ADDR+0x2d8)
  704 00000000 43FAC2DC 
                       IOMUXC_SW_PAD_CTL_PAD_LD7
                               EQU              (IOMUXC_BASE_ADDR+0x2dc)
  705 00000000 43FAC2E0 
                       IOMUXC_SW_PAD_CTL_PAD_LD8
                               EQU              (IOMUXC_BASE_ADDR+0x2e0)
  706 00000000 43FAC2E4 
                       IOMUXC_SW_PAD_CTL_PAD_LD9
                               EQU              (IOMUXC_BASE_ADDR+0x2e4)
  707 00000000 43FAC2E8 
                       IOMUXC_SW_PAD_CTL_PAD_LD10
                               EQU              (IOMUXC_BASE_ADDR+0x2e8)
  708 00000000 43FAC2EC 
                       IOMUXC_SW_PAD_CTL_PAD_LD11
                               EQU              (IOMUXC_BASE_ADDR+0x2ec)
  709 00000000 43FAC2F0 
                       IOMUXC_SW_PAD_CTL_PAD_LD12
                               EQU              (IOMUXC_BASE_ADDR+0x2f0)
  710 00000000 43FAC2F4 
                       IOMUXC_SW_PAD_CTL_PAD_LD13
                               EQU              (IOMUXC_BASE_ADDR+0x2f4)
  711 00000000 43FAC2F8 
                       IOMUXC_SW_PAD_CTL_PAD_LD14
                               EQU              (IOMUXC_BASE_ADDR+0x2f8)
  712 00000000 43FAC2FC 
                       IOMUXC_SW_PAD_CTL_PAD_LD15
                               EQU              (IOMUXC_BASE_ADDR+0x2fc)
  713 00000000 43FAC300 
                       IOMUXC_SW_PAD_CTL_PAD_HSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x300)



ARM Macro Assembler    Page 40 


  714 00000000 43FAC304 
                       IOMUXC_SW_PAD_CTL_PAD_VSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x304)
  715 00000000 43FAC308 
                       IOMUXC_SW_PAD_CTL_PAD_LSCLK
                               EQU              (IOMUXC_BASE_ADDR+0x308)
  716 00000000 43FAC30C 
                       IOMUXC_SW_PAD_CTL_PAD_OE_ACD
                               EQU              (IOMUXC_BASE_ADDR+0x30c)
  717 00000000 43FAC310 
                       IOMUXC_SW_PAD_CTL_PAD_CONTRAST
                               EQU              (IOMUXC_BASE_ADDR+0x310)
  718 00000000 43FAC314 
                       IOMUXC_SW_PAD_CTL_PAD_PWM
                               EQU              (IOMUXC_BASE_ADDR+0x314)
  719 00000000 43FAC318 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D2
                               EQU              (IOMUXC_BASE_ADDR+0x318)
  720 00000000 43FAC31C 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D3
                               EQU              (IOMUXC_BASE_ADDR+0x31c)
  721 00000000 43FAC320 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D4
                               EQU              (IOMUXC_BASE_ADDR+0x320)
  722 00000000 43FAC324 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D5
                               EQU              (IOMUXC_BASE_ADDR+0x324)
  723 00000000 43FAC328 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D6
                               EQU              (IOMUXC_BASE_ADDR+0x328)
  724 00000000 43FAC32C 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D7
                               EQU              (IOMUXC_BASE_ADDR+0x32c)
  725 00000000 43FAC330 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D8
                               EQU              (IOMUXC_BASE_ADDR+0x330)
  726 00000000 43FAC334 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_D9
                               EQU              (IOMUXC_BASE_ADDR+0x334)
  727 00000000 43FAC338 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_MCLK
                               EQU              (IOMUXC_BASE_ADDR+0x338)
  728 00000000 43FAC33C 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_VSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x33c)
  729 00000000 43FAC340 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_HSYNC
                               EQU              (IOMUXC_BASE_ADDR+0x340)
  730 00000000 43FAC344 
                       IOMUXC_SW_PAD_CTL_PAD_CSI_PIXCLK
                               EQU              (IOMUXC_BASE_ADDR+0x344)
  731 00000000 43FAC348 
                       IOMUXC_SW_PAD_CTL_PAD_I2C1_CLK
                               EQU              (IOMUXC_BASE_ADDR+0x348)
  732 00000000 43FAC34C 
                       IOMUXC_SW_PAD_CTL_PAD_I2C1_DAT
                               EQU              (IOMUXC_BASE_ADDR+0x34c)
  733 00000000 43FAC350 
                       IOMUXC_SW_PAD_CTL_PAD_CSPI1_MOSI



ARM Macro Assembler    Page 41 


                               EQU              (IOMUXC_BASE_ADDR+0x350)
  734 00000000 43FAC354 
                       IOMUXC_SW_PAD_CTL_PAD_CSPI1_MISO
                               EQU              (IOMUXC_BASE_ADDR+0x354)
  735 00000000 43FAC358 
                       IOMUXC_SW_PAD_CTL_PAD_CSPI1_SS0
                               EQU              (IOMUXC_BASE_ADDR+0x358)
  736 00000000 43FAC35C 
                       IOMUXC_SW_PAD_CTL_PAD_CSPI1_SS1
                               EQU              (IOMUXC_BASE_ADDR+0x35c)
  737 00000000 43FAC360 
                       IOMUXC_SW_PAD_CTL_PAD_CSPI1_SCLK
                               EQU              (IOMUXC_BASE_ADDR+0x360)
  738 00000000 43FAC364 
                       IOMUXC_SW_PAD_CTL_PAD_CSPI1_RDY
                               EQU              (IOMUXC_BASE_ADDR+0x364)
  739 00000000 43FAC368 
                       IOMUXC_SW_PAD_CTL_PAD_UART1_RXD
                               EQU              (IOMUXC_BASE_ADDR+0x368)
  740 00000000 43FAC36C 
                       IOMUXC_SW_PAD_CTL_PAD_UART1_TXD
                               EQU              (IOMUXC_BASE_ADDR+0x36c)
  741 00000000 43FAC370 
                       IOMUXC_SW_PAD_CTL_PAD_UART1_RTS
                               EQU              (IOMUXC_BASE_ADDR+0x370)
  742 00000000 43FAC374 
                       IOMUXC_SW_PAD_CTL_PAD_UART1_CTS
                               EQU              (IOMUXC_BASE_ADDR+0x374)
  743 00000000 43FAC378 
                       IOMUXC_SW_PAD_CTL_PAD_UART2_RXD
                               EQU              (IOMUXC_BASE_ADDR+0x378)
  744 00000000 43FAC37C 
                       IOMUXC_SW_PAD_CTL_PAD_UART2_TXD
                               EQU              (IOMUXC_BASE_ADDR+0x37c)
  745 00000000 43FAC380 
                       IOMUXC_SW_PAD_CTL_PAD_UART2_RTS
                               EQU              (IOMUXC_BASE_ADDR+0x380)
  746 00000000 43FAC384 
                       IOMUXC_SW_PAD_CTL_PAD_UART2_CTS
                               EQU              (IOMUXC_BASE_ADDR+0x384)
  747 00000000 43FAC388 
                       IOMUXC_SW_PAD_CTL_PAD_SD1_CMD
                               EQU              (IOMUXC_BASE_ADDR+0x388)
  748 00000000 43FAC38C 
                       IOMUXC_SW_PAD_CTL_PAD_SD1_CLK
                               EQU              (IOMUXC_BASE_ADDR+0x38c)
  749 00000000 43FAC390 
                       IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0
                               EQU              (IOMUXC_BASE_ADDR+0x390)
  750 00000000 43FAC394 
                       IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1
                               EQU              (IOMUXC_BASE_ADDR+0x394)
  751 00000000 43FAC398 
                       IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2
                               EQU              (IOMUXC_BASE_ADDR+0x398)
  752 00000000 43FAC39C 
                       IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3
                               EQU              (IOMUXC_BASE_ADDR+0x39c)
  753 00000000 43FAC3A0 



ARM Macro Assembler    Page 42 


                       IOMUXC_SW_PAD_CTL_PAD_KPP_ROW0
                               EQU              (IOMUXC_BASE_ADDR+0x3a0)
  754 00000000 43FAC3A4 
                       IOMUXC_SW_PAD_CTL_PAD_KPP_ROW1
                               EQU              (IOMUXC_BASE_ADDR+0x3a4)
  755 00000000 43FAC3A8 
                       IOMUXC_SW_PAD_CTL_PAD_KPP_ROW2
                               EQU              (IOMUXC_BASE_ADDR+0x3a8)
  756 00000000 43FAC3AC 
                       IOMUXC_SW_PAD_CTL_PAD_KPP_ROW3
                               EQU              (IOMUXC_BASE_ADDR+0x3ac)
  757 00000000 43FAC3B0 
                       IOMUXC_SW_PAD_CTL_PAD_KPP_COL0
                               EQU              (IOMUXC_BASE_ADDR+0x3b0)
  758 00000000 43FAC3B4 
                       IOMUXC_SW_PAD_CTL_PAD_KPP_COL1
                               EQU              (IOMUXC_BASE_ADDR+0x3b4)
  759 00000000 43FAC3B8 
                       IOMUXC_SW_PAD_CTL_PAD_KPP_COL2
                               EQU              (IOMUXC_BASE_ADDR+0x3b8)
  760 00000000 43FAC3BC 
                       IOMUXC_SW_PAD_CTL_PAD_KPP_COL3
                               EQU              (IOMUXC_BASE_ADDR+0x3bc)
  761 00000000 43FAC3C0 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_MDC
                               EQU              (IOMUXC_BASE_ADDR+0x3c0)
  762 00000000 43FAC3C4 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_MDIO
                               EQU              (IOMUXC_BASE_ADDR+0x3c4)
  763 00000000 43FAC3C8 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_TDATA0
                               EQU              (IOMUXC_BASE_ADDR+0x3c8)
  764 00000000 43FAC3CC 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_TDATA1
                               EQU              (IOMUXC_BASE_ADDR+0x3cc)
  765 00000000 43FAC3D0 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_TX_EN
                               EQU              (IOMUXC_BASE_ADDR+0x3d0)
  766 00000000 43FAC3D4 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_RDATA0
                               EQU              (IOMUXC_BASE_ADDR+0x3d4)
  767 00000000 43FAC3D8 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_RDATA1
                               EQU              (IOMUXC_BASE_ADDR+0x3d8)
  768 00000000 43FAC3DC 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_RX_DV
                               EQU              (IOMUXC_BASE_ADDR+0x3dc)
  769 00000000 43FAC3E0 
                       IOMUXC_SW_PAD_CTL_PAD_FEC_TX_CLK
                               EQU              (IOMUXC_BASE_ADDR+0x3e0)
  770 00000000 43FAC3E4 
                       IOMUXC_SW_PAD_CTL_PAD_RTCK
                               EQU              (IOMUXC_BASE_ADDR+0x3e4)
  771 00000000 43FAC3E8 
                       IOMUXC_SW_PAD_CTL_PAD_TDO
                               EQU              (IOMUXC_BASE_ADDR+0x3e8)
  772 00000000 43FAC3EC 
                       IOMUXC_SW_PAD_CTL_PAD_DE_B
                               EQU              (IOMUXC_BASE_ADDR+0x3ec)



ARM Macro Assembler    Page 43 


  773 00000000 43FAC3F0 
                       IOMUXC_SW_PAD_CTL_PAD_GPIO_A
                               EQU              (IOMUXC_BASE_ADDR+0x3f0)
  774 00000000 43FAC3F4 
                       IOMUXC_SW_PAD_CTL_PAD_GPIO_B
                               EQU              (IOMUXC_BASE_ADDR+0x3f4)
  775 00000000 43FAC3F8 
                       IOMUXC_SW_PAD_CTL_PAD_GPIO_C
                               EQU              (IOMUXC_BASE_ADDR+0x3f8)
  776 00000000 43FAC3FC 
                       IOMUXC_SW_PAD_CTL_PAD_GPIO_D
                               EQU              (IOMUXC_BASE_ADDR+0x3fc)
  777 00000000 43FAC400 
                       IOMUXC_SW_PAD_CTL_PAD_GPIO_E
                               EQU              (IOMUXC_BASE_ADDR+0x400)
  778 00000000 43FAC404 
                       IOMUXC_SW_PAD_CTL_PAD_GPIO_F
                               EQU              (IOMUXC_BASE_ADDR+0x404)
  779 00000000 43FAC408 
                       IOMUXC_SW_PAD_CTL_PAD_VSTBY_REQ
                               EQU              (IOMUXC_BASE_ADDR+0x408)
  780 00000000 43FAC40C 
                       IOMUXC_SW_PAD_CTL_PAD_VSTBY_ACK
                               EQU              (IOMUXC_BASE_ADDR+0x40c)
  781 00000000 43FAC410 
                       IOMUXC_SW_PAD_CTL_PAD_POWER_FAIL
                               EQU              (IOMUXC_BASE_ADDR+0x410)
  782 00000000 43FAC414 
                       IOMUXC_SW_PAD_CTL_PAD_CLKO
                               EQU              (IOMUXC_BASE_ADDR+0x414)
  783 00000000         
  784 00000000 43FAC418 
                       IOMUXC_SW_PAD_CTL_GRP_DVS_MISC
                               EQU              (IOMUXC_BASE_ADDR+0x418)
  785 00000000 43FAC41C 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_FEC
                               EQU              (IOMUXC_BASE_ADDR+0x41c)
  786 00000000 43FAC420 
                       IOMUXC_SW_PAD_CTL_GRP_DVS_JTAG
                               EQU              (IOMUXC_BASE_ADDR+0x420)
  787 00000000 43FAC424 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_NFC
                               EQU              (IOMUXC_BASE_ADDR+0x424)
  788 00000000 43FAC428 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_CSI
                               EQU              (IOMUXC_BASE_ADDR+0x428)
  789 00000000 43FAC42C 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_WEIM
                               EQU              (IOMUXC_BASE_ADDR+0x42c)
  790 00000000 43FAC430 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_DDR
                               EQU              (IOMUXC_BASE_ADDR+0x430)
  791 00000000 43FAC434 
                       IOMUXC_SW_PAD_CTL_GRP_DVS_CRM
                               EQU              (IOMUXC_BASE_ADDR+0x434)
  792 00000000 43FAC438 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_KPP
                               EQU              (IOMUXC_BASE_ADDR+0x438)
  793 00000000 43FAC43C 



ARM Macro Assembler    Page 44 


                       IOMUXC_SW_PAD_CTL_GRP_DSE_SDHC1
                               EQU              (IOMUXC_BASE_ADDR+0x43c)
  794 00000000 43FAC440 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_LCD
                               EQU              (IOMUXC_BASE_ADDR+0x440)
  795 00000000 43FAC444 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_UART
                               EQU              (IOMUXC_BASE_ADDR+0x444)
  796 00000000 43FAC448 
                       IOMUXC_SW_PAD_CTL_GRP_DVS_NFC
                               EQU              (IOMUXC_BASE_ADDR+0x448)
  797 00000000 43FAC44C 
                       IOMUXC_SW_PAD_CTL_GRP_DVS_CSI
                               EQU              (IOMUXC_BASE_ADDR+0x44c)
  798 00000000 43FAC450 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_CSPI1
                               EQU              (IOMUXC_BASE_ADDR+0x450)
  799 00000000 43FAC454 
                       IOMUXC_SW_PAD_CTL_GRP_DDRTYPE
                               EQU              (IOMUXC_BASE_ADDR+0x454)
  800 00000000 43FAC458 
                       IOMUXC_SW_PAD_CTL_GRP_DVS_SDHC1
                               EQU              (IOMUXC_BASE_ADDR+0x458)
  801 00000000 43FAC45C 
                       IOMUXC_SW_PAD_CTL_GRP_DVS_LCD
                               EQU              (IOMUXC_BASE_ADDR+0x45c)
  802 00000000         
  803 00000000 43FAC460 
                       IOMUXC_AUDMUX_P4_INPUT_DA_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x460)
  804 00000000 43FAC464 
                       IOMUXC_AUDMUX_P4_INPUT_DB_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x464)
  805 00000000 43FAC468 
                       IOMUXC_AUDMUX_P4_INPUT_RXCLK_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x468)
  806 00000000 43FAC46C 
                       IOMUXC_AUDMUX_P4_INPUT_RXFS_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x46c)
  807 00000000 43FAC470 
                       IOMUXC_AUDMUX_P4_INPUT_TXCLK_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x470)
  808 00000000 43FAC474 
                       IOMUXC_AUDMUX_P4_INPUT_TXFS_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x474)
  809 00000000 43FAC478 
                       IOMUXC_AUDMUX_P7_INPUT_DA_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x478)
  810 00000000 43FAC47C 
                       IOMUXC_AUDMUX_P7_INPUT_TXFS_AMX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x47c)
  811 00000000         
  812 00000000 43FAC480 
                       IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x480)
  813 00000000 43FAC484 
                       IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x484)
  814 00000000         



ARM Macro Assembler    Page 45 


  815 00000000 43FAC488 
                       IOMUXC_CSI_IPP_CSI_D_0_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x488)
  816 00000000 43FAC48C 
                       IOMUXC_CSI_IPP_CSI_D_1_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x48c)
  817 00000000         
  818 00000000 43FAC490 
                       IOMUXC_CSPI1_IPP_IND_SS3_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x490)
  819 00000000 43FAC494 
                       IOMUXC_CSPI2_IPP_CSPI_CLK_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x494)
  820 00000000 43FAC498 
                       IOMUXC_CSPI2_IPP_IND_DATAREADY_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x498)
  821 00000000 43FAC49C 
                       IOMUXC_CSPI2_IPP_IND_MISO_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x49c)
  822 00000000 43FAC4A0 
                       IOMUXC_CSPI2_IPP_IND_MOSI_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4a0)
  823 00000000 43FAC4A4 
                       IOMUXC_CSPI2_IPP_IND_SS0_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4a4)
  824 00000000 43FAC4A8 
                       IOMUXC_CSPI2_IPP_IND_SS1_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4a8)
  825 00000000 43FAC4AC 
                       IOMUXC_CSPI3_IPP_CSPI_CLK_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4ac)
  826 00000000 43FAC4B0 
                       IOMUXC_CSPI3_IPP_IND_DATAREADY_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4b0)
  827 00000000 43FAC4B4 
                       IOMUXC_CSPI3_IPP_IND_MISO_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4b4)
  828 00000000 43FAC4B8 
                       IOMUXC_CSPI3_IPP_IND_MOSI_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4b8)
  829 00000000 43FAC4BC 
                       IOMUXC_CSPI3_IPP_IND_SS0_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4bc)
  830 00000000 43FAC4C0 
                       IOMUXC_CSPI3_IPP_IND_SS1_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4c0)
  831 00000000 43FAC4C4 
                       IOMUXC_CSPI3_IPP_IND_SS2_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4c4)
  832 00000000 43FAC4C8 
                       IOMUXC_CSPI3_IPP_IND_SS3_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4c8)
  833 00000000         
  834 00000000 43FAC4CC 
                       IOMUXC_ESDHC1_IPP_DAT4_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4cc)
  835 00000000 43FAC4D0 
                       IOMUXC_ESDHC1_IPP_DAT5_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4d0)



ARM Macro Assembler    Page 46 


  836 00000000 43FAC4D4 
                       IOMUXC_ESDHC1_IPP_DAT6_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4d4)
  837 00000000 43FAC4D8 
                       IOMUXC_ESDHC1_IPP_DAT7_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4d8)
  838 00000000 43FAC4DC 
                       IOMUXC_ESDHC2_IPP_CARD_CLK_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4dc)
  839 00000000 43FAC4E0 
                       IOMUXC_ESDHC2_IPP_CMD_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4e0)
  840 00000000 43FAC4E4 
                       IOMUXC_ESDHC2_IPP_DAT0_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4e4)
  841 00000000 43FAC4E8 
                       IOMUXC_ESDHC2_IPP_DAT1_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4e8)
  842 00000000 43FAC4EC 
                       IOMUXC_ESDHC2_IPP_DAT2_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4ec)
  843 00000000 43FAC4F0 
                       IOMUXC_ESDHC2_IPP_DAT3_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4f0)
  844 00000000 43FAC4F4 
                       IOMUXC_ESDHC2_IPP_DAT4_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4f4)
  845 00000000 43FAC4F8 
                       IOMUXC_ESDHC2_IPP_DAT5_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4f8)
  846 00000000 43FAC4FC 
                       IOMUXC_ESDHC2_IPP_DAT6_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x4fc)
  847 00000000 43FAC500 
                       IOMUXC_ESDHC2_IPP_DAT7_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x500)
  848 00000000         
  849 00000000 43FAC504 
                       IOMUXC_FEC_FEC_COL_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x504)
  850 00000000 43FAC508 
                       IOMUXC_FEC_FEC_CRS_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x508)
  851 00000000 43FAC50C 
                       IOMUXC_FEC_FEC_RDATA_2_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x50c)
  852 00000000 43FAC510 
                       IOMUXC_FEC_FEC_RDATA_3_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x510)
  853 00000000 43FAC514 
                       IOMUXC_FEC_FEC_RX_CLK_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x514)
  854 00000000 43FAC518 
                       IOMUXC_FEC_FEC_RX_ER_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x518)
  855 00000000         
  856 00000000 43FAC51C 
                       IOMUXC_I2C2_IPP_SCL_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x51c)



ARM Macro Assembler    Page 47 


  857 00000000 43FAC520 
                       IOMUXC_I2C2_IPP_SDA_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x520)
  858 00000000 43FAC524 
                       IOMUXC_I2C3_IPP_SCL_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x524)
  859 00000000 43FAC528 
                       IOMUXC_I2C3_IPP_SDA_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x528)
  860 00000000         
  861 00000000 43FAC52C 
                       IOMUXC_KPP_IPP_IND_COL_4_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x52c)
  862 00000000 43FAC530 
                       IOMUXC_KPP_IPP_IND_COL_5_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x530)
  863 00000000 43FAC534 
                       IOMUXC_KPP_IPP_IND_COL_6_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x534)
  864 00000000 43FAC538 
                       IOMUXC_KPP_IPP_IND_COL_7_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x538)
  865 00000000 43FAC53C 
                       IOMUXC_KPP_IPP_IND_ROW_4_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x53c)
  866 00000000 43FAC540 
                       IOMUXC_KPP_IPP_IND_ROW_5_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x540)
  867 00000000 43FAC544 
                       IOMUXC_KPP_IPP_IND_ROW_6_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x544)
  868 00000000 43FAC548 
                       IOMUXC_KPP_IPP_IND_ROW_7_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x548)
  869 00000000         
  870 00000000 43FAC54C 
                       IOMUXC_SIM1_PIN_SIM_RCVD1_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x54c)
  871 00000000 43FAC550 
                       IOMUXC_SIM1_PIN_SIM_SIMPD1_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x550)
  872 00000000 43FAC554 
                       IOMUXC_SIM1_SIM_RCVD1_IO_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x554)
  873 00000000 43FAC558 
                       IOMUXC_SIM2_PIN_SIM_RCVD1_IN_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x558)
  874 00000000 43FAC55C 
                       IOMUXC_SIM2_PIN_SIM_SIMPD1_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x55c)
  875 00000000 43FAC560 
                       IOMUXC_SIM2_SIM_RCVD1_IO_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x560)
  876 00000000         
  877 00000000 43FAC564 
                       IOMUXC_UART3_IPP_UART_RTS_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x564)
  878 00000000 43FAC568 
                       IOMUXC_UART3_IPP_UART_RXD_MUX_SELECT_INPUT



ARM Macro Assembler    Page 48 


                               EQU              (IOMUXC_BASE_ADDR+0x568)
  879 00000000 43FAC56C 
                       IOMUXC_UART4_IPP_UART_RTS_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x56c)
  880 00000000 43FAC570 
                       IOMUXC_UART4_IPP_UART_RXD_MUX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x570)
  881 00000000 43FAC574 
                       IOMUXC_UART5_IPP_UART_RTS_B_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x574)
  882 00000000 43FAC578 
                       IOMUXC_UART5_IPP_UART_RXD_MUX_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x578)
  883 00000000         
  884 00000000 43FAC57C 
                       IOMUXC_USB_TOP_IPP_IND_OTG_USB_OC_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x57c)
  885 00000000 43FAC580 
                       IOMUXC_USB_TOP_IPP_IND_UH2_USB_OC_SELECT_INPUT
                               EQU              (IOMUXC_BASE_ADDR+0x580)
  886 00000000         
  887 00000000         
  888 00000000         
  889 00000000         
  890 00000000         ;;------------------------------------------------------
                       ------------------------
  891 00000000         ;; REGISTER BIT WRITE VALUES
  892 00000000         ;;------------------------------------------------------
                       ------------------------
  893 00000000 00000000 
                       MUX_MODE_0
                               EQU              0x0         ;;000: Select ALT0 
                                                            mux mode. (default)
                                                            
  894 00000000 00000001 
                       MUX_MODE_1
                               EQU              0x1         ;;001: Select ALT1 
                                                            mux mode.
  895 00000000 00000002 
                       MUX_MODE_2
                               EQU              0x2         ;;010: Select ALT2 
                                                            mux mode.
  896 00000000 00000003 
                       MUX_MODE_3
                               EQU              0x3         ;;011: Select ALT3 
                                                            mux mode.
  897 00000000 00000004 
                       MUX_MODE_4
                               EQU              0x4         ;;100: Select ALT4 
                                                            mux mode.
  898 00000000 00000005 
                       MUX_MODE_5
                               EQU              0x5         ;;101: Select ALT5 
                                                            mux mode(usually GP
                                                            IO).
  899 00000000 00000006 
                       MUX_MODE_6
                               EQU              0x6         ;;110: Select ALT6 
                                                            mux mode.



ARM Macro Assembler    Page 49 


  900 00000000 00000007 
                       MUX_MODE_7
                               EQU              0x7         ;;111: Select ALT7 
                                                            mux mode (Trace).
  901 00000000 00000007 
                       MUX_MODE_TRACE
                               EQU              0x7         ;;111: Select ALT7 
                                                            mux mode (Trace).
  902 00000000         
  903 00000000         ;;------------------------------------------------------
                       ------------------------
  904 00000000         ;; Pin Configuration
  905 00000000         ;;------------------------------------------------------
                       ------------------------
  906 00000000         
  907 00000000 00002067 
                       TRACE_PAD_CTL_SETTING
                               EQU              0x00002067
  908 00000000 00000000 
                       IOMUXC_SW_PAD_CTL_GRP_DSE_DDR_SETTING
                               EQU              0x00000000  ;;Nominal Drive Str
                                                            ength for DDR Group
                                                             Pads
  909 00000000 00002007 
                       NOR_FLASH_PAD_CTL_SETTING
                               EQU              0x00002007
  910 00000000 00000040 
                       PAD_CTL_NOPULL_INPUT
                               EQU              0x00000040  ;No Pullups, No Hys
                                                            teresis, No Keeper
  911 00000000 000000E0 
                       PAD_CTL_PULLUP_INPUT
                               EQU              0x000000E0  ;100k Pullup, No Hy
                                                            steresis
  912 00000000 000000C0 
                       PAD_CTL_PULLDW_INPUT
                               EQU              0x000000C0  ;100k Pull Down, No
                                                             Hysteresis
  913 00000000         
  914 00000000                 IF               :DEF: PROTO_HW
  998 00000000         
  999 00000000         ;FF2 Board GPIO Settings Used in Boot Only:
 1000 00000000         ;;----------------------------------------------------
 1001 00000000         ;GPIO1
 1002 00000000         ;      GPIO1_25   = FLASH_WP     - Output  - LOW
 1003 00000000         ;      GPIO1_24   = nBT_RESET     - Output  - LOW
 1004 00000000         ;      GPIO1_21   = BT_PWR_EN     - INPUT   - DISABLE PU
                       /PD
 1005 00000000         ;      GPIO1_8    = CSI_MCLK        - Output  - LOW
 1006 00000000         ;      GPIO1_5    = RED_ILL_CTRL    - Output  - LOW
 1007 00000000         ;      GPIO1_4    = PS_MODE     - INPUT
 1008 00000000         ;      GPIO1_3    = SHUTDOWN/BANK   - INPUT
 1009 00000000         ;      GPIO1_2    = BOOT_PWR_SEL    - INPUT
 1010 00000000         ;;----------------------------------------------------
 1011 00000000 03000120 
                       GPIO1_DIR_SETTING
                               EQU              0x03000120
 1012 00000000 00000000 
                       GPIO1_DR_SETTING



ARM Macro Assembler    Page 50 


                               EQU              0x00000000
 1013 00000000         
 1014 00000000         ;;----------------------------------------------------
 1015 00000000         ;GPIO2
 1016 00000000         ;      GPIO2_31    = PWR_ENA        - Output  - LOW
 1017 00000000         ;      GPIO2_21    = BATT_LVL_EN    - Output  - LOW
 1018 00000000         ;      GPIO2_20    = uP_WAKE        - Output  - HIGH
 1019 00000000         ;      GPIO2_12    = KBD_SW_CNTRL   - Output  - HIGH
 1020 00000000         ;;----------------------------------------------------
 1021 00000000 80301000 
                       GPIO2_DIR_SETTING
                               EQU              0x80301000
 1022 00000000 80101000 
                       GPIO2_DR_SETTING
                               EQU              0x80101000
 1023 00000000         
 1024 00000000         ;;----------------------------------------------------
 1025 00000000         ;GPIO3
 1026 00000000         ;      GPIO3_24   = REED_SWITCH     - INPUT   - ENABLE P
                       U
 1027 00000000         ;      GPIO3_23   = FLASH_OUT       - INPUT   - ENABLE P
                       U
 1028 00000000         ;      GPIO3_19   = VIBRATE         - Output  - LOW
 1029 00000000         ;      GPIO3_18   = RED_LED         - Output  - LOW
 1030 00000000         ;      GPIO3_17   = GREEN_LED       - Output  - LOW
 1031 00000000         ;      GPIO3_16   = ISET2_SEL       - Output  - HIGH
 1032 00000000         ;      GPIO3_15   = ILL_ON          - Output  - LOW
 1033 00000000         ;      GPIO3_13   = LED_BOOST_PWM   - Output  - LOW
 1034 00000000         ;      GPIO3_12   = AIM_ON          - Output  - LOW
 1035 00000000         ;      GPIO3_10   = HWT5            - INPUT   - ENABLE P
                       U
 1036 00000000         ;      GPIO3_9    = HWT4            - INPUT   - ENABLE P
                       U
 1037 00000000         ;      GPIO3_8    = HWT3            - INPUT   - ENABLE P
                       U
 1038 00000000         ;      GPIO3_7    = HWT2            - INPUT   - ENABLE P
                       U
 1039 00000000         ;      GPIO3_6    = HWT1            - INPUT   - ENABLE P
                       U
 1040 00000000         ;      GPIO3_5    = HWT0            - INPUT   - ENABLE P
                       U
 1041 00000000         ;      GPIO3_4    = KEY_CLK_OUT     - INPUT   - ENABLE P
                       U
 1042 00000000         ;      GPIO3_3    = nKEY_DATA_IN    - INPUT
 1043 00000000         ;      GPIO3_2    = TERM_CLK_OUT    - INPUT   - ENABLE P
                       U
 1044 00000000         ;      GPIO3_1    = nTERM_DATA_IN   - INPUT
 1045 00000000         ;      GPIO3_0    = ENG_RESET       - Output  - HIGH
 1046 00000000         ;;----------------------------------------------------
 1047 00000000 000FB001 
                       GPIO3_DIR_SETTING
                               EQU              0x000FB001
 1048 00000000 00010001 
                       GPIO3_DR_SETTING
                               EQU              0x00010001
 1049 00000000         
 1050 00000000         ;;----------------------------------------------------
 1051 00000000         ;GPIO4
 1052 00000000         ;      GPIO4_29   = AIM_CTRL        - Output  - LOW



ARM Macro Assembler    Page 51 


 1053 00000000         ;      GPIO4_27   = UART2_TXD       - Output  - HIGH
 1054 00000000         ;      GPIO4_26   = UART2_RXD       - INPUT
 1055 00000000         ;      GPIO4_20   = n232/KBD_OE1    - INPUT
 1056 00000000         ;      GPIO4_19   = n232/KBD_OE2    - INPUT
 1057 00000000         ;      GPIO4_18   = n232/KBD_OE3    - INPUT
 1058 00000000         ;      GPIO4_17   = n232/KBD_OE4    - INPUT
 1059 00000000         ;      GPIO4_16   = HOST_PWR_GD     - INPUT   - ENABLE P
                       U
 1060 00000000         ;      GPIO4_15   = AUX_PWR_GD      - INPUT   - ENABLE P
                       U
 1061 00000000         ;      GPIO4_14   = CHG_STAT1       - INPUT   - ENABLE P
                       U
 1062 00000000         ;      GPIO4_13   = CHG_STAT2       - INPUT   - ENABLE P
                       U
 1063 00000000         ;      GPIO4_12   = nCHG_ENABLE     - INPUT   - ENABLE P
                       U
 1064 00000000         ;      GPIO4_11   = nSPI_FLASH_HOLD - Output  - HIGH
 1065 00000000         ;      GPIO4_10   = BT_READY        - INPUT   - ENABLE P
                       U
 1066 00000000         ;      GPIO4_9    = BT_CMD_DATA     - INPUT   - ENABLE P
                       U
 1067 00000000         ;      GPIO4_8    = BT_HOST_SLEEP   - INPUT   - ENABLE P
                       U
 1068 00000000         ;      GPIO4_7    = BT_HOST_WAKEUP  - INPUT   - ENABLE P
                       U
 1069 00000000         ;      GPIO4_6    = BT_CONNECTED    - INPUT   - ENABLE P
                       U
 1070 00000000         ;      GPIO4_5    = LASER_SHUTOFF   - Output  - HIGH
 1071 00000000         ;      GPIO4_4    = TRIG_uP         - INPUT
 1072 00000000         ;      GPIO4_3    = nBOOT           - INPUT
 1073 00000000         ;;----------------------------------------------------
 1074 00000000 28000820 
                       GPIO4_DIR_SETTING
                               EQU              0x28000820
 1075 00000000 08000820 
                       GPIO4_DR_SETTING
                               EQU              0x08000820
 1076 00000000         
 1077 00000000         ;;------------------------------------------------------
                       ----------------
 1078 00000000         ;;------------------------------------------------------
                       ----------------
 1079 00000000         
 1080 00000000         ;OEM Board GPIO Settings Used in Boot Only:
 1081 00000000         ;;----------------------------------------------------
 1082 00000000         ;GPIO1
 1083 00000000         ;      GPIO1_25   = FLASH_WP     - Output  - LOW
 1084 00000000         ;      GPIO1_24   = (OEM None)     - Output  - LOW
 1085 00000000         ;      GPIO1_21   = (OEM None)     - INPUT   - DISABLE P
                       U/PD
 1086 00000000         ;      GPIO1_16   = nBEEPER_PWM  - Output  - HIGH (OEM)
 1087 00000000         ;      GPIO1_12   = nGREEN_LED  - Output  - HIGH (OEM)
 1088 00000000         ;      GPIO1_8    = CSI_MCLK        - Output  - LOW
 1089 00000000         ;      GPIO1_5    = (OEM None)     - Output  - LOW
 1090 00000000         ;      GPIO1_4    = PS_MODE      - INPUT   - (PU on by D
                       efault)
 1091 00000000         ;      GPIO1_3    = (OEM None)  - Output  - LOW
 1092 00000000         ;      GPIO1_2    = BOOT_PWR_SEL    - INPUT
 1093 00000000         ;;----------------------------------------------------



ARM Macro Assembler    Page 52 


 1094 00000000 03011128 
                       GPIO1_DIR_OEM_SETTING
                               EQU              0x03011128
 1095 00000000 00011000 
                       GPIO1_DR_OEM_SETTING
                               EQU              0x00011000
 1096 00000000         
 1097 00000000         ;;----------------------------------------------------
 1098 00000000         ;GPIO2
 1099 00000000         ;      GPIO2_31    = PWR_ENA        - Output  - LOW
 1100 00000000         ;      GPIO2_29    = nSW_TRIG  - Output  - HIGH (OEM)
 1101 00000000         ;      GPIO2_21    = (OEM None)     - Output  - LOW
 1102 00000000         ;      GPIO2_20    = (OEM None)     - Output  - HIGH
 1103 00000000         ;      GPIO2_12    = (OEM None)     - Output  - HIGH
 1104 00000000         ;;----------------------------------------------------
 1105 00000000 A0301000 
                       GPIO2_DIR_OEM_SETTING
                               EQU              0xA0301000
 1106 00000000 20101000 
                       GPIO2_DR_OEM_SETTING
                               EQU              0x20101000
 1107 00000000         
 1108 00000000         ;;----------------------------------------------------
 1109 00000000         ;GPIO3
 1110 00000000         ;      GPIO3_31   = PWRDWN/nREADY   - Output  - HIGH (OE
                       M)
 1111 00000000         ;      GPIO3_24   = (OEM None)      - INPUT   - ENABLE P
                       U
 1112 00000000         ;      GPIO3_23   = FLASH_OUT       - INPUT   - ENABLE P
                       U
 1113 00000000         ;      GPIO3_19   = PS_MODE_Buck_Boost - Output  - LOW (
                       OEM)
 1114 00000000         ;      GPIO3_18   = (OEM None)      - Output  - LOW
 1115 00000000         ;      GPIO3_17   = (OEM None)      - Output  - LOW
 1116 00000000         ;      GPIO3_16   = (OEM None)      - Output  - HIGH
 1117 00000000         ;      GPIO3_15   = ILL_ON          - Output  - LOW
 1118 00000000         ;      GPIO3_13   = (OEM None)      - Output  - LOW
 1119 00000000         ;      GPIO3_12   = AIM_ON          - Output  - LOW
 1120 00000000         ;    GPIO3_11   = uP_WAKE   - Output  - HIGH (OEM)
 1121 00000000         ;      GPIO3_10   = HWT5            - INPUT   - ENABLE P
                       U
 1122 00000000         ;      GPIO3_9    = HWT4            - INPUT   - ENABLE P
                       U
 1123 00000000         ;      GPIO3_8    = HWT3            - INPUT   - ENABLE P
                       U
 1124 00000000         ;      GPIO3_7    = HWT2            - INPUT   - ENABLE P
                       U
 1125 00000000         ;      GPIO3_6    = HWT1            - INPUT   - ENABLE P
                       U
 1126 00000000         ;      GPIO3_5    = HWT0            - INPUT   - ENABLE P
                       U
 1127 00000000         ;      GPIO3_4    = (OEM None)      - INPUT   - ENABLE P
                       U
 1128 00000000         ;      GPIO3_3    = nTRIG_uP     - INPUT   - (PU on by D
                       efault)
 1129 00000000         ;      GPIO3_2    = (OEM None)      - INPUT   - ENABLE P
                       U
 1130 00000000         ;      GPIO3_1    = (OEM None)      - INPUT   - (PU on b
                       y Default)



ARM Macro Assembler    Page 53 


 1131 00000000         ;      GPIO3_0    = ENG_RESET       - Output  - LOW (OEM
                       )
 1132 00000000         ;;----------------------------------------------------
 1133 00000000 800FB801 
                       GPIO3_DIR_OEM_SETTING
                               EQU              0x800FB801
 1134 00000000 80010800 
                       GPIO3_DR_OEM_SETTING
                               EQU              0x80010800
 1135 00000000         
 1136 00000000         ;;----------------------------------------------------
 1137 00000000         ;GPIO4
 1138 00000000         ;      GPIO4_29   = UART1_POL       - Output  - HIGH (OE
                       M)
 1139 00000000         ;      GPIO4_27   = (OEM None)      - Output  - HIGH
 1140 00000000         ;      GPIO4_26   = (OEM None)       - INPUT  - (PU on b
                       y Default)
 1141 00000000         ;      GPIO4_20   = (OEM None)      - Output  - LOW
 1142 00000000         ;      GPIO4_19   = (OEM None)      - Output  - LOW
 1143 00000000         ;      GPIO4_18   = (OEM None)      - Output  - LOW
 1144 00000000         ;      GPIO4_17   = (OEM None)      - Output  - LOW
 1145 00000000         ;      GPIO4_16   = (OEM None)     - INPUT   - ENABLE PU
                       
 1146 00000000         ;      GPIO4_15   = (OEM None)      - INPUT   - ENABLE P
                       U
 1147 00000000         ;      GPIO4_14   = (OEM None)      - INPUT   - ENABLE P
                       U
 1148 00000000         ;      GPIO4_13   = (OEM None)      - INPUT   - ENABLE P
                       U
 1149 00000000         ;      GPIO4_12   = (OEM None)     - INPUT   - ENABLE PU
                       
 1150 00000000         ;      GPIO4_11   = nSPI_FLASH_HOLD - Output  - HIGH
 1151 00000000         ;      GPIO4_10   = (OEM None)      - INPUT   - ENABLE P
                       U
 1152 00000000         ;      GPIO4_9    = (OEM None)      - INPUT   - ENABLE P
                       U
 1153 00000000         ;      GPIO4_8    = (OEM None)    - INPUT   - ENABLE PU
 1154 00000000         ;      GPIO4_7    = (OEM None)   - INPUT   - ENABLE PU
 1155 00000000         ;      GPIO4_6    = (OEM None)     - INPUT   - ENABLE PU
                       
 1156 00000000         ;      GPIO4_5    = (OEM None)    - Output  - HIGH
 1157 00000000         ;      GPIO4_4    = (OEM None)      - Output  - LOW
 1158 00000000         ;      GPIO4_3    = nBOOT           - INPUT
 1159 00000000         ;;----------------------------------------------------
 1160 00000000 281E0830 
                       GPIO4_DIR_OEM_SETTING
                               EQU              0x281E0830
 1161 00000000 28000820 
                       GPIO4_DR_OEM_SETTING
                               EQU              0x28000820
 1162 00000000         
 1163 00000000                 ENDIF                        ;
 1164 00000000         
 1165 00000000                 END
  104 00000000                 ELSE
  114                          ENDIF
  115 00000000         
  116 00000000         ;;******************************************************
                       *******************



ARM Macro Assembler    Page 54 


  117 00000000         
  118 00000000         ;;******************************************************
                       *******************
  119 00000000         ;; Macros and common stuff
  120 00000000         ;;******************************************************
                       *******************
  121 00000000         ;;
  122 00000000         
  123 00000000         ;;
  124 00000000         ;; generic bit mask defines
  125 00000000         ;;
  126 00000000 00000001 
                       BIT0    EQU              0x00000001
  127 00000000 00000002 
                       BIT1    EQU              0x00000002
  128 00000000 00000004 
                       BIT2    EQU              0x00000004
  129 00000000 00000008 
                       BIT3    EQU              0x00000008
  130 00000000 00000010 
                       BIT4    EQU              0x00000010
  131 00000000 00000020 
                       BIT5    EQU              0x00000020
  132 00000000 00000040 
                       BIT6    EQU              0x00000040
  133 00000000 00000080 
                       BIT7    EQU              0x00000080
  134 00000000 00000100 
                       BIT8    EQU              0x00000100
  135 00000000 00000200 
                       BIT9    EQU              0x00000200
  136 00000000 00000400 
                       BIT10   EQU              0x00000400
  137 00000000 00000800 
                       BIT11   EQU              0x00000800
  138 00000000 00001000 
                       BIT12   EQU              0x00001000
  139 00000000 00002000 
                       BIT13   EQU              0x00002000
  140 00000000 00004000 
                       BIT14   EQU              0x00004000
  141 00000000 00008000 
                       BIT15   EQU              0x00008000
  142 00000000 00010000 
                       BIT16   EQU              0x00010000
  143 00000000 00020000 
                       BIT17   EQU              0x00020000
  144 00000000 00040000 
                       BIT18   EQU              0x00040000
  145 00000000 00080000 
                       BIT19   EQU              0x00080000
  146 00000000 00100000 
                       BIT20   EQU              0x00100000
  147 00000000 00200000 
                       BIT21   EQU              0x00200000
  148 00000000 00400000 
                       BIT22   EQU              0x00400000
  149 00000000 00800000 
                       BIT23   EQU              0x00800000



ARM Macro Assembler    Page 55 


  150 00000000 01000000 
                       BIT24   EQU              0x01000000
  151 00000000 02000000 
                       BIT25   EQU              0x02000000
  152 00000000 04000000 
                       BIT26   EQU              0x04000000
  153 00000000 08000000 
                       BIT27   EQU              0x08000000
  154 00000000 10000000 
                       BIT28   EQU              0x10000000
  155 00000000 20000000 
                       BIT29   EQU              0x20000000
  156 00000000 40000000 
                       BIT30   EQU              0x40000000
  157 00000000 80000000 
                       BIT31   EQU              0x80000000
  158 00000000         
  159 00000000         ;;
  160 00000000         ;; RESET_WATCHDOG_TIMER macro is made to accommodate rel
                       ocatable code.  We do this by loading constants with no 
                       more than 8 contiguous bits set
  161 00000000         ;; at a time, in order to accommodate the 8 bit constant
                        maximum.
  162 00000000         ;;
  163 00000000                 MACRO
  164 00000000                 RESET_WATCHDOG_TIMER
  165 00000000                 stmdb            sp!,{r0-r1} ;; Save registers
  166 00000000         
  167 00000000                 ldr              r0,=WATCHDOG_BASE_ADDR_UPPER ;;
                                                             To get WSR address
                                                             into r0, add one b
                                                            yte at a time to ac
                                                            commodate 8 bit con
                                                            stant maximum
  168 00000000                 ldr              r1,=WATCHDOG_BASE_ADDR_LOWER
  169 00000000                 add              r0,r0,r1
  170 00000000                 ldr              r1,=WATCHDOG_BASE_ADDR_WSR_OFFS
ET
  171 00000000                 add              r0,r0,r1
  172 00000000         
  173 00000000                 ldr              r1,=0x5500
  174 00000000                 add              r1,r1,#0x0055
  175 00000000         
  176 00000000                 IF               platform_current = "mxl"
  177 00000000         
  178 00000000                 str              r1,[r0]     ;; Write 0x5555 to 
                                                            start the reset seq
                                                            uence.  Build comma
                                                            nd one byte at a ti
                                                            me to accommodate 8
                                                             bit constant maxim
                                                            um
  179 00000000         
  180 00000000                 add              r1,r1,r1
  181 00000000                 str              r1,[r0]     ;; Write 0xAAAA to 
                                                            start the reset seq
                                                            uence.  Build comma
                                                            nd one byte at a ti
                                                            me to accommodate 8



ARM Macro Assembler    Page 56 


                                                             bit constant maxim
                                                            um
  182 00000000         
  183 00000000                 ELSE
  184 00000000                 IF               ((platform_current = "imx27") |
| (platform_current = "imx25"))
  185 00000000         
  186 00000000                 strh             r1,[r0]     ;; Write 0x5555 to 
                                                            start the reset seq
                                                            uence.  Build comma
                                                            nd one byte at a ti
                                                            me to accommodate 8
                                                             bit constant maxim
                                                            um
  187 00000000         
  188 00000000                 add              r1,r1,r1
  189 00000000                 strh             r1,[r0]     ;; Write 0xAAAA to 
                                                            start the reset seq
                                                            uence.  Build comma
                                                            nd one byte at a ti
                                                            me to accommodate 8
                                                             bit constant maxim
                                                            um
  190 00000000         
  191 00000000                 ENDIF
  192 00000000                 ENDIF
  193 00000000         
  194 00000000                 ldmia            sp!,{r0-r1} ;; Restore register
                                                            s
  195 00000000                 MEND
  196 00000000         
  197 00000000         
  198 00000000         ;; FORCE_WATCHDOG_RESET macro is made to accommodate rel
                       ocatable code.  We do this by loading constants with no 
                       more than 8 contiguous bits set
  199 00000000         ;; at a time, in order to accommodate the 8 bit constant
                        maximum and make this code relocatable.
  200 00000000         ;; Watchdog must be enabled before calling this function
                        (one time only write the bit to enable DOG on the imx27
                        platform).
  201 00000000         ;;
  202 00000000                 MACRO
  203 00000000                 FORCE_WATCHDOG_RESET
  204 00000000         
  205 00000000                 stmdb            sp!,{r0-r1} ;; Save registers
  206 00000000         
  207 00000000                 ldr              r0,=WATCHDOG_BASE_ADDR_UPPER ;;
                                                             To get WCR address
                                                             into r0, add one b
                                                            yte at a time to ac
                                                            commodate 8 bit con
                                                            stant maximum
  208 00000000                 ldr              r1,=WATCHDOG_BASE_ADDR_LOWER
  209 00000000                 add              r0,r0,r1
  210 00000000         
  211 00000000                 ldr              r1,=0x0100  ;; Write bit 8 to c
                                                            ause the timer to e
                                                            xpire right away (s
                                                            hort time set).



ARM Macro Assembler    Page 57 


  212 00000000         
  213 00000000                 IF               platform_current = "mxl"
  214 00000000         
  215 00000000                 str              r1,[r0]
  216 00000000         
  217 00000000                 ELSE
  218 00000000                 IF               ((platform_current = "imx27") |
| (platform_current = "imx25"))
  219 00000000         
  220 00000000                 strh             r1,[r0]
  221 00000000         
  222 00000000                 ENDIF
  223 00000000                 ENDIF
  224 00000000         
  225 00000000                 b                {PC}        ;;; Keep looping un
                                                            til we reset, branc
                                                            hing to same locati
                                                            on
  226 00000000         
  227 00000000                 ldmia            sp!,{r0-r1} ;; Restore register
                                                            s (we should have r
                                                            eset before we arri
                                                            ved here).
  228 00000000                 MEND
  229 00000000         
  230 00000000         
  231 00000000         
  232 00000000         
  233 00000000                 END
   15 00000000         
   16 00000000                 EXPORT           Init_Uart1
   17 00000000                 EXPORT           Send_Startup_Message
   18 00000000                 EXPORT           Send_CRLF
   19 00000000                 EXPORT           Send_Address_in_r0
   20 00000000                 EXPORT           Send_RAM_Pass
   21 00000000                 EXPORT           SetBaudRateRegisters
   22 00000000                 EXPORT           GetBaudRateRegisters
   23 00000000         
   24 00000000                 AREA             UARTCFG, CODE, READONLY
   25 00000000         
   26 00000000         
   27 00000000         ;;
   28 00000000         ;;******************************************************
                       **************************
   29 00000000         ;; Init_Uart1
   30 00000000         ;;******************************************************
                       **************************
   31 00000000         ;;
   32 00000000         Init_Uart1
   33 00000000         ;; try and set up uart 1 for 115200
   34 00000000         
   35 00000000         ;; thinking is this USBPLL is set for 96MHz by default. 
                        I have a peripheral clock I would like to start
   36 00000000         ;; at 16MHz before I do my baud down calculation/prescal
                       e, so that implies setting PCDR to have PER_DIV1 be 5 so
                        it divides by 6
   37 00000000 E59F0040        ldr              r0,=PCDR
   38 00000004 E3A01402        ldr              r1,=PCDR_SETTINGS
   39 00000008 E5801000        str              r1,[r0]     ;; should establish



ARM Macro Assembler    Page 58 


                                                             starting point clo
                                                            ck input of 16MHz f
                                                            or uarts, timers an
                                                            d pwm
   40 0000000C         
   41 0000000C         ;; set up the divide for Ref_clk
   42 0000000C         ;;
   43 0000000C E59F0038        ldr              r0,=UFCR_1
   44 00000010 E59F1038        ldr              r1,=UFCR_1_SETTINGS ;; sets ref
                                                            clk / to 1, which m
                                                            eans clock into uar
                                                            t IS perclk1 above
   45 00000014 E5801000        str              r1,[r0]
   46 00000018         
   47 00000018                 IF               ((platform_current = "imx27") |
| (platform_current = "imx25"))
   48 00000018         ;;Future home for uart hardware external gate configurat
                       ion, unique to our board...
   49 00000018                 ELSE
   68                          ENDIF                        ;;end hardware gate
                                                             configuration
   69 00000018         
   70 00000018         ;; at this point the 'alternate function' concept for th
                       e 4 uart1 pins should be set
   71 00000018 E59F0034        ldr              r0,=UCR1_1
   72 0000001C E3A01001        ldr              r1,=UCR1_1_SETTINGS
   73 00000020 E4801004        str              r1,[r0],#4  ;; uart clk enable 
                                                            and uart enable
   74 00000024         
   75 00000024         ;;UCR2_1
   76 00000024 E59F102C        ldr              r1,=UCR2_1_SETTINGS ;; no softw
                                                            are reset?! 6
   77 00000028 E4801004        str              r1,[r0],#4  ;; tx and rx enable
                                                            d, reset the state 
                                                            machines and away w
                                                            e go ... 8 bit data
                                                            
   78 0000002C         
   79 0000002C         ;;UCR3_1
   80 0000002C E3A01004        ldr              r1,=UCR3_1_SETTINGS
   81 00000030 E4801004        str              r1,[r0],#4
   82 00000034         
   83 00000034         ;;UCR4_1 clear out the 16 MHz reference clock?!
   84 00000034 E3A01902        ldr              r1,=UCR4_1_SETTINGS ;; for now,
                                                             just assure reset 
                                                            state... debugger d
                                                            oes something?!
   85 00000038 E5801000        str              r1,[r0]
   86 0000003C         
   87 0000003C         ;; ok let's try baud rate
   88 0000003C         ;; The equation is [(baud)*16]/ref_frequency = num/denom
                       
   89 0000003C         ;; where num-1 = ubir
   90 0000003C         ;; denom-1 = ubmr
   91 0000003C         ;; 
   92 0000003C E59F0018        ldr              r0,=UBIR_1_SETTINGS
   93 00000040 E59F1018        ldr              r1,=UBMR_1_SETTINGS
   94 00000044 EAFFFFFE        b                SetBaudRateRegisters ;; NOTE th
                                                            e branch causes the



ARM Macro Assembler    Page 59 


                                                             return from SetBau
                                                            dRateRegisters
   95 00000048         ;; to return from here as well
   96 00000048         
   97 00000048         ;;Set up test register
   98 00000048         ;;in the iMX25 this register allows the UART to run whil
                       e in debug mode this is not needed when running normaly
   99 00000048         ;; other processors use this register for other test pur
                       poses
  100 00000048         ; IF platform_current = "imx25"
  101 00000048         ; ldr r0,=UTS_1
  102 00000048         ; ldr r1,=UTS_1_SETTINGS
  103 00000048         ; str r1,[r0]
  104 00000048         ; ENDIF ;;end set up clocks platform_current = "iMX25"
  105 00000048         
  106 00000048         
  107 00000048         ;;******************************************************
                       **************************
  108 00000048         ;;end Init_Uart1
  109 00000048         ;;******************************************************
                       **************************
  110 00000048         
  111 00000048 53F80024 
              43F90090 
              00000A81 
              43F90080 
              00005026 
              00000732 
              0000AD29         AREA             UARTCFG2, CODE, READONLY
  112 00000000         
  113 00000000         ;;
  114 00000000         ;; pass in nibble to be translated to hex in r0, and sen
                       d it
  115 00000000         ;; DON'T TOUCH r3 or r12 , calling functions in this fil
                       e use them!!!!
  116 00000000         ;; No tested sdram or stack at this point to be able to 
                       save off registers
  117 00000000         ;;
  118 00000000         send_nibble
  119 00000000 E59F1098        ldr              r1,=UTXDn_1 ;;uart 1 address in
                                                             r0
  120 00000004 E200000F        and              r0,r0,#0x0f ;; mask off the nib
                                                            ble
  121 00000008 E2800030        add              r0,r0,#0x30 ;;make an ascii num
                                                            ber for 0 to 9;; fi
                                                            rst I need to know 
                                                            is it from 0 to 9
  122 0000000C E350003A        cmp              r0,#0x3a    ;; compare with 9  
                                                            ( (0-9) - 10 should
                                                             be cs)
  123 00000010 A2800007        addge            r0,r0,#0x7  ;;make a cap letter
                                                             for A to F
  124 00000014 E5810000        str              r0, [r1]    ;;send the HEX equi
                                                            v of the nibble
  125 00000018 E12FFF1E        bx               lr          ;;return
  126 0000001C         
  127 0000001C         
  128 0000001C         
  129 0000001C         



ARM Macro Assembler    Page 60 


  130 0000001C         ;;
  131 0000001C         ;; pass in data to be sent in r0, and output each nibble
                        as HEX character, then send 2 spaces
  132 0000001C         ;; DON'T TOUCH r3 or r12 in other called functions, This
                        function saves them and calls other functions in this f
                       ile !!!!
  133 0000001C         ;; No tested sdram or stack at this point to be able to 
                       save off registers
  134 0000001C         ;;
  135 0000001C         ;;
  136 0000001C         ;; pass in data to be sent in r0, and output each nibble
                        as HEX character, then send CR/LF
  137 0000001C         ;; DON'T TOUCH r3 or r12 in other called functions, This
                        function saves them and calls other functions in this f
                       ile !!!!
  138 0000001C         ;; No tested sdram or stack at this point to be able to 
                       save off registers
  139 0000001C         ;;
  140 0000001C         Send_Address_in_r0
  141 0000001C E1A03000        mov              r3,r0       ;;Lets save the inf
                                                            o passed on r0 to r
                                                            3
  142 00000020 E1A0C00E        mov              r12,lr      ;; remember pc in r
                                                            12
  143 00000024         
  144 00000024 EB000018        bl               WaitToAllSentInUartOneTransBuff
er
  145 00000028         
  146 00000028 E1A00E23        mov              r0,r3, LSR #28 ;; save MS nibbl
                                                            e in r5 Byte in r1
  147 0000002C EBFFFFF3        bl               send_nibble
  148 00000030 E1A00C23        mov              r0,r3, LSR #24
  149 00000034 EBFFFFF1        bl               send_nibble
  150 00000038 E1A00A23        mov              r0,r3, LSR #20
  151 0000003C EBFFFFEF        bl               send_nibble
  152 00000040 E1A00823        mov              r0,r3,LSR #16
  153 00000044 EBFFFFED        bl               send_nibble
  154 00000048 E1A00623        mov              r0,r3,LSR #12
  155 0000004C EBFFFFEB        bl               send_nibble
  156 00000050 E1A00423        mov              r0,r3,LSR #8
  157 00000054 EBFFFFE9        bl               send_nibble
  158 00000058 E1A00223        mov              r0,r3,LSR #4
  159 0000005C EBFFFFE7        bl               send_nibble
  160 00000060 E1A00003        mov              r0,r3
  161 00000064 EBFFFFE5        bl               send_nibble
  162 00000068         
  163 00000068 EBFFFFFE        bl               Send_CRLF
  164 0000006C         
  165 0000006C E12FFF1C        bx               r12         ;;return
  166 00000070         
  167 00000070         
  168 00000070         
  169 00000070                 IF               MEMORY_DEBUG ;;set in Db_hdw.s
  250 00000070         Send_Startup_Message
  251 00000070         Send_RAM_Pass
  252 00000070 E12FFF1E        bx               lr          ;;return
  253 00000074                 ENDIF                        ;;end if ram test d
                                                            ebug
  254 00000074         



ARM Macro Assembler    Page 61 


  255 00000074         ;;
  256 00000074         ;; Send a cr lf
  257 00000074         ;; DON'T TOUCH r3 or r12 , calling functions in this fil
                       e use them!!!!
  258 00000074         ;; No tested sdram or stack at this point to be able to 
                       save off registers
  259 00000074         ;;
  260 00000074         Send_CRLF
  261 00000074 E59F0024        ldr              r0,=UTXDn_1
  262 00000078 E3A0100D        ldr              r1,=0x0d    ;;CR
  263 0000007C E5801000        str              r1,[r0]
  264 00000080 E3A0100A        ldr              r1,=0x0a    ;;LF
  265 00000084 E5801000        str              r1,[r0]
  266 00000088 E12FFF1E        bx               lr          ;;return
  267 0000008C         
  268 0000008C         
  269 0000008C         
  270 0000008C         ;;
  271 0000008C         ;; check and wait for UART1 transmit buffer is empty
  272 0000008C         ;; DON'T TOUCH r3 or r12 , calling functions in this fil
                       e use them!!!!
  273 0000008C         ;; No tested sdram or stack at this point to be able to 
                       save off registers
  274 0000008C         ;;
  275 0000008C         WaitToAllSentInUartOneTransBuffer
  276 0000008C E59F2010        ldr              r2,=USR2_1
  277 00000090         full_loop
  278 00000090 E5920000        ldr              r0,[r2]
  279 00000094 E3100901        tst              r0,#USR2_1_BIT_14_TRANS_BUF_EMP
TY_MASK
  280 00000098 0AFFFFFC        beq              full_loop   ;;wait for all sent
                                                             in transmit buffer
                                                            
  281 0000009C E12FFF1E        bx               lr          ;;return
  282 000000A0         
  283 000000A0         
  284 000000A0 43F90040 
              43F90098         AREA             UARTCFG1, CODE, READONLY
  285 00000000         
  286 00000000         ;;
  287 00000000         ;; try and set up uart 1 for the caller specified baud r
                       ate
  288 00000000         ;;
  289 00000000         SetBaudRateRegisters
  290 00000000         
  291 00000000 E59F2028        ldr              r2,=UBIR_1
  292 00000004 E5820000        str              r0,[r2]
  293 00000008         
  294 00000008 E59F2024        ldr              r2,=UBMR_1
  295 0000000C E5821000        str              r1,[r2]
  296 00000010 E12FFF1E        bx               lr
  297 00000014         
  298 00000014         
  299 00000014         ;;
  300 00000014         ;; try to get for uart 1 for the baud rate set up
  301 00000014         ;;
  302 00000014         GetBaudRateRegisters
  303 00000014         
  304 00000014 E59F2014        ldr              r2,=UBIR_1



ARM Macro Assembler    Page 62 


  305 00000018 E5922000        ldr              r2,[r2]
  306 0000001C E5802000        str              r2,[r0]
  307 00000020         
  308 00000020 E59F200C        ldr              r2,=UBMR_1
  309 00000024 E5922000        ldr              r2,[r2]
  310 00000028 E5812000        str              r2,[r1]
  311 0000002C E12FFF1E        bx               lr
  312 00000030                 END
              43F900A4 
              43F900A8 
Command Line: --debug --cpu=ARM926EJ-S --fpu=None --apcs=/interwork --depend=Ou
tput_APP_imx25_ID_FF3_3110/db_uart.d -oOutput_APP_imx25_ID_FF3_3110/db_uart.o -
ID:\Super2D\source\Gen6FoundationApp/libraries/OsKernel/app_kernel -ID:\Super2D
\source\Gen6FoundationApp/libraries/OsKernel/db_shared -ID:\Super2D\source\Gen6
FoundationApp/libraries/OsKernel/temp_shared -ID:\Super2D\source\Gen6Foundation
App/libraries/OsKernel/db_shared/Hardware_Header_Files -ID:\Super2D\source\Gen6
FoundationApp/libraries/OsKernel/db_shared/Hardware_Header_Files/iMXL -ID:\Supe
r2D\source\Gen6FoundationApp/libraries/OsKernel/db_shared/Hardware_Header_Files
/iMX27 -ID:\Super2D\source\Gen6FoundationApp/libraries/OsKernel/db_shared/Hardw
are_Header_Files/iMX25 -ID:\Super2D\source\Gen6FoundationApp/FoundationApp -ID:
\Super2D\source\Gen6FoundationApp/FoundationApp/Batch_Mode -ID:\Super2D\source\
Gen6FoundationApp/FoundationApp/Foundation_Temp -ID:\Super2D\source\Gen6Foundat
ionApp/FoundationApp/Imaging -ID:\Super2D\source\Gen6FoundationApp/FoundationAp
p/Flash -ID:\Super2D\source\Gen6FoundationApp/FoundationApp/Peripheral_Interfac
es -ID:\Super2D\source\Gen6FoundationApp/FoundationApp/PageButton -ID:\Super2D\
source\Gen6FoundationApp/FoundationApp/Trigger -ID:\Super2D\source\Gen6Foundati
onApp/FoundationApp/menu -ID:\Super2D\source\Gen6FoundationApp/FoundationApp/ec
i -ID:\Super2D\source\Gen6FoundationApp/FoundationApp/LeanAutomationTest -ID:\S
uper2D\source\Gen6FoundationApp/FoundationApp/dirt_test -ID:\Super2D\source\Gen
6FoundationApp/FoundationApp/PSOC -ID:\Super2D\source\Gen6FoundationApp/Foundat
ionApp/Plugin -ID:\Super2D\source\Gen6FoundationApp/hhpscandriver -ID:\Super2D\
source\Gen6FoundationApp/libraries/stringanddata -ID:\Super2D\source\Gen6Founda
tionApp/libraries/CommandParsers -ID:\Super2D\source\Gen6FoundationApp/librarie
s/buffer_fifo_utils -ID:\Super2D\source\Gen6FoundationApp/libraries/Safe_FFS/sr
c/common -ID:\Super2D\source\Gen6FoundationApp/libraries/Safe_FFS/src/nor -ID:\
Super2D\source\Gen6FoundationApp/libraries/Safe_FFS/src/nor/phy/Numonyx_winbond
 -ID:\Super2D\source\Gen6FoundationApp/libraries/G6_configuration -ID:\Super2D\
source\Gen6FoundationApp/libraries/Communication_Gen6 -ID:\Super2D\source\Gen6F
oundationApp/libraries/Communication_Gen6/Matrix -ID:\Super2D\source\Gen6Founda
tionApp/libraries/compression -ID:\Super2D\source\Gen6FoundationApp/libraries/s
hared_matrix_interfaces/interfaces -ID:\Super2D\source\Gen6FoundationApp/librar
ies/shared_matrix_interfaces/interfaces_hw -ID:\Super2D\source\Gen6FoundationAp
p/libraries/shared_matrix_interfaces/interfaces_rf -ID:\Super2D\source\Gen6Foun
dationApp/libraries/shared_matrix_interfaces/interfaces_wedge -ID:\Super2D\sour
ce\Gen6FoundationApp/libraries/shared_matrix_interfaces/interfaces_wedge_hw -ID
:\Super2D\source\Gen6FoundationApp/libraries/shared_matrix_interfaces/customiza
tion -ID:\Super2D\source\Gen6FoundationApp/libraries/Cryptography -ID:\Super2D\
source\Gen6FoundationApp/libraries/G6_Imaging -ID:\Super2D\source\Gen6Foundatio
nApp/libraries/HHPL_Script -ID:\Super2D\source\Gen6FoundationApp/libraries/HHPL
_Script/Gen6 -ID:\Super2D\source\Gen6FoundationApp/libraries/shared_matrix_inte
rfaces/interfaces_usb2_hw -ID:\Super2D\source\Gen6FoundationApp/libraries/share
d_matrix_interfaces/interfaces_usb2/base_usb2 -ID:\Super2D\source\Gen6Foundatio
nApp/libraries/shared_matrix_interfaces/interfaces_usb2/cdcacm_usb2 -ID:\Super2
D\source\Gen6FoundationApp/libraries/shared_matrix_interfaces/interfaces_usb2/h
id_usb2/hidbase_usb2 -ID:\Super2D\source\Gen6FoundationApp/libraries/shared_mat
rix_interfaces/interfaces_usb2/hid_usb2/pos_usb2 -ID:\Super2D\source\Gen6Founda
tionApp/libraries/shared_matrix_interfaces/interfaces_usb2/hid_usb2/surepos_usb
2 -ID:\Super2D\source\Gen6FoundationApp/libraries/shared_matrix_interfaces/inte
rfaces_usb2/hid_usb2/kbdpc_usb2 -ID:\Super2D\source\Gen6FoundationApp/libraries



ARM Macro Assembler    Page 63 


/shared_matrix_interfaces/interfaces_usb2/rem -ID:\Super2D\source\Gen6Foundatio
nApp/FoundationApp/mocf -ID:\Super2D\source\Gen6FoundationApp/FoundationApp/moc
f/shared -ID:\Super2D\source\Gen6FoundationApp/FoundationApp/mocf/shared/sha1 -
ID:\Super2D\source\Gen6FoundationApp/libraries/DecoderLib -ID:\Super2D\source\G
en6FoundationApp/libraries/DecoderLib/Source --predefine="platform_current SETS
 \"imx25\"" --predefine="CORDED SETL {TRUE}" --predefine="Board_TARGET SETS \"i
MX25_Development\"" --list=Output_APP_imx25_ID_FF3_3110/db_uart.lst D:\Super2D\
source\Gen6FoundationApp\libraries\OsKernel\db_shared\db_uart.s
