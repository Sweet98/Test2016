;***************************************************************************************/
;*
;* HSM 48X0G GENERATION 6 SOFTWARE
;*
;*  HARDWARE MACROS 
;*  Date:       9/29/2008
;*  Tools:      RVCT Build 674
;*  Target:     Freescale iMX25
;*
;*======================================================================================
;* Revision information
;*======================================================================================
;* $RCSfile: db_shared/Hardware_Header_Files/iMX25/iMX25_hdw.i $
;* $Revision: 1.30 $
;* $Date: 2010/12/20 14:15:29EST $
;*======================================================================================
;*------------------------------------------------------------------------------
;* Header:  iMX25_hdw.i
;*
;* This File defines the iMX25 ASM Hardware
;*
;*------------------------------------------------------------------------------  

;; #########################################
;; # AIPS1 						 #
;; #########################################
AIPS1_BASE_ADDR 	EQU	0x43F00000
AIPS1_MPROT0_7 		EQU	(AIPS1_BASE_ADDR+0x00)	;; Master Privilege Reg 0-7
AIPS1_MPROT8_15 	EQU	(AIPS1_BASE_ADDR+0x04)	;; Master Privilege Reg 8-15
AIPS1_PACR0_7 		EQU	(AIPS1_BASE_ADDR+0x20)	;; Peripheral Access Control Reg 0-7
AIPS1_PACR8_15 		EQU	(AIPS1_BASE_ADDR+0x24)	;; Peripheral Access Control Reg 8-15
AIPS1_PACR16_23 	EQU	(AIPS1_BASE_ADDR+0x28)	;; Peripheral Access Control Reg 16-23
AIPS1_PACR24_31 	EQU	(AIPS1_BASE_ADDR+0x2C)	;; Peripheral Access Control Reg 24-32
AIPS1_OPACR0_7 		EQU	(AIPS1_BASE_ADDR+0x40)	;; Off-Platform Peri Access Ctl Reg 0-7
AIPS1_OPACR8_15 	EQU	(AIPS1_BASE_ADDR+0x44)	;; Off-Platform Peri Access Ctl Reg 8-15
AIPS1_OPACR16_23 	EQU	(AIPS1_BASE_ADDR+0x48)	;; Off-Platform Peri Access Ctl Reg 16-23
AIPS1_OPACR24_31 	EQU	(AIPS1_BASE_ADDR+0x4C)	;; Off-Platform Peri Access Ctl Reg 24-31
AIPS1_OPACR32_33 	EQU	(AIPS1_BASE_ADDR+0x50)	;; Off-Platform Peri Access Ctl Reg 32-33

AIPS1_MPROT0_7_Setting 		EQU		0x77777777	;; Master Privilege Reg 0-7
AIPS1_MPROT8_15_Setting 	EQU		0x77777777	;; Master Privilege Reg 8-15
AIPS1_PACR0_7_Setting 		EQU		0x00000000	;; Peripheral Access Control Reg 0-7
AIPS1_PACR8_15_Setting 		EQU		0x00000000	;; Peripheral Access Control Reg 8-15
AIPS1_PACR16_23_Setting 	EQU		0x00000000	;; Peripheral Access Control Reg 16-23
AIPS1_PACR24_31_Setting 	EQU		0x00000000	;; Peripheral Access Control Reg 24-32
AIPS1_OPACR0_7_Setting 		EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 0-7
AIPS1_OPACR8_15_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 8-15
AIPS1_OPACR16_23_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 16-23
AIPS1_OPACR24_31_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 24-31
AIPS1_OPACR32_33_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 32-33
AIPS1_ZERO_Setting			EQU		0x00000000	;; Zero Value


;; #########################################
;; # AIPS2 						 #
;; #########################################
AIPS2_BASE_ADDR 	EQU	0x53F00000
AIPS2_MPROT0_7 		EQU	(AIPS2_BASE_ADDR+0x00)	;; Master Privilege Reg 0-7
AIPS2_MPROT8_15 	EQU	(AIPS2_BASE_ADDR+0x04)	;; Master Privilege Reg 8-15
AIPS2_PACR0_7 		EQU	(AIPS2_BASE_ADDR+0x20)	;; Peripheral Access Control Reg 0-7
AIPS2_PACR8_15 		EQU	(AIPS2_BASE_ADDR+0x24)	;; Peripheral Access Control Reg 8-15
AIPS2_PACR16_23 	EQU	(AIPS2_BASE_ADDR+0x28)	;; Peripheral Access Control Reg 16-23
AIPS2_PACR24_31 	EQU	(AIPS2_BASE_ADDR+0x2C)	;; Peripheral Access Control Reg 24-32
AIPS2_OPACR0_7 		EQU	(AIPS2_BASE_ADDR+0x40)	;; Off-Platform Peri Access Ctl Reg 0-7
AIPS2_OPACR8_15 	EQU	(AIPS2_BASE_ADDR+0x44)	;; Off-Platform Peri Access Ctl Reg 8-15
AIPS2_OPACR16_23 	EQU	(AIPS2_BASE_ADDR+0x48)	;; Off-Platform Peri Access Ctl Reg 16-23
AIPS2_OPACR24_31 	EQU	(AIPS2_BASE_ADDR+0x4C)	;; Off-Platform Peri Access Ctl Reg 24-31
AIPS2_OPACR32_33 	EQU	(AIPS2_BASE_ADDR+0x50)	;; Off-Platform Peri Access Ctl Reg 32-33

AIPS2_MPROT0_7_Setting 		EQU		0x77777777	;; Master Privilege Reg 0-7
AIPS2_MPROT8_15_Setting 	EQU		0x77777777	;; Master Privilege Reg 8-15
AIPS2_PACR0_7_Setting 		EQU		0x00000000	;; Peripheral Access Control Reg 0-7
AIPS2_PACR8_15_Setting 		EQU		0x00000000	;; Peripheral Access Control Reg 8-15
AIPS2_PACR16_23_Setting 	EQU		0x00000000	;; Peripheral Access Control Reg 16-23
AIPS2_PACR24_31_Setting 	EQU		0x00000000	;; Peripheral Access Control Reg 24-32
AIPS2_OPACR0_7_Setting 		EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 0-7
AIPS2_OPACR8_15_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 8-15
AIPS2_OPACR16_23_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 16-23
AIPS2_OPACR24_31_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 24-31
AIPS2_OPACR32_33_Setting 	EQU		0x00000000	;; Off-Platform Peri Access Ctl Reg 32-33
AIPS2_ZERO_Setting			EQU		0x00000000	;; Zero Value

;; #########################################
;; # ASIC 						 #
;; #########################################
ASIC_BASE_ADDR 		EQU	0x68000000
ASIC_INTCNTL 		EQU	(ASIC_BASE_ADDR+0x00)	;; 32bit ASIC int control reg
ASIC_NIMASK 		EQU	(ASIC_BASE_ADDR+0x04)	;; 32bit ASIC int mask reg
ASIC_INTENNUM 		EQU	(ASIC_BASE_ADDR+0x08)	;; 32bit ASIC int enable number reg
ASIC_INTDISNUM 		EQU	(ASIC_BASE_ADDR+0x0C)	;; 32bit ASIC int disable number reg
ASIC_INTENABLEH 	EQU	(ASIC_BASE_ADDR+0x10)	;; 32bit ASIC int enable reg high
ASIC_INTENABLEL 	EQU	(ASIC_BASE_ADDR+0x14)	;; 32bit ASIC int enable reg low
ASIC_INTTYPEH 		EQU	(ASIC_BASE_ADDR+0x18)	;; 32bit ASIC int type reg high
ASIC_INTTYPEL 		EQU	(ASIC_BASE_ADDR+0x1C)	;; 32bit ASIC int type reg low
ASIC_NIPRIORITY7 	EQU	(ASIC_BASE_ADDR+0x20)	;; 32bit ASIC norm int priority lvl7
ASIC_NIPRIORITY6 	EQU	(ASIC_BASE_ADDR+0x24)	;; 32bit ASIC norm int priority lvl6
ASIC_NIPRIORITY5 	EQU	(ASIC_BASE_ADDR+0x28)	;; 32bit ASIC norm int priority lvl5
ASIC_NIPRIORITY4 	EQU	(ASIC_BASE_ADDR+0x2C)	;; 32bit ASIC norm int priority lvl4
ASIC_NIPRIORITY3 	EQU	(ASIC_BASE_ADDR+0x30)	;; 32bit ASIC norm int priority lvl3
ASIC_NIPRIORITY2 	EQU	(ASIC_BASE_ADDR+0x34)	;; 32bit ASIC norm int priority lvl2
ASIC_NIPRIORITY1 	EQU	(ASIC_BASE_ADDR+0x38)	;; 32bit ASIC norm int priority lvl1
ASIC_NIPRIORITY0 	EQU	(ASIC_BASE_ADDR+0x3C)	;; 32bit ASIC norm int priority lvl0
ASIC_NIVECSR 		EQU	(ASIC_BASE_ADDR+0x40)	;; 32bit ASIC norm int vector/status
ASIC_FIVECSR 		EQU	(ASIC_BASE_ADDR+0x44)	;; 32bit ASIC fast int vector/status
ASIC_INTSRCH 		EQU	(ASIC_BASE_ADDR+0x48)	;; 32bit ASIC int source reg high
ASIC_INTSRCL 		EQU	(ASIC_BASE_ADDR+0x4C)	;; 32bit ASIC int source reg low
ASIC_INTFRCH 		EQU	(ASIC_BASE_ADDR+0x50)	;; 32bit ASIC int force reg high
ASIC_INTFRCL 		EQU	(ASIC_BASE_ADDR+0x54)	;; 32bit ASIC int force reg low
ASIC_NIPNDH 		EQU	(ASIC_BASE_ADDR+0x58)	;; 32bit ASIC norm int pending high
ASIC_NIPNDL 		EQU	(ASIC_BASE_ADDR+0x5C)	;; 32bit ASIC norm int pending low
ASIC_FIPNDH 		EQU	(ASIC_BASE_ADDR+0x60)	;; 32bit ASIC fast int pending high
ASIC_FIPNDL 		EQU	(ASIC_BASE_ADDR+0x64)	;; 32bit ASIC fast int pending low

;;AITC name conversion table
;; mxl has the following nomenclature, so to ease the conversion of manual to platform naming convention, redundantly re-define pin names.
;;
NIVESCR				EQU		ASIC_NIVECSR		;;NIVECSR - Normal Interrupt Vector and Status Register
FIVESCR				EQU		ASIC_FIVECSR		;;FIVECSR - Fast Interrupt Vector and Status Register
;; to avoid literal pool entering the game -- not even sure what the time/other implications are, but...
BASE_INT_REG		EQU  	0x68000000			;;Upper half of register base address
AITC_OFFSET			EQU  	0x00000000			;;Lower half of register base address
NIVESCR_REG_OFFSET	EQU  	0x40                ;;offset for NIVECSR
FIVESCR_REG_OFFSET	EQU  	0x44				;;offset for FIVECSR

;; #########################################
;; # CRM 						 #
;; # $53F8_0000 to $53F8_3FFF  		 #
;; #########################################
CRM_BASE_ADDR 		EQU	0x53F80000
CRM_MPCTL 			EQU	(CRM_BASE_ADDR+0x00)	;; MCU PLL Control Register
CRM_UPCTL 			EQU	(CRM_BASE_ADDR+0x04)	;; USB PLL Control Register
CRM_CCTL 			EQU	(CRM_BASE_ADDR+0x08)	;; Clock Control Register
CRM_CGR0 			EQU	(CRM_BASE_ADDR+0x0C)	;; Clock Gating Register 0
CRM_CGR1 			EQU	(CRM_BASE_ADDR+0x10)	;; Clock Gating Register 1
CRM_CGR2 			EQU	(CRM_BASE_ADDR+0x14)	;; Clock Gating Register 2
CRM_PDR0 			EQU	(CRM_BASE_ADDR+0x18)	;; perclk Divider Register 0
CRM_PDR1 			EQU	(CRM_BASE_ADDR+0x1C)	;; perclk Divider Register 1
CRM_PDR2 			EQU	(CRM_BASE_ADDR+0x20)	;; perclk Divider Register 2
CRM_PDR3 			EQU	(CRM_BASE_ADDR+0x24)	;; perclk Divider Register 3
CRM_CRSR 			EQU	(CRM_BASE_ADDR+0x28)	;; CRM Status Register
CRM_CRDR 			EQU	(CRM_BASE_ADDR+0x2C)	;; CRM Debug Register
CRM_DCVR0 			EQU	(CRM_BASE_ADDR+0x30)	;; DPTC Comparator Value Register 0
CRM_DCVR1 			EQU	(CRM_BASE_ADDR+0x34)	;; DPTC Comparator Value Register 1
CRM_DCVR2 			EQU	(CRM_BASE_ADDR+0x38)	;; DPTC Comparator Value Register 2
CRM_DCVR3 			EQU	(CRM_BASE_ADDR+0x3C)	;; DPTC Comparator Value Register 3
CRM_LTR0 			EQU	(CRM_BASE_ADDR+0x40)	;; Load Tracking Register 0
CRM_LTR1 			EQU	(CRM_BASE_ADDR+0x44)	;; Load Tracking Register 1
CRM_LTR2 			EQU	(CRM_BASE_ADDR+0x48)	;; Load Tracking Register 2
CRM_LTR3 			EQU	(CRM_BASE_ADDR+0x4C)	;; Load Tracking Register 3
CRM_LTBR0 			EQU	(CRM_BASE_ADDR+0x50)	;; Load Tracking Buffer Register 0
CRM_LTBR1 			EQU	(CRM_BASE_ADDR+0x54)	;; Load Tracking Buffer Register 1
CRM_PMCR0 			EQU	(CRM_BASE_ADDR+0x58)	;; Power Management Control Register 0
CRM_PMCR1 			EQU	(CRM_BASE_ADDR+0x5C)	;; Power Management Control Register 1
CRM_PMCR2 			EQU	(CRM_BASE_ADDR+0x60)	;; Power Management Control Register 2
CRM_MCR 			EQU	(CRM_BASE_ADDR+0x64)	;; CRM Misc Control Register

;;Bit Masks
;;
;;Settings were generated from Excel Doc "ds018_iMX25_Clock_Calculator.xls"
CRM_MPCTL1_MASK_LOCK	EQU		0x00008000		;;CRM - MPCTL1 MASK for determing if the MPLL has locked in the new frequency
CRM_MPCTL_SETTING		EQU		0x800B2C01
CRM_UPCTL_SETTING		EQU		0x84002800
CRM_CCTL_SETTING		EQU		0x20004000
CRM_CGR0_SETTING		EQU		0x00088020
CRM_CGR1_SETTING		EQU		0x080F0040
CRM_CGR2_SETTING		EQU		0x00084000
CRM_PDR0_SETTING		EQU		0x00000000
CRM_PDR1_SETTING		EQU		0x00000300
CRM_PDR2_SETTING		EQU		0x00000000
CRM_PDR3_SETTING		EQU		0x02000000
CRM_MCR_SETTING			EQU		0x00000000
CRM_MPLL_RST			EQU		0x28004000
CRM_UPLL_RST			EQU		0x24004000

;;CLOCK name conversion table
;; mx27 has the following nomenclature, so to ease the conversion of manual to platform naming convention, redundantly re-define pin names.
;;
CLOCK_BASE			EQU  		CRM_BASE_ADDR
MPCTL0				EQU			CRM_MPCTL
MPCTL0_SETTING		EQU			CRM_MPCTL_SETTING
PCDR				EQU			CRM_PDR3					;;UART1 setup on PER15
PCDR_SETTINGS		EQU			CRM_PDR3_SETTING


;; #########################################
;; # ESDCTL 					 #
;; #########################################
ESDCTL0_OFFSET 		EQU	(0x00) 
ESDCFG0_OFFSET 		EQU	(0x04) 
ESDCTL1_OFFSET 		EQU	(0x08) 
ESDCFG1_OFFSET 		EQU	(0x0C) 
ESDMISC_OFFSET		EQU	(0x10) 

ESDCTL_BASE_ADDR	EQU	0xB8001000
ESD_ESDCTL0 		EQU	(ESDCTL_BASE_ADDR+ESDCTL0_OFFSET) 
ESD_ESDCFG0 		EQU	(ESDCTL_BASE_ADDR+ESDCFG0_OFFSET) 
ESD_ESDCTL1 		EQU	(ESDCTL_BASE_ADDR+ESDCTL1_OFFSET) 
ESD_ESDCFG1 		EQU	(ESDCTL_BASE_ADDR+ESDCFG1_OFFSET) 
ESD_ESDMISC			EQU	(ESDCTL_BASE_ADDR+ESDMISC_OFFSET) 
CONFIG_DATA_MDDR1 	EQU	(ESDCTL_BASE_ADDR+0x20) 
CONFIG_DATA_MDDR2 	EQU	(ESDCTL_BASE_ADDR+0x24) 
CONFIG_DATA_MDDR3 	EQU	(ESDCTL_BASE_ADDR+0x28) 
CONFIG_DATA_MDDR4 	EQU	(ESDCTL_BASE_ADDR+0x2C) 
CONFIG_DATA_MDDR5 	EQU	(ESDCTL_BASE_ADDR+0x30) 
DEL_CYCL_LEN_MDDR 	EQU	(ESDCTL_BASE_ADDR+0x34) 
CONFIG_DATA_MDDR6 	EQU	(ESDCTL_BASE_ADDR+0x38) 

ESDMISC_VAL1		EQU 0x00000004	 	;; MISC Register, normal settings (ddr enabled)
ESDMISC_VAL2		EQU 0x0000000C	 	;; MISC Register, reset delay line with ddr enabled
ESDMISC_VAL3		EQU 0x00000008	 	;; MISC Register, reset delay line with ddr disabled
ESDMISC_VAL4		EQU 0x80000000		;; MISC Register, check for 200 uSec to be completed
ESD_ESDMISC_RESET	EQU	0x0000000D		;; MISC Register, Reset

;; #########################################
;; # WEIM 						 #
;; #########################################
WEIM_BASE_ADDR	EQU	0xB8002000
WEIM_CS0U 			EQU	(WEIM_BASE_ADDR+0x00) 
WEIM_CS0L 			EQU	(WEIM_BASE_ADDR+0x04) 
WEIM_CS0A 			EQU	(WEIM_BASE_ADDR+0x08) 
WEIM_CS1U 			EQU	(WEIM_BASE_ADDR+0x10) 
WEIM_CS1L 			EQU	(WEIM_BASE_ADDR+0x14) 
WEIM_CS1A 			EQU	(WEIM_BASE_ADDR+0x18) 
WEIM_CS2U 			EQU	(WEIM_BASE_ADDR+0x20) 
WEIM_CS2L 			EQU	(WEIM_BASE_ADDR+0x24) 
WEIM_CS2A 			EQU	(WEIM_BASE_ADDR+0x28) 
WEIM_CS3U 			EQU	(WEIM_BASE_ADDR+0x30) 
WEIM_CS3L 			EQU	(WEIM_BASE_ADDR+0x34) 
WEIM_CS3A 			EQU	(WEIM_BASE_ADDR+0x38) 
WEIM_CS4U 			EQU	(WEIM_BASE_ADDR+0x40) 
WEIM_CS4L 			EQU	(WEIM_BASE_ADDR+0x44) 
WEIM_CS4A 			EQU	(WEIM_BASE_ADDR+0x48) 
WEIM_CS5U 			EQU	(WEIM_BASE_ADDR+0x50) 
WEIM_CS5L 			EQU	(WEIM_BASE_ADDR+0x54) 
WEIM_CS5A 			EQU	(WEIM_BASE_ADDR+0x58) 
WEIM_EIM 			EQU	(WEIM_BASE_ADDR+0x60) 

;;CS0 NOR Flash name conversion table
;; mx27 has the following nomenclature, so to ease the conversion of manual to platform naming convention, redundantly re-define pin names.
;;
CS0U			EQU	WEIM_CS0U		;; CS0 upper control register
CS0L			EQU	WEIM_CS0L		;; CS0 lower control register
APPWSCEQU1		EQU	0x00001563		;; wait states = 16, works for APP (133Mhz system Hclk, 70 ns Flash)
APPWSCEQUL		EQU	0x76002d61		;; 16 bit wide deassert cs 2 cycles before end
APPWSCEQUA		EQU	0x00ad5000		;; ext boot set lah/lbn to these vaues 


;; #########################################
;; # NFC 						 #
;; #########################################
NFC_BASE_ADDR			EQU	0xBB000000
NFC_REG_BASE_ADDR 		EQU	(NFC_BASE_ADDR+0x1E00) 
NFC_RAM_BUF_ADDR 		EQU	(NFC_REG_BASE_ADDR+0x04) 
NFC_NAND_FLASH_ADDR 	EQU	(NFC_REG_BASE_ADDR+0x06) 
NFC_NAND_FLASH_CMD 		EQU	(NFC_REG_BASE_ADDR+0x08) 
NFC_CONFIG 				EQU	(NFC_REG_BASE_ADDR+0x0A) 
NFC_ECC_STAT_RSLT1 		EQU	(NFC_REG_BASE_ADDR+0x0C) 
NFC_ECC_STAT_RSLT2 		EQU	(NFC_REG_BASE_ADDR+0x0E) 
NFC_ECC_SPAS 			EQU	(NFC_REG_BASE_ADDR+0x10) 
NFC_NF_WR_PROT 			EQU	(NFC_REG_BASE_ADDR+0x12) 
NFC_NF_WR_PROT_STAT 	EQU	(NFC_REG_BASE_ADDR+0x18) 
NFC_NF_CONFIG1 			EQU	(NFC_REG_BASE_ADDR+0x1A) 
NFC_NF_CONFIG2 			EQU	(NFC_REG_BASE_ADDR+0x1C) 
NFC_ULOCK_START_BLK0 	EQU	(NFC_REG_BASE_ADDR+0x20) 
NFC_ULOCK_END_BLK0 		EQU	(NFC_REG_BASE_ADDR+0x22) 
NFC_ULOCK_START_BLK1 	EQU	(NFC_REG_BASE_ADDR+0x24) 
NFC_ULOCK_END_BLK1 		EQU	(NFC_REG_BASE_ADDR+0x26) 
NFC_ULOCK_START_BLK2 	EQU	(NFC_REG_BASE_ADDR+0x28) 
NFC_ULOCK_END_BLK2 		EQU	(NFC_REG_BASE_ADDR+0x2A) 
NFC_ULOCK_START_BLK3 	EQU	(NFC_REG_BASE_ADDR+0x2C) 
NFC_ULOCK_END_BLK3 		EQU	(NFC_REG_BASE_ADDR+0x2E)

;; #########################################
;; # UART1 						 #
;; #########################################
UART1_BASE_ADDR		EQU	0x43F90000
UART1_URXD_1 		EQU	(UART1_BASE_ADDR+0x00)	;; 32bit uart1 receiver reg
UART1_UTXD_1 		EQU	(UART1_BASE_ADDR+0x40)	;; 32bit uart1 transmitter reg
UART1_UCR1_1 		EQU	(UART1_BASE_ADDR+0x80)	;; 32bit uart1 control 1 reg
UART1_UCR2_1 		EQU	(UART1_BASE_ADDR+0x84)	;; 32bit uart1 control 2 reg
UART1_UCR3_1 		EQU	(UART1_BASE_ADDR+0x88)	;; 32bit uart1 control 3 reg
UART1_UCR4_1 		EQU	(UART1_BASE_ADDR+0x8C)	;; 32bit uart1 control 4 reg
UART1_UFCR_1 		EQU	(UART1_BASE_ADDR+0x90)	;; 32bit uart1 fifo control reg
UART1_USR1_1 		EQU	(UART1_BASE_ADDR+0x94)	;; 32bit uart1 status 1 reg
UART1_USR2_1 		EQU	(UART1_BASE_ADDR+0x98)	;; 32bit uart1 status 2 reg
UART1_UESC_1 		EQU	(UART1_BASE_ADDR+0x9C)	;; 32bit uart1 escape char reg
UART1_UTIM_1 		EQU	(UART1_BASE_ADDR+0xA0)	;; 32bit uart1 escape timer reg
UART1_UBIR_1 		EQU	(UART1_BASE_ADDR+0xA4)	;; 32bit uart1 BRM incremental reg
UART1_UBMR_1 		EQU	(UART1_BASE_ADDR+0xA8)	;; 32bit uart1 BRM modulator reg
UART1_UBRC_1 		EQU	(UART1_BASE_ADDR+0xAC)	;; 32bit uart1 baud rate count reg
UART1_ONEMS_1 		EQU	(UART1_BASE_ADDR+0xB0)	;; 32bit uart1 one ms reg
UART1_UTS_1 		EQU	(UART1_BASE_ADDR+0xB4)	;; 32bit uart1 test reg

;;Uart1 masks
;;
USR2_1_BIT_14_TRANS_BUF_EMPTY_MASK		EQU		0x4000

;;UART1 name conversion table
;; mx27 has the following nomenclature, so to ease the conversion of manual to platform naming convention, redundantly re-define pin names.
;;
UFCR_1				EQU		UART1_UFCR_1
UFCR_1_SETTINGS		EQU		0x0A81				;; sets refdiv / to 1, which means clock into uart IS perclk1 above
;UFCR_1_SETTINGS	EQU		0x0981				;; sets refdiv / to 3, which means clock into uart IS perclk1(133MHz)/3 = 44.33MHz
UCR1_1				EQU		UART1_UCR1_1
UCR1_1_SETTINGS		EQU		0x00000001			;;Enable UART1, disable interupts
UCR2_1				EQU		UART1_UCR2_1
UCR2_1_SETTINGS		EQU		0x00005026			;;set up rts,cts, and message parameters
UCR3_1				EQU		UART1_UCR3_1
UCR3_1_SETTINGS		EQU     0x00000004			;;mux input selected for UART receiver
UCR4_1				EQU		UART1_UCR4_1
UCR4_1_SETTINGS		EQU		0x00008000			;;SET cts trigger level
UBIR_1				EQU		UART1_UBIR_1
;UBIR_1_SETTINGS	EQU     575					;; So 575 NUM and 20780 DENOM works good for imx27 with 66.5 mhz PERCLK1, (with / 4) clock DIV
UBIR_1_SETTINGS		EQU     0x0732				;;(732) So 1842 NUM and 44329 DENOM works good for imx27 with 44.33 mhz PERCLK1, (with / 6) clock DIV
UBMR_1				EQU		UART1_UBMR_1
;;UBMR_1_SETTINGS	EQU     20780				;; So 575 NUM and 20780 DENOM works good for imx27 with 66.5 mhz PERCLK1, (with / 4) clock DIV
UBMR_1_SETTINGS		EQU     0xAD29				;; So 1842 NUM and 44329 DENOM works good for imx27 with 44.33 mhz PERCLK1, (with / 6) clock DIV
UTXDn_1				EQU		UART1_UTXD_1
USR2_1				EQU		UART1_USR2_1
UTS_1				EQU		UART1_UTS_1
UTS_1_SETTINGS	EQU	0x00000800			;; Allow UART to Run in DEBUG mode

;; #########################################
;; # UART2 						 #
;; #########################################
UART2_BASE_ADDR		EQU	0x43F94000
UART2_URXD_2 		EQU	(UART2_BASE_ADDR+0x00)	;; 32bit uart2 receiver reg
UART2_UTXD_2 		EQU	(UART2_BASE_ADDR+0x40)	;; 32bit uart2 transmitter reg
UART2_UCR1_2 		EQU	(UART2_BASE_ADDR+0x80)	;; 32bit uart2 control 1 reg
UART2_UCR2_2 		EQU	(UART2_BASE_ADDR+0x84)	;; 32bit uart2 control 2 reg
UART2_UCR3_2 		EQU	(UART2_BASE_ADDR+0x88)	;; 32bit uart2 control 3 reg
UART2_UCR4_2 		EQU	(UART2_BASE_ADDR+0x8C)	;; 32bit uart2 control 4 reg
UART2_UFCR_2 		EQU	(UART2_BASE_ADDR+0x90)	;; 32bit uart2 fifo control reg
UART2_USR1_2 		EQU	(UART2_BASE_ADDR+0x94)	;; 32bit uart2 status 1 reg
UART2_USR2_2 		EQU	(UART2_BASE_ADDR+0x98)	;; 32bit uart2 status 2 reg
UART2_UESC_2 		EQU	(UART2_BASE_ADDR+0x9C)	;; 32bit uart2 escape char reg
UART2_UTIM_2 		EQU	(UART2_BASE_ADDR+0xA0)	;; 32bit uart2 escape timer reg
UART2_UBIR_2 		EQU	(UART2_BASE_ADDR+0xA4)	;; 32bit uart2 BRM incremental reg
UART2_UBMR_2 		EQU	(UART2_BASE_ADDR+0xA8)	;; 32bit uart2 BRM modulator reg
UART2_UBRC_2 		EQU	(UART2_BASE_ADDR+0xAC)	;; 32bit uart2 baud rate count reg
UART2_ONEMS_2 		EQU	(UART2_BASE_ADDR+0xB0)	;; 32bit uart2 one ms reg
UART2_UTS_2 		EQU	(UART2_BASE_ADDR+0xB4)	;; 32bit uart2 test reg

;; #########################################
;; # GPIO1 						 #
;; #########################################
GPIO1_BASE_ADDR		EQU	0x53FCC000
GPIO1_DR0 			EQU	(GPIO1_BASE_ADDR+0x00) 
GPIO1_GDIR0 		EQU	(GPIO1_BASE_ADDR+0x04) 
GPIO1_PSR0 			EQU	(GPIO1_BASE_ADDR+0x08) 
GPIO1_ICR1 			EQU	(GPIO1_BASE_ADDR+0x0C) 
GPIO1_ICR2 			EQU	(GPIO1_BASE_ADDR+0x10) 
GPIO1_IMR 			EQU	(GPIO1_BASE_ADDR+0x14) 
GPIO1_ISR 			EQU	(GPIO1_BASE_ADDR+0x18) 

;; #########################################
;; # GPIO2 						 #
;; #########################################
GPIO2_BASE_ADDR	EQU	0x53FD0000
GPIO2_DR0 		EQU	(GPIO2_BASE_ADDR+0x00) 
GPIO2_GDIR0 	EQU	(GPIO2_BASE_ADDR+0x04) 
GPIO2_PSR0 		EQU	(GPIO2_BASE_ADDR+0x08) 
GPIO2_ICR1 		EQU	(GPIO2_BASE_ADDR+0x0C) 
GPIO2_ICR2 		EQU	(GPIO2_BASE_ADDR+0x10) 
GPIO2_IMR 		EQU	(GPIO2_BASE_ADDR+0x14) 
GPIO2_ISR 		EQU	(GPIO2_BASE_ADDR+0x18) 

;; #########################################
;; # GPIO3 						 #
;; #########################################
GPIO3_BASE_ADDR	EQU	0x53FA4000
GPIO3_DR0 		EQU	(GPIO3_BASE_ADDR+0x00) 
GPIO3_GDIR0 	EQU	(GPIO3_BASE_ADDR+0x04) 
GPIO3_PSR0 		EQU	(GPIO3_BASE_ADDR+0x08) 
GPIO3_ICR1 		EQU	(GPIO3_BASE_ADDR+0x0C) 
GPIO3_ICR2 		EQU	(GPIO3_BASE_ADDR+0x10) 
GPIO3_IMR 		EQU	(GPIO3_BASE_ADDR+0x14) 
GPIO3_ISR 		EQU	(GPIO3_BASE_ADDR+0x18)

;; #########################################
;; # GPIO4 						 #
;; #########################################
GPIO4_BASE_ADDR	EQU	0x53F9C000
GPIO4_DR0 		EQU	(GPIO4_BASE_ADDR+0x00) 
GPIO4_GDIR0 	EQU	(GPIO4_BASE_ADDR+0x04) 
GPIO4_PSR0 		EQU	(GPIO4_BASE_ADDR+0x08) 
GPIO4_ICR1 		EQU	(GPIO4_BASE_ADDR+0x0C) 
GPIO4_ICR2 		EQU	(GPIO4_BASE_ADDR+0x10) 
GPIO4_IMR 		EQU	(GPIO4_BASE_ADDR+0x14) 
GPIO4_ISR 		EQU	(GPIO4_BASE_ADDR+0x18)

;; #########################################
;; # GPT1 						 #
;; #########################################
GPT1_BASE_ADDR	EQU	0x53F90000
GPT1_GPT1CR 	EQU	(GPT1_BASE_ADDR+0x00) 
GPT1_GPT1PR 	EQU	(GPT1_BASE_ADDR+0x04) 
GPT1_GPT1SR 	EQU	(GPT1_BASE_ADDR+0x08) 
GPT1_GPT1IR 	EQU	(GPT1_BASE_ADDR+0x0C) 
GPT1_GPT1OCR1 	EQU	(GPT1_BASE_ADDR+0x10) 
GPT1_GPT1OCR2 	EQU	(GPT1_BASE_ADDR+0x14) 
GPT1_GPT1OCR3 	EQU	(GPT1_BASE_ADDR+0x18) 
GPT1_GPT1ICR1 	EQU	(GPT1_BASE_ADDR+0x1C) 
GPT1_GPT1ICR2 	EQU	(GPT1_BASE_ADDR+0x20) 
GPT1_GPT1CNT 	EQU	(GPT1_BASE_ADDR+0x24)

;;RTC name conversion table
;; mxl has the following nomenclature, so to ease the conversion of manual to platform naming convention, redundantly re-define pin names.
;; iMX25 does not have a RTC

RTC_BASE_ADDR_UPPER			EQU	GPT1_BASE_ADDR
RTC_BASE_ADDR_LOWER			EQU	0x00000000
RTC_BASE_ADDR_RTC_SECOND_OFFSET		EQU	0x00000004

;; #########################################
;; # GPT2 						 #
;; #########################################
GPT2_BASE_ADDR	EQU	0x53F8C000
GPT2_GPT2CR 	EQU	(GPT2_BASE_ADDR+0x00) 
GPT2_GPT2PR 	EQU	(GPT2_BASE_ADDR+0x04) 
GPT2_GPT2SR 	EQU	(GPT2_BASE_ADDR+0x08) 
GPT2_GPT2IR 	EQU	(GPT2_BASE_ADDR+0x0C) 
GPT2_GPT2OCR1 	EQU	(GPT2_BASE_ADDR+0x10) 
GPT2_GPT2OCR2 	EQU	(GPT2_BASE_ADDR+0x14) 
GPT2_GPT2OCR3 	EQU	(GPT2_BASE_ADDR+0x18) 
GPT2_GPT2ICR1 	EQU	(GPT2_BASE_ADDR+0x1C) 
GPT2_GPT2ICR2 	EQU	(GPT2_BASE_ADDR+0x20) 
GPT2_GPT2CNT 	EQU	(GPT2_BASE_ADDR+0x24) 

;; #########################################
;; # GPT3 						 #
;; #########################################
GPT3_BASE_ADDR	EQU	0x53F88000
GPT3_GPT3CR 	EQU	(GPT3_BASE_ADDR+0x00) 
GPT3_GPT3PR 	EQU	(GPT3_BASE_ADDR+0x04) 
GPT3_GPT3SR 	EQU	(GPT3_BASE_ADDR+0x08) 
GPT3_GPT3IR 	EQU	(GPT3_BASE_ADDR+0x0C) 
GPT3_GPT3OCR1 	EQU	(GPT3_BASE_ADDR+0x10) 
GPT3_GPT3OCR2 	EQU	(GPT3_BASE_ADDR+0x14) 
GPT3_GPT3OCR3 	EQU	(GPT3_BASE_ADDR+0x18) 
GPT3_GPT3ICR1 	EQU	(GPT3_BASE_ADDR+0x1C) 
GPT3_GPT3ICR2 	EQU	(GPT3_BASE_ADDR+0x20) 
GPT3_GPT3CNT 	EQU	(GPT3_BASE_ADDR+0x24) 

;; ##########################################
;; # GPT4 						 			#
;; ##########################################
GPT4_BASE_ADDR	EQU	0x53F84000
GPT4_GPT4CR 	EQU	(GPT4_BASE_ADDR+0x00) 
GPT4_GPT4PR 	EQU	(GPT4_BASE_ADDR+0x04) 
GPT4_GPT4SR 	EQU	(GPT4_BASE_ADDR+0x08) 
GPT4_GPT4IR 	EQU	(GPT4_BASE_ADDR+0x0C) 
GPT4_GPT4OCR1 	EQU	(GPT4_BASE_ADDR+0x10) 
GPT4_GPT4OCR2 	EQU	(GPT4_BASE_ADDR+0x14) 
GPT4_GPT4OCR3 	EQU	(GPT4_BASE_ADDR+0x18) 
GPT4_GPT4ICR1 	EQU	(GPT4_BASE_ADDR+0x1C) 
GPT4_GPT4ICR2 	EQU	(GPT4_BASE_ADDR+0x20) 
GPT4_GPT4CNT 	EQU	(GPT4_BASE_ADDR+0x24) 

;; ##########################################
;; # WDOG 						 			#
;; ##########################################
WDOG_BASE_ADDR	EQU	0x53FDC000
WDOG_WCR 		EQU	(WDOG_BASE_ADDR+0x00)	;; 16bit watchdog control reg
WDOG_WSR 		EQU	(WDOG_BASE_ADDR+0x02)	;; 16bit watchdog service reg
WDOG_WRSR 		EQU	(WDOG_BASE_ADDR+0x04)	;; 16bit watchdog reset status reg

;;Watchdog name conversion table
;; mxl has the following nomenclature, so to ease the conversion of manual to platform naming convention, redundantly re-define pin names.
;;
WATCHDOG_BASE_ADDR_UPPER		EQU	0x53FD0000
WATCHDOG_BASE_ADDR_LOWER		EQU	0x0000C000
WATCHDOG_BASE_ADDR_WCR_OFFSET		EQU	0x00000000
WATCHDOG_BASE_ADDR_WSR_OFFSET		EQU	0x00000002
WATCHDOG_BASE_ADDR_WRSR_OFFSET		EQU	0x00000004

;; ##########################################
;; # External Memory CSD0 CSD1 				#
;; ##########################################
CSD0_BASE_ADDR	EQU	0x80000000
CSD0_END_ADDR 	EQU	0x8FFFFFFF
CSD1_BASE_ADDR 	EQU	0x90000000
CSD1_END_ADDR 	EQU	0x9FFFFFFF

;; ##########################################
;; # External Memory CS0 - CS5 				#
;; # $A000_0000 to $A7FF_FFFF (CS0) 		#
;; # $A800_0000 to $AFFF_FFFF (CS1) 		#
;; # $B000_0000 to $B1FF_FFFF (CS2) 		#
;; # $B200_0000 to $B3FF_FFFF (CS3) 		#
;; # $B400_0000 to $B5FF_FFFF (CS4) 		#
;; # $B600_0000 to $B7FF_FFFF (CS5) 		#
;; ##########################################
CS0_BASE_ADDR	EQU	0xA0000000
CS0_END_ADDR	EQU	(CS0_BASE_ADDR+0x7FFFFFF)
CS1_BASE_ADDR 	EQU	0xA8000000
CS1_END_ADDR	EQU	(CS1_BASE_ADDR+0x7FFFFFF)
CS2_BASE_ADDR 	EQU	0xB0000000
CS2_END_ADDR 	EQU	(CS2_BASE_ADDR+0x1FFFFFF)
CS3_BASE_ADDR 	EQU	0xB2000000
CS3_END_ADDR 	EQU	(CS3_BASE_ADDR+0x1FFFFFF)
CS4_BASE_ADDR 	EQU	0xB4000000
CS4_END_ADDR 	EQU	(CS4_BASE_ADDR+0x1FFFFFF)
CS5_BASE_ADDR 	EQU	0xB6000000
CS5_END_ADDR 	EQU	(CS5_BASE_ADDR+0x1FFFFFF)

;; ##########################################
;; # RAM (128KB)  							#
;; # $7800_0000 to $7801_FFFF 				#
;; ##########################################
RAM_BASE_ADDR 	EQU	0x78000000


;; #########################################
;; # IOMUXC 							   #
;; #########################################
IOMUXC_BASE_ADDR					EQU	0x43FAC000

IOMUXC_GPR1							EQU	(IOMUXC_BASE_ADDR+0x0)
IOMUXC_OBSERVE_INT_MUX				EQU	(IOMUXC_BASE_ADDR+0x4)

IOMUXC_SW_MUX_CTL_PAD_A10			EQU	(IOMUXC_BASE_ADDR+0x8)
IOMUXC_SW_MUX_CTL_PAD_A13			EQU	(IOMUXC_BASE_ADDR+0xc)
IOMUXC_SW_MUX_CTL_PAD_A14			EQU	(IOMUXC_BASE_ADDR+0x10)
IOMUXC_SW_MUX_CTL_PAD_A15			EQU	(IOMUXC_BASE_ADDR+0x14)
IOMUXC_SW_MUX_CTL_PAD_A16			EQU	(IOMUXC_BASE_ADDR+0x18)
IOMUXC_SW_MUX_CTL_PAD_A17			EQU	(IOMUXC_BASE_ADDR+0x1c)
IOMUXC_SW_MUX_CTL_PAD_A18			EQU	(IOMUXC_BASE_ADDR+0x20)
IOMUXC_SW_MUX_CTL_PAD_A19			EQU	(IOMUXC_BASE_ADDR+0x24)
IOMUXC_SW_MUX_CTL_PAD_A20			EQU	(IOMUXC_BASE_ADDR+0x28)
IOMUXC_SW_MUX_CTL_PAD_A21			EQU	(IOMUXC_BASE_ADDR+0x2c)
IOMUXC_SW_MUX_CTL_PAD_A22			EQU	(IOMUXC_BASE_ADDR+0x30)
IOMUXC_SW_MUX_CTL_PAD_A23			EQU	(IOMUXC_BASE_ADDR+0x34)
IOMUXC_SW_MUX_CTL_PAD_A24			EQU	(IOMUXC_BASE_ADDR+0x38)
IOMUXC_SW_MUX_CTL_PAD_A25			EQU	(IOMUXC_BASE_ADDR+0x3c)
IOMUXC_SW_MUX_CTL_PAD_EB0			EQU	(IOMUXC_BASE_ADDR+0x40)
IOMUXC_SW_MUX_CTL_PAD_EB1			EQU	(IOMUXC_BASE_ADDR+0x44)
IOMUXC_SW_MUX_CTL_PAD_OE			EQU	(IOMUXC_BASE_ADDR+0x48)
IOMUXC_SW_MUX_CTL_PAD_CS0			EQU	(IOMUXC_BASE_ADDR+0x4c)
IOMUXC_SW_MUX_CTL_PAD_CS1			EQU	(IOMUXC_BASE_ADDR+0x50)
IOMUXC_SW_MUX_CTL_PAD_CS4			EQU	(IOMUXC_BASE_ADDR+0x54)
IOMUXC_SW_MUX_CTL_PAD_CS5			EQU	(IOMUXC_BASE_ADDR+0x58)
IOMUXC_SW_MUX_CTL_PAD_NF_CE0		EQU	(IOMUXC_BASE_ADDR+0x5c)
IOMUXC_SW_MUX_CTL_PAD_ECB			EQU	(IOMUXC_BASE_ADDR+0x60)
IOMUXC_SW_MUX_CTL_PAD_LBA			EQU	(IOMUXC_BASE_ADDR+0x64)
IOMUXC_SW_MUX_CTL_PAD_BCLK			EQU	(IOMUXC_BASE_ADDR+0x68)
IOMUXC_SW_MUX_CTL_PAD_RW			EQU	(IOMUXC_BASE_ADDR+0x6c)
IOMUXC_SW_MUX_CTL_PAD_NFWE_B		EQU	(IOMUXC_BASE_ADDR+0x70)
IOMUXC_SW_MUX_CTL_PAD_NFRE_B		EQU	(IOMUXC_BASE_ADDR+0x74)
IOMUXC_SW_MUX_CTL_PAD_NFALE			EQU	(IOMUXC_BASE_ADDR+0x78)
IOMUXC_SW_MUX_CTL_PAD_NFCLE			EQU	(IOMUXC_BASE_ADDR+0x7c)
IOMUXC_SW_MUX_CTL_PAD_NFWP_B		EQU	(IOMUXC_BASE_ADDR+0x80)
IOMUXC_SW_MUX_CTL_PAD_NFRB			EQU	(IOMUXC_BASE_ADDR+0x84)
IOMUXC_SW_MUX_CTL_PAD_D15			EQU	(IOMUXC_BASE_ADDR+0x88)
IOMUXC_SW_MUX_CTL_PAD_D14			EQU	(IOMUXC_BASE_ADDR+0x8c)
IOMUXC_SW_MUX_CTL_PAD_D13			EQU	(IOMUXC_BASE_ADDR+0x90)
IOMUXC_SW_MUX_CTL_PAD_D12			EQU	(IOMUXC_BASE_ADDR+0x94)
IOMUXC_SW_MUX_CTL_PAD_D11			EQU	(IOMUXC_BASE_ADDR+0x98)
IOMUXC_SW_MUX_CTL_PAD_D10			EQU	(IOMUXC_BASE_ADDR+0x9c)
IOMUXC_SW_MUX_CTL_PAD_D9			EQU	(IOMUXC_BASE_ADDR+0xa0)
IOMUXC_SW_MUX_CTL_PAD_D8			EQU	(IOMUXC_BASE_ADDR+0xa4)
IOMUXC_SW_MUX_CTL_PAD_D7			EQU	(IOMUXC_BASE_ADDR+0xa8)
IOMUXC_SW_MUX_CTL_PAD_D6			EQU	(IOMUXC_BASE_ADDR+0xac)
IOMUXC_SW_MUX_CTL_PAD_D5			EQU	(IOMUXC_BASE_ADDR+0xb0)
IOMUXC_SW_MUX_CTL_PAD_D4			EQU	(IOMUXC_BASE_ADDR+0xb4)
IOMUXC_SW_MUX_CTL_PAD_D3			EQU	(IOMUXC_BASE_ADDR+0xb8)
IOMUXC_SW_MUX_CTL_PAD_D2			EQU	(IOMUXC_BASE_ADDR+0xbc)
IOMUXC_SW_MUX_CTL_PAD_D1			EQU	(IOMUXC_BASE_ADDR+0xc0)
IOMUXC_SW_MUX_CTL_PAD_D0			EQU	(IOMUXC_BASE_ADDR+0xc4)
IOMUXC_SW_MUX_CTL_PAD_LD0			EQU	(IOMUXC_BASE_ADDR+0xc8)
IOMUXC_SW_MUX_CTL_PAD_LD1			EQU	(IOMUXC_BASE_ADDR+0xcc)
IOMUXC_SW_MUX_CTL_PAD_LD2			EQU	(IOMUXC_BASE_ADDR+0xd0)
IOMUXC_SW_MUX_CTL_PAD_LD3			EQU	(IOMUXC_BASE_ADDR+0xd4)
IOMUXC_SW_MUX_CTL_PAD_LD4			EQU	(IOMUXC_BASE_ADDR+0xd8)
IOMUXC_SW_MUX_CTL_PAD_LD5			EQU	(IOMUXC_BASE_ADDR+0xdc)
IOMUXC_SW_MUX_CTL_PAD_LD6			EQU	(IOMUXC_BASE_ADDR+0xe0)
IOMUXC_SW_MUX_CTL_PAD_LD7			EQU	(IOMUXC_BASE_ADDR+0xe4)
IOMUXC_SW_MUX_CTL_PAD_LD8			EQU	(IOMUXC_BASE_ADDR+0xe8)
IOMUXC_SW_MUX_CTL_PAD_LD9			EQU	(IOMUXC_BASE_ADDR+0xec)
IOMUXC_SW_MUX_CTL_PAD_LD10			EQU	(IOMUXC_BASE_ADDR+0xf0)
IOMUXC_SW_MUX_CTL_PAD_LD11			EQU	(IOMUXC_BASE_ADDR+0xf4)
IOMUXC_SW_MUX_CTL_PAD_LD12			EQU	(IOMUXC_BASE_ADDR+0xf8)
IOMUXC_SW_MUX_CTL_PAD_LD13			EQU	(IOMUXC_BASE_ADDR+0xfc)
IOMUXC_SW_MUX_CTL_PAD_LD14			EQU	(IOMUXC_BASE_ADDR+0x100)
IOMUXC_SW_MUX_CTL_PAD_LD15			EQU	(IOMUXC_BASE_ADDR+0x104)
IOMUXC_SW_MUX_CTL_PAD_HSYNC			EQU	(IOMUXC_BASE_ADDR+0x108)
IOMUXC_SW_MUX_CTL_PAD_VSYNC			EQU	(IOMUXC_BASE_ADDR+0x10c)
IOMUXC_SW_MUX_CTL_PAD_LSCLK			EQU	(IOMUXC_BASE_ADDR+0x110)
IOMUXC_SW_MUX_CTL_PAD_OE_ACD		EQU	(IOMUXC_BASE_ADDR+0x114)
IOMUXC_SW_MUX_CTL_PAD_CONTRAST		EQU	(IOMUXC_BASE_ADDR+0x118)
IOMUXC_SW_MUX_CTL_PAD_PWM			EQU	(IOMUXC_BASE_ADDR+0x11c)
IOMUXC_SW_MUX_CTL_PAD_CSI_D2		EQU	(IOMUXC_BASE_ADDR+0x120)
IOMUXC_SW_MUX_CTL_PAD_CSI_D3		EQU	(IOMUXC_BASE_ADDR+0x124)
IOMUXC_SW_MUX_CTL_PAD_CSI_D4		EQU	(IOMUXC_BASE_ADDR+0x128)
IOMUXC_SW_MUX_CTL_PAD_CSI_D5		EQU	(IOMUXC_BASE_ADDR+0x12c)
IOMUXC_SW_MUX_CTL_PAD_CSI_D6		EQU	(IOMUXC_BASE_ADDR+0x130)
IOMUXC_SW_MUX_CTL_PAD_CSI_D7		EQU	(IOMUXC_BASE_ADDR+0x134)
IOMUXC_SW_MUX_CTL_PAD_CSI_D8		EQU	(IOMUXC_BASE_ADDR+0x138)
IOMUXC_SW_MUX_CTL_PAD_CSI_D9		EQU	(IOMUXC_BASE_ADDR+0x13c)
IOMUXC_SW_MUX_CTL_PAD_CSI_MCLK		EQU	(IOMUXC_BASE_ADDR+0x140)
IOMUXC_SW_MUX_CTL_PAD_CSI_VSYNC		EQU	(IOMUXC_BASE_ADDR+0x144)
IOMUXC_SW_MUX_CTL_PAD_CSI_HSYNC		EQU	(IOMUXC_BASE_ADDR+0x148)
IOMUXC_SW_MUX_CTL_PAD_CSI_PIXCLK	EQU	(IOMUXC_BASE_ADDR+0x14c)
IOMUXC_SW_MUX_CTL_PAD_I2C1_CLK		EQU	(IOMUXC_BASE_ADDR+0x150)
IOMUXC_SW_MUX_CTL_PAD_I2C1_DAT		EQU	(IOMUXC_BASE_ADDR+0x154)
IOMUXC_SW_MUX_CTL_PAD_CSPI1_MOSI	EQU	(IOMUXC_BASE_ADDR+0x158)
IOMUXC_SW_MUX_CTL_PAD_CSPI1_MISO	EQU	(IOMUXC_BASE_ADDR+0x15c)
IOMUXC_SW_MUX_CTL_PAD_CSPI1_SS0		EQU	(IOMUXC_BASE_ADDR+0x160)
IOMUXC_SW_MUX_CTL_PAD_CSPI1_SS1		EQU	(IOMUXC_BASE_ADDR+0x164)
IOMUXC_SW_MUX_CTL_PAD_CSPI1_SCLK	EQU	(IOMUXC_BASE_ADDR+0x168)
IOMUXC_SW_MUX_CTL_PAD_CSPI1_RDY		EQU	(IOMUXC_BASE_ADDR+0x16c)
IOMUXC_SW_MUX_CTL_PAD_UART1_RXD		EQU	(IOMUXC_BASE_ADDR+0x170)
IOMUXC_SW_MUX_CTL_PAD_UART1_TXD		EQU	(IOMUXC_BASE_ADDR+0x174)
IOMUXC_SW_MUX_CTL_PAD_UART1_RTS		EQU	(IOMUXC_BASE_ADDR+0x178)
IOMUXC_SW_MUX_CTL_PAD_UART1_CTS		EQU	(IOMUXC_BASE_ADDR+0x17c)
IOMUXC_SW_MUX_CTL_PAD_UART2_RXD		EQU	(IOMUXC_BASE_ADDR+0x180)
IOMUXC_SW_MUX_CTL_PAD_UART2_TXD		EQU	(IOMUXC_BASE_ADDR+0x184)
IOMUXC_SW_MUX_CTL_PAD_UART2_RTS		EQU	(IOMUXC_BASE_ADDR+0x188)
IOMUXC_SW_MUX_CTL_PAD_UART2_CTS		EQU	(IOMUXC_BASE_ADDR+0x18c)
IOMUXC_SW_MUX_CTL_PAD_SD1_CMD		EQU	(IOMUXC_BASE_ADDR+0x190)
IOMUXC_SW_MUX_CTL_PAD_SD1_CLK		EQU	(IOMUXC_BASE_ADDR+0x194)
IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0		EQU	(IOMUXC_BASE_ADDR+0x198)
IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1		EQU	(IOMUXC_BASE_ADDR+0x19c)
IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2		EQU	(IOMUXC_BASE_ADDR+0x1a0)
IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3		EQU	(IOMUXC_BASE_ADDR+0x1a4)
IOMUXC_SW_MUX_CTL_PAD_KPP_ROW0		EQU	(IOMUXC_BASE_ADDR+0x1a8)
IOMUXC_SW_MUX_CTL_PAD_KPP_ROW1		EQU	(IOMUXC_BASE_ADDR+0x1ac)
IOMUXC_SW_MUX_CTL_PAD_KPP_ROW2		EQU	(IOMUXC_BASE_ADDR+0x1b0)
IOMUXC_SW_MUX_CTL_PAD_KPP_ROW3		EQU	(IOMUXC_BASE_ADDR+0x1b4)
IOMUXC_SW_MUX_CTL_PAD_KPP_COL0		EQU	(IOMUXC_BASE_ADDR+0x1b8)
IOMUXC_SW_MUX_CTL_PAD_KPP_COL1		EQU	(IOMUXC_BASE_ADDR+0x1bc)
IOMUXC_SW_MUX_CTL_PAD_KPP_COL2		EQU	(IOMUXC_BASE_ADDR+0x1c0)
IOMUXC_SW_MUX_CTL_PAD_KPP_COL3		EQU	(IOMUXC_BASE_ADDR+0x1c4)
IOMUXC_SW_MUX_CTL_PAD_FEC_MDC		EQU	(IOMUXC_BASE_ADDR+0x1c8)
IOMUXC_SW_MUX_CTL_PAD_FEC_MDIO		EQU	(IOMUXC_BASE_ADDR+0x1cc)
IOMUXC_SW_MUX_CTL_PAD_FEC_TDATA0	EQU	(IOMUXC_BASE_ADDR+0x1d0)
IOMUXC_SW_MUX_CTL_PAD_FEC_TDATA1	EQU	(IOMUXC_BASE_ADDR+0x1d4)
IOMUXC_SW_MUX_CTL_PAD_FEC_TX_EN		EQU	(IOMUXC_BASE_ADDR+0x1d8)
IOMUXC_SW_MUX_CTL_PAD_FEC_RDATA0	EQU	(IOMUXC_BASE_ADDR+0x1dc)
IOMUXC_SW_MUX_CTL_PAD_FEC_RDATA1	EQU	(IOMUXC_BASE_ADDR+0x1e0)
IOMUXC_SW_MUX_CTL_PAD_FEC_RX_DV		EQU	(IOMUXC_BASE_ADDR+0x1e4)
IOMUXC_SW_MUX_CTL_PAD_FEC_TX_CLK	EQU	(IOMUXC_BASE_ADDR+0x1e8)
IOMUXC_SW_MUX_CTL_PAD_RTCK			EQU	(IOMUXC_BASE_ADDR+0x1ec)
IOMUXC_SW_MUX_CTL_PAD_DE_B			EQU	(IOMUXC_BASE_ADDR+0x1f0)
IOMUXC_SW_MUX_CTL_PAD_GPIO_A		EQU	(IOMUXC_BASE_ADDR+0x1f4)
IOMUXC_SW_MUX_CTL_PAD_GPIO_B		EQU	(IOMUXC_BASE_ADDR+0x1f8)
IOMUXC_SW_MUX_CTL_PAD_GPIO_C		EQU	(IOMUXC_BASE_ADDR+0x1fc)
IOMUXC_SW_MUX_CTL_PAD_GPIO_D		EQU	(IOMUXC_BASE_ADDR+0x200)
IOMUXC_SW_MUX_CTL_PAD_GPIO_E		EQU	(IOMUXC_BASE_ADDR+0x204)
IOMUXC_SW_MUX_CTL_PAD_GPIO_F		EQU	(IOMUXC_BASE_ADDR+0x208)
IOMUXC_SW_MUX_CTL_PAD_EXT_ARMCLK	EQU	(IOMUXC_BASE_ADDR+0x20c)
IOMUXC_SW_MUX_CTL_PAD_UPLL_BYPCLK	EQU	(IOMUXC_BASE_ADDR+0x210)
IOMUXC_SW_MUX_CTL_PAD_VSTBY_REQ		EQU	(IOMUXC_BASE_ADDR+0x214)
IOMUXC_SW_MUX_CTL_PAD_VSTBY_ACK		EQU	(IOMUXC_BASE_ADDR+0x218)
IOMUXC_SW_MUX_CTL_PAD_POWER_FAIL	EQU	(IOMUXC_BASE_ADDR+0x21c)
IOMUXC_SW_MUX_CTL_PAD_CLKO			EQU	(IOMUXC_BASE_ADDR+0x220)
IOMUXC_SW_MUX_CTL_PAD_BOOT_MODE0	EQU	(IOMUXC_BASE_ADDR+0x224)
IOMUXC_SW_MUX_CTL_PAD_BOOT_MODE1	EQU	(IOMUXC_BASE_ADDR+0x228)

IOMUXC_SW_PAD_CTL_PAD_A13			EQU	(IOMUXC_BASE_ADDR+0x22c)
IOMUXC_SW_PAD_CTL_PAD_A14			EQU	(IOMUXC_BASE_ADDR+0x230)
IOMUXC_SW_PAD_CTL_PAD_A15			EQU	(IOMUXC_BASE_ADDR+0x234)
IOMUXC_SW_PAD_CTL_PAD_A17			EQU	(IOMUXC_BASE_ADDR+0x238)
IOMUXC_SW_PAD_CTL_PAD_A18			EQU	(IOMUXC_BASE_ADDR+0x23c)
IOMUXC_SW_PAD_CTL_PAD_A19			EQU	(IOMUXC_BASE_ADDR+0x240)
IOMUXC_SW_PAD_CTL_PAD_A20			EQU	(IOMUXC_BASE_ADDR+0x244)
IOMUXC_SW_PAD_CTL_PAD_A21			EQU	(IOMUXC_BASE_ADDR+0x248)
IOMUXC_SW_PAD_CTL_PAD_A23			EQU	(IOMUXC_BASE_ADDR+0x24c)
IOMUXC_SW_PAD_CTL_PAD_A24			EQU	(IOMUXC_BASE_ADDR+0x250)
IOMUXC_SW_PAD_CTL_PAD_A25			EQU	(IOMUXC_BASE_ADDR+0x254)
IOMUXC_SW_PAD_CTL_PAD_EB0			EQU	(IOMUXC_BASE_ADDR+0x258)
IOMUXC_SW_PAD_CTL_PAD_EB1			EQU	(IOMUXC_BASE_ADDR+0x25c)
IOMUXC_SW_PAD_CTL_PAD_OE			EQU	(IOMUXC_BASE_ADDR+0x260)
IOMUXC_SW_PAD_CTL_PAD_CS4			EQU	(IOMUXC_BASE_ADDR+0x264)
IOMUXC_SW_PAD_CTL_PAD_CS5			EQU	(IOMUXC_BASE_ADDR+0x268)
IOMUXC_SW_PAD_CTL_PAD_NF_CE0		EQU	(IOMUXC_BASE_ADDR+0x26c)
IOMUXC_SW_PAD_CTL_PAD_ECB			EQU	(IOMUXC_BASE_ADDR+0x270)
IOMUXC_SW_PAD_CTL_PAD_LBA			EQU	(IOMUXC_BASE_ADDR+0x274)
IOMUXC_SW_PAD_CTL_PAD_RW			EQU	(IOMUXC_BASE_ADDR+0x278)
IOMUXC_SW_PAD_CTL_PAD_NFRB			EQU	(IOMUXC_BASE_ADDR+0x27c)
IOMUXC_SW_PAD_CTL_PAD_D15			EQU	(IOMUXC_BASE_ADDR+0x280)
IOMUXC_SW_PAD_CTL_PAD_D14			EQU	(IOMUXC_BASE_ADDR+0x284)
IOMUXC_SW_PAD_CTL_PAD_D13			EQU	(IOMUXC_BASE_ADDR+0x288)
IOMUXC_SW_PAD_CTL_PAD_D12			EQU	(IOMUXC_BASE_ADDR+0x28c)
IOMUXC_SW_PAD_CTL_PAD_D11			EQU	(IOMUXC_BASE_ADDR+0x290)
IOMUXC_SW_PAD_CTL_PAD_D10			EQU	(IOMUXC_BASE_ADDR+0x294)
IOMUXC_SW_PAD_CTL_PAD_D9			EQU	(IOMUXC_BASE_ADDR+0x298)
IOMUXC_SW_PAD_CTL_PAD_D8			EQU	(IOMUXC_BASE_ADDR+0x29c)
IOMUXC_SW_PAD_CTL_PAD_D7			EQU	(IOMUXC_BASE_ADDR+0x2a0)
IOMUXC_SW_PAD_CTL_PAD_D6			EQU	(IOMUXC_BASE_ADDR+0x2a4)
IOMUXC_SW_PAD_CTL_PAD_D5			EQU	(IOMUXC_BASE_ADDR+0x2a8)
IOMUXC_SW_PAD_CTL_PAD_D4			EQU	(IOMUXC_BASE_ADDR+0x2ac)
IOMUXC_SW_PAD_CTL_PAD_D3			EQU	(IOMUXC_BASE_ADDR+0x2b0)
IOMUXC_SW_PAD_CTL_PAD_D2			EQU	(IOMUXC_BASE_ADDR+0x2b4)
IOMUXC_SW_PAD_CTL_PAD_D1			EQU	(IOMUXC_BASE_ADDR+0x2b8)
IOMUXC_SW_PAD_CTL_PAD_D0			EQU	(IOMUXC_BASE_ADDR+0x2bc)
IOMUXC_SW_PAD_CTL_PAD_LD0			EQU	(IOMUXC_BASE_ADDR+0x2c0)
IOMUXC_SW_PAD_CTL_PAD_LD1			EQU	(IOMUXC_BASE_ADDR+0x2c4)
IOMUXC_SW_PAD_CTL_PAD_LD2			EQU	(IOMUXC_BASE_ADDR+0x2c8)
IOMUXC_SW_PAD_CTL_PAD_LD3			EQU	(IOMUXC_BASE_ADDR+0x2cc)
IOMUXC_SW_PAD_CTL_PAD_LD4			EQU	(IOMUXC_BASE_ADDR+0x2d0)
IOMUXC_SW_PAD_CTL_PAD_LD5			EQU	(IOMUXC_BASE_ADDR+0x2d4)
IOMUXC_SW_PAD_CTL_PAD_LD6			EQU	(IOMUXC_BASE_ADDR+0x2d8)
IOMUXC_SW_PAD_CTL_PAD_LD7			EQU	(IOMUXC_BASE_ADDR+0x2dc)
IOMUXC_SW_PAD_CTL_PAD_LD8			EQU	(IOMUXC_BASE_ADDR+0x2e0)
IOMUXC_SW_PAD_CTL_PAD_LD9			EQU	(IOMUXC_BASE_ADDR+0x2e4)
IOMUXC_SW_PAD_CTL_PAD_LD10			EQU	(IOMUXC_BASE_ADDR+0x2e8)
IOMUXC_SW_PAD_CTL_PAD_LD11			EQU	(IOMUXC_BASE_ADDR+0x2ec)
IOMUXC_SW_PAD_CTL_PAD_LD12			EQU	(IOMUXC_BASE_ADDR+0x2f0)
IOMUXC_SW_PAD_CTL_PAD_LD13			EQU	(IOMUXC_BASE_ADDR+0x2f4)
IOMUXC_SW_PAD_CTL_PAD_LD14			EQU	(IOMUXC_BASE_ADDR+0x2f8)
IOMUXC_SW_PAD_CTL_PAD_LD15			EQU	(IOMUXC_BASE_ADDR+0x2fc)
IOMUXC_SW_PAD_CTL_PAD_HSYNC			EQU	(IOMUXC_BASE_ADDR+0x300)
IOMUXC_SW_PAD_CTL_PAD_VSYNC			EQU	(IOMUXC_BASE_ADDR+0x304)
IOMUXC_SW_PAD_CTL_PAD_LSCLK			EQU	(IOMUXC_BASE_ADDR+0x308)
IOMUXC_SW_PAD_CTL_PAD_OE_ACD		EQU	(IOMUXC_BASE_ADDR+0x30c)
IOMUXC_SW_PAD_CTL_PAD_CONTRAST		EQU	(IOMUXC_BASE_ADDR+0x310)
IOMUXC_SW_PAD_CTL_PAD_PWM			EQU	(IOMUXC_BASE_ADDR+0x314)
IOMUXC_SW_PAD_CTL_PAD_CSI_D2		EQU	(IOMUXC_BASE_ADDR+0x318)
IOMUXC_SW_PAD_CTL_PAD_CSI_D3		EQU	(IOMUXC_BASE_ADDR+0x31c)
IOMUXC_SW_PAD_CTL_PAD_CSI_D4		EQU	(IOMUXC_BASE_ADDR+0x320)
IOMUXC_SW_PAD_CTL_PAD_CSI_D5		EQU	(IOMUXC_BASE_ADDR+0x324)
IOMUXC_SW_PAD_CTL_PAD_CSI_D6		EQU	(IOMUXC_BASE_ADDR+0x328)
IOMUXC_SW_PAD_CTL_PAD_CSI_D7		EQU	(IOMUXC_BASE_ADDR+0x32c)
IOMUXC_SW_PAD_CTL_PAD_CSI_D8		EQU	(IOMUXC_BASE_ADDR+0x330)
IOMUXC_SW_PAD_CTL_PAD_CSI_D9		EQU	(IOMUXC_BASE_ADDR+0x334)
IOMUXC_SW_PAD_CTL_PAD_CSI_MCLK		EQU	(IOMUXC_BASE_ADDR+0x338)
IOMUXC_SW_PAD_CTL_PAD_CSI_VSYNC		EQU	(IOMUXC_BASE_ADDR+0x33c)
IOMUXC_SW_PAD_CTL_PAD_CSI_HSYNC		EQU	(IOMUXC_BASE_ADDR+0x340)
IOMUXC_SW_PAD_CTL_PAD_CSI_PIXCLK	EQU	(IOMUXC_BASE_ADDR+0x344)
IOMUXC_SW_PAD_CTL_PAD_I2C1_CLK		EQU	(IOMUXC_BASE_ADDR+0x348)
IOMUXC_SW_PAD_CTL_PAD_I2C1_DAT		EQU	(IOMUXC_BASE_ADDR+0x34c)
IOMUXC_SW_PAD_CTL_PAD_CSPI1_MOSI	EQU	(IOMUXC_BASE_ADDR+0x350)
IOMUXC_SW_PAD_CTL_PAD_CSPI1_MISO	EQU	(IOMUXC_BASE_ADDR+0x354)
IOMUXC_SW_PAD_CTL_PAD_CSPI1_SS0		EQU	(IOMUXC_BASE_ADDR+0x358)
IOMUXC_SW_PAD_CTL_PAD_CSPI1_SS1		EQU	(IOMUXC_BASE_ADDR+0x35c)
IOMUXC_SW_PAD_CTL_PAD_CSPI1_SCLK	EQU	(IOMUXC_BASE_ADDR+0x360)
IOMUXC_SW_PAD_CTL_PAD_CSPI1_RDY		EQU	(IOMUXC_BASE_ADDR+0x364)
IOMUXC_SW_PAD_CTL_PAD_UART1_RXD		EQU	(IOMUXC_BASE_ADDR+0x368)
IOMUXC_SW_PAD_CTL_PAD_UART1_TXD		EQU	(IOMUXC_BASE_ADDR+0x36c)
IOMUXC_SW_PAD_CTL_PAD_UART1_RTS		EQU	(IOMUXC_BASE_ADDR+0x370)
IOMUXC_SW_PAD_CTL_PAD_UART1_CTS		EQU	(IOMUXC_BASE_ADDR+0x374)
IOMUXC_SW_PAD_CTL_PAD_UART2_RXD		EQU	(IOMUXC_BASE_ADDR+0x378)
IOMUXC_SW_PAD_CTL_PAD_UART2_TXD		EQU	(IOMUXC_BASE_ADDR+0x37c)
IOMUXC_SW_PAD_CTL_PAD_UART2_RTS		EQU	(IOMUXC_BASE_ADDR+0x380)
IOMUXC_SW_PAD_CTL_PAD_UART2_CTS		EQU	(IOMUXC_BASE_ADDR+0x384)
IOMUXC_SW_PAD_CTL_PAD_SD1_CMD		EQU	(IOMUXC_BASE_ADDR+0x388)
IOMUXC_SW_PAD_CTL_PAD_SD1_CLK		EQU	(IOMUXC_BASE_ADDR+0x38c)
IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0		EQU	(IOMUXC_BASE_ADDR+0x390)
IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1		EQU	(IOMUXC_BASE_ADDR+0x394)
IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2		EQU	(IOMUXC_BASE_ADDR+0x398)
IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3		EQU	(IOMUXC_BASE_ADDR+0x39c)
IOMUXC_SW_PAD_CTL_PAD_KPP_ROW0		EQU	(IOMUXC_BASE_ADDR+0x3a0)
IOMUXC_SW_PAD_CTL_PAD_KPP_ROW1		EQU	(IOMUXC_BASE_ADDR+0x3a4)
IOMUXC_SW_PAD_CTL_PAD_KPP_ROW2		EQU	(IOMUXC_BASE_ADDR+0x3a8)
IOMUXC_SW_PAD_CTL_PAD_KPP_ROW3		EQU	(IOMUXC_BASE_ADDR+0x3ac)
IOMUXC_SW_PAD_CTL_PAD_KPP_COL0		EQU	(IOMUXC_BASE_ADDR+0x3b0)
IOMUXC_SW_PAD_CTL_PAD_KPP_COL1		EQU	(IOMUXC_BASE_ADDR+0x3b4)
IOMUXC_SW_PAD_CTL_PAD_KPP_COL2		EQU	(IOMUXC_BASE_ADDR+0x3b8)
IOMUXC_SW_PAD_CTL_PAD_KPP_COL3		EQU	(IOMUXC_BASE_ADDR+0x3bc)
IOMUXC_SW_PAD_CTL_PAD_FEC_MDC		EQU	(IOMUXC_BASE_ADDR+0x3c0)
IOMUXC_SW_PAD_CTL_PAD_FEC_MDIO		EQU	(IOMUXC_BASE_ADDR+0x3c4)
IOMUXC_SW_PAD_CTL_PAD_FEC_TDATA0	EQU	(IOMUXC_BASE_ADDR+0x3c8)
IOMUXC_SW_PAD_CTL_PAD_FEC_TDATA1	EQU	(IOMUXC_BASE_ADDR+0x3cc)
IOMUXC_SW_PAD_CTL_PAD_FEC_TX_EN		EQU	(IOMUXC_BASE_ADDR+0x3d0)
IOMUXC_SW_PAD_CTL_PAD_FEC_RDATA0	EQU	(IOMUXC_BASE_ADDR+0x3d4)
IOMUXC_SW_PAD_CTL_PAD_FEC_RDATA1	EQU	(IOMUXC_BASE_ADDR+0x3d8)
IOMUXC_SW_PAD_CTL_PAD_FEC_RX_DV		EQU	(IOMUXC_BASE_ADDR+0x3dc)
IOMUXC_SW_PAD_CTL_PAD_FEC_TX_CLK	EQU	(IOMUXC_BASE_ADDR+0x3e0)
IOMUXC_SW_PAD_CTL_PAD_RTCK			EQU	(IOMUXC_BASE_ADDR+0x3e4)
IOMUXC_SW_PAD_CTL_PAD_TDO			EQU	(IOMUXC_BASE_ADDR+0x3e8)
IOMUXC_SW_PAD_CTL_PAD_DE_B			EQU	(IOMUXC_BASE_ADDR+0x3ec)
IOMUXC_SW_PAD_CTL_PAD_GPIO_A		EQU	(IOMUXC_BASE_ADDR+0x3f0)
IOMUXC_SW_PAD_CTL_PAD_GPIO_B		EQU	(IOMUXC_BASE_ADDR+0x3f4)
IOMUXC_SW_PAD_CTL_PAD_GPIO_C		EQU	(IOMUXC_BASE_ADDR+0x3f8)
IOMUXC_SW_PAD_CTL_PAD_GPIO_D		EQU	(IOMUXC_BASE_ADDR+0x3fc)
IOMUXC_SW_PAD_CTL_PAD_GPIO_E		EQU	(IOMUXC_BASE_ADDR+0x400)
IOMUXC_SW_PAD_CTL_PAD_GPIO_F		EQU	(IOMUXC_BASE_ADDR+0x404)
IOMUXC_SW_PAD_CTL_PAD_VSTBY_REQ		EQU	(IOMUXC_BASE_ADDR+0x408)
IOMUXC_SW_PAD_CTL_PAD_VSTBY_ACK		EQU	(IOMUXC_BASE_ADDR+0x40c)
IOMUXC_SW_PAD_CTL_PAD_POWER_FAIL	EQU	(IOMUXC_BASE_ADDR+0x410)
IOMUXC_SW_PAD_CTL_PAD_CLKO			EQU	(IOMUXC_BASE_ADDR+0x414)

IOMUXC_SW_PAD_CTL_GRP_DVS_MISC		EQU	(IOMUXC_BASE_ADDR+0x418)
IOMUXC_SW_PAD_CTL_GRP_DSE_FEC		EQU	(IOMUXC_BASE_ADDR+0x41c)
IOMUXC_SW_PAD_CTL_GRP_DVS_JTAG		EQU	(IOMUXC_BASE_ADDR+0x420)
IOMUXC_SW_PAD_CTL_GRP_DSE_NFC		EQU	(IOMUXC_BASE_ADDR+0x424)
IOMUXC_SW_PAD_CTL_GRP_DSE_CSI		EQU	(IOMUXC_BASE_ADDR+0x428)
IOMUXC_SW_PAD_CTL_GRP_DSE_WEIM		EQU	(IOMUXC_BASE_ADDR+0x42c)
IOMUXC_SW_PAD_CTL_GRP_DSE_DDR		EQU	(IOMUXC_BASE_ADDR+0x430)
IOMUXC_SW_PAD_CTL_GRP_DVS_CRM		EQU	(IOMUXC_BASE_ADDR+0x434)
IOMUXC_SW_PAD_CTL_GRP_DSE_KPP		EQU	(IOMUXC_BASE_ADDR+0x438)
IOMUXC_SW_PAD_CTL_GRP_DSE_SDHC1		EQU	(IOMUXC_BASE_ADDR+0x43c)
IOMUXC_SW_PAD_CTL_GRP_DSE_LCD		EQU	(IOMUXC_BASE_ADDR+0x440)
IOMUXC_SW_PAD_CTL_GRP_DSE_UART		EQU	(IOMUXC_BASE_ADDR+0x444)
IOMUXC_SW_PAD_CTL_GRP_DVS_NFC		EQU	(IOMUXC_BASE_ADDR+0x448)
IOMUXC_SW_PAD_CTL_GRP_DVS_CSI		EQU	(IOMUXC_BASE_ADDR+0x44c)
IOMUXC_SW_PAD_CTL_GRP_DSE_CSPI1		EQU	(IOMUXC_BASE_ADDR+0x450)
IOMUXC_SW_PAD_CTL_GRP_DDRTYPE		EQU	(IOMUXC_BASE_ADDR+0x454)
IOMUXC_SW_PAD_CTL_GRP_DVS_SDHC1		EQU	(IOMUXC_BASE_ADDR+0x458)
IOMUXC_SW_PAD_CTL_GRP_DVS_LCD		EQU	(IOMUXC_BASE_ADDR+0x45c)

IOMUXC_AUDMUX_P4_INPUT_DA_AMX_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x460)
IOMUXC_AUDMUX_P4_INPUT_DB_AMX_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x464)
IOMUXC_AUDMUX_P4_INPUT_RXCLK_AMX_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x468)
IOMUXC_AUDMUX_P4_INPUT_RXFS_AMX_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x46c)
IOMUXC_AUDMUX_P4_INPUT_TXCLK_AMX_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x470)
IOMUXC_AUDMUX_P4_INPUT_TXFS_AMX_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x474)
IOMUXC_AUDMUX_P7_INPUT_DA_AMX_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x478)
IOMUXC_AUDMUX_P7_INPUT_TXFS_AMX_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x47c)

IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x480)
IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x484)

IOMUXC_CSI_IPP_CSI_D_0_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x488)
IOMUXC_CSI_IPP_CSI_D_1_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x48c)

IOMUXC_CSPI1_IPP_IND_SS3_B_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x490)
IOMUXC_CSPI2_IPP_CSPI_CLK_IN_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x494)
IOMUXC_CSPI2_IPP_IND_DATAREADY_B_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x498)
IOMUXC_CSPI2_IPP_IND_MISO_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x49c)
IOMUXC_CSPI2_IPP_IND_MOSI_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4a0)
IOMUXC_CSPI2_IPP_IND_SS0_B_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4a4)
IOMUXC_CSPI2_IPP_IND_SS1_B_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4a8)
IOMUXC_CSPI3_IPP_CSPI_CLK_IN_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x4ac)
IOMUXC_CSPI3_IPP_IND_DATAREADY_B_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x4b0)
IOMUXC_CSPI3_IPP_IND_MISO_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4b4)
IOMUXC_CSPI3_IPP_IND_MOSI_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4b8)
IOMUXC_CSPI3_IPP_IND_SS0_B_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4bc)
IOMUXC_CSPI3_IPP_IND_SS1_B_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4c0)
IOMUXC_CSPI3_IPP_IND_SS2_B_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4c4)
IOMUXC_CSPI3_IPP_IND_SS3_B_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4c8)
	
IOMUXC_ESDHC1_IPP_DAT4_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4cc)
IOMUXC_ESDHC1_IPP_DAT5_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4d0)
IOMUXC_ESDHC1_IPP_DAT6_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4d4)
IOMUXC_ESDHC1_IPP_DAT7_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4d8)
IOMUXC_ESDHC2_IPP_CARD_CLK_IN_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x4dc)
IOMUXC_ESDHC2_IPP_CMD_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4e0)
IOMUXC_ESDHC2_IPP_DAT0_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4e4)
IOMUXC_ESDHC2_IPP_DAT1_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4e8)
IOMUXC_ESDHC2_IPP_DAT2_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4ec)
IOMUXC_ESDHC2_IPP_DAT3_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4f0)
IOMUXC_ESDHC2_IPP_DAT4_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4f4)
IOMUXC_ESDHC2_IPP_DAT5_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4f8)
IOMUXC_ESDHC2_IPP_DAT6_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x4fc)
IOMUXC_ESDHC2_IPP_DAT7_IN_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x500)

IOMUXC_FEC_FEC_COL_SELECT_INPUT					EQU	(IOMUXC_BASE_ADDR+0x504)
IOMUXC_FEC_FEC_CRS_SELECT_INPUT					EQU	(IOMUXC_BASE_ADDR+0x508)
IOMUXC_FEC_FEC_RDATA_2_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x50c)
IOMUXC_FEC_FEC_RDATA_3_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x510)
IOMUXC_FEC_FEC_RX_CLK_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x514)
IOMUXC_FEC_FEC_RX_ER_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x518)

IOMUXC_I2C2_IPP_SCL_IN_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x51c)
IOMUXC_I2C2_IPP_SDA_IN_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x520)
IOMUXC_I2C3_IPP_SCL_IN_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x524)
IOMUXC_I2C3_IPP_SDA_IN_SELECT_INPUT				EQU	(IOMUXC_BASE_ADDR+0x528)

IOMUXC_KPP_IPP_IND_COL_4_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x52c)
IOMUXC_KPP_IPP_IND_COL_5_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x530)
IOMUXC_KPP_IPP_IND_COL_6_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x534)
IOMUXC_KPP_IPP_IND_COL_7_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x538)
IOMUXC_KPP_IPP_IND_ROW_4_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x53c)
IOMUXC_KPP_IPP_IND_ROW_5_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x540)
IOMUXC_KPP_IPP_IND_ROW_6_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x544)
IOMUXC_KPP_IPP_IND_ROW_7_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x548)

IOMUXC_SIM1_PIN_SIM_RCVD1_IN_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x54c)
IOMUXC_SIM1_PIN_SIM_SIMPD1_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x550)
IOMUXC_SIM1_SIM_RCVD1_IO_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x554)
IOMUXC_SIM2_PIN_SIM_RCVD1_IN_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x558)
IOMUXC_SIM2_PIN_SIM_SIMPD1_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x55c)
IOMUXC_SIM2_SIM_RCVD1_IO_SELECT_INPUT			EQU	(IOMUXC_BASE_ADDR+0x560)

IOMUXC_UART3_IPP_UART_RTS_B_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x564)
IOMUXC_UART3_IPP_UART_RXD_MUX_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x568)
IOMUXC_UART4_IPP_UART_RTS_B_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x56c)
IOMUXC_UART4_IPP_UART_RXD_MUX_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x570)
IOMUXC_UART5_IPP_UART_RTS_B_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x574)
IOMUXC_UART5_IPP_UART_RXD_MUX_SELECT_INPUT		EQU	(IOMUXC_BASE_ADDR+0x578)

IOMUXC_USB_TOP_IPP_IND_OTG_USB_OC_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x57c)
IOMUXC_USB_TOP_IPP_IND_UH2_USB_OC_SELECT_INPUT	EQU	(IOMUXC_BASE_ADDR+0x580)




;;------------------------------------------------------------------------------
;; REGISTER BIT WRITE VALUES
;;------------------------------------------------------------------------------
MUX_MODE_0		EQU		0x0		;;000: Select ALT0 mux mode. (default)
MUX_MODE_1		EQU		0x1		;;001: Select ALT1 mux mode.
MUX_MODE_2		EQU		0x2		;;010: Select ALT2 mux mode.
MUX_MODE_3		EQU		0x3		;;011: Select ALT3 mux mode.
MUX_MODE_4		EQU		0x4		;;100: Select ALT4 mux mode.
MUX_MODE_5		EQU		0x5		;;101: Select ALT5 mux mode(usually GPIO).
MUX_MODE_6		EQU		0x6		;;110: Select ALT6 mux mode.
MUX_MODE_7		EQU		0x7		;;111: Select ALT7 mux mode (Trace).
MUX_MODE_TRACE	EQU		0x7		;;111: Select ALT7 mux mode (Trace).

;;------------------------------------------------------------------------------
;; Pin Configuration
;;------------------------------------------------------------------------------

TRACE_PAD_CTL_SETTING					EQU		0x00002067
IOMUXC_SW_PAD_CTL_GRP_DSE_DDR_SETTING 	EQU 	0x00000000 	;;Nominal Drive Strength for DDR Group Pads
NOR_FLASH_PAD_CTL_SETTING 				EQU		0x00002007
PAD_CTL_NOPULL_INPUT  					EQU		0x00000040	;No Pullups, No Hysteresis, No Keeper
PAD_CTL_PULLUP_INPUT  					EQU		0x000000E0	;100k Pullup, No Hysteresis
PAD_CTL_PULLDW_INPUT					EQU		0x000000C0  ;100k Pull Down, No Hysteresis

	IF :DEF: PROTO_HW
	
;FF1 Board GPIO Settings Used in Boot Only:
;;----------------------------------------------------
;GPIO1
;     GPIO1_24   = KBD_SW_CNTRL    - Output  - HIGH
;     GPIO1_21	 = BT_PWR_EN	   - INPUT   - DISABLE PU/PD
;     GPIO1_20   = CHG_STAT2	   - INPUT   - DISABLE PU/PD
;     GPIO1_19   = CHG_STAT1	   - INPUT   - DISABLE PU/PD
;     GPIO1_13   = RED_LED         - Output  - LOW
;     GPIO1_12   = GREEN_LED       - Output  - LOW
;     GPIO1_8    = CSI_MCLK        - Output  - LOW
;     GPIO1_5    = RED_ILL_CTRL    - Output  - LOW
;     GPIO1_4    = nBT_RESET       - Output  - LOW
;     GPIO1_3    = SHUTDOWN/BANK   - INPUT
;     GPIO1_2    = BOOT_PWR_SEL    - INPUT
;;----------------------------------------------------
GPIO1_DIR_SETTING 	EQU		0x01003130
GPIO1_DR_SETTING	EQU		0x01000000

;;----------------------------------------------------
;GPIO2
;     GPIO2_31    = PWR_ENA        - Output  - LOW
;     GPIO2_21    = BATT_LVL_EN    - Output  - LOW
;     GPIO2_20    = uP_WAKE        - Output  - HIGH
;     GPIO2_19    = CHG_TMR_CTRL   - INPUT   - DISABLE PU/PD
;     GPIO2_18    = CHG_ENABLE     - INPUT   - DISABLE PU/PD
;     GPIO2_17    = ISET2_SEL      - INPUT   - DISABLE PU/PD
;     GPIO2_16    = AUX_PWR_GD     - INPUT   - DISABLE PU/PD
;     GPIO2_15    = HOST_PWR_GD    - INPUT   - DISABLE PU/PD
;     GPIO2_13    = CABLE_SEL1     - INPUT   - DISABLE PU/PD
;     GPIO2_12    = CABLE_SEL0     - INPUT   - DISABLE PU/PD
;;----------------------------------------------------
GPIO2_DIR_SETTING 	EQU		0x80300000
GPIO2_DR_SETTING	EQU		0x00100000

;;----------------------------------------------------
;GPIO3
;     GPIO3_24   = REED_SWITCH     - INPUT   - ENABLE PU
;     GPIO3_23   = FLASH_OUT       - INPUT   - ENABLE PU
;     GPIO3_19   = n232/KBD_OE4    - Output  - HIGH
;     GPIO3_18   = n232/KBD_OE3    - Output  - HIGH
;     GPIO3_17   = n232/KBD_OE2    - Output  - HIGH
;     GPIO3_16   = n232/KBD_OE1    - Output  - HIGH
;     GPIO3_15   = ILL_ON          - Output  - LOW
;     GPIO3_13   = LED_BOOST_PWM   - Output  - LOW
;     GPIO3_12   = AIM_ON          - Output  - LOW
;     GPIO3_11	 = SPI_FLASH_HOLD  - Output  - HIGH
;     GPIO3_10   = HWT5            - INPUT   - ENABLE WEAK PU
;     GPIO3_9    = HWT4            - INPUT   - ENABLE WEAK PU
;     GPIO3_8    = HWT3            - INPUT   - ENABLE WEAK PU
;     GPIO3_7    = HWT2            - INPUT   - ENABLE WEAK PU
;     GPIO3_6    = HWT1            - INPUT   - ENABLE WEAK PU
;     GPIO3_5    = HWT0            - INPUT   - ENABLE WEAK PU
;     GPIO3_4    = KEY_CLK_OUT     - Output  - HIGH
;     GPIO3_3    = nKEY_DATA_IN    - INPUT
;     GPIO3_2    = TERM_CLK_OUT    - Output  - HIGH
;     GPIO3_1    = nTERM_DATA_IN   - INPUT
;     GPIO3_0    = ENG_RESET       - Output  - HIGH
;;----------------------------------------------------
GPIO3_DIR_SETTING 	EQU		0x000FB815
GPIO3_DR_SETTING	EQU		0x000F0815

;;----------------------------------------------------
;GPIO4
;     GPIO4_29   = AIM_CTRL        - Output  - LOW
;     GPIO4_28   = LED_CTRL        - Output  - LOW
;     GPIO4_27   = UART2_TXD       - Output  - HIGH
;     GPIO4_26   = UART2_RXD       - INPUT
;     GPIO4_12   = PS_MODE         - Output  - HIGH
;     GPIO4_11   = VIBRATE         - Output  - LOW
;     GPIO4_10   = BT_READY        - INPUT   - ENABLE PU
;     GPIO4_9    = BT_CMD_DATA     - INPUT   - ENABLE PU
;     GPIO4_8    = BT_HOST_SLEEP   - INPUT   - ENABLE PU
;     GPIO4_7    = BT_HOST_WAKEUP  - INPUT   - ENABLE PU
;     GPIO4_6    = BT_CONNECTED    - INPUT   - ENABLE PU
;     GPIO4_5    = LASER_SHUTOFF   - Output  - HIGH
;     GPIO4_4    = TRIG_uP         - INPUT
;     GPIO4_3    = nBOOT           - INPUT
;;----------------------------------------------------
GPIO4_DIR_SETTING 	EQU		0x38001820
GPIO4_DR_SETTING	EQU		0x08001020

	ELSE

;FF2 Board GPIO Settings Used in Boot Only:
;;----------------------------------------------------
;GPIO1
;      GPIO1_25   = FLASH_WP	    - Output  - LOW
;      GPIO1_24   = nBT_RESET	    - Output  - LOW
;      GPIO1_21   = BT_PWR_EN	    - INPUT   - DISABLE PU/PD
;      GPIO1_8    = CSI_MCLK        - Output  - LOW
;      GPIO1_5    = RED_ILL_CTRL    - Output  - LOW
;      GPIO1_4    = PS_MODE	    - INPUT
;      GPIO1_3    = SHUTDOWN/BANK   - INPUT
;      GPIO1_2    = BOOT_PWR_SEL    - INPUT
;;----------------------------------------------------
GPIO1_DIR_SETTING 	EQU		0x03000120
GPIO1_DR_SETTING	EQU		0x00000000

;;----------------------------------------------------
;GPIO2
;      GPIO2_31    = PWR_ENA        - Output  - LOW
;      GPIO2_21    = BATT_LVL_EN    - Output  - LOW
;      GPIO2_20    = uP_WAKE        - Output  - HIGH
;      GPIO2_12    = KBD_SW_CNTRL   - Output  - HIGH
;;----------------------------------------------------
GPIO2_DIR_SETTING 	EQU		0x80301000
GPIO2_DR_SETTING	EQU		0x80101000

;;----------------------------------------------------
;GPIO3
;      GPIO3_24   = REED_SWITCH     - INPUT   - ENABLE PU
;      GPIO3_23   = FLASH_OUT       - INPUT   - ENABLE PU
;      GPIO3_19   = VIBRATE         - Output  - LOW
;      GPIO3_18   = RED_LED         - Output  - LOW
;      GPIO3_17   = GREEN_LED       - Output  - LOW
;      GPIO3_16   = ISET2_SEL       - Output  - HIGH
;      GPIO3_15   = ILL_ON          - Output  - LOW
;      GPIO3_13   = LED_BOOST_PWM   - Output  - LOW
;      GPIO3_12   = AIM_ON          - Output  - LOW
;      GPIO3_10   = HWT5            - INPUT   - ENABLE PU
;      GPIO3_9    = HWT4            - INPUT   - ENABLE PU
;      GPIO3_8    = HWT3            - INPUT   - ENABLE PU
;      GPIO3_7    = HWT2            - INPUT   - ENABLE PU
;      GPIO3_6    = HWT1            - INPUT   - ENABLE PU
;      GPIO3_5    = HWT0            - INPUT   - ENABLE PU
;      GPIO3_4    = KEY_CLK_OUT     - INPUT   - ENABLE PU
;      GPIO3_3    = nKEY_DATA_IN    - INPUT
;      GPIO3_2    = TERM_CLK_OUT    - INPUT   - ENABLE PU
;      GPIO3_1    = nTERM_DATA_IN   - INPUT
;      GPIO3_0    = ENG_RESET       - Output  - HIGH
;;----------------------------------------------------
GPIO3_DIR_SETTING 	EQU		0x000FB001
GPIO3_DR_SETTING	EQU		0x00010001

;;----------------------------------------------------
;GPIO4
;      GPIO4_29   = AIM_CTRL        - Output  - LOW
;      GPIO4_27   = UART2_TXD       - Output  - HIGH
;      GPIO4_26   = UART2_RXD       - INPUT
;      GPIO4_20   = n232/KBD_OE1    - INPUT
;      GPIO4_19   = n232/KBD_OE2    - INPUT
;      GPIO4_18   = n232/KBD_OE3    - INPUT
;      GPIO4_17   = n232/KBD_OE4    - INPUT
;      GPIO4_16   = HOST_PWR_GD     - INPUT   - ENABLE PU
;      GPIO4_15   = AUX_PWR_GD      - INPUT   - ENABLE PU
;      GPIO4_14   = CHG_STAT1       - INPUT   - ENABLE PU
;      GPIO4_13   = CHG_STAT2       - INPUT   - ENABLE PU
;      GPIO4_12   = nCHG_ENABLE     - INPUT   - ENABLE PU
;      GPIO4_11   = nSPI_FLASH_HOLD - Output  - HIGH
;      GPIO4_10   = BT_READY        - INPUT   - ENABLE PU
;      GPIO4_9    = BT_CMD_DATA     - INPUT   - ENABLE PU
;      GPIO4_8    = BT_HOST_SLEEP   - INPUT   - ENABLE PU
;      GPIO4_7    = BT_HOST_WAKEUP  - INPUT   - ENABLE PU
;      GPIO4_6    = BT_CONNECTED    - INPUT   - ENABLE PU
;      GPIO4_5    = LASER_SHUTOFF   - Output  - HIGH
;      GPIO4_4    = TRIG_uP         - INPUT
;      GPIO4_3    = nBOOT           - INPUT
;;----------------------------------------------------
GPIO4_DIR_SETTING 	EQU		0x28000820
GPIO4_DR_SETTING	EQU		0x08000820

;;----------------------------------------------------------------------
;;----------------------------------------------------------------------

;OEM Board GPIO Settings Used in Boot Only:
;;----------------------------------------------------
;GPIO1
;      GPIO1_25   = FLASH_WP	    - Output  - LOW
;      GPIO1_24   = (OEM None)	    - Output  - LOW
;      GPIO1_21   = (OEM None)	    - INPUT   - DISABLE PU/PD
;      GPIO1_16   = nBEEPER_PWM		- Output  - HIGH (OEM)
;      GPIO1_12   = nGREEN_LED		- Output  - HIGH (OEM)
;      GPIO1_8    = CSI_MCLK        - Output  - LOW
;      GPIO1_5    = (OEM None)    	- Output  - LOW
;      GPIO1_4    = PS_MODE	    	- INPUT	  - (PU on by Default)
;      GPIO1_3    = (OEM None)		- Output  - LOW
;      GPIO1_2    = BOOT_PWR_SEL    - INPUT
;;----------------------------------------------------
GPIO1_DIR_OEM_SETTING 	EQU		0x03011128
GPIO1_DR_OEM_SETTING	EQU		0x00011000

;;----------------------------------------------------
;GPIO2
;      GPIO2_31    = PWR_ENA        - Output  - LOW
;      GPIO2_29    = nSW_TRIG		- Output  - HIGH (OEM)
;      GPIO2_21    = (OEM None)     - Output  - LOW
;      GPIO2_20    = (OEM None)     - Output  - HIGH
;      GPIO2_12    = (OEM None)     - Output  - HIGH
;;----------------------------------------------------
GPIO2_DIR_OEM_SETTING 	EQU		0xA0301000
GPIO2_DR_OEM_SETTING	EQU		0x20101000

;;----------------------------------------------------
;GPIO3
;      GPIO3_31   = PWRDWN/nREADY   - Output  - HIGH (OEM)
;      GPIO3_24   = (OEM None)      - INPUT   - ENABLE PU
;      GPIO3_23   = FLASH_OUT       - INPUT   - ENABLE PU
;      GPIO3_19   = PS_MODE_Buck_Boost - Output  - LOW (OEM)
;      GPIO3_18   = (OEM None)      - Output  - LOW
;      GPIO3_17   = (OEM None)      - Output  - LOW
;      GPIO3_16   = (OEM None)      - Output  - HIGH
;      GPIO3_15   = ILL_ON          - Output  - LOW
;      GPIO3_13   = (OEM None)      - Output  - LOW
;      GPIO3_12   = AIM_ON          - Output  - LOW
;	   GPIO3_11   = uP_WAKE			- Output  - HIGH (OEM)
;      GPIO3_10   = HWT5            - INPUT   - ENABLE PU
;      GPIO3_9    = HWT4            - INPUT   - ENABLE PU
;      GPIO3_8    = HWT3            - INPUT   - ENABLE PU
;      GPIO3_7    = HWT2            - INPUT   - ENABLE PU
;      GPIO3_6    = HWT1            - INPUT   - ENABLE PU
;      GPIO3_5    = HWT0            - INPUT   - ENABLE PU
;      GPIO3_4    = (OEM None)      - INPUT   - ENABLE PU
;      GPIO3_3    = nTRIG_uP	    - INPUT	  - (PU on by Default)
;      GPIO3_2    = (OEM None)      - INPUT   - ENABLE PU
;      GPIO3_1    = (OEM None)      - INPUT	  - (PU on by Default)
;      GPIO3_0    = ENG_RESET       - Output  - LOW (OEM)
;;----------------------------------------------------
GPIO3_DIR_OEM_SETTING 	EQU		0x800FB801
GPIO3_DR_OEM_SETTING	EQU		0x80010800

;;----------------------------------------------------
;GPIO4
;      GPIO4_29   = UART1_POL       - Output  - HIGH (OEM)
;      GPIO4_27   = (OEM None)      - Output  - HIGH
;      GPIO4_26   = (OEM None)       - INPUT  - (PU on by Default)
;      GPIO4_20   = (OEM None)      - Output  - LOW
;      GPIO4_19   = (OEM None)      - Output  - LOW
;      GPIO4_18   = (OEM None)      - Output  - LOW
;      GPIO4_17   = (OEM None)      - Output  - LOW
;      GPIO4_16   = (OEM None)    	- INPUT   - ENABLE PU
;      GPIO4_15   = (OEM None)      - INPUT   - ENABLE PU
;      GPIO4_14   = (OEM None)      - INPUT   - ENABLE PU
;      GPIO4_13   = (OEM None)      - INPUT   - ENABLE PU
;      GPIO4_12   = (OEM None)    	- INPUT   - ENABLE PU
;      GPIO4_11   = nSPI_FLASH_HOLD - Output  - HIGH
;      GPIO4_10   = (OEM None)      - INPUT   - ENABLE PU
;      GPIO4_9    = (OEM None)      - INPUT   - ENABLE PU
;      GPIO4_8    = (OEM None)   	- INPUT   - ENABLE PU
;      GPIO4_7    = (OEM None)  	- INPUT   - ENABLE PU
;      GPIO4_6    = (OEM None)    	- INPUT   - ENABLE PU
;      GPIO4_5    = (OEM None)   	- Output  - HIGH
;      GPIO4_4    = (OEM None)      - Output  - LOW
;      GPIO4_3    = nBOOT           - INPUT
;;----------------------------------------------------
GPIO4_DIR_OEM_SETTING 	EQU		0x281E0830
GPIO4_DR_OEM_SETTING	EQU		0x28000820

	ENDIF ;
	
	END

