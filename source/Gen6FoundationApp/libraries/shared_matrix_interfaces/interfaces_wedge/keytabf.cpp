/* ==============================================================================
   CPP Wedge Engine: Terminal property and ASCII to Key translation tables
   ==============================================================================

   $RCSfile: interfaces_wedge/keytabf.cpp $
   $Revision: 2.11 $
   $Date: 2011/02/15 06:27:10EST $

   ==============================================================================

   ============================================================================== */
/* ==============================================================================
   Use the Windows ANSI code page (CP1252) to view this file!
	This file is automatically produced by Forkey32 - 4.6.0.14
	Source Name     : J:\forkey4\files\MATRIX.KLF
	Destination Name: J:\forkey4\NewDatabaseCPP\keytabf.CPP

	Date: Tue Feb 15 08:51:10 2011

   ============================================================================== */

#define KEYBOARD_TABLE_VERSION 100	/* This version gets changed when table structure changes */

/* Format version history: */
/* 100 Initial release */
#include "stdInclude.h"
/* This single include file allows for adding you special requirements */
#include "termtabl.h"


/* Here we test whether the format versions match */
#if (KEYBOARD_PRG_VERSION != KEYBOARD_TABLE_VERSION)
#error "Keyboard tables do have the wrong version"
#endif

/******************************************************/
/* Keynum to scancode translation tables              */
/******************************************************/

extern const CScancodeSequence seq_IBM_SET2_SCAN[] =
{
/*   124 */		 10, 	124, { 0xE0, 0x12, 0xE0, 0x7C, 0xE0, 0xF0, 0x7C, 0xE0, 0xF0, 0x12 },
/*   126 */		  8, 	126, { 0xE1, 0x14, 0x77, 0xE1, 0xF0, 0x14, 0xF0, 0x77 },
	0
};

extern const CScancodes IBM_SET2_SCAN =
{
	/* sequence info		*/	seq_IBM_SET2_SCAN,
	/* max used key		*/	149,
	/* extension			*/	0xe0,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x0E, 0,
	/*   2 					*/	0x16, 0,
	/*   3 					*/	0x1E, 0,
	/*   4 					*/	0x26, 0,
	/*   5 					*/	0x25, 0,
	/*   6 					*/	0x2E, 0,
	/*   7 					*/	0x36, 0,
	/*   8 					*/	0x3D, 0,
	/*   9 					*/	0x3E, 0,
	/*  10 					*/	0x46, 0,
	/*  11 					*/	0x45, 0,
	/*  12 					*/	0x4E, 0,
	/*  13 					*/	0x55, 0,
	/*  14 					*/	0x6A, 0,
	/*  15 					*/	0x66, 0,
	/*  16 					*/	0x0D, 0,
	/*  17 					*/	0x15, 0,
	/*  18 					*/	0x1D, 0,
	/*  19 					*/	0x24, 0,
	/*  20 					*/	0x2D, 0,
	/*  21 					*/	0x2C, 0,
	/*  22 					*/	0x35, 0,
	/*  23 					*/	0x3C, 0,
	/*  24 					*/	0x43, 0,
	/*  25 					*/	0x44, 0,
	/*  26 					*/	0x4D, 0,
	/*  27 					*/	0x54, 0,
	/*  28 					*/	0x5B, 0,
	/*  29 					*/	0x5D, 0,
	/*  30 					*/	0x58, KN_COMMUNICATION,
	/*  31 					*/	0x1C, 0,
	/*  32 					*/	0x1B, 0,
	/*  33 					*/	0x23, 0,
	/*  34 					*/	0x2B, 0,
	/*  35 					*/	0x34, 0,
	/*  36 					*/	0x33, 0,
	/*  37 					*/	0x3B, 0,
	/*  38 					*/	0x42, 0,
	/*  39 					*/	0x4B, 0,
	/*  40 					*/	0x4C, 0,
	/*  41 					*/	0x52, 0,
	/*  42 					*/	0x5D, 0,
	/*  43 					*/	0x5A, 0,
	/*  44 					*/	0x12, KN_COMMUNICATION,
	/*  45 					*/	0x61, 0,
	/*  46 					*/	0x1A, 0,
	/*  47 					*/	0x22, 0,
	/*  48 					*/	0x21, 0,
	/*  49 					*/	0x2A, 0,
	/*  50 					*/	0x32, 0,
	/*  51 					*/	0x31, 0,
	/*  52 					*/	0x3A, 0,
	/*  53 					*/	0x41, 0,
	/*  54 					*/	0x49, 0,
	/*  55 					*/	0x4A, 0,
	/*  56 					*/	0x51, 0,
	/*  57 					*/	0x59, KN_COMMUNICATION,
	/*  58 					*/	0x14, KN_COMMUNICATION,
	/*  59 					*/	0x1F, KN_EXTENDED,
	/*  60 					*/	0x11, 0,
	/*  61 					*/	0x29, 0,
	/*  62 					*/	0x11, KN_EXTENDED,
	/*  63 					*/	0x27, KN_EXTENDED,
	/*  64 					*/	0x14, KN_EXTENDED|KN_COMMUNICATION,
	/*  65 					*/	0x06, 0,
	/*  66 					*/	0x0C, 0,
	/*  67 					*/	0x0B, 0,
	/*  68 					*/	0x0A, 0,
	/*  69 					*/	0x09, 0,
	/*  70 					*/	0x05, 0,
	/*  71 					*/	0x04, 0,
	/*  72 					*/	0x03, 0,
	/*  73 					*/	0x83, 0,
	/*  74 					*/	0x01, 0,
	/*  75 					*/	0x70, KN_EXTENDED,
	/*  76 					*/	0x71, KN_EXTENDED,
	/*  77 					*/	0x2F, KN_EXTENDED,
	/*  78 					*/	0x6B, KN_EXTENDED,
	/*  79 					*/	0x6B, KN_EXTENDED,
	/*  80 					*/	0x6C, KN_EXTENDED,
	/*  81 					*/	0x69, KN_EXTENDED,
	/*  82 					*/	0x75, KN_EXTENDED,
	/*  83 					*/	0x75, KN_EXTENDED,
	/*  84 					*/	0x72, KN_EXTENDED,
	/*  85 					*/	0x7D, KN_EXTENDED,
	/*  86 					*/	0x7A, KN_EXTENDED,
	/*  87 Empty			*/	0x00, 0,
	/*  88 					*/	0x74, KN_EXTENDED,
	/*  89 					*/	0x74, KN_EXTENDED,
	/*  90 					*/	0x77, KN_COMMUNICATION,
	/*  91 					*/	0x6C, 0,
	/*  92 					*/	0x6B, 0,
	/*  93 					*/	0x69, 0,
	/*  94 					*/	0x68, 0,
	/*  95 					*/	0x4A, KN_EXTENDED,
	/*  96 					*/	0x75, 0,
	/*  97 					*/	0x73, 0,
	/*  98 					*/	0x72, 0,
	/*  99 					*/	0x70, 0,
	/* 100 					*/	0x7C, 0,
	/* 101 					*/	0x7D, 0,
	/* 102 					*/	0x74, 0,
	/* 103 					*/	0x7A, 0,
	/* 104 					*/	0x71, 0,
	/* 105 					*/	0x7B, 0,
	/* 106 					*/	0x79, 0,
	/* 107 					*/	0x6D, 0,
	/* 108 					*/	0x5A, KN_EXTENDED,
	/* 109 					*/	0x78, 0,
	/* 110 					*/	0x76, 0,
	/* 111 Empty			*/	0x00, 0,
	/* 112 					*/	0x05, 0,
	/* 113 					*/	0x06, 0,
	/* 114 					*/	0x04, 0,
	/* 115 					*/	0x0C, 0,
	/* 116 					*/	0x03, 0,
	/* 117 					*/	0x0B, 0,
	/* 118 					*/	0x83, 0,
	/* 119 					*/	0x0A, 0,
	/* 120 					*/	0x01, 0,
	/* 121 					*/	0x09, 0,
	/* 122 					*/	0x78, 0,
	/* 123 					*/	0x07, 0,
	/* 124 Sequence		*/	0xE0, KN_SEQUENCE,
	/* 125 					*/	0x7E, 0,
	/* 126 Sequence		*/	0xE0, KN_SEQUENCE,
	/* 127 					*/	0x08, 0,
	/* 128 					*/	0x10, 0,
	/* 129 					*/	0x18, 0,
	/* 130 					*/	0x20, 0,
	/* 131 					*/	0x28, 0,
	/* 132 					*/	0x30, 0,
	/* 133 					*/	0x38, 0,
	/* 134 					*/	0x40, 0,
	/* 135 					*/	0x48, 0,
	/* 136 					*/	0x50, 0,
	/* 137 Empty			*/	0x00, 0,
	/* 138 Empty			*/	0x00, 0,
	/* 139 Empty			*/	0x00, 0,
	/* 140 Virtual 		*/	0x11, 0,
	/* 141 Virtual 		*/	0x11, 0,
	/* 142 Virtual 		*/	0x14, 0,
	/* 143 Virtual 		*/	0x14, 0,
	/* 144 Empty			*/	0x00, 0,
	/* 145 Empty			*/	0x00, 0,
	/* 146 Empty			*/	0x00, 0,
	/* 147 					*/	0x67, 0,
	/* 148 					*/	0x13, KN_COMMUNICATION,	                   // manually added COMMUNICATION KEY
	/* 149 					*/	0x64, 0,
};

extern const CScancodeSequence seq_IBM_SET1_SCAN[] =
{
/*   124 */		  8, 	124, { 0xE0, 0x2A, 0xE0, 0x37, 0xE0, 0xB7, 0xE0, 0xAA },
/*   126 */		  6, 	126, { 0xE1, 0x1D, 0x45, 0xE1, 0x9D, 0xC5 },
	0
};

extern const CScancodes IBM_SET1_SCAN =
{
	/* sequence info		*/	seq_IBM_SET1_SCAN,
	/* max used key		*/	149,
	/* extension			*/	0xe0,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x29, 0,
	/*   2 					*/	0x02, 0,
	/*   3 					*/	0x03, 0,
	/*   4 					*/	0x04, 0,
	/*   5 					*/	0x05, 0,
	/*   6 					*/	0x06, 0,
	/*   7 					*/	0x07, 0,
	/*   8 					*/	0x08, 0,
	/*   9 					*/	0x09, 0,
	/*  10 					*/	0x0A, 0,
	/*  11 					*/	0x0B, 0,
	/*  12 					*/	0x0C, 0,
	/*  13 					*/	0x0D, 0,
	/*  14 					*/	0x7D, 0,
	/*  15 					*/	0x0E, 0,
	/*  16 					*/	0x0F, 0,
	/*  17 					*/	0x10, 0,
	/*  18 					*/	0x11, 0,
	/*  19 					*/	0x12, 0,
	/*  20 					*/	0x13, 0,
	/*  21 					*/	0x14, 0,
	/*  22 					*/	0x15, 0,
	/*  23 					*/	0x16, 0,
	/*  24 					*/	0x17, 0,
	/*  25 					*/	0x18, 0,
	/*  26 					*/	0x19, 0,
	/*  27 					*/	0x1A, 0,
	/*  28 					*/	0x1B, 0,
	/*  29 					*/	0x2B, 0,
	/*  30 					*/	0x3A, KN_COMMUNICATION,
	/*  31 					*/	0x1E, 0,
	/*  32 					*/	0x1F, 0,
	/*  33 					*/	0x20, 0,
	/*  34 					*/	0x21, 0,
	/*  35 					*/	0x22, 0,
	/*  36 					*/	0x23, 0,
	/*  37 					*/	0x24, 0,
	/*  38 					*/	0x25, 0,
	/*  39 					*/	0x26, 0,
	/*  40 					*/	0x27, 0,
	/*  41 					*/	0x28, 0,
	/*  42 					*/	0x2B, 0,
	/*  43 					*/	0x1C, 0,
	/*  44 					*/	0x2A, KN_COMMUNICATION,
	/*  45 					*/	0x56, 0,
	/*  46 					*/	0x2C, 0,
	/*  47 					*/	0x2D, 0,
	/*  48 					*/	0x2E, 0,
	/*  49 					*/	0x2F, 0,
	/*  50 					*/	0x30, 0,
	/*  51 					*/	0x31, 0,
	/*  52 					*/	0x32, 0,
	/*  53 					*/	0x33, 0,
	/*  54 					*/	0x34, 0,
	/*  55 					*/	0x35, 0,
	/*  56 					*/	0x73, 0,
	/*  57 					*/	0x36, KN_COMMUNICATION,
	/*  58 					*/	0x1D, KN_COMMUNICATION,
	/*  59 					*/	0x5B, KN_EXTENDED,
	/*  60 					*/	0x38, 0,
	/*  61 					*/	0x39, 0,
	/*  62 					*/	0x38, KN_EXTENDED,
	/*  63 					*/	0x5C, KN_EXTENDED,
	/*  64 					*/	0x1D, KN_EXTENDED|KN_COMMUNICATION,
	/*  65 Empty			*/	0x00, 0,
	/*  66 Empty			*/	0x00, 0,
	/*  67 Empty			*/	0x00, 0,
	/*  68 Empty			*/	0x00, 0,
	/*  69 Empty			*/	0x00, 0,
	/*  70 Empty			*/	0x00, 0,
	/*  71 Empty			*/	0x00, 0,
	/*  72 Empty			*/	0x00, 0,
	/*  73 Empty			*/	0x00, 0,
	/*  74 Empty			*/	0x00, 0,
	/*  75 					*/	0x52, KN_EXTENDED,
	/*  76 					*/	0x53, KN_EXTENDED,
	/*  77 					*/	0x5D, KN_EXTENDED,
	/*  78 Empty			*/	0x00, 0,
	/*  79 					*/	0x4B, KN_EXTENDED,
	/*  80 					*/	0x47, KN_EXTENDED,
	/*  81 					*/	0x4F, KN_EXTENDED,
	/*  82 Empty			*/	0x00, 0,
	/*  83 					*/	0x48, KN_EXTENDED,
	/*  84 					*/	0x50, KN_EXTENDED,
	/*  85 					*/	0x49, KN_EXTENDED,
	/*  86 					*/	0x51, KN_EXTENDED,
	/*  87 Empty			*/	0x00, 0,
	/*  88 Empty			*/	0x00, 0,
	/*  89 					*/	0x4D, KN_EXTENDED,
	/*  90 					*/	0x45, KN_COMMUNICATION,
	/*  91 					*/	0x47, 0,
	/*  92 					*/	0x4B, 0,
	/*  93 					*/	0x4F, 0,
	/*  94 Empty			*/	0x00, 0,
	/*  95 					*/	0x35, KN_EXTENDED,
	/*  96 					*/	0x48, 0,
	/*  97 					*/	0x4C, 0,
	/*  98 					*/	0x50, 0,
	/*  99 					*/	0x52, 0,
	/* 100 					*/	0x37, 0,
	/* 101 					*/	0x49, 0,
	/* 102 					*/	0x4D, 0,
	/* 103 					*/	0x51, 0,
	/* 104 					*/	0x53, 0,
	/* 105 					*/	0x4A, 0,
	/* 106 					*/	0x4E, 0,
	/* 107 					*/	0x7E, 0,
	/* 108 					*/	0x1C, KN_EXTENDED,
	/* 109 Empty			*/	0x00, 0,
	/* 110 					*/	0x01, 0,
	/* 111 Empty			*/	0x00, 0,
	/* 112 					*/	0x3B, 0,
	/* 113 					*/	0x3C, 0,
	/* 114 					*/	0x3D, 0,
	/* 115 					*/	0x3E, 0,
	/* 116 					*/	0x3F, 0,
	/* 117 					*/	0x40, 0,
	/* 118 					*/	0x41, 0,
	/* 119 					*/	0x42, 0,
	/* 120 					*/	0x43, 0,
	/* 121 					*/	0x44, 0,
	/* 122 					*/	0x57, 0,
	/* 123 					*/	0x58, 0,
	/* 124 Sequence		*/	0xE0, KN_SEQUENCE,
	/* 125 					*/	0x46, 0,
	/* 126 Sequence		*/	0xE0, KN_SEQUENCE,
	/* 127 Empty			*/	0x00, 0,
	/* 128 Empty			*/	0x00, 0,
	/* 129 Empty			*/	0x00, 0,
	/* 130 Empty			*/	0x00, 0,
	/* 131 Empty			*/	0x00, 0,
	/* 132 Empty			*/	0x00, 0,
	/* 133 Empty			*/	0x00, 0,
	/* 134 Empty			*/	0x00, 0,
	/* 135 Empty			*/	0x00, 0,
	/* 136 Empty			*/	0x00, 0,
	/* 137 Empty			*/	0x00, 0,
	/* 138 Empty			*/	0x00, 0,
	/* 139 Empty			*/	0x00, 0,
	/* 140 Virtual 		*/	0x38, 0,
	/* 141 Virtual 		*/	0x38, 0,
	/* 142 Virtual 		*/	0x1D, 0,
	/* 143 Virtual 		*/	0x1D, 0,
	/* 144 Empty			*/	0x00, 0,
	/* 145 Empty			*/	0x00, 0,
	/* 146 Empty			*/	0x00, 0,
	/* 147 					*/	0x7B, 0,
	/* 148 					*/	0x79, KN_COMMUNICATION,	                   // manually added COMMUNICATION KEY
	/* 149 					*/	0x70, 0,
};

extern const CScancodeSequence seq_IBM_XT_SCAN[] =
{
/* i 124 */		  8, 	124, { 0xE0, 0x2A, 0xE0, 0x37, 0xE0, 0xB7, 0xE0, 0xAA },
/* i 126 */		  6, 	126, { 0xE1, 0x1D, 0x45, 0xE1, 0x9D, 0xC5 },
	0
};

extern const CScancodes IBM_XT_SCAN =
{
	/* sequence info		*/	seq_IBM_XT_SCAN,
	/* max used key		*/	149,
	/* extension			*/	0xe0,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x29, 0,
	/*   2 					*/	0x02, 0,
	/*   3 					*/	0x03, 0,
	/*   4 					*/	0x04, 0,
	/*   5 					*/	0x05, 0,
	/*   6 					*/	0x06, 0,
	/*   7 					*/	0x07, 0,
	/*   8 					*/	0x08, 0,
	/*   9 					*/	0x09, 0,
	/*  10 					*/	0x0A, 0,
	/*  11 					*/	0x0B, 0,
	/*  12 					*/	0x0C, 0,
	/*  13 					*/	0x0D, 0,
	/*  14 					*/	0x7D, 0,
	/*  15 					*/	0x0E, 0,
	/*  16 					*/	0x0F, 0,
	/*  17 					*/	0x10, 0,
	/*  18 					*/	0x11, 0,
	/*  19 					*/	0x12, 0,
	/*  20 					*/	0x13, 0,
	/*  21 					*/	0x14, 0,
	/*  22 					*/	0x15, 0,
	/*  23 					*/	0x16, 0,
	/*  24 					*/	0x17, 0,
	/*  25 					*/	0x18, 0,
	/*  26 					*/	0x19, 0,
	/*  27 					*/	0x1A, 0,
	/*  28 					*/	0x1B, 0,
	/*  29 					*/	0x2B, 0,
	/*  30 					*/	0x3A, KN_COMMUNICATION,
	/*  31 					*/	0x1E, 0,
	/*  32 					*/	0x1F, 0,
	/*  33 					*/	0x20, 0,
	/*  34 					*/	0x21, 0,
	/*  35 					*/	0x22, 0,
	/*  36 					*/	0x23, 0,
	/*  37 					*/	0x24, 0,
	/*  38 					*/	0x25, 0,
	/*  39 					*/	0x26, 0,
	/*  40 					*/	0x27, 0,
	/*  41 					*/	0x28, 0,
	/*  42 					*/	0x29, 0,
	/*  43 					*/	0x1C, 0,
	/*  44 					*/	0x2A, KN_COMMUNICATION,
	/*  45 					*/	0x2B, 0,
	/*  46 					*/	0x2C, 0,
	/*  47 					*/	0x2D, 0,
	/*  48 					*/	0x2E, 0,
	/*  49 					*/	0x2F, 0,
	/*  50 					*/	0x30, 0,
	/*  51 					*/	0x31, 0,
	/*  52 					*/	0x32, 0,
	/*  53 					*/	0x33, 0,
	/*  54 					*/	0x34, 0,
	/*  55 					*/	0x35, 0,
	/*  56 					*/	0x73, 0,
	/*  57 					*/	0x36, KN_COMMUNICATION,
	/*  58 					*/	0x1D, KN_COMMUNICATION,
	/*  59 					*/	0x5B, KN_EXTENDED,
	/*  60 					*/	0x38, 0,
	/*  61 					*/	0x39, 0,
	/*  62 					*/	0x38, KN_EXTENDED,
	/*  63 					*/	0x5C, KN_EXTENDED,
	/*  64 					*/	0x1D, KN_EXTENDED|KN_COMMUNICATION,
	/*  65 Empty			*/	0x00, 0,
	/*  66 Empty			*/	0x00, 0,
	/*  67 Empty			*/	0x00, 0,
	/*  68 Empty			*/	0x00, 0,
	/*  69 Empty			*/	0x00, 0,
	/*  70 Empty			*/	0x00, 0,
	/*  71 Empty			*/	0x00, 0,
	/*  72 Empty			*/	0x00, 0,
	/*  73 Empty			*/	0x00, 0,
	/*  74 Empty			*/	0x00, 0,
	/*  75 					*/	0x52, KN_EXTENDED,
	/*  76 					*/	0x53, KN_EXTENDED,
	/*  77 					*/	0x5D, KN_EXTENDED,
	/*  78 Empty			*/	0x00, 0,
	/*  79 					*/	0x4B, KN_EXTENDED,
	/*  80 					*/	0x47, KN_EXTENDED,
	/*  81 					*/	0x4F, KN_EXTENDED,
	/*  82 Empty			*/	0x00, 0,
	/*  83 					*/	0x48, KN_EXTENDED,
	/*  84 					*/	0x50, KN_EXTENDED,
	/*  85 					*/	0x49, KN_EXTENDED,
	/*  86 					*/	0x51, KN_EXTENDED,
	/*  87 Empty			*/	0x00, 0,
	/*  88 Empty			*/	0x00, 0,
	/*  89 					*/	0x4D, KN_EXTENDED,
	/*  90 					*/	0x45, KN_COMMUNICATION,
	/*  91 					*/	0x47, 0,
	/*  92 					*/	0x4B, 0,
	/*  93 					*/	0x4F, 0,
	/*  94 Empty			*/	0x00, 0,
	/*  95 					*/	0x35, KN_EXTENDED,
	/*  96 					*/	0x48, 0,
	/*  97 					*/	0x4C, 0,
	/*  98 					*/	0x50, 0,
	/*  99 					*/	0x52, 0,
	/* 100 					*/	0x37, 0,
	/* 101 					*/	0x49, 0,
	/* 102 					*/	0x4D, 0,
	/* 103 					*/	0x51, 0,
	/* 104 					*/	0x53, 0,
	/* 105 					*/	0x4A, 0,
	/* 106 					*/	0x4E, 0,
	/* 107 					*/	0x7E, 0,
	/* 108 					*/	0x1C, KN_EXTENDED,
	/* 109 Empty			*/	0x00, 0,
	/* 110 					*/	0x01, 0,
	/* 111 Empty			*/	0x00, 0,
	/* 112 					*/	0x3B, 0,
	/* 113 					*/	0x3C, 0,
	/* 114 					*/	0x3D, 0,
	/* 115 					*/	0x3E, 0,
	/* 116 					*/	0x3F, 0,
	/* 117 					*/	0x40, 0,
	/* 118 					*/	0x41, 0,
	/* 119 					*/	0x42, 0,
	/* 120 					*/	0x43, 0,
	/* 121 					*/	0x44, 0,
	/* 122 					*/	0x57, 0,
	/* 123 					*/	0x58, 0,
	/* 124 Sequence		*/	0xE0, KN_SEQUENCE,
	/* 125 					*/	0x46, 0,
	/* 126 Sequence		*/	0xE0, KN_SEQUENCE,
	/* 127 Empty			*/	0x00, 0,
	/* 128 Empty			*/	0x00, 0,
	/* 129 Empty			*/	0x00, 0,
	/* 130 Empty			*/	0x00, 0,
	/* 131 Empty			*/	0x00, 0,
	/* 132 Empty			*/	0x00, 0,
	/* 133 Empty			*/	0x00, 0,
	/* 134 Empty			*/	0x00, 0,
	/* 135 Empty			*/	0x00, 0,
	/* 136 Empty			*/	0x00, 0,
	/* 137 Empty			*/	0x00, 0,
	/* 138 Empty			*/	0x00, 0,
	/* 139 Empty			*/	0x00, 0,
	/* 140 Virtual 		*/	0x38, 0,
	/* 141 Virtual 		*/	0x38, 0,
	/* 142 Virtual 		*/	0x1D, 0,
	/* 143 Virtual 		*/	0x1D, 0,
	/* 144 Empty			*/	0x00, 0,
	/* 145 Empty			*/	0x00, 0,
	/* 146 Empty			*/	0x00, 0,
	/* 147 					*/	0x7B, 0,
	/* 148 					*/	0x79, KN_COMMUNICATION,	                   // manually added COMMUNICATION KEY
	/* 149 					*/	0x70, 0,
};

extern const CScancodes DEC_VT510_LK411_SCAN =
{
	/* no sequence info	*/	NULL,
	/* max used key		*/	143,
	/* extension			*/	0x00,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x08, 0,
	/*   2 					*/	0x16, 0,
	/*   3 					*/	0x1E, 0,
	/*   4 					*/	0x26, 0,
	/*   5 					*/	0x25, 0,
	/*   6 					*/	0x2E, 0,
	/*   7 					*/	0x36, 0,
	/*   8 					*/	0x3D, 0,
	/*   9 					*/	0x3E, 0,
	/*  10 					*/	0x46, 0,
	/*  11 					*/	0x45, 0,
	/*  12 					*/	0x4E, 0,
	/*  13 					*/	0x55, 0,
	/*  14 					*/	0x5D, 0,
	/*  15 					*/	0x66, 0,
	/*  16 					*/	0x0D, 0,
	/*  17 					*/	0x15, 0,
	/*  18 					*/	0x1D, 0,
	/*  19 					*/	0x24, 0,
	/*  20 					*/	0x2D, 0,
	/*  21 					*/	0x2C, 0,
	/*  22 					*/	0x35, 0,
	/*  23 					*/	0x3C, 0,
	/*  24 					*/	0x43, 0,
	/*  25 					*/	0x44, 0,
	/*  26 					*/	0x4D, 0,
	/*  27 					*/	0x54, 0,
	/*  28 					*/	0x5B, 0,
	/*  29 					*/	0x5C, 0,
	/*  30 					*/	0x14, KN_COMMUNICATION,
	/*  31 					*/	0x1C, 0,
	/*  32 					*/	0x1B, 0,
	/*  33 					*/	0x23, 0,
	/*  34 					*/	0x2B, 0,
	/*  35 					*/	0x34, 0,
	/*  36 					*/	0x33, 0,
	/*  37 					*/	0x3B, 0,
	/*  38 					*/	0x42, 0,
	/*  39 					*/	0x4B, 0,
	/*  40 					*/	0x4C, 0,
	/*  41 					*/	0x52, 0,
	/*  42 					*/	0x53, 0,
	/*  43 					*/	0x5A, 0,
	/*  44 					*/	0x12, KN_COMMUNICATION,
	/*  45 					*/	0x0E, 0,
	/*  46 					*/	0x1A, 0,
	/*  47 					*/	0x22, 0,
	/*  48 					*/	0x21, 0,
	/*  49 					*/	0x2A, 0,
	/*  50 					*/	0x32, 0,
	/*  51 					*/	0x31, 0,
	/*  52 					*/	0x3A, 0,
	/*  53 					*/	0x41, 0,
	/*  54 					*/	0x49, 0,
	/*  55 					*/	0x4A, 0,
	/*  56 					*/	0x51, 0,
	/*  57 					*/	0x59, KN_COMMUNICATION,
	/*  58 					*/	0x11, KN_COMMUNICATION,
	/*  59 					*/	0x28, 0,
	/*  60 					*/	0x19, 0,
	/*  61 					*/	0x29, 0,
	/*  62 					*/	0x39, 0,
	/*  63 					*/	0x58, 0,
	/*  64 					*/	0x58, KN_COMMUNICATION,
	/*  65 					*/	0x06, 0,
	/*  66 					*/	0x0C, 0,
	/*  67 					*/	0x0B, 0,
	/*  68 					*/	0x0A, 0,
	/*  69 					*/	0x09, 0,
	/*  70 					*/	0x05, 0,
	/*  71 					*/	0x04, 0,
	/*  72 					*/	0x03, 0,
	/*  73 					*/	0x83, 0,
	/*  74 					*/	0x01, 0,
	/*  75 					*/	0x6E, 0,
	/*  76 					*/	0x65, 0,
	/*  77 					*/	0x8D, 0,
	/*  78 Empty			*/	0x00, 0,
	/*  79 					*/	0x61, 0,
	/*  80 					*/	0x67, 0,
	/*  81 					*/	0x6F, 0,
	/*  82 					*/	0x62, 0,
	/*  83 					*/	0x63, 0,
	/*  84 					*/	0x60, 0,
	/*  85 					*/	0x64, 0,
	/*  86 					*/	0x6D, 0,
	/*  87 Empty			*/	0x00, 0,
	/*  88 Empty			*/	0x00, 0,
	/*  89 					*/	0x6A, 0,
	/*  90 					*/	0x76, KN_COMMUNICATION,
	/*  91 					*/	0x6C, 0,
	/*  92 					*/	0x6B, 0,
	/*  93 					*/	0x69, 0,
	/*  94 					*/	0x68, 0,
	/*  95 					*/	0x77, 0,
	/*  96 					*/	0x75, 0,
	/*  97 					*/	0x73, 0,
	/*  98 					*/	0x72, 0,
	/*  99 					*/	0x70, 0,
	/* 100 					*/	0x7E, 0,
	/* 101 					*/	0x7D, 0,
	/* 102 					*/	0x74, 0,
	/* 103 					*/	0x7A, 0,
	/* 104 					*/	0x71, 0,
	/* 105 					*/	0x84, 0,
	/* 106 					*/	0x13, 0,
	/* 107 					*/	0x7C, 0,
	/* 108 					*/	0x79, 0,
	/* 109 					*/	0x78, 0,
	/* 110 Empty			*/	0x00, 0,
	/* 111 Empty			*/	0x00, 0,
	/* 112 					*/	0x07, 0,
	/* 113 					*/	0x0F, 0,
	/* 114 					*/	0x17, 0,
	/* 115 					*/	0x1F, 0,
	/* 116 					*/	0x27, 0,
	/* 117 					*/	0x2F, 0,
	/* 118 					*/	0x37, 0,
	/* 119 					*/	0x3F, 0,
	/* 120 					*/	0x47, 0,
	/* 121 					*/	0x4F, 0,
	/* 122 					*/	0x56, 0,
	/* 123 					*/	0x5E, 0,
	/* 124 					*/	0x09, 0,
	/* 125 					*/	0x0A, 0,
	/* 126 					*/	0x0B, 0,
	/* 127 					*/	0x0C, 0,
	/* 128 					*/	0x10, 0,
	/* 129 					*/	0x18, 0,
	/* 130 					*/	0x10, 0,
	/* 131 					*/	0x57, 0,
	/* 132 					*/	0x5F, 0,
	/* 133 					*/	0x62, 0,
	/* 134 					*/	0x40, 0,
	/* 135 					*/	0x48, 0,
	/* 136 					*/	0x50, 0,
	/* 137 Empty			*/	0x00, 0,
	/* 138 Empty			*/	0x00, 0,
	/* 139 Empty			*/	0x00, 0,
	/* 140 Virtual 		*/	0x19, 0,
	/* 141 Virtual 		*/	0x19, 0,
	/* 142 Virtual 		*/	0x11, 0,
	/* 143 Virtual 		*/	0x11, 0,
};

extern const CScancodes IBM_SET3_SCAN =
{
	/* no sequence info	*/	NULL,
	/* max used key		*/	143,
	/* extension			*/	0x00,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x0E, 0,
	/*   2 					*/	0x16, 0,
	/*   3 					*/	0x1E, 0,
	/*   4 					*/	0x26, 0,
	/*   5 					*/	0x25, 0,
	/*   6 					*/	0x2E, 0,
	/*   7 					*/	0x36, 0,
	/*   8 					*/	0x3D, 0,
	/*   9 					*/	0x3E, 0,
	/*  10 					*/	0x46, 0,
	/*  11 					*/	0x45, 0,
	/*  12 					*/	0x4E, 0,
	/*  13 					*/	0x55, 0,
	/*  14 					*/	0x5D, 0,
	/*  15 					*/	0x66, 0,
	/*  16 					*/	0x0D, 0,
	/*  17 					*/	0x15, 0,
	/*  18 					*/	0x1D, 0,
	/*  19 					*/	0x24, 0,
	/*  20 					*/	0x2D, 0,
	/*  21 					*/	0x2C, 0,
	/*  22 					*/	0x35, 0,
	/*  23 					*/	0x3C, 0,
	/*  24 					*/	0x43, 0,
	/*  25 					*/	0x44, 0,
	/*  26 					*/	0x4D, 0,
	/*  27 					*/	0x54, 0,
	/*  28 					*/	0x5B, 0,
	/*  29 					*/	0x5C, 0,
	/*  30 					*/	0x14, KN_COMMUNICATION,
	/*  31 					*/	0x1C, 0,
	/*  32 					*/	0x1B, 0,
	/*  33 					*/	0x23, 0,
	/*  34 					*/	0x2B, 0,
	/*  35 					*/	0x34, 0,
	/*  36 					*/	0x33, 0,
	/*  37 					*/	0x3B, 0,
	/*  38 					*/	0x42, 0,
	/*  39 					*/	0x4B, 0,
	/*  40 					*/	0x4C, 0,
	/*  41 					*/	0x52, 0,
	/*  42 					*/	0x53, 0,
	/*  43 					*/	0x5A, 0,
	/*  44 					*/	0x12, KN_COMMUNICATION,
	/*  45 					*/	0x13, 0,
	/*  46 					*/	0x1A, 0,
	/*  47 					*/	0x22, 0,
	/*  48 					*/	0x21, 0,
	/*  49 					*/	0x2A, 0,
	/*  50 					*/	0x32, 0,
	/*  51 					*/	0x31, 0,
	/*  52 					*/	0x3A, 0,
	/*  53 					*/	0x41, 0,
	/*  54 					*/	0x49, 0,
	/*  55 					*/	0x4A, 0,
	/*  56 					*/	0x51, 0,
	/*  57 					*/	0x59, KN_COMMUNICATION,
	/*  58 					*/	0x11, KN_COMMUNICATION,
	/*  59 					*/	0x8B, 0,
	/*  60 					*/	0x19, 0,
	/*  61 					*/	0x29, 0,
	/*  62 					*/	0x39, 0,
	/*  63 					*/	0x8C, 0,
	/*  64 					*/	0x58, KN_COMMUNICATION,
	/*  65 					*/	0x06, 0,
	/*  66 					*/	0x0C, 0,
	/*  67 					*/	0x0B, 0,
	/*  68 					*/	0x0A, 0,
	/*  69 					*/	0x09, 0,
	/*  70 					*/	0x05, 0,
	/*  71 					*/	0x04, 0,
	/*  72 					*/	0x03, 0,
	/*  73 					*/	0x83, 0,
	/*  74 					*/	0x01, 0,
	/*  75 					*/	0x67, 0,
	/*  76 					*/	0x64, 0,
	/*  77 					*/	0x8D, 0,
	/*  78 Empty			*/	0x00, 0,
	/*  79 					*/	0x61, 0,
	/*  80 					*/	0x6E, 0,
	/*  81 					*/	0x65, 0,
	/*  82 					*/	0x62, 0,
	/*  83 					*/	0x63, 0,
	/*  84 					*/	0x60, 0,
	/*  85 					*/	0x6F, 0,
	/*  86 					*/	0x6D, 0,
	/*  87 Empty			*/	0x00, 0,
	/*  88 Empty			*/	0x00, 0,
	/*  89 					*/	0x6A, 0,
	/*  90 					*/	0x76, KN_COMMUNICATION,
	/*  91 					*/	0x6C, 0,
	/*  92 					*/	0x6B, 0,
	/*  93 					*/	0x69, 0,
	/*  94 					*/	0x68, 0,
	/*  95 					*/	0x77, 0,
	/*  96 					*/	0x75, 0,
	/*  97 					*/	0x73, 0,
	/*  98 					*/	0x72, 0,
	/*  99 					*/	0x70, 0,
	/* 100 					*/	0x7E, 0,
	/* 101 					*/	0x7D, 0,
	/* 102 					*/	0x74, 0,
	/* 103 					*/	0x7A, 0,
	/* 104 					*/	0x71, 0,
	/* 105 					*/	0x84, 0,
	/* 106 					*/	0x7C, 0,
	/* 107 					*/	0x7B, 0,
	/* 108 					*/	0x79, 0,
	/* 109 					*/	0x78, 0,
	/* 110 					*/	0x08, 0,
	/* 111 Empty			*/	0x00, 0,
	/* 112 					*/	0x07, 0,
	/* 113 					*/	0x0F, 0,
	/* 114 					*/	0x17, 0,
	/* 115 					*/	0x1F, 0,
	/* 116 					*/	0x27, 0,
	/* 117 					*/	0x2F, 0,
	/* 118 					*/	0x37, 0,
	/* 119 					*/	0x3F, 0,
	/* 120 					*/	0x47, 0,
	/* 121 					*/	0x4F, 0,
	/* 122 					*/	0x56, 0,
	/* 123 					*/	0x5E, 0,
	/* 124 					*/	0x57, 0,
	/* 125 					*/	0x5F, 0,
	/* 126 					*/	0x62, 0,
	/* 127 					*/	0x08, 0,
	/* 128 					*/	0x10, 0,
	/* 129 					*/	0x18, 0,
	/* 130 					*/	0x20, 0,
	/* 131 					*/	0x28, 0,
	/* 132 					*/	0x30, 0,
	/* 133 					*/	0x38, 0,
	/* 134 					*/	0x40, 0,
	/* 135 					*/	0x48, 0,
	/* 136 					*/	0x50, 0,
	/* 137 Empty			*/	0x00, 0,
	/* 138 Empty			*/	0x00, 0,
	/* 139 Empty			*/	0x00, 0,
	/* 140 Virtual 		*/	0x19, 0,
	/* 141 Virtual 		*/	0x19, 0,
	/* 142 Virtual 		*/	0x11, 0,
	/* 143 Virtual 		*/	0x11, 0,
};

extern const CScancodeSequence seq_IBM_3178_SCAN[] =
{
/*   065 */		  3, 	 65, { 0x4F, 0x51, 0xCF },
	0
};

extern const CScancodes IBM_3178_SCAN =
{
	/* sequence info		*/	seq_IBM_3178_SCAN,
	/* max used key		*/	104,
	/* extension			*/	0xe0,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x3D, 0,
	/*   2 					*/	0x21, 0,
	/*   3 					*/	0x22, 0,
	/*   4 					*/	0x23, 0,
	/*   5 					*/	0x24, 0,
	/*   6 					*/	0x25, 0,
	/*   7 					*/	0x26, 0,
	/*   8 					*/	0x27, 0,
	/*   9 					*/	0x28, 0,
	/*  10 					*/	0x29, 0,
	/*  11 					*/	0x20, 0,
	/*  12 					*/	0x30, 0,
	/*  13 					*/	0x11, 0,
	/*  14 Empty			*/	0x00, 0,
	/*  15 					*/	0x31, 0,
	/*  16 					*/	0x36, 0,
	/*  17 					*/	0x70, 0,
	/*  18 					*/	0x76, 0,
	/*  19 					*/	0x64, 0,
	/*  20 					*/	0x71, 0,
	/*  21 					*/	0x73, 0,
	/*  22 					*/	0x78, 0,
	/*  23 					*/	0x74, 0,
	/*  24 					*/	0x68, 0,
	/*  25 					*/	0x6E, 0,
	/*  26 					*/	0x6F, 0,
	/*  27 					*/	0x1B, 0,
	/*  28 					*/	0x15, 0,
	/*  29 					*/	0x35, 0,
	/*  30 					*/	0x4C, KN_COMMUNICATION,
	/*  31 					*/	0x60, 0,
	/*  32 					*/	0x72, 0,
	/*  33 					*/	0x63, 0,
	/*  34 					*/	0x65, 0,
	/*  35 					*/	0x66, 0,
	/*  36 					*/	0x67, 0,
	/*  37 					*/	0x69, 0,
	/*  38 					*/	0x6A, 0,
	/*  39 					*/	0x6B, 0,
	/*  40 					*/	0x7E, 0,
	/*  41 					*/	0x12, 0,
	/*  42 					*/	0x0F, 0,
	/*  43 					*/	0x08, 0,
	/*  44 					*/	0x4D, KN_COMMUNICATION,
	/*  45 					*/	0x09, 0,
	/*  46 					*/	0x79, 0,
	/*  47 					*/	0x77, 0,
	/*  48 					*/	0x62, 0,
	/*  49 					*/	0x75, 0,
	/*  50 					*/	0x61, 0,
	/*  51 					*/	0x6D, 0,
	/*  52 					*/	0x6C, 0,
	/*  53 					*/	0x33, 0,
	/*  54 					*/	0x32, 0,
	/*  55 					*/	0x14, 0,
	/*  56 Empty			*/	0x00, 0,
	/*  57 					*/	0x4E, KN_COMMUNICATION,
	/*  58 					*/	0x34, KN_COMMUNICATION,
	/*  59 Empty			*/	0x00, 0,
	/*  60 					*/	0x4F, 0,
	/*  61 					*/	0x10, 0,
	/*  62 					*/	0x4F, 0,
	/*  63 Empty			*/	0x00, 0,
	/*  64 					*/	0x18, KN_COMMUNICATION,
	/*  65 Sequence		*/	0xE0, KN_SEQUENCE,
	/*  66 					*/	0x51, 0,
	/*  67 					*/	0x55, 0,
	/*  68 					*/	0x57, 0,
	/*  69 Empty			*/	0x00, 0,
	/*  70 					*/	0x50, 0,
	/*  71 					*/	0x52, 0,
	/*  72 					*/	0x54, 0,
	/*  73 					*/	0x56, 0,
	/*  74 Empty			*/	0x00, 0,
	/*  75 					*/	0x5F, 0,
	/*  76 					*/	0x35, 0,
	/*  77 Empty			*/	0x00, 0,
	/*  78 Empty			*/	0x00, 0,
	/*  79 					*/	0x16, 0,
	/*  80 					*/	0x5E, 0,
	/*  81 					*/	0x0C, 0,
	/*  82 Empty			*/	0x00, 0,
	/*  83 					*/	0x0E, 0,
	/*  84 					*/	0x13, 0,
	/*  85 Empty			*/	0x00, 0,
	/*  86 					*/	0x0D, 0,
	/*  87 Empty			*/	0x00, 0,
	/*  88 Empty			*/	0x00, 0,
	/*  89 					*/	0x1A, 0,
	/*  90 Empty			*/	0x00, KN_COMMUNICATION,
	/*  91 					*/	0x40, 0,
	/*  92 					*/	0x43, 0,
	/*  93 					*/	0x46, 0,
	/*  94 					*/	0x49, 0,
	/*  95 Empty			*/	0x00, 0,
	/*  96 					*/	0x41, 0,
	/*  97 					*/	0x44, 0,
	/*  98 					*/	0x47, 0,
	/*  99 					*/	0x4A, 0,
	/* 100 Empty			*/	0x00, 0,
	/* 101 					*/	0x42, 0,
	/* 102 					*/	0x45, 0,
	/* 103 					*/	0x48, 0,
	/* 104 					*/	0x4B, 0,
};

extern const CScancodes BDS_7_SCAN =
{
	/* no sequence info	*/	NULL,
	/* max used key		*/	149,
	/* extension			*/	0x00,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x01, 0,
	/*   2 					*/	0x02, 0,
	/*   3 					*/	0x03, 0,
	/*   4 					*/	0x04, 0,
	/*   5 					*/	0x05, 0,
	/*   6 					*/	0x06, 0,
	/*   7 					*/	0x07, 0,
	/*   8 					*/	0x08, 0,
	/*   9 					*/	0x09, 0,
	/*  10 					*/	0x0A, 0,
	/*  11 					*/	0x0B, 0,
	/*  12 					*/	0x0C, 0,
	/*  13 					*/	0x0D, 0,
	/*  14 					*/	0x29, 0,
	/*  15 					*/	0x0E, 0,
	/*  16 					*/	0x0F, 0,
	/*  17 					*/	0x10, 0,
	/*  18 					*/	0x11, 0,
	/*  19 					*/	0x12, 0,
	/*  20 					*/	0x13, 0,
	/*  21 					*/	0x14, 0,
	/*  22 					*/	0x15, 0,
	/*  23 					*/	0x16, 0,
	/*  24 					*/	0x17, 0,
	/*  25 					*/	0x18, 0,
	/*  26 					*/	0x19, 0,
	/*  27 					*/	0x1A, 0,
	/*  28 					*/	0x1B, 0,
	/*  29 					*/	0x59, 0,
	/*  30 					*/	0x1D, KN_COMMUNICATION,
	/*  31 					*/	0x1E, 0,
	/*  32 					*/	0x1F, 0,
	/*  33 					*/	0x20, 0,
	/*  34 					*/	0x21, 0,
	/*  35 					*/	0x22, 0,
	/*  36 					*/	0x23, 0,
	/*  37 					*/	0x24, 0,
	/*  38 					*/	0x25, 0,
	/*  39 					*/	0x26, 0,
	/*  40 					*/	0x27, 0,
	/*  41 					*/	0x28, 0,
	/*  42 					*/	0x2B, 0,
	/*  43 					*/	0x1C, 0,
	/*  44 					*/	0x2A, KN_COMMUNICATION,
	/*  45 					*/	0x38, 0,
	/*  46 					*/	0x2C, 0,
	/*  47 					*/	0x2D, 0,
	/*  48 					*/	0x2E, 0,
	/*  49 					*/	0x2F, 0,
	/*  50 					*/	0x30, 0,
	/*  51 					*/	0x31, 0,
	/*  52 					*/	0x32, 0,
	/*  53 					*/	0x33, 0,
	/*  54 					*/	0x34, 0,
	/*  55 					*/	0x35, 0,
	/*  56 					*/	0x00, 0,
	/*  57 					*/	0x36, KN_COMMUNICATION,
	/*  58 					*/	0x54, KN_COMMUNICATION,
	/*  59 					*/	0x5B, 0,
	/*  60 					*/	0x5C, 0,
	/*  61 					*/	0x39, 0,
	/*  62 					*/	0x5D, 0,
	/*  63 					*/	0x5A, 0,
	/*  64 					*/	0x3A, KN_COMMUNICATION,
	/*  65 Empty			*/	0x00, 0,
	/*  66 Empty			*/	0x00, 0,
	/*  67 Empty			*/	0x00, 0,
	/*  68 Empty			*/	0x00, 0,
	/*  69 Empty			*/	0x00, 0,
	/*  70 Empty			*/	0x00, 0,
	/*  71 Empty			*/	0x00, 0,
	/*  72 Empty			*/	0x00, 0,
	/*  73 Empty			*/	0x00, 0,
	/*  74 Empty			*/	0x00, 0,
	/*  75 					*/	0x61, 0,
	/*  76 					*/	0x64, 0,
	/*  77 					*/	0x00, 0,
	/*  78 					*/	0x68, 0,
	/*  79 					*/	0x00, 0,
	/*  80 					*/	0x62, 0,
	/*  81 					*/	0x65, 0,
	/*  82 					*/	0x67, 0,
	/*  83 					*/	0x69, 0,
	/*  84 					*/	0x6B, 0,
	/*  85 					*/	0x63, 0,
	/*  86 					*/	0x66, 0,
	/*  87 					*/	0x00, 0,
	/*  88 					*/	0x6A, 0,
	/*  89 					*/	0x00, 0,
	/*  90 					*/	0x6D, KN_COMMUNICATION,
	/*  91 					*/	0x47, 0,
	/*  92 					*/	0x4B, 0,
	/*  93 					*/	0x4F, 0,
	/*  94 					*/	0x73, 0,
	/*  95 					*/	0x6E, 0,
	/*  96 					*/	0x48, 0,
	/*  97 					*/	0x4C, 0,
	/*  98 					*/	0x50, 0,
	/*  99 					*/	0x52, 0,
	/* 100 					*/	0x6F, 0,
	/* 101 					*/	0x49, 0,
	/* 102 					*/	0x4D, 0,
	/* 103 					*/	0x51, 0,
	/* 104 					*/	0x53, 0,
	/* 105 					*/	0x70, 0,
	/* 106 					*/	0x71, 0,
	/* 107 					*/	0x72, 0,
	/* 108 					*/	0x4E, 0,
	/* 109 					*/	0x4A, 0,
	/* 110 					*/	0x55, 0,
	/* 111 Empty			*/	0x00, 0,
	/* 112 					*/	0x3B, 0,
	/* 113 					*/	0x3C, 0,
	/* 114 					*/	0x3D, 0,
	/* 115 					*/	0x3E, 0,
	/* 116 					*/	0x3F, 0,
	/* 117 					*/	0x40, 0,
	/* 118 					*/	0x41, 0,
	/* 119 					*/	0x42, 0,
	/* 120 					*/	0x43, 0,
	/* 121 					*/	0x44, 0,
	/* 122 					*/	0x56, 0,
	/* 123 					*/	0x57, 0,
	/* 124 					*/	0x5E, 0,
	/* 125 					*/	0x5F, 0,
	/* 126 					*/	0x60, 0,
	/* 127 					*/	0x37, 0,
	/* 128 					*/	0x45, 0,
	/* 129 					*/	0x46, 0,
	/* 130 					*/	0x6C, 0,
	/* 131 					*/	0x58, 0,
	/* 132 Empty			*/	0x00, 0,
	/* 133 Empty			*/	0x00, 0,
	/* 134 Empty			*/	0x00, 0,
	/* 135 Empty			*/	0x00, 0,
	/* 136 Empty			*/	0x00, 0,
	/* 137 Empty			*/	0x00, 0,
	/* 138 Empty			*/	0x00, 0,
	/* 139 Empty			*/	0x00, 0,
	/* 140 Virtual 		*/	0x38, 0,
	/* 141 Virtual 		*/	0x38, 0,
	/* 142 Virtual 		*/	0x1D, 0,
	/* 143 Virtual 		*/	0x1D, 0,
	/* 144 Empty			*/	0x00, 0,
	/* 145 Empty			*/	0x00, 0,
	/* 146 Empty			*/	0x00, 0,
	/* 147 					*/	0x7B, 0,
	/* 148 					*/	0x79, KN_COMMUNICATION,	                   // manually added COMMUNICATION KEY
	/* 149 					*/	0x70, 0,
};

extern const CScancodeSequence seq_USB_KEYBOARD_SCAN[] =
{
/*   138 */		  1, 	138, { 0xE3 },
/*   139 */		  2, 	139, { 0xF0, 0xE3 },
/*   140 */		  1, 	140, { 0xE2 },
/*   141 */		  2, 	141, { 0xF0, 0xE2 },
/*   142 */		  1, 	142, { 0xE0 },
/*   143 */		  2, 	143, { 0xF0, 0xE0 },
	0
};

extern const CScancodes USB_KEYBOARD_SCAN =
{
	/* sequence info		*/	seq_USB_KEYBOARD_SCAN,
	/* max used key		*/	149,
	/* extension			*/	0x00,
	/* illegal scancode	*/	0x00, 0,
	/*   1 					*/	0x35, 0,
	/*   2 					*/	0x1E, 0,
	/*   3 					*/	0x1F, 0,
	/*   4 					*/	0x20, 0,
	/*   5 					*/	0x21, 0,
	/*   6 					*/	0x22, 0,
	/*   7 					*/	0x23, 0,
	/*   8 					*/	0x24, 0,
	/*   9 					*/	0x25, 0,
	/*  10 					*/	0x26, 0,
	/*  11 					*/	0x27, 0,
	/*  12 					*/	0x2D, 0,
	/*  13 					*/	0x2E, 0,
	/*  14 					*/	0x89, 0,
	/*  15 					*/	0x2A, 0,
	/*  16 					*/	0x2B, 0,
	/*  17 					*/	0x14, 0,
	/*  18 					*/	0x1A, 0,
	/*  19 					*/	0x08, 0,
	/*  20 					*/	0x15, 0,
	/*  21 					*/	0x17, 0,
	/*  22 					*/	0x1C, 0,
	/*  23 					*/	0x18, 0,
	/*  24 					*/	0x0C, 0,
	/*  25 					*/	0x12, 0,
	/*  26 					*/	0x13, 0,
	/*  27 					*/	0x2F, 0,
	/*  28 					*/	0x30, 0,
	/*  29 					*/	0x31, 0,
	/*  30 					*/	0x39, KN_COMMUNICATION,
	/*  31 					*/	0x04, 0,
	/*  32 					*/	0x16, 0,
	/*  33 					*/	0x07, 0,
	/*  34 					*/	0x09, 0,
	/*  35 					*/	0x0A, 0,
	/*  36 					*/	0x0B, 0,
	/*  37 					*/	0x0D, 0,
	/*  38 					*/	0x0E, 0,
	/*  39 					*/	0x0F, 0,
	/*  40 					*/	0x33, 0,
	/*  41 					*/	0x34, 0,
	/*  42 					*/	0x32, 0,
	/*  43 					*/	0x28, 0,
	/*  44 					*/	0xE1, KN_COMMUNICATION,
	/*  45 					*/	0x64, 0,
	/*  46 					*/	0x1D, 0,
	/*  47 					*/	0x1B, 0,
	/*  48 					*/	0x06, 0,
	/*  49 					*/	0x19, 0,
	/*  50 					*/	0x05, 0,
	/*  51 					*/	0x11, 0,
	/*  52 					*/	0x10, 0,
	/*  53 					*/	0x36, 0,
	/*  54 					*/	0x37, 0,
	/*  55 					*/	0x38, 0,
	/*  56 					*/	0x87, 0,
	/*  57 					*/	0xE5, KN_COMMUNICATION,
	/*  58 					*/	0xE0, KN_COMMUNICATION,
	/*  59 					*/	0xE3, 0,
	/*  60 					*/	0xE2, 0,
	/*  61 					*/	0x2C, 0,
	/*  62 					*/	0xE6, 0,
	/*  63 					*/	0xE7, 0,
	/*  64 					*/	0xE4, KN_COMMUNICATION,
	/*  65 Empty			*/	0x00, 0,
	/*  66 Empty			*/	0x00, 0,
	/*  67 Empty			*/	0x00, 0,
	/*  68 Empty			*/	0x00, 0,
	/*  69 Empty			*/	0x00, 0,
	/*  70 Empty			*/	0x00, 0,
	/*  71 Empty			*/	0x00, 0,
	/*  72 Empty			*/	0x00, 0,
	/*  73 Empty			*/	0x00, 0,
	/*  74 Empty			*/	0x00, 0,
	/*  75 					*/	0x49, 0,
	/*  76 					*/	0x4C, 0,
	/*  77 					*/	0x65, 0,
	/*  78 Empty			*/	0x00, 0,
	/*  79 					*/	0x50, 0,
	/*  80 					*/	0x4A, 0,
	/*  81 					*/	0x4D, 0,
	/*  82 Empty			*/	0x00, 0,
	/*  83 					*/	0x52, 0,
	/*  84 					*/	0x51, 0,
	/*  85 					*/	0x4B, 0,
	/*  86 					*/	0x4E, 0,
	/*  87 Empty			*/	0x00, 0,
	/*  88 Empty			*/	0x00, 0,
	/*  89 					*/	0x4F, 0,
	/*  90 					*/	0x53, KN_COMMUNICATION,
	/*  91 					*/	0x5F, 0,
	/*  92 					*/	0x5C, 0,
	/*  93 					*/	0x59, 0,
	/*  94 Empty			*/	0x00, 0,
	/*  95 					*/	0x54, 0,
	/*  96 					*/	0x60, 0,
	/*  97 					*/	0x5D, 0,
	/*  98 					*/	0x5A, 0,
	/*  99 					*/	0x62, 0,
	/* 100 					*/	0x55, 0,
	/* 101 					*/	0x61, 0,
	/* 102 					*/	0x5E, 0,
	/* 103 					*/	0x5B, 0,
	/* 104 					*/	0x63, 0,
	/* 105 					*/	0x56, 0,
	/* 106 					*/	0x57, 0,
	/* 107 					*/	0x85, 0,
	/* 108 					*/	0x58, 0,
	/* 109 					*/	0x67, 0,
	/* 110 					*/	0x29, 0,
	/* 111 Empty			*/	0x00, 0,
	/* 112 					*/	0x3A, 0,
	/* 113 					*/	0x3B, 0,
	/* 114 					*/	0x3C, 0,
	/* 115 					*/	0x3D, 0,
	/* 116 					*/	0x3E, 0,
	/* 117 					*/	0x3F, 0,
	/* 118 					*/	0x40, 0,
	/* 119 					*/	0x41, 0,
	/* 120 					*/	0x42, 0,
	/* 121 					*/	0x43, 0,
	/* 122 					*/	0x44, 0,
	/* 123 					*/	0x45, 0,
	/* 124 					*/	0x46, 0,
	/* 125 					*/	0x47, 0,
	/* 126 					*/	0x48, 0,
	/* 127 Empty			*/	0x00, 0,
	/* 128 Empty			*/	0x00, 0,
	/* 129 					*/	0x65, 0,
	/* 130 					*/	0x68, 0,
	/* 131 					*/	0x69, 0,
	/* 132 					*/	0x6A, 0,
	/* 133 Empty			*/	0x00, 0,
	/* 134 Empty			*/	0x00, 0,
	/* 135 Empty			*/	0x00, 0,
	/* 136 Empty			*/	0x00, 0,
	/* 137 Empty			*/	0x00, 0,
	/* 138 Sequence		*/	0x00, KN_SEQUENCE,
	/* 139 Sequence		*/	0x00, KN_SEQUENCE,
	/* 140 Sequence		*/	0x00, KN_SEQUENCE,
	/* 141 Sequence		*/	0x00, KN_SEQUENCE,
	/* 142 Sequence		*/	0x00, KN_SEQUENCE,
	/* 143 Sequence		*/	0x00, KN_SEQUENCE,
	/* 144 Empty			*/	0x00, 0,
	/* 145 Empty			*/	0x00, 0,
	/* 146 					*/	0x00, 0,
	/* 147 					*/	0x8B, 0,
	/* 148 					*/	0x88, KN_COMMUNICATION,	                   // manually added COMMUNICATION KEY
	/* 149 					*/	0x8A, 0,
};


/******************************************************/
/* Make Break tables                                  */
/******************************************************/

extern const CMakeBreaks IBM_AT_MKBR =
{
	/*			pre byte, type */
	/*   0 */	0xf0, BR_Pre,
	/*   1 */	0xf0, BR_Pre,
	/*   2 */	0xf0, BR_Pre,
	/*   3 */	0xf0, BR_Pre,
	/*   4 */	0xf0, BR_Pre,
	/*   5 */	0xf0, BR_Pre,
	/*   6 */	0xf0, BR_Pre,
	/*   7 */	0xf0, BR_Pre,
	/*   8 */	0xf0, BR_Pre,
	/*   9 */	0xf0, BR_Pre,
	/*  10 */	0xf0, BR_Pre,
	/*  11 */	0xf0, BR_Pre,
	/*  12 */	0xf0, BR_Pre,
	/*  13 */	0xf0, BR_Pre,
	/*  14 */	0xf0, BR_Pre,
	/*  15 */	0xf0, BR_Pre,
	/*  16 */	0xf0, BR_Pre,
	/*  17 */	0xf0, BR_Pre,
	/*  18 */	0xf0, BR_Pre,
	/*  19 */	0xf0, BR_Pre,
	/*  20 */	0xf0, BR_Pre,
	/*  21 */	0xf0, BR_Pre,
	/*  22 */	0xf0, BR_Pre,
	/*  23 */	0xf0, BR_Pre,
	/*  24 */	0xf0, BR_Pre,
	/*  25 */	0xf0, BR_Pre,
	/*  26 */	0xf0, BR_Pre,
	/*  27 */	0xf0, BR_Pre,
	/*  28 */	0xf0, BR_Pre,
	/*  29 */	0xf0, BR_Pre,
	/*  30 */	0xf0, BR_Pre,
	/*  31 */	0xf0, BR_Pre,
	/*  32 */	0xf0, BR_Pre,
	/*  33 */	0xf0, BR_Pre,
	/*  34 */	0xf0, BR_Pre,
	/*  35 */	0xf0, BR_Pre,
	/*  36 */	0xf0, BR_Pre,
	/*  37 */	0xf0, BR_Pre,
	/*  38 */	0xf0, BR_Pre,
	/*  39 */	0xf0, BR_Pre,
	/*  40 */	0xf0, BR_Pre,
	/*  41 */	0xf0, BR_Pre,
	/*  42 */	0xf0, BR_Pre,
	/*  43 */	0xf0, BR_Pre,
	/*  44 */	0xf0, BR_Pre,
	/*  45 */	0xf0, BR_Pre,
	/*  46 */	0xf0, BR_Pre,
	/*  47 */	0xf0, BR_Pre,
	/*  48 */	0xf0, BR_Pre,
	/*  49 */	0xf0, BR_Pre,
	/*  50 */	0xf0, BR_Pre,
	/*  51 */	0xf0, BR_Pre,
	/*  52 */	0xf0, BR_Pre,
	/*  53 */	0xf0, BR_Pre,
	/*  54 */	0xf0, BR_Pre,
	/*  55 */	0xf0, BR_Pre,
	/*  56 */	0xf0, BR_Pre,
	/*  57 */	0xf0, BR_Pre,
	/*  58 */	0xf0, BR_Pre,
	/*  59 */	0xf0, BR_Pre,
	/*  60 */	0xf0, BR_Pre,
	/*  61 */	0xf0, BR_Pre,
	/*  62 */	0xf0, BR_Pre,
	/*  63 */	0xf0, BR_Pre,
	/*  64 */	0xf0, BR_Pre,
	/*  65 */	0xf0, BR_Pre,
	/*  66 */	0xf0, BR_Pre,
	/*  67 */	0xf0, BR_Pre,
	/*  68 */	0xf0, BR_Pre,
	/*  69 */	0xf0, BR_Pre,
	/*  70 */	0xf0, BR_Pre,
	/*  71 */	0xf0, BR_Pre,
	/*  72 */	0xf0, BR_Pre,
	/*  73 */	0xf0, BR_Pre,
	/*  74 */	0xf0, BR_Pre,
	/*  75 */	0xf0, BR_Pre,
	/*  76 */	0xf0, BR_Pre,
	/*  77 */	0xf0, BR_Pre,
	/*  78 */	0xf0, BR_Pre,
	/*  79 */	0xf0, BR_Pre,
	/*  80 */	0xf0, BR_Pre,
	/*  81 */	0xf0, BR_Pre,
	/*  82 */	0xf0, BR_Pre,
	/*  83 */	0xf0, BR_Pre,
	/*  84 */	0xf0, BR_Pre,
	/*  85 */	0xf0, BR_Pre,
	/*  86 */	0xf0, BR_Pre,
	/*  87 */	0xf0, BR_Pre,
	/*  88 */	0xf0, BR_Pre,
	/*  89 */	0xf0, BR_Pre,
	/*  90 */	0xf0, BR_Pre,
	/*  91 */	0xf0, BR_Pre,
	/*  92 */	0xf0, BR_Pre,
	/*  93 */	0xf0, BR_Pre,
	/*  94 */	0xf0, BR_Pre,
	/*  95 */	0xf0, BR_Pre,
	/*  96 */	0xf0, BR_Pre,
	/*  97 */	0xf0, BR_Pre,
	/*  98 */	0xf0, BR_Pre,
	/*  99 */	0xf0, BR_Pre,
	/* 100 */	0xf0, BR_Pre,
	/* 101 */	0xf0, BR_Pre,
	/* 102 */	0xf0, BR_Pre,
	/* 103 */	0xf0, BR_Pre,
	/* 104 */	0xf0, BR_Pre,
	/* 105 */	0xf0, BR_Pre,
	/* 106 */	0xf0, BR_Pre,
	/* 107 */	0xf0, BR_Pre,
	/* 108 */	0xf0, BR_Pre,
	/* 109 */	0xf0, BR_Pre,
	/* 110 */	0xf0, BR_Pre,
	/* 111 */	0xf0, BR_Pre,
	/* 112 */	0xf0, BR_Pre,
	/* 113 */	0xf0, BR_Pre,
	/* 114 */	0xf0, BR_Pre,
	/* 115 */	0xf0, BR_Pre,
	/* 116 */	0xf0, BR_Pre,
	/* 117 */	0xf0, BR_Pre,
	/* 118 */	0xf0, BR_Pre,
	/* 119 */	0xf0, BR_Pre,
	/* 120 */	0xf0, BR_Pre,
	/* 121 */	0xf0, BR_Pre,
	/* 122 */	0xf0, BR_Pre,
	/* 123 */	0xf0, BR_Pre,
	/* 124 */	0xf0, BR_Pre,
	/* 125 */	0xf0, BR_Pre,
	/* 126 */	0xf0, BR_Pre,
	/* 127 */	0xf0, BR_Pre,
	/* 128 */	0xf0, BR_Pre,
	/* 129 */	0xf0, BR_Pre,
	/* 130 */	0xf0, BR_Pre,
	/* 131 */	0xf0, BR_Pre,
	/* 132 */	0xf0, BR_Pre,
	/* 133 */	0xf0, BR_Pre,
	/* 134 */	0xf0, BR_Pre,
	/* 135 */	0xf0, BR_Pre,
	/* 136 */	0xf0, BR_Pre,
	/* 137 */	0xf0, BR_Pre,
	/* 138 */	0xf0, BR_Pre,
	/* 139 */	0xf0, BR_Pre,
	/* 140 */	0x00, BR_MakeOnly,
	/* 141 */	0xf0, BR_BreakOnly|BR_Pre,
	/* 142 */	0x00, BR_MakeOnly,
	/* 143 */	0xf0, BR_BreakOnly|BR_Pre,
	/* 144 */	0xf0, BR_Pre,
	/* 145 */	0xf0, BR_Pre,
	/* 146 */	0xf0, BR_Pre,
	/* 147 */	0xf0, BR_Pre,
	/* 148 */	0xf0, BR_Pre,
	/* 149 */	0xf0, BR_Pre,
};

extern const CMakeBreaks IBM_PS2_MKBR =
{
	/*			pre byte, type */
	/*   0 */	0x00, BR_HighBit,
	/*   1 */	0x00, BR_HighBit,
	/*   2 */	0x00, BR_HighBit,
	/*   3 */	0x00, BR_HighBit,
	/*   4 */	0x00, BR_HighBit,
	/*   5 */	0x00, BR_HighBit,
	/*   6 */	0x00, BR_HighBit,
	/*   7 */	0x00, BR_HighBit,
	/*   8 */	0x00, BR_HighBit,
	/*   9 */	0x00, BR_HighBit,
	/*  10 */	0x00, BR_HighBit,
	/*  11 */	0x00, BR_HighBit,
	/*  12 */	0x00, BR_HighBit,
	/*  13 */	0x00, BR_HighBit,
	/*  14 */	0x00, BR_HighBit,
	/*  15 */	0x00, BR_HighBit,
	/*  16 */	0x00, BR_HighBit,
	/*  17 */	0x00, BR_HighBit,
	/*  18 */	0x00, BR_HighBit,
	/*  19 */	0x00, BR_HighBit,
	/*  20 */	0x00, BR_HighBit,
	/*  21 */	0x00, BR_HighBit,
	/*  22 */	0x00, BR_HighBit,
	/*  23 */	0x00, BR_HighBit,
	/*  24 */	0x00, BR_HighBit,
	/*  25 */	0x00, BR_HighBit,
	/*  26 */	0x00, BR_HighBit,
	/*  27 */	0x00, BR_HighBit,
	/*  28 */	0x00, BR_HighBit,
	/*  29 */	0x00, BR_HighBit,
	/*  30 */	0x00, BR_HighBit,
	/*  31 */	0x00, BR_HighBit,
	/*  32 */	0x00, BR_HighBit,
	/*  33 */	0x00, BR_HighBit,
	/*  34 */	0x00, BR_HighBit,
	/*  35 */	0x00, BR_HighBit,
	/*  36 */	0x00, BR_HighBit,
	/*  37 */	0x00, BR_HighBit,
	/*  38 */	0x00, BR_HighBit,
	/*  39 */	0x00, BR_HighBit,
	/*  40 */	0x00, BR_HighBit,
	/*  41 */	0x00, BR_HighBit,
	/*  42 */	0x00, BR_HighBit,
	/*  43 */	0x00, BR_HighBit,
	/*  44 */	0x00, BR_HighBit,
	/*  45 */	0x00, BR_HighBit,
	/*  46 */	0x00, BR_HighBit,
	/*  47 */	0x00, BR_HighBit,
	/*  48 */	0x00, BR_HighBit,
	/*  49 */	0x00, BR_HighBit,
	/*  50 */	0x00, BR_HighBit,
	/*  51 */	0x00, BR_HighBit,
	/*  52 */	0x00, BR_HighBit,
	/*  53 */	0x00, BR_HighBit,
	/*  54 */	0x00, BR_HighBit,
	/*  55 */	0x00, BR_HighBit,
	/*  56 */	0x00, BR_HighBit,
	/*  57 */	0x00, BR_HighBit,
	/*  58 */	0x00, BR_HighBit,
	/*  59 */	0x00, BR_HighBit,
	/*  60 */	0x00, BR_HighBit,
	/*  61 */	0x00, BR_HighBit,
	/*  62 */	0x00, BR_HighBit,
	/*  63 */	0x00, BR_HighBit,
	/*  64 */	0x00, BR_HighBit,
	/*  65 */	0x00, BR_HighBit,
	/*  66 */	0x00, BR_HighBit,
	/*  67 */	0x00, BR_HighBit,
	/*  68 */	0x00, BR_HighBit,
	/*  69 */	0x00, BR_HighBit,
	/*  70 */	0x00, BR_HighBit,
	/*  71 */	0x00, BR_HighBit,
	/*  72 */	0x00, BR_HighBit,
	/*  73 */	0x00, BR_HighBit,
	/*  74 */	0x00, BR_HighBit,
	/*  75 */	0x00, BR_HighBit,
	/*  76 */	0x00, BR_HighBit,
	/*  77 */	0x00, BR_HighBit,
	/*  78 */	0x00, BR_HighBit,
	/*  79 */	0x00, BR_HighBit,
	/*  80 */	0x00, BR_HighBit,
	/*  81 */	0x00, BR_HighBit,
	/*  82 */	0x00, BR_HighBit,
	/*  83 */	0x00, BR_HighBit,
	/*  84 */	0x00, BR_HighBit,
	/*  85 */	0x00, BR_HighBit,
	/*  86 */	0x00, BR_HighBit,
	/*  87 */	0x00, BR_HighBit,
	/*  88 */	0x00, BR_HighBit,
	/*  89 */	0x00, BR_HighBit,
	/*  90 */	0x00, BR_HighBit,
	/*  91 */	0x00, BR_HighBit,
	/*  92 */	0x00, BR_HighBit,
	/*  93 */	0x00, BR_HighBit,
	/*  94 */	0x00, BR_HighBit,
	/*  95 */	0x00, BR_HighBit,
	/*  96 */	0x00, BR_HighBit,
	/*  97 */	0x00, BR_HighBit,
	/*  98 */	0x00, BR_HighBit,
	/*  99 */	0x00, BR_HighBit,
	/* 100 */	0x00, BR_HighBit,
	/* 101 */	0x00, BR_HighBit,
	/* 102 */	0x00, BR_HighBit,
	/* 103 */	0x00, BR_HighBit,
	/* 104 */	0x00, BR_HighBit,
	/* 105 */	0x00, BR_HighBit,
	/* 106 */	0x00, BR_HighBit,
	/* 107 */	0x00, BR_HighBit,
	/* 108 */	0x00, BR_HighBit,
	/* 109 */	0x00, BR_HighBit,
	/* 110 */	0x00, BR_HighBit,
	/* 111 */	0x00, BR_HighBit,
	/* 112 */	0x00, BR_HighBit,
	/* 113 */	0x00, BR_HighBit,
	/* 114 */	0x00, BR_HighBit,
	/* 115 */	0x00, BR_HighBit,
	/* 116 */	0x00, BR_HighBit,
	/* 117 */	0x00, BR_HighBit,
	/* 118 */	0x00, BR_HighBit,
	/* 119 */	0x00, BR_HighBit,
	/* 120 */	0x00, BR_HighBit,
	/* 121 */	0x00, BR_HighBit,
	/* 122 */	0x00, BR_HighBit,
	/* 123 */	0x00, BR_HighBit,
	/* 124 */	0x00, BR_HighBit,
	/* 125 */	0x00, BR_HighBit,
	/* 126 */	0x00, BR_HighBit,
	/* 127 */	0x00, BR_HighBit,
	/* 128 */	0x00, BR_HighBit,
	/* 129 */	0x00, BR_HighBit,
	/* 130 */	0x00, BR_HighBit,
	/* 131 */	0x00, BR_HighBit,
	/* 132 */	0x00, BR_HighBit,
	/* 133 */	0x00, BR_HighBit,
	/* 134 */	0x00, BR_HighBit,
	/* 135 */	0x00, BR_HighBit,
	/* 136 */	0x00, BR_HighBit,
	/* 137 */	0x00, BR_HighBit,
	/* 138 */	0x00, BR_HighBit,
	/* 139 */	0x00, BR_HighBit,
	/* 140 */	0x00, BR_MakeOnly,
	/* 141 */	0x00, BR_BreakOnly|BR_HighBit,
	/* 142 */	0x00, BR_MakeOnly,
	/* 143 */	0x00, BR_BreakOnly|BR_HighBit,
	/* 144 */	0x00, BR_HighBit,
	/* 145 */	0x00, BR_HighBit,
	/* 146 */	0x00, BR_HighBit,
	/* 147 */	0x00, BR_HighBit,
	/* 148 */	0x00, BR_HighBit,
	/* 149 */	0x00, BR_HighBit,
};

extern const CMakeBreaks IBM_3486_MKBR =
{
	/*			pre byte, type */
	/*   0 */	0x00, BR_MakeOnly,
	/*   1 */	0x00, BR_MakeOnly,
	/*   2 */	0x00, BR_MakeOnly,
	/*   3 */	0x00, BR_MakeOnly,
	/*   4 */	0x00, BR_MakeOnly,
	/*   5 */	0x00, BR_MakeOnly,
	/*   6 */	0x00, BR_MakeOnly,
	/*   7 */	0x00, BR_MakeOnly,
	/*   8 */	0x00, BR_MakeOnly,
	/*   9 */	0x00, BR_MakeOnly,
	/*  10 */	0x00, BR_MakeOnly,
	/*  11 */	0x00, BR_MakeOnly,
	/*  12 */	0x00, BR_MakeOnly,
	/*  13 */	0x00, BR_MakeOnly,
	/*  14 */	0x00, BR_MakeOnly,
	/*  15 */	0x00, BR_MakeOnly,
	/*  16 */	0x00, BR_MakeOnly,
	/*  17 */	0x00, BR_MakeOnly,
	/*  18 */	0x00, BR_MakeOnly,
	/*  19 */	0x00, BR_MakeOnly,
	/*  20 */	0x00, BR_MakeOnly,
	/*  21 */	0x00, BR_MakeOnly,
	/*  22 */	0x00, BR_MakeOnly,
	/*  23 */	0x00, BR_MakeOnly,
	/*  24 */	0x00, BR_MakeOnly,
	/*  25 */	0x00, BR_MakeOnly,
	/*  26 */	0x00, BR_MakeOnly,
	/*  27 */	0x00, BR_MakeOnly,
	/*  28 */	0x00, BR_MakeOnly,
	/*  29 */	0x00, BR_MakeOnly,
	/*  30 */	0x00, BR_MakeOnly,
	/*  31 */	0x00, BR_MakeOnly,
	/*  32 */	0x00, BR_MakeOnly,
	/*  33 */	0x00, BR_MakeOnly,
	/*  34 */	0x00, BR_MakeOnly,
	/*  35 */	0x00, BR_MakeOnly,
	/*  36 */	0x00, BR_MakeOnly,
	/*  37 */	0x00, BR_MakeOnly,
	/*  38 */	0x00, BR_MakeOnly,
	/*  39 */	0x00, BR_MakeOnly,
	/*  40 */	0x00, BR_MakeOnly,
	/*  41 */	0x00, BR_MakeOnly,
	/*  42 */	0x00, BR_MakeOnly,
	/*  43 */	0x00, BR_MakeOnly,
	/*  44 */	0xf0, BR_Pre,
	/*  45 */	0x00, BR_MakeOnly,
	/*  46 */	0x00, BR_MakeOnly,
	/*  47 */	0x00, BR_MakeOnly,
	/*  48 */	0x00, BR_MakeOnly,
	/*  49 */	0x00, BR_MakeOnly,
	/*  50 */	0x00, BR_MakeOnly,
	/*  51 */	0x00, BR_MakeOnly,
	/*  52 */	0x00, BR_MakeOnly,
	/*  53 */	0x00, BR_MakeOnly,
	/*  54 */	0x00, BR_MakeOnly,
	/*  55 */	0x00, BR_MakeOnly,
	/*  56 */	0x00, BR_MakeOnly,
	/*  57 */	0xf0, BR_Pre,
	/*  58 */	0xf0, BR_Pre,
	/*  59 */	0x00, BR_MakeOnly,
	/*  60 */	0xf0, BR_Pre,
	/*  61 */	0x00, BR_MakeOnly,
	/*  62 */	0xf0, BR_Pre,
	/*  63 */	0x00, BR_MakeOnly,
	/*  64 */	0x00, BR_MakeOnly,
	/*  65 */	0x00, BR_MakeOnly,
	/*  66 */	0x00, BR_MakeOnly,
	/*  67 */	0x00, BR_MakeOnly,
	/*  68 */	0x00, BR_MakeOnly,
	/*  69 */	0x00, BR_MakeOnly,
	/*  70 */	0x00, BR_MakeOnly,
	/*  71 */	0x00, BR_MakeOnly,
	/*  72 */	0x00, BR_MakeOnly,
	/*  73 */	0x00, BR_MakeOnly,
	/*  74 */	0x00, BR_MakeOnly,
	/*  75 */	0x00, BR_MakeOnly,
	/*  76 */	0x00, BR_MakeOnly,
	/*  77 */	0x00, BR_MakeOnly,
	/*  78 */	0x00, BR_MakeOnly,
	/*  79 */	0x00, BR_MakeOnly,
	/*  80 */	0x00, BR_MakeOnly,
	/*  81 */	0x00, BR_MakeOnly,
	/*  82 */	0x00, BR_MakeOnly,
	/*  83 */	0x00, BR_MakeOnly,
	/*  84 */	0x00, BR_MakeOnly,
	/*  85 */	0x00, BR_MakeOnly,
	/*  86 */	0x00, BR_MakeOnly,
	/*  87 */	0x00, BR_MakeOnly,
	/*  88 */	0x00, BR_MakeOnly,
	/*  89 */	0x00, BR_MakeOnly,
	/*  90 */	0x00, BR_MakeOnly,
	/*  91 */	0x00, BR_MakeOnly,
	/*  92 */	0x00, BR_MakeOnly,
	/*  93 */	0x00, BR_MakeOnly,
	/*  94 */	0x00, BR_MakeOnly,
	/*  95 */	0x00, BR_MakeOnly,
	/*  96 */	0x00, BR_MakeOnly,
	/*  97 */	0x00, BR_MakeOnly,
	/*  98 */	0x00, BR_MakeOnly,
	/*  99 */	0x00, BR_MakeOnly,
	/* 100 */	0x00, BR_MakeOnly,
	/* 101 */	0x00, BR_MakeOnly,
	/* 102 */	0x00, BR_MakeOnly,
	/* 103 */	0x00, BR_MakeOnly,
	/* 104 */	0x00, BR_MakeOnly,
	/* 105 */	0x00, BR_MakeOnly,
	/* 106 */	0x00, BR_MakeOnly,
	/* 107 */	0x00, BR_MakeOnly,
	/* 108 */	0x00, BR_MakeOnly,
	/* 109 */	0x00, BR_MakeOnly,
	/* 110 */	0x00, BR_MakeOnly,
	/* 111 */	0x00, BR_MakeOnly,
	/* 112 */	0x00, BR_MakeOnly,
	/* 113 */	0x00, BR_MakeOnly,
	/* 114 */	0x00, BR_MakeOnly,
	/* 115 */	0x00, BR_MakeOnly,
	/* 116 */	0x00, BR_MakeOnly,
	/* 117 */	0x00, BR_MakeOnly,
	/* 118 */	0x00, BR_MakeOnly,
	/* 119 */	0x00, BR_MakeOnly,
	/* 120 */	0x00, BR_MakeOnly,
	/* 121 */	0x00, BR_MakeOnly,
	/* 122 */	0x00, BR_MakeOnly,
	/* 123 */	0x00, BR_MakeOnly,
	/* 124 */	0x00, BR_MakeOnly,
	/* 125 */	0x00, BR_MakeOnly,
	/* 126 */	0x00, BR_MakeOnly,
	/* 127 */	0x00, BR_MakeOnly,
	/* 128 */	0x00, BR_MakeOnly,
	/* 129 */	0x00, BR_MakeOnly,
	/* 130 */	0x00, BR_MakeOnly,
	/* 131 */	0x00, BR_MakeOnly,
	/* 132 */	0x00, BR_MakeOnly,
	/* 133 */	0x00, BR_MakeOnly,
	/* 134 */	0x00, BR_MakeOnly,
	/* 135 */	0x00, BR_MakeOnly,
	/* 136 */	0x00, BR_MakeOnly,
	/* 137 */	0x00, BR_MakeOnly,
	/* 138 */	0x00, BR_MakeOnly,
	/* 139 */	0x00, BR_MakeOnly,
	/* 140 */	0x00, BR_MakeOnly,
	/* 141 */	0x00, BR_MakeOnly,
	/* 142 */	0x00, BR_MakeOnly,
	/* 143 */	0x00, BR_MakeOnly,
	/* 144 */	0x00, BR_MakeOnly,
	/* 145 */	0x00, BR_MakeOnly,
	/* 146 */	0x00, BR_MakeOnly,
	/* 147 */	0x00, BR_MakeOnly,
	/* 148 */	0x00, BR_MakeOnly,
	/* 149 */	0x00, BR_MakeOnly,
};

extern const CMakeBreaks IBM_3178_MKBR =
{
	/*			pre byte, type */
	/*   0 */	0x00, BR_MakeOnly,
	/*   1 */	0x00, BR_MakeOnly,
	/*   2 */	0x00, BR_MakeOnly,
	/*   3 */	0x00, BR_MakeOnly,
	/*   4 */	0x00, BR_MakeOnly,
	/*   5 */	0x00, BR_MakeOnly,
	/*   6 */	0x00, BR_MakeOnly,
	/*   7 */	0x00, BR_MakeOnly,
	/*   8 */	0x00, BR_MakeOnly,
	/*   9 */	0x00, BR_MakeOnly,
	/*  10 */	0x00, BR_MakeOnly,
	/*  11 */	0x00, BR_MakeOnly,
	/*  12 */	0x00, BR_MakeOnly,
	/*  13 */	0x00, BR_MakeOnly,
	/*  14 */	0x00, BR_MakeOnly,
	/*  15 */	0x00, BR_MakeOnly,
	/*  16 */	0x00, BR_MakeOnly,
	/*  17 */	0x00, BR_MakeOnly,
	/*  18 */	0x00, BR_MakeOnly,
	/*  19 */	0x00, BR_MakeOnly,
	/*  20 */	0x00, BR_MakeOnly,
	/*  21 */	0x00, BR_MakeOnly,
	/*  22 */	0x00, BR_MakeOnly,
	/*  23 */	0x00, BR_MakeOnly,
	/*  24 */	0x00, BR_MakeOnly,
	/*  25 */	0x00, BR_MakeOnly,
	/*  26 */	0x00, BR_MakeOnly,
	/*  27 */	0x00, BR_MakeOnly,
	/*  28 */	0x00, BR_MakeOnly,
	/*  29 */	0x00, BR_MakeOnly,
	/*  30 */	0x00, BR_MakeOnly,
	/*  31 */	0x00, BR_MakeOnly,
	/*  32 */	0x00, BR_MakeOnly,
	/*  33 */	0x00, BR_MakeOnly,
	/*  34 */	0x00, BR_MakeOnly,
	/*  35 */	0x00, BR_MakeOnly,
	/*  36 */	0x00, BR_MakeOnly,
	/*  37 */	0x00, BR_MakeOnly,
	/*  38 */	0x00, BR_MakeOnly,
	/*  39 */	0x00, BR_MakeOnly,
	/*  40 */	0x00, BR_MakeOnly,
	/*  41 */	0x00, BR_MakeOnly,
	/*  42 */	0x00, BR_MakeOnly,
	/*  43 */	0x00, BR_MakeOnly,
	/*  44 */	0x00, BR_HighBit,
	/*  45 */	0x00, BR_MakeOnly,
	/*  46 */	0x00, BR_MakeOnly,
	/*  47 */	0x00, BR_MakeOnly,
	/*  48 */	0x00, BR_MakeOnly,
	/*  49 */	0x00, BR_MakeOnly,
	/*  50 */	0x00, BR_MakeOnly,
	/*  51 */	0x00, BR_MakeOnly,
	/*  52 */	0x00, BR_MakeOnly,
	/*  53 */	0x00, BR_MakeOnly,
	/*  54 */	0x00, BR_MakeOnly,
	/*  55 */	0x00, BR_MakeOnly,
	/*  56 */	0x00, BR_MakeOnly,
	/*  57 */	0x00, BR_HighBit,
	/*  58 */	0x00, BR_HighBit,
	/*  59 */	0x00, BR_MakeOnly,
	/*  60 */	0x00, BR_HighBit,
	/*  61 */	0x00, BR_MakeOnly,
	/*  62 */	0x00, BR_HighBit,
	/*  63 */	0x00, BR_MakeOnly,
	/*  64 */	0x00, BR_HighBit,
	/*  65 */	0x00, BR_MakeOnly,
	/*  66 */	0x00, BR_MakeOnly,
	/*  67 */	0x00, BR_MakeOnly,
	/*  68 */	0x00, BR_MakeOnly,
	/*  69 */	0x00, BR_MakeOnly,
	/*  70 */	0x00, BR_MakeOnly,
	/*  71 */	0x00, BR_MakeOnly,
	/*  72 */	0x00, BR_MakeOnly,
	/*  73 */	0x00, BR_MakeOnly,
	/*  74 */	0x00, BR_MakeOnly,
	/*  75 */	0x00, BR_MakeOnly,
	/*  76 */	0x00, BR_MakeOnly,
	/*  77 */	0x00, BR_MakeOnly,
	/*  78 */	0x00, BR_MakeOnly,
	/*  79 */	0x00, BR_MakeOnly,
	/*  80 */	0x00, BR_MakeOnly,
	/*  81 */	0x00, BR_MakeOnly,
	/*  82 */	0x00, BR_MakeOnly,
	/*  83 */	0x00, BR_MakeOnly,
	/*  84 */	0x00, BR_MakeOnly,
	/*  85 */	0x00, BR_MakeOnly,
	/*  86 */	0x00, BR_MakeOnly,
	/*  87 */	0x00, BR_MakeOnly,
	/*  88 */	0x00, BR_MakeOnly,
	/*  89 */	0x00, BR_MakeOnly,
	/*  90 */	0x00, BR_MakeOnly,
	/*  91 */	0x00, BR_MakeOnly,
	/*  92 */	0x00, BR_MakeOnly,
	/*  93 */	0x00, BR_MakeOnly,
	/*  94 */	0x00, BR_MakeOnly,
	/*  95 */	0x00, BR_MakeOnly,
	/*  96 */	0x00, BR_MakeOnly,
	/*  97 */	0x00, BR_MakeOnly,
	/*  98 */	0x00, BR_MakeOnly,
	/*  99 */	0x00, BR_MakeOnly,
	/* 100 */	0x00, BR_MakeOnly,
	/* 101 */	0x00, BR_MakeOnly,
	/* 102 */	0x00, BR_MakeOnly,
	/* 103 */	0x00, BR_MakeOnly,
	/* 104 */	0x00, BR_MakeOnly,
	/* 105 */	0x00, BR_MakeOnly,
	/* 106 */	0x00, BR_MakeOnly,
	/* 107 */	0x00, BR_MakeOnly,
	/* 108 */	0x00, BR_MakeOnly,
	/* 109 */	0x00, BR_MakeOnly,
	/* 110 */	0x00, BR_MakeOnly,
	/* 111 */	0x00, BR_MakeOnly,
	/* 112 */	0x00, BR_MakeOnly,
	/* 113 */	0x00, BR_MakeOnly,
	/* 114 */	0x00, BR_MakeOnly,
	/* 115 */	0x00, BR_MakeOnly,
	/* 116 */	0x00, BR_MakeOnly,
	/* 117 */	0x00, BR_MakeOnly,
	/* 118 */	0x00, BR_MakeOnly,
	/* 119 */	0x00, BR_MakeOnly,
	/* 120 */	0x00, BR_MakeOnly,
	/* 121 */	0x00, BR_MakeOnly,
	/* 122 */	0x00, BR_MakeOnly,
	/* 123 */	0x00, BR_MakeOnly,
	/* 124 */	0x00, BR_MakeOnly,
	/* 125 */	0x00, BR_MakeOnly,
	/* 126 */	0x00, BR_MakeOnly,
	/* 127 */	0x00, BR_MakeOnly,
	/* 128 */	0x00, BR_MakeOnly,
	/* 129 */	0x00, BR_MakeOnly,
	/* 130 */	0x00, BR_MakeOnly,
	/* 131 */	0x00, BR_MakeOnly,
	/* 132 */	0x00, BR_MakeOnly,
	/* 133 */	0x00, BR_MakeOnly,
	/* 134 */	0x00, BR_MakeOnly,
	/* 135 */	0x00, BR_MakeOnly,
	/* 136 */	0x00, BR_MakeOnly,
	/* 137 */	0x00, BR_MakeOnly,
	/* 138 */	0x00, BR_MakeOnly,
	/* 139 */	0x00, BR_MakeOnly,
	/* 140 */	0x00, BR_MakeOnly,
	/* 141 */	0x00, BR_MakeOnly,
	/* 142 */	0x00, BR_MakeOnly,
	/* 143 */	0x00, BR_MakeOnly,
	/* 144 */	0x00, BR_MakeOnly,
	/* 145 */	0x00, BR_MakeOnly,
	/* 146 */	0x00, BR_MakeOnly,
	/* 147 */	0x00, BR_MakeOnly,
	/* 148 */	0x00, BR_MakeOnly,
	/* 149 */	0x00, BR_MakeOnly,
};

extern const CMakeBreaks Telex_1x2_MKBR =
{
	/*			pre byte, type */
	/*   0 */	0x00, BR_MakeOnly,
	/*   1 */	0x00, BR_MakeOnly,
	/*   2 */	0x00, BR_MakeOnly,
	/*   3 */	0x00, BR_MakeOnly,
	/*   4 */	0x00, BR_MakeOnly,
	/*   5 */	0x00, BR_MakeOnly,
	/*   6 */	0x00, BR_MakeOnly,
	/*   7 */	0x00, BR_MakeOnly,
	/*   8 */	0x00, BR_MakeOnly,
	/*   9 */	0x00, BR_MakeOnly,
	/*  10 */	0x00, BR_MakeOnly,
	/*  11 */	0x00, BR_MakeOnly,
	/*  12 */	0x00, BR_MakeOnly,
	/*  13 */	0x00, BR_MakeOnly,
	/*  14 */	0x00, BR_MakeOnly,
	/*  15 */	0x00, BR_MakeOnly,
	/*  16 */	0x00, BR_MakeOnly,
	/*  17 */	0x00, BR_MakeOnly,
	/*  18 */	0x00, BR_MakeOnly,
	/*  19 */	0x00, BR_MakeOnly,
	/*  20 */	0x00, BR_MakeOnly,
	/*  21 */	0x00, BR_MakeOnly,
	/*  22 */	0x00, BR_MakeOnly,
	/*  23 */	0x00, BR_MakeOnly,
	/*  24 */	0x00, BR_MakeOnly,
	/*  25 */	0x00, BR_MakeOnly,
	/*  26 */	0x00, BR_MakeOnly,
	/*  27 */	0x00, BR_MakeOnly,
	/*  28 */	0x00, BR_MakeOnly,
	/*  29 */	0x00, BR_MakeOnly,
	/*  30 */	0x00, BR_MakeOnly,
	/*  31 */	0x00, BR_MakeOnly,
	/*  32 */	0x00, BR_MakeOnly,
	/*  33 */	0x00, BR_MakeOnly,
	/*  34 */	0x00, BR_MakeOnly,
	/*  35 */	0x00, BR_MakeOnly,
	/*  36 */	0x00, BR_MakeOnly,
	/*  37 */	0x00, BR_MakeOnly,
	/*  38 */	0x00, BR_MakeOnly,
	/*  39 */	0x00, BR_MakeOnly,
	/*  40 */	0x00, BR_MakeOnly,
	/*  41 */	0x00, BR_MakeOnly,
	/*  42 */	0x00, BR_MakeOnly,
	/*  43 */	0x00, BR_MakeOnly,
	/*  44 */	0xf0, BR_Pre,
	/*  45 */	0x00, BR_MakeOnly,
	/*  46 */	0x00, BR_MakeOnly,
	/*  47 */	0x00, BR_MakeOnly,
	/*  48 */	0x00, BR_MakeOnly,
	/*  49 */	0x00, BR_MakeOnly,
	/*  50 */	0x00, BR_MakeOnly,
	/*  51 */	0x00, BR_MakeOnly,
	/*  52 */	0x00, BR_MakeOnly,
	/*  53 */	0x00, BR_MakeOnly,
	/*  54 */	0x00, BR_MakeOnly,
	/*  55 */	0x00, BR_MakeOnly,
	/*  56 */	0x00, BR_MakeOnly,
	/*  57 */	0xf0, BR_Pre,
	/*  58 */	0xf0, BR_Pre,
	/*  59 */	0x00, BR_MakeOnly,
	/*  60 */	0xf0, BR_Pre,
	/*  61 */	0x00, BR_MakeOnly,
	/*  62 */	0xf0, BR_Pre,
	/*  63 */	0x00, BR_MakeOnly,
	/*  64 */	0xf0, BR_Pre,
	/*  65 */	0x00, BR_MakeOnly,
	/*  66 */	0x00, BR_MakeOnly,
	/*  67 */	0x00, BR_MakeOnly,
	/*  68 */	0x00, BR_MakeOnly,
	/*  69 */	0x00, BR_MakeOnly,
	/*  70 */	0x00, BR_MakeOnly,
	/*  71 */	0x00, BR_MakeOnly,
	/*  72 */	0x00, BR_MakeOnly,
	/*  73 */	0x00, BR_MakeOnly,
	/*  74 */	0x00, BR_MakeOnly,
	/*  75 */	0x00, BR_MakeOnly,
	/*  76 */	0x00, BR_MakeOnly,
	/*  77 */	0x00, BR_MakeOnly,
	/*  78 */	0x00, BR_MakeOnly,
	/*  79 */	0x00, BR_MakeOnly,
	/*  80 */	0x00, BR_MakeOnly,
	/*  81 */	0x00, BR_MakeOnly,
	/*  82 */	0x00, BR_MakeOnly,
	/*  83 */	0x00, BR_MakeOnly,
	/*  84 */	0x00, BR_MakeOnly,
	/*  85 */	0x00, BR_MakeOnly,
	/*  86 */	0x00, BR_MakeOnly,
	/*  87 */	0x00, BR_MakeOnly,
	/*  88 */	0x00, BR_MakeOnly,
	/*  89 */	0x00, BR_MakeOnly,
	/*  90 */	0x00, BR_MakeOnly,
	/*  91 */	0x00, BR_MakeOnly,
	/*  92 */	0x00, BR_MakeOnly,
	/*  93 */	0x00, BR_MakeOnly,
	/*  94 */	0x00, BR_MakeOnly,
	/*  95 */	0x00, BR_MakeOnly,
	/*  96 */	0x00, BR_MakeOnly,
	/*  97 */	0x00, BR_MakeOnly,
	/*  98 */	0x00, BR_MakeOnly,
	/*  99 */	0x00, BR_MakeOnly,
	/* 100 */	0x00, BR_MakeOnly,
	/* 101 */	0x00, BR_MakeOnly,
	/* 102 */	0x00, BR_MakeOnly,
	/* 103 */	0x00, BR_MakeOnly,
	/* 104 */	0x00, BR_MakeOnly,
	/* 105 */	0x00, BR_MakeOnly,
	/* 106 */	0x00, BR_MakeOnly,
	/* 107 */	0x00, BR_MakeOnly,
	/* 108 */	0x00, BR_MakeOnly,
	/* 109 */	0x00, BR_MakeOnly,
	/* 110 */	0x00, BR_MakeOnly,
	/* 111 */	0x00, BR_MakeOnly,
	/* 112 */	0x00, BR_MakeOnly,
	/* 113 */	0x00, BR_MakeOnly,
	/* 114 */	0x00, BR_MakeOnly,
	/* 115 */	0x00, BR_MakeOnly,
	/* 116 */	0x00, BR_MakeOnly,
	/* 117 */	0x00, BR_MakeOnly,
	/* 118 */	0x00, BR_MakeOnly,
	/* 119 */	0x00, BR_MakeOnly,
	/* 120 */	0x00, BR_MakeOnly,
	/* 121 */	0x00, BR_MakeOnly,
	/* 122 */	0x00, BR_MakeOnly,
	/* 123 */	0x00, BR_MakeOnly,
	/* 124 */	0x00, BR_MakeOnly,
	/* 125 */	0x00, BR_MakeOnly,
	/* 126 */	0x00, BR_MakeOnly,
	/* 127 */	0x00, BR_MakeOnly,
	/* 128 */	0x00, BR_MakeOnly,
	/* 129 */	0x00, BR_MakeOnly,
	/* 130 */	0x00, BR_MakeOnly,
	/* 131 */	0x00, BR_MakeOnly,
	/* 132 */	0x00, BR_MakeOnly,
	/* 133 */	0x00, BR_MakeOnly,
	/* 134 */	0x00, BR_MakeOnly,
	/* 135 */	0x00, BR_MakeOnly,
	/* 136 */	0x00, BR_MakeOnly,
	/* 137 */	0x00, BR_MakeOnly,
	/* 138 */	0x00, BR_MakeOnly,
	/* 139 */	0x00, BR_MakeOnly,
	/* 140 */	0x00, BR_MakeOnly,
	/* 141 */	0x00, BR_MakeOnly,
	/* 142 */	0x00, BR_MakeOnly,
	/* 143 */	0x00, BR_MakeOnly,
	/* 144 */	0x00, BR_MakeOnly,
	/* 145 */	0x00, BR_MakeOnly,
	/* 146 */	0x00, BR_MakeOnly,
	/* 147 */	0x00, BR_MakeOnly,
	/* 148 */	0x00, BR_MakeOnly,
	/* 149 */	0x00, BR_MakeOnly,
};

extern const CMakeBreaks USB_KEYBOARD_MKBR =
{
	/*			pre byte, type */
	/*   0 */	0x00, BR_MakeOnly,
	/*   1 */	0x00, BR_MakeOnly,
	/*   2 */	0x00, BR_MakeOnly,
	/*   3 */	0x00, BR_MakeOnly,
	/*   4 */	0x00, BR_MakeOnly,
	/*   5 */	0x00, BR_MakeOnly,
	/*   6 */	0x00, BR_MakeOnly,
	/*   7 */	0x00, BR_MakeOnly,
	/*   8 */	0x00, BR_MakeOnly,
	/*   9 */	0x00, BR_MakeOnly,
	/*  10 */	0x00, BR_MakeOnly,
	/*  11 */	0x00, BR_MakeOnly,
	/*  12 */	0x00, BR_MakeOnly,
	/*  13 */	0x00, BR_MakeOnly,
	/*  14 */	0x00, BR_MakeOnly,
	/*  15 */	0x00, BR_MakeOnly,
	/*  16 */	0x00, BR_MakeOnly,
	/*  17 */	0x00, BR_MakeOnly,
	/*  18 */	0x00, BR_MakeOnly,
	/*  19 */	0x00, BR_MakeOnly,
	/*  20 */	0x00, BR_MakeOnly,
	/*  21 */	0x00, BR_MakeOnly,
	/*  22 */	0x00, BR_MakeOnly,
	/*  23 */	0x00, BR_MakeOnly,
	/*  24 */	0x00, BR_MakeOnly,
	/*  25 */	0x00, BR_MakeOnly,
	/*  26 */	0x00, BR_MakeOnly,
	/*  27 */	0x00, BR_MakeOnly,
	/*  28 */	0x00, BR_MakeOnly,
	/*  29 */	0x00, BR_MakeOnly,
	/*  30 */	0x00, BR_MakeOnly,
	/*  31 */	0x00, BR_MakeOnly,
	/*  32 */	0x00, BR_MakeOnly,
	/*  33 */	0x00, BR_MakeOnly,
	/*  34 */	0x00, BR_MakeOnly,
	/*  35 */	0x00, BR_MakeOnly,
	/*  36 */	0x00, BR_MakeOnly,
	/*  37 */	0x00, BR_MakeOnly,
	/*  38 */	0x00, BR_MakeOnly,
	/*  39 */	0x00, BR_MakeOnly,
	/*  40 */	0x00, BR_MakeOnly,
	/*  41 */	0x00, BR_MakeOnly,
	/*  42 */	0x00, BR_MakeOnly,
	/*  43 */	0x00, BR_MakeOnly,
	/*  44 */	0xf0, BR_Pre,
	/*  45 */	0x00, BR_MakeOnly,
	/*  46 */	0x00, BR_MakeOnly,
	/*  47 */	0x00, BR_MakeOnly,
	/*  48 */	0x00, BR_MakeOnly,
	/*  49 */	0x00, BR_MakeOnly,
	/*  50 */	0x00, BR_MakeOnly,
	/*  51 */	0x00, BR_MakeOnly,
	/*  52 */	0x00, BR_MakeOnly,
	/*  53 */	0x00, BR_MakeOnly,
	/*  54 */	0x00, BR_MakeOnly,
	/*  55 */	0x00, BR_MakeOnly,
	/*  56 */	0x00, BR_MakeOnly,
	/*  57 */	0xf0, BR_Pre,
	/*  58 */	0xf0, BR_Pre,
	/*  59 */	0xf0, BR_Pre,
	/*  60 */	0xf0, BR_Pre,
	/*  61 */	0x00, BR_MakeOnly,
	/*  62 */	0xf0, BR_Pre,
	/*  63 */	0xf0, BR_Pre,
	/*  64 */	0xf0, BR_Pre,
	/*  65 */	0x00, BR_MakeOnly,
	/*  66 */	0x00, BR_MakeOnly,
	/*  67 */	0x00, BR_MakeOnly,
	/*  68 */	0x00, BR_MakeOnly,
	/*  69 */	0x00, BR_MakeOnly,
	/*  70 */	0x00, BR_MakeOnly,
	/*  71 */	0x00, BR_MakeOnly,
	/*  72 */	0x00, BR_MakeOnly,
	/*  73 */	0x00, BR_MakeOnly,
	/*  74 */	0x00, BR_MakeOnly,
	/*  75 */	0x00, BR_MakeOnly,
	/*  76 */	0x00, BR_MakeOnly,
	/*  77 */	0x00, BR_MakeOnly,
	/*  78 */	0x00, BR_MakeOnly,
	/*  79 */	0x00, BR_MakeOnly,
	/*  80 */	0x00, BR_MakeOnly,
	/*  81 */	0x00, BR_MakeOnly,
	/*  82 */	0x00, BR_MakeOnly,
	/*  83 */	0x00, BR_MakeOnly,
	/*  84 */	0x00, BR_MakeOnly,
	/*  85 */	0x00, BR_MakeOnly,
	/*  86 */	0x00, BR_MakeOnly,
	/*  87 */	0x00, BR_MakeOnly,
	/*  88 */	0x00, BR_MakeOnly,
	/*  89 */	0x00, BR_MakeOnly,
	/*  90 */	0x00, BR_All,
	/*  91 */	0x00, BR_All,
	/*  92 */	0x00, BR_All,
	/*  93 */	0x00, BR_All,
	/*  94 */	0x00, BR_MakeOnly,
	/*  95 */	0x00, BR_All,
	/*  96 */	0x00, BR_All,
	/*  97 */	0x00, BR_All,
	/*  98 */	0x00, BR_All,
	/*  99 */	0x00, BR_All,
	/* 100 */	0x00, BR_All,
	/* 101 */	0x00, BR_All,
	/* 102 */	0x00, BR_All,
	/* 103 */	0x00, BR_All,
	/* 104 */	0x00, BR_MakeOnly,
	/* 105 */	0x00, BR_MakeOnly,
	/* 106 */	0x00, BR_MakeOnly,
	/* 107 */	0x00, BR_MakeOnly,
	/* 108 */	0x00, BR_MakeOnly,
	/* 109 */	0x00, BR_MakeOnly,
	/* 110 */	0x00, BR_MakeOnly,
	/* 111 */	0x00, BR_MakeOnly,
	/* 112 */	0x00, BR_MakeOnly,
	/* 113 */	0x00, BR_MakeOnly,
	/* 114 */	0x00, BR_MakeOnly,
	/* 115 */	0x00, BR_MakeOnly,
	/* 116 */	0x00, BR_MakeOnly,
	/* 117 */	0x00, BR_MakeOnly,
	/* 118 */	0x00, BR_MakeOnly,
	/* 119 */	0x00, BR_MakeOnly,
	/* 120 */	0x00, BR_MakeOnly,
	/* 121 */	0x00, BR_MakeOnly,
	/* 122 */	0x00, BR_MakeOnly,
	/* 123 */	0x00, BR_MakeOnly,
	/* 124 */	0x00, BR_MakeOnly,
	/* 125 */	0x00, BR_MakeOnly,
	/* 126 */	0x00, BR_MakeOnly,
	/* 127 */	0x00, BR_MakeOnly,
	/* 128 */	0x00, BR_MakeOnly,
	/* 129 */	0x00, BR_MakeOnly,
	/* 130 */	0x00, BR_MakeOnly,
	/* 131 */	0x00, BR_MakeOnly,
	/* 132 */	0x00, BR_MakeOnly,
	/* 133 */	0x00, BR_MakeOnly,
	/* 134 */	0x00, BR_MakeOnly,
	/* 135 */	0x00, BR_MakeOnly,
	/* 136 */	0x00, BR_MakeOnly,
	/* 137 */	0x00, BR_MakeOnly,
	/* 138 */	0x00, BR_MakeOnly,
	/* 139 */	0xf0, BR_BreakOnly|BR_Pre,
	/* 140 */	0x00, BR_MakeOnly,
	/* 141 */	0xf0, BR_BreakOnly|BR_Pre,
	/* 142 */	0x00, BR_MakeOnly,
	/* 143 */	0xf0, BR_BreakOnly|BR_Pre,
	/* 144 */	0x00, BR_MakeOnly,
	/* 145 */	0x00, BR_MakeOnly,
	/* 146 */	0x00, BR_MakeOnly,
	/* 147 */	0x00, BR_MakeOnly,
	/* 148 */	0x00, BR_MakeOnly,
	/* 149 */	0x00, BR_MakeOnly,
};

/******************************************************/
/* ASCII to Keynum translation tables                 */
/******************************************************/
/* Tables for sending numbers via the numpad */
extern const keynum_t AT_NumPad[];
extern const keynum_t DE_NumPad[];
/*								         0, 1, 2,  3, 4, 5,  6, 7, 8, 9	*/
const keynum_t AT_NumPad[] =	{ 99,93,98,103,92,97,102,91,96,101 };
const keynum_t DE_NumPad[] =	{ 94,93,98,103,92,97,102,91,96,101 };

extern const CChar2Key IBM_WIN_EPC_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	 108, 0           ,	/* Enter           */
	/* 0x02 */	  30, 0           ,	/* CAPS            */
	/* 0x03 */	 140, 0           ,	/* V_ALTmake       */
	/* 0x04 */	 141, 0           ,	/* V_ALTbreak      */
	/* 0x05 */	 142, 0           ,	/* V_CNTRLmake     */
	/* 0x06 */	 143, 0           ,	/* V_CNTRLbreak    */
	/* 0x07 */	  43, 0           ,	/* RETURN          */
	/* 0x08 */	  79, 0           ,	/* LEFT            */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	  84, 0           ,	/* DOWN            */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  76, 0           ,	/* Del             */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	  75, 0           ,	/* Ins             */
	/* 0x0f */	 110, 0           ,	/* ESC             */
	/* 0x10 */	 122, 0           ,	/* F11             */
	/* 0x11 */	  80, 0           ,	/* Home            */
	/* 0x12 */	 124, 0           ,	/* Prnt Scrn       */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  16, MO_ShiftLeft,	/* TAB             */
	/* 0x15 */	 123, 0           ,	/* F12             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	   2, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  53, MO_ShiftLeft,
	/* '='  */	  13, 0,
	/* '>'  */	  54, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	  27, 0,
	/* '\'  */	  29, 0,
	/* ']'  */	  28, 0,
	/* '^'  */	   7, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  27, MO_ShiftLeft,
	/* '|'  */	  29, MO_ShiftLeft,
	/* '}'  */	  28, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	 104, 0           ,	/* . Del           */
};

extern const CChar2Key IBM_XT_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  43, 0           ,	/* RETURN          */
	/* 0x02 */	  30, 0           ,	/* CAPS            */
	/* 0x03 */	 140, 0           ,	/* V_ALTmake       */
	/* 0x04 */	 141, 0           ,	/* V_ALTbreak      */
	/* 0x05 */	 142, 0           ,	/* V_CNTRLmake     */
	/* 0x06 */	 143, 0           ,	/* V_CNTRLbreak    */
	/* 0x07 */	  43, 0           ,	/* RETURN          */
	/* 0x08 */	   0, 0           ,	/*                 */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	   0, 0           ,	/*                 */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	 104, 0           ,	/* . Del           */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	  99, 0           ,	/* 0 Ins           */
	/* 0x0f */	   1, 0           ,	/* ESC             */
	/* 0x10 */	   0, 0           ,	/*                 */
	/* 0x11 */	  91, 0           ,	/* 7 Home          */
	/* 0x12 */	 124, 0           ,	/* Prnt Scrn       */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  16, MO_ShiftLeft,	/* TAB             */
	/* 0x15 */	   0, 0           ,	/*                 */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	   2, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  53, MO_ShiftLeft,
	/* '='  */	  13, 0,
	/* '>'  */	  54, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	  27, 0,
	/* '\'  */	  45, 0,
	/* ']'  */	  28, 0,
	/* '^'  */	   7, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	  42, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  27, MO_ShiftLeft,
	/* '|'  */	  45, MO_ShiftLeft,
	/* '}'  */	  28, MO_ShiftLeft,
	/* '~'  */	  42, MO_ShiftLeft,
	/* 0x7f */	 104, 0           ,	/*                 */
};

extern const CChar2Key DEC_VT510_LK411_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	 108, 0           ,	/* Enter           */
	/* 0x02 */	  90, 0           ,	/* PF1             */
	/* 0x03 */	  95, 0           ,	/* PF2             */
	/* 0x04 */	 100, 0           ,	/* PF3             */
	/* 0x05 */	 105, 0           ,	/* PF4             */
	/* 0x06 */	 112, 0           ,	/* F1              */
	/* 0x07 */	 113, 0           ,	/* F2              */
	/* 0x08 */	 114, 0           ,	/* F3              */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	 115, 0           ,	/* F4              */
	/* 0x0b */	 116, 0           ,	/* F5              */
	/* 0x0c */	 117, 0           ,	/* F6              */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	 118, 0           ,	/* F7              */
	/* 0x0f */	 119, 0           ,	/* F8              */
	/* 0x10 */	 120, 0           ,	/* F9              */
	/* 0x11 */	 121, 0           ,	/* F10             */
	/* 0x12 */	 122, 0           ,	/* F11             */
	/* 0x13 */	 123, 0           ,	/* F12             */
	/* 0x14 */	 124, 0           ,	/* F13             */
	/* 0x15 */	 125, 0           ,	/* F14             */
	/* 0x16 */	 126, 0           ,	/* Help            */
	/* 0x17 */	 127, 0           ,	/* Do              */
	/* 0x18 */	 130, 0           ,	/* F17             */
	/* 0x19 */	 131, 0           ,	/* F18             */
	/* 0x1a */	 132, 0           ,	/* F19             */
	/* 0x1b */	 133, 0           ,	/* F20             */
	/* 0x1c */	  83, 0           ,	/* UP              */
	/* 0x1d */	  79, 0           ,	/* LEFT            */
	/* 0x1e */	  84, 0           ,	/* DOWN            */
	/* 0x1f */	  89, 0           ,	/* RIGHT           */
	/* ' '  */	  61, 0,
	/* '!'  */	   2, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  53, MO_ShiftLeft,
	/* '='  */	  13, 0,
	/* '>'  */	  54, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	  27, 0,
	/* '\'  */	  42, 0,
	/* ']'  */	  28, 0,
	/* '^'  */	   7, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  27, MO_ShiftLeft,
	/* '|'  */	  42, MO_ShiftLeft,
	/* '}'  */	  28, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	 104, 0           ,	/*                 */
};

extern const CChar2Key IBM_EPC_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	 108, 0           ,	/* Enter           */
	/* 0x02 */	  30, 0           ,	/* CAPS            */
	/* 0x03 */	 140, 0           ,	/* V_ALTmake       */
	/* 0x04 */	 141, 0           ,	/* V_ALTbreak      */
	/* 0x05 */	 142, 0           ,	/* V_CNTRLmake     */
	/* 0x06 */	 143, 0           ,	/* V_CNTRLbreak    */
	/* 0x07 */	  43, 0           ,	/* RETURN          */
	/* 0x08 */	  79, 0           ,	/* LEFT            */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	  84, 0           ,	/* DOWN            */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  76, 0           ,	/* Del             */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	  75, 0           ,	/* Ins             */
	/* 0x0f */	 110, 0           ,	/* ESC             */
	/* 0x10 */	 122, 0           ,	/* F11             */
	/* 0x11 */	  80, 0           ,	/* Home            */
	/* 0x12 */	 124, 0           ,	/* Prnt Scrn       */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  16, MO_ShiftLeft,	/* TAB             */
	/* 0x15 */	 123, 0           ,	/* F12             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	   2, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  53, MO_ShiftLeft,
	/* '='  */	  13, 0,
	/* '>'  */	  54, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	  27, 0,
	/* '\'  */	  29, 0,
	/* ']'  */	  28, 0,
	/* '^'  */	   7, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  27, MO_ShiftLeft,
	/* '|'  */	  29, MO_ShiftLeft,
	/* '}'  */	  28, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	 104, 0           ,	/* . Del           */
};

extern const CChar2Key IBM_3486_102_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  64, 0           ,	/* Enter           */
	/* 0x02 */	 122, 0           ,	/* F11             */
	/* 0x03 */	 123, 0           ,	/* F12             */
	/* 0x04 */	 112, MO_ShiftLeft,	/* F1              */
	/* 0x05 */	 113, MO_ShiftLeft,	/* F2              */
	/* 0x06 */	 114, MO_ShiftLeft,	/* F3              */
	/* 0x07 */	  43, MO_ShiftLeft,	/* Field Exit      */
	/* 0x08 */	 115, MO_ShiftLeft,	/* F4              */
	/* 0x09 */	 116, MO_ShiftLeft,	/* F5              */
	/* 0x0a */	 117, MO_ShiftLeft,	/* F6              */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  76, 0           ,	/* Delete          */
	/* 0x0d */	  43, 0           ,	/* Field Exit      */
	/* 0x0e */	  75, 0           ,	/* Insert          */
	/* 0x0f */	 126, 0           ,	/* Clear           */
	/* 0x10 */	  58, 0           ,	/* Reset           */
	/* 0x11 */	  80, 0           ,	/* Home            */
	/* 0x12 */	 124, 0           ,	/* Print           */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  16, MO_ShiftLeft,	/* TAB             */
	/* 0x15 */	 118, MO_ShiftLeft,	/* F7              */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	   2, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  53, MO_ShiftLeft,
	/* '='  */	  13, 0,
	/* '>'  */	  54, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	  27, 0,
	/* '\'  */	  29, 0,
	/* ']'  */	  28, 0,
	/* '^'  */	   7, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  27, MO_ShiftLeft,
	/* '|'  */	  29, MO_ShiftLeft,
	/* '}'  */	  28, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	  76, 0           ,	/* Delete          */
};

extern const CChar2Key IBM_3486_122_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  64, 0           ,	/* Enter           */
	/* 0x02 */	 122, 0           ,	/* F11             */
	/* 0x03 */	 123, 0           ,	/* F12             */
	/* 0x04 */	 127, 0           ,	/* F13             */
	/* 0x05 */	 128, 0           ,	/* F14             */
	/* 0x06 */	 129, 0           ,	/* F15             */
	/* 0x07 */	  76, 0           ,	/* RETURN          */
	/* 0x08 */	 130, 0           ,	/* F16             */
	/* 0x09 */	 131, 0           ,	/* F17             */
	/* 0x0a */	 132, 0           ,	/* F18             */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  86, 0           ,	/* Delete          */
	/* 0x0d */	  43, 0           ,	/* Field Exit      */
	/* 0x0e */	  81, 0           ,	/* Insert          */
	/* 0x0f */	 133, 0           ,	/* F19             */
	/* 0x10 */	  58, 0           ,	/* Reset           */
	/* 0x11 */	  82, MO_AltLeft  ,	/* Rule            */
	/* 0x12 */	 134, 0           ,	/* F20             */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  75, 0           ,	/* BACKTAB         */
	/* 0x15 */	 135, 0           ,	/* F21             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	  27, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  45, 0,
	/* '='  */	  13, 0,
	/* '>'  */	  45, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	   0, 0,
	/* '\'  */	  28, 0,
	/* ']'  */	   0, 0,
	/* '^'  */	   0, 0,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  42, 0,
	/* '|'  */	  28, MO_ShiftLeft,
	/* '}'  */	  42, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	  86, 0           ,	/* Delete          */
};

extern const CChar2Key IBM_3191_122_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  64, 0           ,	/* Enter           */
	/* 0x02 */	 122, 0           ,	/* F11             */
	/* 0x03 */	 123, 0           ,	/* F12             */
	/* 0x04 */	 127, 0           ,	/* F13             */
	/* 0x05 */	 128, 0           ,	/* F14             */
	/* 0x06 */	 129, 0           ,	/* F15             */
	/* 0x07 */	  43, 0           ,	/* Field Exit      */
	/* 0x08 */	 130, 0           ,	/* F16             */
	/* 0x09 */	 131, 0           ,	/* F17             */
	/* 0x0a */	 132, 0           ,	/* F18             */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  86, 0           ,	/* Delete          */
	/* 0x0d */	  43, 0           ,	/* Field Exit      */
	/* 0x0e */	  81, 0           ,	/* Insert          */
	/* 0x0f */	 133, 0           ,	/* F19             */
	/* 0x10 */	  58, 0           ,	/* Reset           */
	/* 0x11 */	  82, MO_AltLeft  ,	/* Rule            */
	/* 0x12 */	 134, 0           ,	/* F20             */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  76, 0           ,	/* BACKTAB         */
	/* 0x15 */	 135, 0           ,	/* F21             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	  27, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  45, 0,
	/* '='  */	  13, 0,
	/* '>'  */	  45, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	   0, 0,
	/* '\'  */	  28, 0,
	/* ']'  */	   0, 0,
	/* '^'  */	   0, 0,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  42, 0,
	/* '|'  */	   2, MO_ShiftLeft,
	/* '}'  */	  42, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	  86, 0           ,	/* Delete          */
};

extern const CChar2Key TELEX88_COLL_Layout =
{
	/* NumPad   */	NULL,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  64, 0           ,	/* Enter           */
	/* 0x02 */	  11, MO_AltRight ,	/*                 */
	/* 0x03 */	  12, MO_AltRight ,	/*                 */
	/* 0x04 */	  13, MO_AltRight ,	/*                 */
	/* 0x05 */	   0, 0           ,	/*                 */
	/* 0x06 */	   0, 0           ,	/*                 */
	/* 0x07 */	  43, 0           ,	/* RETURN          */
	/* 0x08 */	  16, 0           ,	/* TAB             */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	   0, 0           ,	/*                 */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  86, 0           ,	/* Delete          */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	  81, 0           ,	/* Insert          */
	/* 0x0f */	  67, 0           ,	/* Erase EOF       */
	/* 0x10 */	  58, 0           ,	/* Error Reset     */
	/* 0x11 */	   0, 0           ,	/*                 */
	/* 0x12 */	  73, 0           ,	/* Print           */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  76, 0           ,	/* BACKTAB         */
	/* 0x15 */	   0, 0           ,	/*                 */
	/* 0x16 */	   2, MO_AltRight ,	/*                 */
	/* 0x17 */	   3, MO_AltRight ,	/*                 */
	/* 0x18 */	   4, MO_AltRight ,	/*                 */
	/* 0x19 */	   5, MO_AltRight ,	/*                 */
	/* 0x1a */	   6, MO_AltRight ,	/*                 */
	/* 0x1b */	   7, MO_AltRight ,	/*                 */
	/* 0x1c */	   8, MO_AltRight ,	/*                 */
	/* 0x1d */	   9, MO_AltRight ,	/*                 */
	/* 0x1e */	  10, MO_AltRight ,	/*                 */
	/* 0x1f */	  29, MO_AltRight ,	/*                 */
	/* ' '  */	  61, 0,
	/* '!'  */	  27, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  45, 0,
	/* '='  */	  13, 0,
	/* '>'  */	  45, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	   0, 0,
	/* '\'  */	  28, 0,
	/* ']'  */	   0, 0,
	/* '^'  */	 147, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  42, 0,
	/* '|'  */	   2, MO_ShiftLeft,
	/* '}'  */	  42, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	  86, 0           ,	/* Delete          */
};

/* The follwing layout table is for DATA-ENTRY mode */
extern const CChar2Key IBM_3178_DATA_ENTRY_COLL_Layout =
{
	/* NumPad   */	DE_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  64, 0           ,	/* Enter           */
	/* 0x02 */	  11, MO_AltRight ,	/*                 */
	/* 0x03 */	  12, MO_AltRight ,	/*                 */
	/* 0x04 */	  13, MO_AltRight ,	/*                 */
	/* 0x05 */	   0, 0           ,	/*                 */
	/* 0x06 */	   0, 0           ,	/*                 */
	/* 0x07 */	  43, 0           ,	/* RETURN          */
	/* 0x08 */	  16, 0           ,	/* TAB             */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	   0, 0           ,	/*                 */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  86, 0           ,	/* Delete          */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	  81, 0           ,	/* Insert          */
	/* 0x0f */	  67, 0           ,	/* Erase EOF       */
	/* 0x10 */	  58, 0           ,	/* Error Reset     */
	/* 0x11 */	   0, 0           ,	/*                 */
	/* 0x12 */	  73, 0           ,	/* Print           */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  76, 0           ,	/* BACKTAB         */
	/* 0x15 */	   0, 0           ,	/*                 */
	/* 0x16 */	   2, MO_AltRight ,	/*                 */
	/* 0x17 */	   3, MO_AltRight ,	/*                 */
	/* 0x18 */	   4, MO_AltRight ,	/*                 */
	/* 0x19 */	   5, MO_AltRight ,	/*                 */
	/* 0x1a */	   6, MO_AltRight ,	/*                 */
	/* 0x1b */	   7, MO_AltRight ,	/*                 */
	/* 0x1c */	   8, MO_AltRight ,	/*                 */
	/* 0x1d */	   9, MO_AltRight ,	/*                 */
	/* 0x1e */	  10, MO_AltRight ,	/*                 */
	/* 0x1f */	  29, MO_AltRight ,	/*                 */
	/* ' '  */	  61, 0,
	/* '!'  */	  50, MO_ShiftLeft,
	/* '"'  */	  48, MO_ShiftLeft,
	/* '#'  */	   3, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   4, MO_ShiftRight,
	/* '&'  */	  26, MO_ShiftLeft,
	/* '''  */	  36, MO_ShiftLeft,
	/* '('  */	  51, MO_ShiftLeft,
	/* ')'  */	  19, MO_ShiftLeft,
	/* '*'  */	   5, MO_ShiftRight,
	/* '+'  */	  17, MO_ShiftLeft,
	/* ','  */	  53, MO_ShiftRight,
	/* '-'  */	   9, MO_ShiftRight,
	/* '.'  */	  54, MO_ShiftRight,
	/* '/'  */	  10, MO_ShiftRight,
	/* '0'  */	  10, MO_ShiftLeft,
	/* '1'  */	  23, MO_ShiftLeft,
	/* '2'  */	  24, MO_ShiftLeft,
	/* '3'  */	  25, MO_ShiftLeft,
	/* '4'  */	  37, MO_ShiftLeft,
	/* '5'  */	  38, MO_ShiftLeft,
	/* '6'  */	  39, MO_ShiftLeft,
	/* '7'  */	  52, MO_ShiftLeft,
	/* '8'  */	  53, MO_ShiftLeft,
	/* '9'  */	  54, MO_ShiftLeft,
	/* ':'  */	  33, MO_ShiftLeft,
	/* ';'  */	  34, MO_ShiftLeft,
	/* '<'  */	   6, MO_ShiftRight,
	/* '='  */	  49, MO_ShiftLeft,
	/* '>'  */	  32, MO_ShiftLeft,
	/* '?'  */	  47, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftRight,
	/* 'A'  */	  31, MO_ShiftRight,
	/* 'B'  */	  50, MO_ShiftRight,
	/* 'C'  */	  48, MO_ShiftRight,
	/* 'D'  */	  33, MO_ShiftRight,
	/* 'E'  */	  19, MO_ShiftRight,
	/* 'F'  */	  34, MO_ShiftRight,
	/* 'G'  */	  35, MO_ShiftRight,
	/* 'H'  */	  36, MO_ShiftRight,
	/* 'I'  */	  24, MO_ShiftRight,
	/* 'J'  */	  37, MO_ShiftRight,
	/* 'K'  */	  38, MO_ShiftRight,
	/* 'L'  */	  39, MO_ShiftRight,
	/* 'M'  */	  52, MO_ShiftRight,
	/* 'N'  */	  51, MO_ShiftRight,
	/* 'O'  */	  25, MO_ShiftRight,
	/* 'P'  */	  26, MO_ShiftRight,
	/* 'Q'  */	  17, MO_ShiftRight,
	/* 'R'  */	  20, MO_ShiftRight,
	/* 'S'  */	  32, MO_ShiftRight,
	/* 'T'  */	  21, MO_ShiftRight,
	/* 'U'  */	  23, MO_ShiftRight,
	/* 'V'  */	  49, MO_ShiftRight,
	/* 'W'  */	  18, MO_ShiftRight,
	/* 'X'  */	  47, MO_ShiftRight,
	/* 'Y'  */	  22, MO_ShiftRight,
	/* 'Z'  */	  46, MO_ShiftRight,
	/* '['  */	   0, 0,
	/* '\'  */	  21, MO_ShiftLeft,
	/* ']'  */	   0, 0,
	/* '^'  */	   0, 0,
	/* '_'  */	   9, MO_ShiftLeft,
	/* '`'  */	   0, 0,
	/* 'a'  */	  31, MO_ShiftRight,
	/* 'b'  */	  50, MO_ShiftRight,
	/* 'c'  */	  48, MO_ShiftRight,
	/* 'd'  */	  33, MO_ShiftRight,
	/* 'e'  */	  19, MO_ShiftRight,
	/* 'f'  */	  34, MO_ShiftRight,
	/* 'g'  */	  35, MO_ShiftRight,
	/* 'h'  */	  36, MO_ShiftRight,
	/* 'i'  */	  24, MO_ShiftRight,
	/* 'j'  */	  37, MO_ShiftRight,
	/* 'k'  */	  38, MO_ShiftRight,
	/* 'l'  */	  39, MO_ShiftRight,
	/* 'm'  */	  52, MO_ShiftRight,
	/* 'n'  */	  51, MO_ShiftRight,
	/* 'o'  */	  25, MO_ShiftRight,
	/* 'p'  */	  26, MO_ShiftRight,
	/* 'q'  */	  17, MO_ShiftRight,
	/* 'r'  */	  20, MO_ShiftRight,
	/* 's'  */	  32, MO_ShiftRight,
	/* 't'  */	  21, MO_ShiftRight,
	/* 'u'  */	  23, MO_ShiftRight,
	/* 'v'  */	  49, MO_ShiftRight,
	/* 'w'  */	  18, MO_ShiftRight,
	/* 'x'  */	  47, MO_ShiftRight,
	/* 'y'  */	  22, MO_ShiftRight,
	/* 'z'  */	  46, MO_ShiftRight,
	/* '{'  */	   0, 0,
	/* '|'  */	  22, MO_ShiftLeft,
	/* '}'  */	   0, 0,
	/* '~'  */	   0, 0,
	/* 0x7f */	  86, 0           ,	/* Delete          */
};

/* The follwing layout table is for DATA-ENTRY mode */
extern const CChar2Key IBM_3180_DATA_ENTRY_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  64, 0           ,	/* Enter           */
	/* 0x02 */	 122, 0           ,	/* F11             */
	/* 0x03 */	 123, 0           ,	/* F12             */
	/* 0x04 */	 127, 0           ,	/* F13             */
	/* 0x05 */	 128, 0           ,	/* F14             */
	/* 0x06 */	 129, 0           ,	/* F15             */
	/* 0x07 */	  43, 0           ,	/* Field Exit      */
	/* 0x08 */	 130, 0           ,	/* F16             */
	/* 0x09 */	 131, 0           ,	/* F17             */
	/* 0x0a */	 132, 0           ,	/* F18             */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  86, 0           ,	/* Delete          */
	/* 0x0d */	  43, 0           ,	/* Field Exit      */
	/* 0x0e */	  81, 0           ,	/* Insert          */
	/* 0x0f */	 133, 0           ,	/* F19             */
	/* 0x10 */	  58, 0           ,	/* Reset           */
	/* 0x11 */	  82, MO_AltLeft  ,	/* Rule            */
	/* 0x12 */	 134, 0           ,	/* F20             */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  76, 0           ,	/* BACKTAB         */
	/* 0x15 */	 135, 0           ,	/* F21             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	  50, MO_ShiftLeft,
	/* '"'  */	  48, MO_ShiftLeft,
	/* '#'  */	   3, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   4, MO_ShiftRight,
	/* '&'  */	  26, MO_ShiftLeft,
	/* '''  */	  36, MO_ShiftLeft,
	/* '('  */	  51, MO_ShiftLeft,
	/* ')'  */	  19, MO_ShiftLeft,
	/* '*'  */	   5, MO_ShiftRight,
	/* '+'  */	  17, MO_ShiftLeft,
	/* ','  */	  53, MO_ShiftRight,
	/* '-'  */	   9, MO_ShiftRight,
	/* '.'  */	  54, MO_ShiftRight,
	/* '/'  */	  10, MO_ShiftRight,
	/* '0'  */	  10, MO_ShiftLeft,
	/* '1'  */	  23, MO_ShiftLeft,
	/* '2'  */	  24, MO_ShiftLeft,
	/* '3'  */	  25, MO_ShiftLeft,
	/* '4'  */	  37, MO_ShiftLeft,
	/* '5'  */	  38, MO_ShiftLeft,
	/* '6'  */	  39, MO_ShiftLeft,
	/* '7'  */	  52, MO_ShiftLeft,
	/* '8'  */	  53, MO_ShiftLeft,
	/* '9'  */	  54, MO_ShiftLeft,
	/* ':'  */	  33, MO_ShiftLeft,
	/* ';'  */	  34, MO_ShiftLeft,
	/* '<'  */	   6, MO_ShiftRight,
	/* '='  */	  49, MO_ShiftLeft,
	/* '>'  */	  32, MO_ShiftLeft,
	/* '?'  */	  47, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftRight,
	/* 'A'  */	  31, MO_ShiftRight,
	/* 'B'  */	  50, MO_ShiftRight,
	/* 'C'  */	  48, MO_ShiftRight,
	/* 'D'  */	  33, MO_ShiftRight,
	/* 'E'  */	  19, MO_ShiftRight,
	/* 'F'  */	  34, MO_ShiftRight,
	/* 'G'  */	  35, MO_ShiftRight,
	/* 'H'  */	  36, MO_ShiftRight,
	/* 'I'  */	  24, MO_ShiftRight,
	/* 'J'  */	  37, MO_ShiftRight,
	/* 'K'  */	  38, MO_ShiftRight,
	/* 'L'  */	  39, MO_ShiftRight,
	/* 'M'  */	  52, MO_ShiftRight,
	/* 'N'  */	  51, MO_ShiftRight,
	/* 'O'  */	  25, MO_ShiftRight,
	/* 'P'  */	  26, MO_ShiftRight,
	/* 'Q'  */	  17, MO_ShiftRight,
	/* 'R'  */	  20, MO_ShiftRight,
	/* 'S'  */	  32, MO_ShiftRight,
	/* 'T'  */	  21, MO_ShiftRight,
	/* 'U'  */	  23, MO_ShiftRight,
	/* 'V'  */	  49, MO_ShiftRight,
	/* 'W'  */	  18, MO_ShiftRight,
	/* 'X'  */	  47, MO_ShiftRight,
	/* 'Y'  */	  22, MO_ShiftRight,
	/* 'Z'  */	  46, MO_ShiftRight,
	/* '['  */	   0, 0,
	/* '\'  */	  21, MO_ShiftLeft,
	/* ']'  */	   0, 0,
	/* '^'  */	   0, 0,
	/* '_'  */	   9, MO_ShiftLeft,
	/* '`'  */	   0, 0,
	/* 'a'  */	  31, MO_ShiftRight,
	/* 'b'  */	  50, MO_ShiftRight,
	/* 'c'  */	  48, MO_ShiftRight,
	/* 'd'  */	  33, MO_ShiftRight,
	/* 'e'  */	  19, MO_ShiftRight,
	/* 'f'  */	  34, MO_ShiftRight,
	/* 'g'  */	  35, MO_ShiftRight,
	/* 'h'  */	  36, MO_ShiftRight,
	/* 'i'  */	  24, MO_ShiftRight,
	/* 'j'  */	  37, MO_ShiftRight,
	/* 'k'  */	  38, MO_ShiftRight,
	/* 'l'  */	  39, MO_ShiftRight,
	/* 'm'  */	  52, MO_ShiftRight,
	/* 'n'  */	  51, MO_ShiftRight,
	/* 'o'  */	  25, MO_ShiftRight,
	/* 'p'  */	  26, MO_ShiftRight,
	/* 'q'  */	  17, MO_ShiftRight,
	/* 'r'  */	  20, MO_ShiftRight,
	/* 's'  */	  32, MO_ShiftRight,
	/* 't'  */	  21, MO_ShiftRight,
	/* 'u'  */	  23, MO_ShiftRight,
	/* 'v'  */	  49, MO_ShiftRight,
	/* 'w'  */	  18, MO_ShiftRight,
	/* 'x'  */	  47, MO_ShiftRight,
	/* 'y'  */	  22, MO_ShiftRight,
	/* 'z'  */	  46, MO_ShiftRight,
	/* '{'  */	   0, 0,
	/* '|'  */	  22, MO_ShiftLeft,
	/* '}'  */	   0, 0,
	/* '~'  */	   0, 0,
	/* 0x7f */	  86, 0           ,	/* Delete          */
};

extern const CChar2Key ADI_1496_122_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	  64, 0           ,	/* Enter           */
	/* 0x02 */	 122, 0           ,	/* F11             */
	/* 0x03 */	 123, 0           ,	/* F12             */
	/* 0x04 */	 127, 0           ,	/* F13             */
	/* 0x05 */	 128, 0           ,	/* F14             */
	/* 0x06 */	 129, 0           ,	/* F15             */
	/* 0x07 */	  76, 0           ,	/* RETURN          */
	/* 0x08 */	 130, 0           ,	/* F16             */
	/* 0x09 */	 131, 0           ,	/* F17             */
	/* 0x0a */	 132, 0           ,	/* F18             */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  86, 0           ,	/* Delete          */
	/* 0x0d */	  43, 0           ,	/* Field Exit      */
	/* 0x0e */	  81, 0           ,	/* Insert          */
	/* 0x0f */	 133, 0           ,	/* F19             */
	/* 0x10 */	  58, 0           ,	/* Reset           */
	/* 0x11 */	  82, MO_AltLeft  ,	/* Rule            */
	/* 0x12 */	 134, 0           ,	/* F20             */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  75, 0           ,	/* BACKTAB         */
	/* 0x15 */	 135, 0           ,	/* F21             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	  27, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  45, 0,
	/* '='  */	  13, 0,
	/* '>'  */	  45, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	   0, 0,
	/* '\'  */	  28, 0,
	/* ']'  */	   0, 0,
	/* '^'  */	   0, 0,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  42, 0,
	/* '|'  */	   2, MO_ShiftLeft,
	/* '}'  */	  42, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	  86, 0           ,	/* Delete          */
};

extern const CChar2Key BDS_7_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	 105, 0           ,	/* Xmit            */
	/* 0x02 */	   0, 0           ,	/*                 */
	/* 0x03 */	   0, 0           ,	/*                 */
	/* 0x04 */	   0, 0           ,	/*                 */
	/* 0x05 */	  95, 0           ,	/* BACKTAB         */
	/* 0x06 */	   0, 0           ,	/*                 */
	/* 0x07 */	  43, 0           ,	/* RETURN          */
	/* 0x08 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	 122, 0           ,	/* F11             */
	/* 0x0b */	 123, 0           ,	/* F12             */
	/* 0x0c */	  86, 0           ,	/* Del             */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	  76, 0           ,	/* Ins             */
	/* 0x0f */	  81, 0           ,	/* Erase           */
	/* 0x10 */	  90, 0           ,	/* Reset           */
	/* 0x11 */	  83, 0           ,	/* Home            */
	/* 0x12 */	  86, 0           ,	/* Del             */
	/* 0x13 */	  81, 0           ,	/* Erase           */
	/* 0x14 */	  81, 0           ,	/* Erase           */
	/* 0x15 */	  76, 0           ,	/* Ins             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	   2, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  53, MO_ShiftLeft,
	/* '='  */	  13, 0,
	/* '>'  */	  54, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	  28, MO_ShiftLeft,
	/* '\'  */	  27, MO_ShiftLeft,
	/* ']'  */	  28, 0,
	/* '^'  */	   7, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  42, MO_ShiftLeft,
	/* '|'  */	  27, 0,
	/* '}'  */	  42, 0,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	 104, 0           ,	/*                 */
};

extern const CChar2Key APPLE_USB_COLL_Layout =
{
	/* NumPad   */	AT_NumPad,
	/* Max ANSI */	127,

	/*       	  KN, MODIFIER */
	/* 0x00 */	   0, 0           ,	/*                 */
	/* 0x01 */	 108, 0           ,	/* Enter           */
	/* 0x02 */	  30, 0           ,	/* CAPS            */
	/* 0x03 */	 140, 0           ,	/* V_ALTmake       */
	/* 0x04 */	 141, 0           ,	/* V_ALTbreak      */
	/* 0x05 */	 142, 0           ,	/* V_CNTRLmake     */
	/* 0x06 */	 143, 0           ,	/* V_CNTRLbreak    */
	/* 0x07 */	  43, 0           ,	/* RETURN          */
	/* 0x08 */	 138, 0           ,	/* V_APPLEmake     */
	/* 0x09 */	  16, 0           ,	/* TAB             */
	/* 0x0a */	 139, 0           ,	/* V_APPLEbreak    */
	/* 0x0b */	  16, 0           ,	/* TAB             */
	/* 0x0c */	  76, 0           ,	/* Del             */
	/* 0x0d */	  43, 0           ,	/* RETURN          */
	/* 0x0e */	  75, 0           ,	/* Ins Help        */
	/* 0x0f */	 110, 0           ,	/* ESC             */
	/* 0x10 */	 122, 0           ,	/* F11             */
	/* 0x11 */	  80, 0           ,	/* Home            */
	/* 0x12 */	 124, 0           ,	/* Prnt Scrn       */
	/* 0x13 */	  15, 0           ,	/* BACKSPACE       */
	/* 0x14 */	  16, MO_ShiftLeft,	/* TAB             */
	/* 0x15 */	 123, 0           ,	/* F12             */
	/* 0x16 */	 112, 0           ,	/* F1              */
	/* 0x17 */	 113, 0           ,	/* F2              */
	/* 0x18 */	 114, 0           ,	/* F3              */
	/* 0x19 */	 115, 0           ,	/* F4              */
	/* 0x1a */	 116, 0           ,	/* F5              */
	/* 0x1b */	 117, 0           ,	/* F6              */
	/* 0x1c */	 118, 0           ,	/* F7              */
	/* 0x1d */	 119, 0           ,	/* F8              */
	/* 0x1e */	 120, 0           ,	/* F9              */
	/* 0x1f */	 121, 0           ,	/* F10             */
	/* ' '  */	  61, 0,
	/* '!'  */	   2, MO_ShiftLeft,
	/* '"'  */	  41, MO_ShiftLeft,
	/* '#'  */	   4, MO_ShiftLeft,
	/* '$'  */	   5, MO_ShiftLeft,
	/* '%'  */	   6, MO_ShiftLeft,
	/* '&'  */	   8, MO_ShiftLeft,
	/* '''  */	  41, 0,
	/* '('  */	  10, MO_ShiftLeft,
	/* ')'  */	  11, MO_ShiftLeft,
	/* '*'  */	   9, MO_ShiftLeft,
	/* '+'  */	  13, MO_ShiftLeft,
	/* ','  */	  53, 0,
	/* '-'  */	  12, 0,
	/* '.'  */	  54, 0,
	/* '/'  */	  55, 0,
	/* '0'  */	  11, 0,
	/* '1'  */	   2, 0,
	/* '2'  */	   3, 0,
	/* '3'  */	   4, 0,
	/* '4'  */	   5, 0,
	/* '5'  */	   6, 0,
	/* '6'  */	   7, 0,
	/* '7'  */	   8, 0,
	/* '8'  */	   9, 0,
	/* '9'  */	  10, 0,
	/* ':'  */	  40, MO_ShiftLeft,
	/* ';'  */	  40, 0,
	/* '<'  */	  53, MO_ShiftLeft,
	/* '='  */	  13, 0,
	/* '>'  */	  54, MO_ShiftLeft,
	/* '?'  */	  55, MO_ShiftLeft,
	/* '@'  */	   3, MO_ShiftLeft,
	/* 'A'  */	  31, MO_ShiftLeft,
	/* 'B'  */	  50, MO_ShiftLeft,
	/* 'C'  */	  48, MO_ShiftLeft,
	/* 'D'  */	  33, MO_ShiftLeft,
	/* 'E'  */	  19, MO_ShiftLeft,
	/* 'F'  */	  34, MO_ShiftLeft,
	/* 'G'  */	  35, MO_ShiftLeft,
	/* 'H'  */	  36, MO_ShiftLeft,
	/* 'I'  */	  24, MO_ShiftLeft,
	/* 'J'  */	  37, MO_ShiftLeft,
	/* 'K'  */	  38, MO_ShiftLeft,
	/* 'L'  */	  39, MO_ShiftLeft,
	/* 'M'  */	  52, MO_ShiftLeft,
	/* 'N'  */	  51, MO_ShiftLeft,
	/* 'O'  */	  25, MO_ShiftLeft,
	/* 'P'  */	  26, MO_ShiftLeft,
	/* 'Q'  */	  17, MO_ShiftLeft,
	/* 'R'  */	  20, MO_ShiftLeft,
	/* 'S'  */	  32, MO_ShiftLeft,
	/* 'T'  */	  21, MO_ShiftLeft,
	/* 'U'  */	  23, MO_ShiftLeft,
	/* 'V'  */	  49, MO_ShiftLeft,
	/* 'W'  */	  18, MO_ShiftLeft,
	/* 'X'  */	  47, MO_ShiftLeft,
	/* 'Y'  */	  22, MO_ShiftLeft,
	/* 'Z'  */	  46, MO_ShiftLeft,
	/* '['  */	  27, 0,
	/* '\'  */	  29, 0,
	/* ']'  */	  28, 0,
	/* '^'  */	   7, MO_ShiftLeft,
	/* '_'  */	  12, MO_ShiftLeft,
	/* '`'  */	   1, 0,
	/* 'a'  */	  31, 0,
	/* 'b'  */	  50, 0,
	/* 'c'  */	  48, 0,
	/* 'd'  */	  33, 0,
	/* 'e'  */	  19, 0,
	/* 'f'  */	  34, 0,
	/* 'g'  */	  35, 0,
	/* 'h'  */	  36, 0,
	/* 'i'  */	  24, 0,
	/* 'j'  */	  37, 0,
	/* 'k'  */	  38, 0,
	/* 'l'  */	  39, 0,
	/* 'm'  */	  52, 0,
	/* 'n'  */	  51, 0,
	/* 'o'  */	  25, 0,
	/* 'p'  */	  26, 0,
	/* 'q'  */	  17, 0,
	/* 'r'  */	  20, 0,
	/* 's'  */	  32, 0,
	/* 't'  */	  21, 0,
	/* 'u'  */	  23, 0,
	/* 'v'  */	  49, 0,
	/* 'w'  */	  18, 0,
	/* 'x'  */	  47, 0,
	/* 'y'  */	  22, 0,
	/* 'z'  */	  46, 0,
	/* '{'  */	  27, MO_ShiftLeft,
	/* '|'  */	  29, MO_ShiftLeft,
	/* '}'  */	  28, MO_ShiftLeft,
	/* '~'  */	   1, MO_ShiftLeft,
	/* 0x7f */	  15, 0           ,	/* BACKSPACE       */
};


// Forward declarations for pointer tables
extern const CKeyFixups IBM_XT_FixupPtr;
extern const CKeyFixups IBM_AT_FixupPtr;
extern const CKeyFixups DEC_VT510_PC_FixupPtr;
extern const CKeyFixups IBM_3486_102_FixupPtr;
extern const CKeyFixups IBM_3191_122_FixupPtr;
extern const CKeyFixups IBM_3486_122_FixupPtr;
extern const CKeyFixups Telex_88_FixupPtr;
extern const CKeyFixups BDS_7_FixupPtr;
extern const CKeyFixups DEC_VT510_LK411_FixupPtr;
extern const CKeyFixups Telex_88_DATA_ENTRY_FixupPtr;
extern const CKeyFixups APPLE_USB_FixupPtr;

/******************************************************/
/* Terminal properties                                */
/******************************************************/

extern const CWedgeTerminal IBM_AT_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_MSDOS|CAP_CNTRL_WIN|CAP_ALT_NUMPAD_DOS|CAP_ALT_NUMPAD_WIN|CAP_ALT_NUMPAD_UNI|CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_WIN_EPC_COLL_Layout,
	/* international info      */	&IBM_AT_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET2_SCAN,
	/* make/break info         */	&IBM_AT_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	90,
};

extern const CWedgeTerminal IBM_PS2_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_MSDOS|CAP_CNTRL_WIN|CAP_ALT_NUMPAD_DOS|CAP_ALT_NUMPAD_WIN|CAP_ALT_NUMPAD_UNI|CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_WIN_EPC_COLL_Layout,
	/* international info      */	&IBM_AT_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET1_SCAN,
	/* make/break info         */	&IBM_PS2_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	90,
};

extern const CWedgeTerminal IBM_THINKPAD_PS2_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_MSDOS|CAP_CNTRL_WIN|CAP_ALT_NUMPAD_DOS|CAP_ALT_NUMPAD_WIN|CAP_ALT_NUMPAD_UNI|CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_WIN_EPC_COLL_Layout,
	/* international info      */	&IBM_AT_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET1_SCAN,
	/* make/break info         */	&IBM_PS2_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	90,
};

extern const CWedgeTerminal IBM_THINKPAD_AT_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_MSDOS|CAP_CNTRL_WIN|CAP_ALT_NUMPAD_DOS|CAP_ALT_NUMPAD_WIN|CAP_ALT_NUMPAD_UNI|CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_WIN_EPC_COLL_Layout,
	/* international info      */	&IBM_AT_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET2_SCAN,
	/* make/break info         */	&IBM_AT_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	90,
};

extern const CWedgeTerminal IBM_XT_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_MSDOS|CAP_ALT_NUMPAD_DOS|CAP_ALT_NUMPAD_WIN,
	/* ANSI to keynumber       */	&IBM_XT_COLL_Layout,
	/* international info      */	&IBM_XT_FixupPtr,
	/* keynumber to scancode   */	&IBM_XT_SCAN,
	/* make/break info         */	&IBM_PS2_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	10000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal DEC_VT510_LK411_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_DECVT|CAP_COMPOSE_NUMPAD_DECIMAL|CAP_SUPPORT_KEYEMU|CAP_NEED_AUTO_KEYEMU,
	/* ANSI to keynumber       */	&DEC_VT510_LK411_COLL_Layout,
	/* international info      */	&DEC_VT510_LK411_FixupPtr,
	/* keynumber to scancode   */	&DEC_VT510_LK411_SCAN,
	/* make/break info         */	&IBM_AT_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	59,
	/* rcompose	  (key number) */	63,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal DEC_VT510_PC_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_DECVT|CAP_ALT_NUMPAD_DOS|CAP_SUPPORT_KEYEMU|CAP_NEED_AUTO_KEYEMU,
	/* ANSI to keynumber       */	&IBM_EPC_COLL_Layout,
	/* international info      */	&DEC_VT510_PC_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_AT_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	90,
};

extern const CWedgeTerminal IBM_3486_102_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_3486_102_COLL_Layout,
	/* international info      */	&IBM_3486_102_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_3486_MKBR,
	/* short delay      (uSec) */	 3000,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	10000,
	/* interchar delay  (uSec) */	15000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal IBM_3486_122_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_3486_122_COLL_Layout,
	/* international info      */	&IBM_3486_122_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_3486_MKBR,
	/* short delay      (uSec) */	 3000,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	10000,
	/* interchar delay  (uSec) */	15000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal IBM_3191_122_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&IBM_3191_122_COLL_Layout,
	/* international info      */	&IBM_3191_122_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_3486_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	20000,
	/* interchar delay  (uSec) */	10000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal IBM_3180_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_3191_122_COLL_Layout,
	/* international info      */	&IBM_3191_122_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_3486_MKBR,
	/* short delay      (uSec) */	 3000,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	35000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal Telex_88_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&TELEX88_COLL_Layout,
	/* international info      */	&Telex_88_FixupPtr,
	/* keynumber to scancode   */	&IBM_3178_SCAN,
	/* make/break info         */	&IBM_3178_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	20000,
	/* interchar delay  (uSec) */	10000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	0,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal Telex_102_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&IBM_3486_102_COLL_Layout,
	/* international info      */	&IBM_3486_102_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&Telex_1x2_MKBR,
	/* short delay      (uSec) */	 3000,
	/* medium delay     (uSec) */	15000,
	/* long delay       (uSec) */	15000,
	/* interchar delay  (uSec) */	10000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal Telex_122_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&IBM_3191_122_COLL_Layout,
	/* international info      */	&IBM_3191_122_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&Telex_1x2_MKBR,
	/* short delay      (uSec) */	 3000,
	/* medium delay     (uSec) */	15000,
	/* long delay       (uSec) */	15000,
	/* interchar delay  (uSec) */	10000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal Telex_88_DATA_ENTRY_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&IBM_3178_DATA_ENTRY_COLL_Layout,
	/* international info      */	&Telex_88_DATA_ENTRY_FixupPtr,
	/* keynumber to scancode   */	&IBM_3178_SCAN,
	/* make/break info         */	&IBM_3178_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	20000,
	/* interchar delay  (uSec) */	10000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	0,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal IBM_3180_DATA_ENTRY_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_SUPPORT_KEYEMU,
	/* ANSI to keynumber       */	&IBM_3180_DATA_ENTRY_COLL_Layout,
	/* international info      */	&Telex_88_DATA_ENTRY_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_3486_MKBR,
	/* short delay      (uSec) */	 3000,
	/* medium delay     (uSec) */	10000,
	/* long delay       (uSec) */	35000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal ADI_1496_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&ADI_1496_122_COLL_Layout,
	/* international info      */	&IBM_3486_122_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_AT_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal DDC_3496_102_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&IBM_3486_102_COLL_Layout,
	/* international info      */	&IBM_3486_102_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_AT_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal DDC_3496_122_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&IBM_3191_122_COLL_Layout,
	/* international info      */	&IBM_3191_122_FixupPtr,
	/* keynumber to scancode   */	&IBM_SET3_SCAN,
	/* make/break info         */	&IBM_AT_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	0,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal BDS_7_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&BDS_7_COLL_Layout,
	/* international info      */	&BDS_7_FixupPtr,
	/* keynumber to scancode   */	&BDS_7_SCAN,
	/* make/break info         */	&IBM_PS2_MKBR,
	/* short delay      (uSec) */	  500,
	/* medium delay     (uSec) */	 5000,
	/* long delay       (uSec) */	30000,
	/* interchar delay  (uSec) */	 5000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	0,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal APPLE_USB_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	0,
	/* ANSI to keynumber       */	&APPLE_USB_COLL_Layout,
	/* international info      */	&APPLE_USB_FixupPtr,
	/* keynumber to scancode   */	&USB_KEYBOARD_SCAN,
	/* make/break info         */	&USB_KEYBOARD_MKBR,
	/* short delay      (uSec) */	  200,
	/* medium delay     (uSec) */	  200,
	/* long delay       (uSec) */	  200,
	/* interchar delay  (uSec) */	 2000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	0,
};

extern const CWedgeTerminal USB_EPC_Keyboard_TERM =
{
	/* table format version    */	    5,
	/* capabilities            */	CAP_CNTRL_MSDOS|CAP_CNTRL_WIN|CAP_ALT_NUMPAD_DOS|CAP_ALT_NUMPAD_WIN|CAP_ALT_NUMPAD_UNI,
	/* ANSI to keynumber       */	&IBM_WIN_EPC_COLL_Layout,
	/* international info      */	&IBM_AT_FixupPtr,
	/* keynumber to scancode   */	&USB_KEYBOARD_SCAN,
	/* make/break info         */	&USB_KEYBOARD_MKBR,
	/* short delay      (uSec) */	  200,
	/* medium delay     (uSec) */	  200,
	/* long delay       (uSec) */	  200,
	/* interchar delay  (uSec) */	 2000,
	/* lshift  	  (key number) */	44,
	/* rshift  	  (key number) */	57,
	/* lcntrl  	  (key number) */	58,
	/* rcntrl  	  (key number) */	64,
	/* lalt    	  (key number) */	60,
	/* ralt    	  (key number) */	62,
	/* lcompose	  (key number) */	0,
	/* rcompose	  (key number) */	0,
	/* capslock	  (key number) */	30,
	/* numlock 	  (key number) */	90,
};


